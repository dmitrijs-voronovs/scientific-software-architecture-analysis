id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/soedinglab/MMseqs2/issues/542:266,Availability,down,download,266,"Hi ,; MMseqs assign taxonomic label for the contigs is useful for me , I have tried to use the swiss-prot database succefssfully, but it can only assign label for about 50% contigs, So I think maybe try the bigger databse is a solution, but it have takes 24 hour to download the UniRef90 and GTDB, only 20% progress., this is quite slow maybe it's the network, So is there any other way to download the prepared database? ; Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542
https://github.com/soedinglab/MMseqs2/issues/542:390,Availability,down,download,390,"Hi ,; MMseqs assign taxonomic label for the contigs is useful for me , I have tried to use the swiss-prot database succefssfully, but it can only assign label for about 50% contigs, So I think maybe try the bigger databse is a solution, but it have takes 24 hour to download the UniRef90 and GTDB, only 20% progress., this is quite slow maybe it's the network, So is there any other way to download the prepared database? ; Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542
https://github.com/soedinglab/MMseqs2/issues/544:37,Availability,redundant,redundant,37,"Dear, . I am using mmseqs2 to remove redundant sequences and isoforms from eukaryotic proteomes. However, we obtained some unexpected and undesired clusters and we would like to understand what is going on. We would like to know if this result is actually the expected one (which I'm not sure beucase both clustered seqs are divergent), or if this is a bug, or something that we do not consider in the command line. . We used the proteome of Trichoplax adhaerens (https://www.uniprot.org/proteomes/UP000009022). **## Expected Behavior**; We have focused on two sequences as example that should be in different clusters, B3RQY5 and B3S420. ; The sequence similarity of both sequences is the following (aligned with needle):; - Length: 643; - Identity: 146/643 (22.7%); - Similarity: 199/643 (30.9%); - Gaps: 358/643 (55.7%); - Score: 682.5; >B3S420 ; DHVFANENDNSDVYQKVASPIVTAAMEGFNGTIFAYGQTSSGKTHTMMGNHNDPGVIPLA; VNEIFRYINQKPNREFLLRVSYMEIYNEVITDLLNPSNTNLKIHENQKKEVYVGSLTENI; VNSPSQILTIMTQGETHRHTGGTNMNERSSRSHTIFRMIIESREQNQDQNEADQDTAVKV; SALNLVDLAGSERVSQTGSEGIRLKEGGFINKSLLTLGSVIAKLSEGEGNFIPFRDSKLT; RILQSSLGGNALTAIICTVTPVSLDETSSTLKFASRAKKIKNKPEVNEVVDDE; > B3RQY5; MNSEDACNIRVVCRVRPLNSAETHAGSEFIPKFPNEGQIVLSGKSFSFDHVLNSSTNQQS; MYDIAAKPIVKDVLAGYNGTIFAYGQTSSGKTHTMEGVIGDPEWQGIIPRIIGDIFAYIY; TMDENLEFHIKVSYFEIYMDKIRDLLDVTKTNLAVHEDKNRIPYVKNITERFVSSPEEVF; EIIDEGKSNRHVAVTNMNEHSSRSHSIFLIHIKQENVETHKSVHGKLYLVDLAGSEKVSK; TGAEGMVLDEAKNINKSLSALGNVISALSEATKSHVPYRDSKLTRILQESLGGNARTTII; ICCSPSSINESETKTTLQFGARAKTIKNSVKVNEELPAEEWKRRYEKEREKSSRIKRVLE; NYELELKKWRDGENVPVNEQAGGKDEGKLTSNHSTSKINIADALGESERVQFDEERNRLY; EQIDEKDDELNNRNTLIEQLRRQLEDKDEEFHLIKNESTRRQAQINALEDELQDSKDEVK; EVLNALEELYVNFDEKSRQLEVKSQEYEKNLEELMGIKSKLSNMEENFEETKDTEKRYKR; RVTESIKNLLQDMHEIGDVLQDEELKTAIAKDSEKVSDEELTLARLHFGKIKGELKILVS; RNHTIESERAELEKKLNVSEANLSENQLLLTEACF. **## Current Behavior**; Both sequences are in the same cluster using easy-cluster. . **## Steps to Reproduce (for bugs)**; We used this command to obtain such result:; mmseqs easy-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/544
https://github.com/soedinglab/MMseqs2/issues/544:37,Safety,redund,redundant,37,"Dear, . I am using mmseqs2 to remove redundant sequences and isoforms from eukaryotic proteomes. However, we obtained some unexpected and undesired clusters and we would like to understand what is going on. We would like to know if this result is actually the expected one (which I'm not sure beucase both clustered seqs are divergent), or if this is a bug, or something that we do not consider in the command line. . We used the proteome of Trichoplax adhaerens (https://www.uniprot.org/proteomes/UP000009022). **## Expected Behavior**; We have focused on two sequences as example that should be in different clusters, B3RQY5 and B3S420. ; The sequence similarity of both sequences is the following (aligned with needle):; - Length: 643; - Identity: 146/643 (22.7%); - Similarity: 199/643 (30.9%); - Gaps: 358/643 (55.7%); - Score: 682.5; >B3S420 ; DHVFANENDNSDVYQKVASPIVTAAMEGFNGTIFAYGQTSSGKTHTMMGNHNDPGVIPLA; VNEIFRYINQKPNREFLLRVSYMEIYNEVITDLLNPSNTNLKIHENQKKEVYVGSLTENI; VNSPSQILTIMTQGETHRHTGGTNMNERSSRSHTIFRMIIESREQNQDQNEADQDTAVKV; SALNLVDLAGSERVSQTGSEGIRLKEGGFINKSLLTLGSVIAKLSEGEGNFIPFRDSKLT; RILQSSLGGNALTAIICTVTPVSLDETSSTLKFASRAKKIKNKPEVNEVVDDE; > B3RQY5; MNSEDACNIRVVCRVRPLNSAETHAGSEFIPKFPNEGQIVLSGKSFSFDHVLNSSTNQQS; MYDIAAKPIVKDVLAGYNGTIFAYGQTSSGKTHTMEGVIGDPEWQGIIPRIIGDIFAYIY; TMDENLEFHIKVSYFEIYMDKIRDLLDVTKTNLAVHEDKNRIPYVKNITERFVSSPEEVF; EIIDEGKSNRHVAVTNMNEHSSRSHSIFLIHIKQENVETHKSVHGKLYLVDLAGSEKVSK; TGAEGMVLDEAKNINKSLSALGNVISALSEATKSHVPYRDSKLTRILQESLGGNARTTII; ICCSPSSINESETKTTLQFGARAKTIKNSVKVNEELPAEEWKRRYEKEREKSSRIKRVLE; NYELELKKWRDGENVPVNEQAGGKDEGKLTSNHSTSKINIADALGESERVQFDEERNRLY; EQIDEKDDELNNRNTLIEQLRRQLEDKDEEFHLIKNESTRRQAQINALEDELQDSKDEVK; EVLNALEELYVNFDEKSRQLEVKSQEYEKNLEELMGIKSKLSNMEENFEETKDTEKRYKR; RVTESIKNLLQDMHEIGDVLQDEELKTAIAKDSEKVSDEELTLARLHFGKIKGELKILVS; RNHTIESERAELEKKLNVSEANLSENQLLLTEACF. **## Current Behavior**; Both sequences are in the same cluster using easy-cluster. . **## Steps to Reproduce (for bugs)**; We used this command to obtain such result:; mmseqs easy-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/544
https://github.com/soedinglab/MMseqs2/issues/546:334,Deployability,integrat,integrated,334,"Hi, ; I'm using the mmseqs2 to assign the taxonomic label for my human gut microbiota contigs, Here I have two questions and any suggestion would be nice,. 1. I have noticed that there are many prebuiled dabatabse which includ GTDB ,but in the wiki page there is a section about `Create a seqTaxDB for GTDB`, does this step have been integrated in the pre-established GTDB database? ; 2. I have tried differert database to run the taxonomy module, finally, I found there are little consistance at the species level between any two database ,I tried swissprot, uniref50 , uniref90 , nr, and GTDB, so I'm confused which database should be adopt, is there any recommendation? by the way, it's bacteria. Is there any preference? The results in your paper use the refseq database ,so what if you change another database?. I do need your help, please,Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/546
https://github.com/soedinglab/MMseqs2/issues/546:334,Integrability,integrat,integrated,334,"Hi, ; I'm using the mmseqs2 to assign the taxonomic label for my human gut microbiota contigs, Here I have two questions and any suggestion would be nice,. 1. I have noticed that there are many prebuiled dabatabse which includ GTDB ,but in the wiki page there is a section about `Create a seqTaxDB for GTDB`, does this step have been integrated in the pre-established GTDB database? ; 2. I have tried differert database to run the taxonomy module, finally, I found there are little consistance at the species level between any two database ,I tried swissprot, uniref50 , uniref90 , nr, and GTDB, so I'm confused which database should be adopt, is there any recommendation? by the way, it's bacteria. Is there any preference? The results in your paper use the refseq database ,so what if you change another database?. I do need your help, please,Thanks a lot !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/546
https://github.com/soedinglab/MMseqs2/issues/547:448,Deployability,release,release,448,"I've been evaluating how adding pseudocounts change the sensitivity of profile searches. ```; mmseqs msa2profile msa_db/msa_db profile_db/profile_db --match-mode 1 --match-ratio 0.5 --threads 64; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 0.3; ```. I noticed, however, that the search results are different depending on the version of MMSeqs2. If I use the latest GitHub/Conda release (`13-45111`), the search on the `profile_db_pseudo` will provide more results (as expected, given that the alignments are not very diverse). If I use a newer release (`92deb92fb46583b4c68932111303d12dfa121364`), the search on the database with pseudocounts will results in *less* hits. ```; mmseqs easy-search --threads 64 fragment_sequences.faa profile_db_pseudo/profile_db mmseqs2_results_pseudo tmp; ```. Were there any changes in MMSeqs2's behavior regarding pseudocounts? Also, are there recommendations about how to use the `--pca` parameter?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547
https://github.com/soedinglab/MMseqs2/issues/547:614,Deployability,release,release,614,"I've been evaluating how adding pseudocounts change the sensitivity of profile searches. ```; mmseqs msa2profile msa_db/msa_db profile_db/profile_db --match-mode 1 --match-ratio 0.5 --threads 64; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 0.3; ```. I noticed, however, that the search results are different depending on the version of MMSeqs2. If I use the latest GitHub/Conda release (`13-45111`), the search on the `profile_db_pseudo` will provide more results (as expected, given that the alignments are not very diverse). If I use a newer release (`92deb92fb46583b4c68932111303d12dfa121364`), the search on the database with pseudocounts will results in *less* hits. ```; mmseqs easy-search --threads 64 fragment_sequences.faa profile_db_pseudo/profile_db mmseqs2_results_pseudo tmp; ```. Were there any changes in MMSeqs2's behavior regarding pseudocounts? Also, are there recommendations about how to use the `--pca` parameter?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547
https://github.com/soedinglab/MMseqs2/issues/547:378,Integrability,depend,depending,378,"I've been evaluating how adding pseudocounts change the sensitivity of profile searches. ```; mmseqs msa2profile msa_db/msa_db profile_db/profile_db --match-mode 1 --match-ratio 0.5 --threads 64; mmseqs msa2profile msa_db/msa_db profile_db_pseudo/profile_db --match-mode 1 --match-ratio 0.5 --threads 64 --pca 0.3; ```. I noticed, however, that the search results are different depending on the version of MMSeqs2. If I use the latest GitHub/Conda release (`13-45111`), the search on the `profile_db_pseudo` will provide more results (as expected, given that the alignments are not very diverse). If I use a newer release (`92deb92fb46583b4c68932111303d12dfa121364`), the search on the database with pseudocounts will results in *less* hits. ```; mmseqs easy-search --threads 64 fragment_sequences.faa profile_db_pseudo/profile_db mmseqs2_results_pseudo tmp; ```. Were there any changes in MMSeqs2's behavior regarding pseudocounts? Also, are there recommendations about how to use the `--pca` parameter?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547
https://github.com/soedinglab/MMseqs2/issues/548:98,Availability,down,downloaded,98,"Dear developer,; I'm using the GTDB database to assign the taxonomic label for my contigs, I have downloaded the GTDB from the predefined database by the command `mmseqs databases GTDB /my_path/GTDB tmp`, then I run the command:; ```; mmseqs taxonomy filter_contig_gclust_MMseqdb $GTDB_db/GTDB filter_contig_gclust_GTDB_res tmp --threads 80 --remove-tmp-files; mmseqs createtsv filter_contig_gclust_MMseqdb filter_contig_gclust_GTDB_res filter_contig_gclust_GTDB_res.tsv; ```; finally, I found there are some thing wrong, for the taxid and the taxon name cannot be found in the NCBI taxonomy database, and they are not match. ; here are part of the results:. > k99_16878 1840 genus Faecalimonas 2 2 1 0.920; k99_25114_2 11880 species Anaerosporobacter mobilis 2 2 2 1.000; k99_30336_3 176 genus Clostridium 1 1 1 1.000; k99_11777_2 888 species Hafnia paralvei 1 1 1 1.000; k99_13149_3 11909 species Fournierella massiliensis 1 1 1 1.000; k99_53411_3 38757 species Faecalimonas sp900550975 2 2 1 0.950. I noticed the module `Create a seqTaxDB for GTDB` in the wiki page, I think maybe even though I downloaded the predefined database, I still need to do these process (build name.dmp, node.dmp from GTDB taxonomy), am I right?. If so, the problem is that the website `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna` isn't work, Can you help me ,please ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548
https://github.com/soedinglab/MMseqs2/issues/548:1098,Availability,down,downloaded,1098,"Dear developer,; I'm using the GTDB database to assign the taxonomic label for my contigs, I have downloaded the GTDB from the predefined database by the command `mmseqs databases GTDB /my_path/GTDB tmp`, then I run the command:; ```; mmseqs taxonomy filter_contig_gclust_MMseqdb $GTDB_db/GTDB filter_contig_gclust_GTDB_res tmp --threads 80 --remove-tmp-files; mmseqs createtsv filter_contig_gclust_MMseqdb filter_contig_gclust_GTDB_res filter_contig_gclust_GTDB_res.tsv; ```; finally, I found there are some thing wrong, for the taxid and the taxon name cannot be found in the NCBI taxonomy database, and they are not match. ; here are part of the results:. > k99_16878 1840 genus Faecalimonas 2 2 1 0.920; k99_25114_2 11880 species Anaerosporobacter mobilis 2 2 2 1.000; k99_30336_3 176 genus Clostridium 1 1 1 1.000; k99_11777_2 888 species Hafnia paralvei 1 1 1 1.000; k99_13149_3 11909 species Fournierella massiliensis 1 1 1 1.000; k99_53411_3 38757 species Faecalimonas sp900550975 2 2 1 0.950. I noticed the module `Create a seqTaxDB for GTDB` in the wiki page, I think maybe even though I downloaded the predefined database, I still need to do these process (build name.dmp, node.dmp from GTDB taxonomy), am I right?. If so, the problem is that the website `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna` isn't work, Can you help me ,please ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548
https://github.com/soedinglab/MMseqs2/issues/548:1311,Deployability,release,releases,1311,"Dear developer,; I'm using the GTDB database to assign the taxonomic label for my contigs, I have downloaded the GTDB from the predefined database by the command `mmseqs databases GTDB /my_path/GTDB tmp`, then I run the command:; ```; mmseqs taxonomy filter_contig_gclust_MMseqdb $GTDB_db/GTDB filter_contig_gclust_GTDB_res tmp --threads 80 --remove-tmp-files; mmseqs createtsv filter_contig_gclust_MMseqdb filter_contig_gclust_GTDB_res filter_contig_gclust_GTDB_res.tsv; ```; finally, I found there are some thing wrong, for the taxid and the taxon name cannot be found in the NCBI taxonomy database, and they are not match. ; here are part of the results:. > k99_16878 1840 genus Faecalimonas 2 2 1 0.920; k99_25114_2 11880 species Anaerosporobacter mobilis 2 2 2 1.000; k99_30336_3 176 genus Clostridium 1 1 1 1.000; k99_11777_2 888 species Hafnia paralvei 1 1 1 1.000; k99_13149_3 11909 species Fournierella massiliensis 1 1 1 1.000; k99_53411_3 38757 species Faecalimonas sp900550975 2 2 1 0.950. I noticed the module `Create a seqTaxDB for GTDB` in the wiki page, I think maybe even though I downloaded the predefined database, I still need to do these process (build name.dmp, node.dmp from GTDB taxonomy), am I right?. If so, the problem is that the website `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna` isn't work, Can you help me ,please ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548
https://github.com/soedinglab/MMseqs2/issues/550:121,Availability,error,error,121,"Hello i'm trying to run easy-cluster on a huge file (20G), I did it in the past without problems but now I'm having this error. It runned for 3 hours and then it stopped like this.; Thank you !; ## Expected Behavior; 3 file outpus . ## Current Behavior; [=================================================================] 3.14M 0s 883ms; Time for merging to clu_rep: 0h 0m 11s 177ms; Time for processing: 0h 0m 22s 705ms; result2flat tmp/7717928696068854373/input tmp/7717928696068854373/input tmp/7717928696068854373/clu_rep tmp/7717928696068854373/rep_seq.fasta --use-fasta-header -v 3 . Time for processing: 0h 0m 24s 606ms; createseqfiledb tmp/7717928696068854373/input tmp/7717928696068854373/clu tmp/7717928696068854373/clu_seqs --threads 20 -v 3 . [=================================================================] 3.14M 32s 466ms; Time for merging to clu_seqs: 0h 0m 4s 487ms; Time for processing: 0h 3m 9s 540ms; result2flat tmp/7717928696068854373/input tmp/7717928696068854373/input tmp/7717928696068854373/clu_seqs tmp/7717928696068854373/all_seqs.fasta -v 3 . Cannot close file tmp/7717928696068854373/all_seqs.fasta; Error: result2flat died. ## Steps to Reproduce (for bugs); this is my command:; mmseqs easy-cluster fasta.txt prefix_example --split-memory-limit 384G tmp"". ## Your Environment; my cluster node is:; #SBATCH --ntasks=1; #SBATCH --mem=512000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/550
https://github.com/soedinglab/MMseqs2/issues/550:1132,Availability,Error,Error,1132,"Hello i'm trying to run easy-cluster on a huge file (20G), I did it in the past without problems but now I'm having this error. It runned for 3 hours and then it stopped like this.; Thank you !; ## Expected Behavior; 3 file outpus . ## Current Behavior; [=================================================================] 3.14M 0s 883ms; Time for merging to clu_rep: 0h 0m 11s 177ms; Time for processing: 0h 0m 22s 705ms; result2flat tmp/7717928696068854373/input tmp/7717928696068854373/input tmp/7717928696068854373/clu_rep tmp/7717928696068854373/rep_seq.fasta --use-fasta-header -v 3 . Time for processing: 0h 0m 24s 606ms; createseqfiledb tmp/7717928696068854373/input tmp/7717928696068854373/clu tmp/7717928696068854373/clu_seqs --threads 20 -v 3 . [=================================================================] 3.14M 32s 466ms; Time for merging to clu_seqs: 0h 0m 4s 487ms; Time for processing: 0h 3m 9s 540ms; result2flat tmp/7717928696068854373/input tmp/7717928696068854373/input tmp/7717928696068854373/clu_seqs tmp/7717928696068854373/all_seqs.fasta -v 3 . Cannot close file tmp/7717928696068854373/all_seqs.fasta; Error: result2flat died. ## Steps to Reproduce (for bugs); this is my command:; mmseqs easy-cluster fasta.txt prefix_example --split-memory-limit 384G tmp"". ## Your Environment; my cluster node is:; #SBATCH --ntasks=1; #SBATCH --mem=512000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/550
https://github.com/soedinglab/MMseqs2/pull/551:69,Modifiability,variab,variable,69,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551
https://github.com/soedinglab/MMseqs2/pull/551:185,Performance,concurren,concurrent,185,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551
https://github.com/soedinglab/MMseqs2/pull/551:133,Security,hash,hash-named,133,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551
https://github.com/soedinglab/MMseqs2/issues/552:73,Safety,predict,prediction,73,"I wanted to run the MSA calculation of a set of proteins to do structure prediction. I used the script that calls the mmseqs2 API that colabfold uses for the MSA calculation.; Except that now, I wanted to use mmseqs2 directly to be able to run my calculation in a cluster.; To do this, I used the script colabfold_search.sh without a precomputed index(https://gist.github.com/milot-mirdita/67509c248746c4c774128fc84ab91b6f), with the two databases uniref30_2103 and colabfold_envdb_202108. I set USE_ENV to 1, USE_TEMPLATE to 0 and the FILTER to 1.; The problem is that the resulting MSA is very different from the MSA I got from using the API.; For example, with this protein sequence of 679 in length.; With the API I get an MSA of 20446 sequences, while with colabfold_search.sh I get an MSA of 20865 in size, and only 1150 sequences in common between the two methods.; Is there any way to get the same output as the API using the colabfold_search.sh script?; the input and the outputs are here : ; https://drive.google.com/drive/folders/1ZcAHKRzxT4hK-Bjb8ZKozDfaO_cTptwO?usp=sharing; - The msa of the mmseqs2 API is stored in msa_api.pickle; - The msa of mmseqs2 launched in the cluster is in the form of file.a3m I converted it myself in file msa_mmseqs2.pickle to make the comparison.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/552
https://github.com/soedinglab/MMseqs2/pull/555:116,Performance,concurren,concurrent,116,* Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (revoked considering concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/555
https://github.com/soedinglab/MMseqs2/pull/555:44,Security,hash,hash-named,44,* Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (revoked considering concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/555
https://github.com/soedinglab/MMseqs2/issues/556:812,Availability,Error,Error,812,"## Expected Behavior. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 469186; Target db start 1 to 579233; [=================================================================] 100.00% 469.19K 3s 382ms. 6.094516 k-mers per position; 435 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 464221 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 75ms; munmap_chunk(): invalid pointer; tmp/12438089539006473617/taxonomy_tmp/18301032544654743241/taxpercontig.sh: line 66: 3001403 Aborted (core dumped) $RUNNER ""$MMSEQS"" prefilter ""${ORFS_DB}"" ""${TARGETDB_IDX}"" ""${TMP_PATH}/orfs_pref"" ${ORF_FILTER_PREFILTER}; Error: orf filter prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); mmseqs easy-taxonomy -s 7.5 C10.fasta ../db/refseq-prot/mmseqs/refseq_viral result tmp --lca-mode 2. ## Context. I try to annotate virus contig with refseq database uing mmseqs easy-taxonomy, I get errors below, When I use the same command with tmp files, I can get the taxonomy annotation files. But I use '--orf-filter 0', I get no errors. ## Your Environment. mmseqs version; 45111b641859ed0ddd875b94d6fd1aef1a675b7e; mmseqs2-sse4-r13",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556
https://github.com/soedinglab/MMseqs2/issues/556:846,Availability,Error,Error,846,"## Expected Behavior. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 469186; Target db start 1 to 579233; [=================================================================] 100.00% 469.19K 3s 382ms. 6.094516 k-mers per position; 435 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 464221 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 75ms; munmap_chunk(): invalid pointer; tmp/12438089539006473617/taxonomy_tmp/18301032544654743241/taxpercontig.sh: line 66: 3001403 Aborted (core dumped) $RUNNER ""$MMSEQS"" prefilter ""${ORFS_DB}"" ""${TARGETDB_IDX}"" ""${TMP_PATH}/orfs_pref"" ${ORF_FILTER_PREFILTER}; Error: orf filter prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); mmseqs easy-taxonomy -s 7.5 C10.fasta ../db/refseq-prot/mmseqs/refseq_viral result tmp --lca-mode 2. ## Context. I try to annotate virus contig with refseq database uing mmseqs easy-taxonomy, I get errors below, When I use the same command with tmp files, I can get the taxonomy annotation files. But I use '--orf-filter 0', I get no errors. ## Your Environment. mmseqs version; 45111b641859ed0ddd875b94d6fd1aef1a675b7e; mmseqs2-sse4-r13",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556
https://github.com/soedinglab/MMseqs2/issues/556:1098,Availability,error,errors,1098,"## Expected Behavior. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 469186; Target db start 1 to 579233; [=================================================================] 100.00% 469.19K 3s 382ms. 6.094516 k-mers per position; 435 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 464221 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 75ms; munmap_chunk(): invalid pointer; tmp/12438089539006473617/taxonomy_tmp/18301032544654743241/taxpercontig.sh: line 66: 3001403 Aborted (core dumped) $RUNNER ""$MMSEQS"" prefilter ""${ORFS_DB}"" ""${TARGETDB_IDX}"" ""${TMP_PATH}/orfs_pref"" ${ORF_FILTER_PREFILTER}; Error: orf filter prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); mmseqs easy-taxonomy -s 7.5 C10.fasta ../db/refseq-prot/mmseqs/refseq_viral result tmp --lca-mode 2. ## Context. I try to annotate virus contig with refseq database uing mmseqs easy-taxonomy, I get errors below, When I use the same command with tmp files, I can get the taxonomy annotation files. But I use '--orf-filter 0', I get no errors. ## Your Environment. mmseqs version; 45111b641859ed0ddd875b94d6fd1aef1a675b7e; mmseqs2-sse4-r13",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556
https://github.com/soedinglab/MMseqs2/issues/556:1234,Availability,error,errors,1234,"## Expected Behavior. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 469186; Target db start 1 to 579233; [=================================================================] 100.00% 469.19K 3s 382ms. 6.094516 k-mers per position; 435 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 464221 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 75ms; munmap_chunk(): invalid pointer; tmp/12438089539006473617/taxonomy_tmp/18301032544654743241/taxpercontig.sh: line 66: 3001403 Aborted (core dumped) $RUNNER ""$MMSEQS"" prefilter ""${ORFS_DB}"" ""${TARGETDB_IDX}"" ""${TMP_PATH}/orfs_pref"" ${ORF_FILTER_PREFILTER}; Error: orf filter prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); mmseqs easy-taxonomy -s 7.5 C10.fasta ../db/refseq-prot/mmseqs/refseq_viral result tmp --lca-mode 2. ## Context. I try to annotate virus contig with refseq database uing mmseqs easy-taxonomy, I get errors below, When I use the same command with tmp files, I can get the taxonomy annotation files. But I use '--orf-filter 0', I get no errors. ## Your Environment. mmseqs version; 45111b641859ed0ddd875b94d6fd1aef1a675b7e; mmseqs2-sse4-r13",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556
https://github.com/soedinglab/MMseqs2/issues/556:682,Safety,Abort,Aborted,682,"## Expected Behavior. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 469186; Target db start 1 to 579233; [=================================================================] 100.00% 469.19K 3s 382ms. 6.094516 k-mers per position; 435 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 464221 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 75ms; munmap_chunk(): invalid pointer; tmp/12438089539006473617/taxonomy_tmp/18301032544654743241/taxpercontig.sh: line 66: 3001403 Aborted (core dumped) $RUNNER ""$MMSEQS"" prefilter ""${ORFS_DB}"" ""${TARGETDB_IDX}"" ""${TMP_PATH}/orfs_pref"" ${ORF_FILTER_PREFILTER}; Error: orf filter prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); mmseqs easy-taxonomy -s 7.5 C10.fasta ../db/refseq-prot/mmseqs/refseq_viral result tmp --lca-mode 2. ## Context. I try to annotate virus contig with refseq database uing mmseqs easy-taxonomy, I get errors below, When I use the same command with tmp files, I can get the taxonomy annotation files. But I use '--orf-filter 0', I get no errors. ## Your Environment. mmseqs version; 45111b641859ed0ddd875b94d6fd1aef1a675b7e; mmseqs2-sse4-r13",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556
https://github.com/soedinglab/MMseqs2/issues/557:3717,Deployability,install,installed,3717,"r `mmseqs2_pass_cluster.tsv`:. ```; zzsomethingelse	zzsomethingelse; zzsomethingelse	zzsomething; ```; but removes the 'uc' from the defline in `mmseqs2_fail_cluster.tsv`. ```; somethingelse	somethingelse; somethingelse	something; ```. This seems to be the case for any deflines that start with 'uc'. ------. The FASTA files also have duplicate defline entries, where one of the duplicates doesn't contain a sequence:. `mmseqs2_fail_all_seqs.fasta`; ```; >somethingelse; >ucsomethingelse; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; >ucsomething; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; ```. `mmseqs2_pass_all_seqs.fasta`; ```; >zzsomethingelse; >zzsomethingelse; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; >zzsomething; MPELRRVLANGVELNVALCGSGPAVLLLHGFPHTWELWTDVMADLSGRYRVIAPDLRGFGASGRAASGYDAGTLAEDAAALLAALGVSSATVVGIDAGTAPAFLLALRHPGLVRRLVVMESLLGRLPGAEDFLAEGPPWWFGFHSAAPSLAETVLEGHEAAYVDWFLSAGTLGDGVRPALRDAFVRAYTGRQALSCAFSYYRALPKSAVQIEQAVATARLTVPTMALGARPVGAALERQLRPVTDDLTGHVIDDCGHIIPLHRPHALLALLHPFLAGEDAKAA; ```. ## MMseqs Output (for bugs). https://gist.github.com/chasemc/c0cccd804ac0ff78291e43ae10837c42; https://gist.github.com/chasemc/d8157a581c833406f15442e8b9ee4e81; ## Your Environment. Conda installed: MMseqs2 Version: 13.45111; Happy to give system info if needed",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/557
https://github.com/soedinglab/MMseqs2/issues/559:101,Performance,load,load-mode,101,"Hi,. I'm running `linclust` on a cloud instance with network file systems. I'm wondering which `--db-load-mode` should I use to alleviate the I/O bottleneck of NFS.; ```; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559
https://github.com/soedinglab/MMseqs2/issues/559:146,Performance,bottleneck,bottleneck,146,"Hi,. I'm running `linclust` on a cloud instance with network file systems. I'm wondering which `--db-load-mode` should I use to alleviate the I/O bottleneck of NFS.; ```; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559
https://github.com/soedinglab/MMseqs2/issues/559:176,Performance,load,load-mode,176,"Hi,. I'm running `linclust` on a cloud instance with network file systems. I'm wondering which `--db-load-mode` should I use to alleviate the I/O bottleneck of NFS.; ```; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559
https://github.com/soedinglab/MMseqs2/issues/560:1579,Availability,down,download,1579,"o have scrambled the name-sequence associations. Particularly for the JGI sequence IDs (the Uniprot IDs that I checked seemed to be ok). ## Steps to Reproduce (for bugs); input:; ``` bash; wget https://metaclust.mmseqs.com/2018_06/metaclust_nr.fasta.gz; gunzip metaclust_nr.fasta.gz; grep -A1 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. output:; ```; >GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 # 1 # 249 # 1 # ID=3271246_1;partial=11;start_type=Edge;rbs_motif=None;rbs_spacer=None;gc_cont=0.582; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA; ```. input:; ``` ; wget http://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar xvf colabfold_envdb_202108.tar.gz; grep GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 colabfold_envdb_202108_h.tsv; ```. output:; ```; 117269648 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. input:; ```; grep 117269648 colabfold_envdb_202108_seq.tsv; ```. output:; ```; 117269648 MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```. I then go to; ```; https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=GraSoiStandDraft_25; ```; and download the scaffolds for that sample. I then make a blast database and blast the two sequences; ```; >metaclust; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA. >colabfold_envdb_202108; MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```; against the scaffolds using tblastn.; I get a perfect match on scaffold3271246 for the metaclust sequence, but the best match from the colabfold_envdb_202108 sequence has about 50% identity.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560
https://github.com/soedinglab/MMseqs2/issues/560:22,Security,Access,Accession-number-sequence,22,## Expected Behavior; Accession-number-sequence associations should be the same between metaclust and colabfold_envdb. ## Current Behavior. The metaclust id seems to be correct. colabfold_envdb seems to have scrambled the name-sequence associations. Particularly for the JGI sequence IDs (the Uniprot IDs that I checked seemed to be ok). ## Steps to Reproduce (for bugs); input:; ``` bash; wget https://metaclust.mmseqs.com/2018_06/metaclust_nr.fasta.gz; gunzip metaclust_nr.fasta.gz; grep -A1 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. output:; ```; >GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 # 1 # 249 # 1 # ID=3271246_1;partial=11;start_type=Edge;rbs_motif=None;rbs_spacer=None;gc_cont=0.582; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA; ```. input:; ``` ; wget http://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar xvf colabfold_envdb_202108.tar.gz; grep GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 colabfold_envdb_202108_h.tsv; ```. output:; ```; 117269648 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. input:; ```; grep 117269648 colabfold_envdb_202108_seq.tsv; ```. output:; ```; 117269648 MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```. I then go to; ```; https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=GraSoiStandDraft_25; ```; and download the scaffolds for that sample. I then make a blast database and blast the two sequences; ```; >metaclust; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA. >colabfold_envdb_202108; MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEK,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560
https://github.com/soedinglab/MMseqs2/issues/561:97,Availability,Error,Error,97,"## Expected Behavior; Completes databases workflow, creating GTDB database. ## Current Behavior; Error occurs near the end of the workflow.; Files created: ```gtdb gtdb.dbtype gtdb_h gtdb_h.dbtype gtdb_h.index gtdb.index gtdb.source tmp```. ## Steps to Reproduce (for bugs); ```mmseqs databases GTDB gtdb tmp```. ## MMseqs Output (for bugs). ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	128; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4930k 0 0:00:08 0:00:08 --:--:-- 6278k. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 334 100 334 0 0 6185 0 --:--:-- --:--:-- --:--:-- 6185; tar2db tmp/18048483634160780024/gtdb.tar.gz tmp/18048483634160780024/tardb --tar-include faa$ --threads 128 -v 3 . Time for merging to tardb: 0h 0m 0s 113ms; Time for merging to tardb.lookup: 0h 0m 0s 110ms; Time for processing: 0h 0m 0s 443ms; createdb tmp/18048483634160780024/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 25ms; Time for merging to gtdb: 0h 0m 0s 24ms; Database type: Nucleotide; The input files have no entry: - tmp/18048483634160780024/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; The process 'mmseqs' has failed.; ```. ## Context; Downloading GTDB db. ## Your Environment; Using conda installation of mmseqs (MMseqs2 Version: 13.45111); 128cpu/1000GB mem. Support for AVX2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561
https://github.com/soedinglab/MMseqs2/issues/561:1498,Availability,Error,Error,1498,"## Expected Behavior; Completes databases workflow, creating GTDB database. ## Current Behavior; Error occurs near the end of the workflow.; Files created: ```gtdb gtdb.dbtype gtdb_h gtdb_h.dbtype gtdb_h.index gtdb.index gtdb.source tmp```. ## Steps to Reproduce (for bugs); ```mmseqs databases GTDB gtdb tmp```. ## MMseqs Output (for bugs). ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	128; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4930k 0 0:00:08 0:00:08 --:--:-- 6278k. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 334 100 334 0 0 6185 0 --:--:-- --:--:-- --:--:-- 6185; tar2db tmp/18048483634160780024/gtdb.tar.gz tmp/18048483634160780024/tardb --tar-include faa$ --threads 128 -v 3 . Time for merging to tardb: 0h 0m 0s 113ms; Time for merging to tardb.lookup: 0h 0m 0s 110ms; Time for processing: 0h 0m 0s 443ms; createdb tmp/18048483634160780024/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 25ms; Time for merging to gtdb: 0h 0m 0s 24ms; Database type: Nucleotide; The input files have no entry: - tmp/18048483634160780024/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; The process 'mmseqs' has failed.; ```. ## Context; Downloading GTDB db. ## Your Environment; Using conda installation of mmseqs (MMseqs2 Version: 13.45111); 128cpu/1000GB mem. Support for AVX2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561
https://github.com/soedinglab/MMseqs2/issues/561:1571,Availability,Down,Downloading,1571,"## Expected Behavior; Completes databases workflow, creating GTDB database. ## Current Behavior; Error occurs near the end of the workflow.; Files created: ```gtdb gtdb.dbtype gtdb_h gtdb_h.dbtype gtdb_h.index gtdb.index gtdb.source tmp```. ## Steps to Reproduce (for bugs); ```mmseqs databases GTDB gtdb tmp```. ## MMseqs Output (for bugs). ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	128; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4930k 0 0:00:08 0:00:08 --:--:-- 6278k. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 334 100 334 0 0 6185 0 --:--:-- --:--:-- --:--:-- 6185; tar2db tmp/18048483634160780024/gtdb.tar.gz tmp/18048483634160780024/tardb --tar-include faa$ --threads 128 -v 3 . Time for merging to tardb: 0h 0m 0s 113ms; Time for merging to tardb.lookup: 0h 0m 0s 110ms; Time for processing: 0h 0m 0s 443ms; createdb tmp/18048483634160780024/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 25ms; Time for merging to gtdb: 0h 0m 0s 24ms; Database type: Nucleotide; The input files have no entry: - tmp/18048483634160780024/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; The process 'mmseqs' has failed.; ```. ## Context; Downloading GTDB db. ## Your Environment; Using conda installation of mmseqs (MMseqs2 Version: 13.45111); 128cpu/1000GB mem. Support for AVX2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561
https://github.com/soedinglab/MMseqs2/issues/561:1625,Deployability,install,installation,1625,"## Expected Behavior; Completes databases workflow, creating GTDB database. ## Current Behavior; Error occurs near the end of the workflow.; Files created: ```gtdb gtdb.dbtype gtdb_h gtdb_h.dbtype gtdb_h.index gtdb.index gtdb.source tmp```. ## Steps to Reproduce (for bugs); ```mmseqs databases GTDB gtdb tmp```. ## MMseqs Output (for bugs). ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	128; Verbosity 	3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4930k 0 0:00:08 0:00:08 --:--:-- 6278k. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 334 100 334 0 0 6185 0 --:--:-- --:--:-- --:--:-- 6185; tar2db tmp/18048483634160780024/gtdb.tar.gz tmp/18048483634160780024/tardb --tar-include faa$ --threads 128 -v 3 . Time for merging to tardb: 0h 0m 0s 113ms; Time for merging to tardb.lookup: 0h 0m 0s 110ms; Time for processing: 0h 0m 0s 443ms; createdb tmp/18048483634160780024/tardb gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 25ms; Time for merging to gtdb: 0h 0m 0s 24ms; Database type: Nucleotide; The input files have no entry: - tmp/18048483634160780024/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; The process 'mmseqs' has failed.; ```. ## Context; Downloading GTDB db. ## Your Environment; Using conda installation of mmseqs (MMseqs2 Version: 13.45111); 128cpu/1000GB mem. Support for AVX2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561
https://github.com/soedinglab/MMseqs2/issues/564:1442,Availability,Mask,Mask,1442,"26e297c7540e1fcd039f6812b1; > Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; > Add backtrace 	false; > Alignment mode 	2; > Allow wrapped scoring 	false; > E-value threshold 	0.001; > Seq. id. threshold 	0; > Min alignment length 	0; > Seq. id. mode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:1462,Availability,Mask,Mask,1462,"26e297c7540e1fcd039f6812b1; > Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; > Add backtrace 	false; > Alignment mode 	2; > Allow wrapped scoring 	false; > E-value threshold 	0.001; > Seq. id. threshold 	0; > Min alignment length 	0; > Seq. id. mode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:1679,Availability,Mask,Mask,1679,"ode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:3130,Availability,mask,mask,3130,"de 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:3139,Availability,mask,mask-lower-case,3139,"de 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:3829,Availability,Error,Error,3829,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:3871,Deployability,install,installed,3871,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:3417,Energy Efficiency,consumption,consumption,3417,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:566,Integrability,wrap,wrapped,566,"## Expected Behavior. running blastp-like search against TrEMBL. ## Current Behavior. Crash at prefilter stage. ## Steps to Reproduce (for bugs). mmseqs search tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/RESULT.mms tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep. ## MMseqs Output (for bugs). > MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; > Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; > Add backtrace 	false; > Alignment mode 	2; > Allow wrapped scoring 	false; > E-value threshold 	0.001; > Seq. id. threshold 	0; > Min alignment length 	0; > Seq. id. mode 	0; > Alternative alignments 	0; > Coverage threshold 	0; > Coverage mode 	0; > Max sequence length 	65535; > Compositional bias 	1; > Realign hits 	false; > Max reject 	2147483647; > Max accept 	2147483647; > Include identical seq. id. 	false; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	nucl:5,aa:11; > Gap extension cost 	nucl:2,aa:1; > Zdrop 	40; > Threads 	32; > Compressed 	0; > Verbosity 	3; > Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; > Sensitivity 	5.7; > k-mer length 	0; > k-score 	2147483647; > Alphabet size 	nucl:5,aa:21; > Max results per query 	300; > Split database 	0; > Split mode 	2; > Split memory limit 	0; > Diagonal scoring 	true; > Exact k-mer matching 	0; > Mask residues 	1; > Mask lower case residues 	0; > Minimum diagonal score 	15; > Spaced k-mers 	1; > Spaced k-mer pattern 	; > Local temporary path 	; > Rescore mode 	0; > Remove hits by seq. id. and coverage	false; > Sort results 	0; > Mask profile 	1; > Profile E-value threshold 	0.1; > Global sequence weighting 	false; > Allow deletions 	false; > Filter MSA 	1; > Maximum seq. id. threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select N most diverse seqs 	1000; > Omit consensus 	false; > Min codons in o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:3228,Performance,load,load-mode,3228,"de 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/564:4124,Testability,mock,mockbuild,4124,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564
https://github.com/soedinglab/MMseqs2/issues/565:34,Safety,detect,detects,34,"Greetings,. The program correctly detects and parses Uniprot header, as described in [https://github.com/soedinglab/mmseqs2/wiki#identifier-parsing](url). Is there a way to avoid parsing it and keep the entire FASTA sequence identifier (e.g. `sp|Q8I6R7|ACN2_ACAGO` instead of only `Q8I6R7`) in the result file when doing a search ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/565
https://github.com/soedinglab/MMseqs2/issues/565:173,Safety,avoid,avoid,173,"Greetings,. The program correctly detects and parses Uniprot header, as described in [https://github.com/soedinglab/mmseqs2/wiki#identifier-parsing](url). Is there a way to avoid parsing it and keep the entire FASTA sequence identifier (e.g. `sp|Q8I6R7|ACN2_ACAGO` instead of only `Q8I6R7`) in the result file when doing a search ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/565
https://github.com/soedinglab/MMseqs2/issues/566:71,Integrability,protocol,protocol,71,"when i Create a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database. mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping. createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping . MMseqs Version: ce7bf53b8241f7ced20f5a75bab052da98e5ca79; NCBI tax dump directory taxonomy/; Taxonomy mapping file nt.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 56; Verbosity 3. **Input database ""nt.fnaDB"" has the wrong type (Generic); Allowed input: ; - Index ; - Nucleotide ; - Profile ; - Aminoacid**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566
https://github.com/soedinglab/MMseqs2/issues/567:674,Availability,ERROR,ERROR,674,"I created a playground repository for testing mmseqs functions. Repo link: [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). In `printprofile.cpp` in that repo, I wrote the following lines to extract the profile sequences and store them in a vector:. ```c++; // reader is a DBReader<unsigned int> of DbType::HMM_PROFILE; for (size_t i = 0; i < reader.getSize(); i++); {; const char *seqData = reader.getData(i, thread_idx);; size_t querySeqLen = reader.getSeqLen(i);; seq.mapSequence(i, i, seqData, querySeqLen);; std::string realSeq;; seq.extractProfileSequence(seqData, *subMat, realSeq);; if (realSeq.length() != querySeqLen) {; Debug(Debug::ERROR) << ""Error: sequence length does not match.\n"";; Debug(Debug::ERROR) << ""Expected equence length: "" << querySeqLen << ""\n"";; Debug(Debug::ERROR) << ""Actual sequence length: "" << realSeq.length() << ""\n"";; EXIT(EXIT_FAILURE);; }; results.push_back(realSeq);; }; ```. And then print then randomly:. ```c++; Debug(Debug::INFO) << ""Randomly print profile sequences: \n"";; // randomly sample 20 sequences to print; for (size_t i = 0; i < 20; i++); {; size_t idx = std::rand() % allProfileSeqs.size();; Debug(Debug::INFO) << allProfileSeqs[idx] << ""\n"";; }; ```. I expect the extarcted profile sequences to have the same length as `querySeqLen`. However, the length of `realSeq` differs from `querySeqLen` greatly. . ## Expected Behavior. Program executes normally. 20 random extracted profile sequences get printed out. ## Current Behavior. The program failed at checking `realSeq.length() != querySeqLen`. The two values differ greatly.; Changing `extractProfileSequence()` to `extractProfileConsensus()` also causes the same erroneous behavior. ## Steps to Reproduce (for bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:685,Availability,Error,Error,685,"I created a playground repository for testing mmseqs functions. Repo link: [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). In `printprofile.cpp` in that repo, I wrote the following lines to extract the profile sequences and store them in a vector:. ```c++; // reader is a DBReader<unsigned int> of DbType::HMM_PROFILE; for (size_t i = 0; i < reader.getSize(); i++); {; const char *seqData = reader.getData(i, thread_idx);; size_t querySeqLen = reader.getSeqLen(i);; seq.mapSequence(i, i, seqData, querySeqLen);; std::string realSeq;; seq.extractProfileSequence(seqData, *subMat, realSeq);; if (realSeq.length() != querySeqLen) {; Debug(Debug::ERROR) << ""Error: sequence length does not match.\n"";; Debug(Debug::ERROR) << ""Expected equence length: "" << querySeqLen << ""\n"";; Debug(Debug::ERROR) << ""Actual sequence length: "" << realSeq.length() << ""\n"";; EXIT(EXIT_FAILURE);; }; results.push_back(realSeq);; }; ```. And then print then randomly:. ```c++; Debug(Debug::INFO) << ""Randomly print profile sequences: \n"";; // randomly sample 20 sequences to print; for (size_t i = 0; i < 20; i++); {; size_t idx = std::rand() % allProfileSeqs.size();; Debug(Debug::INFO) << allProfileSeqs[idx] << ""\n"";; }; ```. I expect the extarcted profile sequences to have the same length as `querySeqLen`. However, the length of `realSeq` differs from `querySeqLen` greatly. . ## Expected Behavior. Program executes normally. 20 random extracted profile sequences get printed out. ## Current Behavior. The program failed at checking `realSeq.length() != querySeqLen`. The two values differ greatly.; Changing `extractProfileSequence()` to `extractProfileConsensus()` also causes the same erroneous behavior. ## Steps to Reproduce (for bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:742,Availability,ERROR,ERROR,742,"I created a playground repository for testing mmseqs functions. Repo link: [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). In `printprofile.cpp` in that repo, I wrote the following lines to extract the profile sequences and store them in a vector:. ```c++; // reader is a DBReader<unsigned int> of DbType::HMM_PROFILE; for (size_t i = 0; i < reader.getSize(); i++); {; const char *seqData = reader.getData(i, thread_idx);; size_t querySeqLen = reader.getSeqLen(i);; seq.mapSequence(i, i, seqData, querySeqLen);; std::string realSeq;; seq.extractProfileSequence(seqData, *subMat, realSeq);; if (realSeq.length() != querySeqLen) {; Debug(Debug::ERROR) << ""Error: sequence length does not match.\n"";; Debug(Debug::ERROR) << ""Expected equence length: "" << querySeqLen << ""\n"";; Debug(Debug::ERROR) << ""Actual sequence length: "" << realSeq.length() << ""\n"";; EXIT(EXIT_FAILURE);; }; results.push_back(realSeq);; }; ```. And then print then randomly:. ```c++; Debug(Debug::INFO) << ""Randomly print profile sequences: \n"";; // randomly sample 20 sequences to print; for (size_t i = 0; i < 20; i++); {; size_t idx = std::rand() % allProfileSeqs.size();; Debug(Debug::INFO) << allProfileSeqs[idx] << ""\n"";; }; ```. I expect the extarcted profile sequences to have the same length as `querySeqLen`. However, the length of `realSeq` differs from `querySeqLen` greatly. . ## Expected Behavior. Program executes normally. 20 random extracted profile sequences get printed out. ## Current Behavior. The program failed at checking `realSeq.length() != querySeqLen`. The two values differ greatly.; Changing `extractProfileSequence()` to `extractProfileConsensus()` also causes the same erroneous behavior. ## Steps to Reproduce (for bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:818,Availability,ERROR,ERROR,818,"I created a playground repository for testing mmseqs functions. Repo link: [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). In `printprofile.cpp` in that repo, I wrote the following lines to extract the profile sequences and store them in a vector:. ```c++; // reader is a DBReader<unsigned int> of DbType::HMM_PROFILE; for (size_t i = 0; i < reader.getSize(); i++); {; const char *seqData = reader.getData(i, thread_idx);; size_t querySeqLen = reader.getSeqLen(i);; seq.mapSequence(i, i, seqData, querySeqLen);; std::string realSeq;; seq.extractProfileSequence(seqData, *subMat, realSeq);; if (realSeq.length() != querySeqLen) {; Debug(Debug::ERROR) << ""Error: sequence length does not match.\n"";; Debug(Debug::ERROR) << ""Expected equence length: "" << querySeqLen << ""\n"";; Debug(Debug::ERROR) << ""Actual sequence length: "" << realSeq.length() << ""\n"";; EXIT(EXIT_FAILURE);; }; results.push_back(realSeq);; }; ```. And then print then randomly:. ```c++; Debug(Debug::INFO) << ""Randomly print profile sequences: \n"";; // randomly sample 20 sequences to print; for (size_t i = 0; i < 20; i++); {; size_t idx = std::rand() % allProfileSeqs.size();; Debug(Debug::INFO) << allProfileSeqs[idx] << ""\n"";; }; ```. I expect the extarcted profile sequences to have the same length as `querySeqLen`. However, the length of `realSeq` differs from `querySeqLen` greatly. . ## Expected Behavior. Program executes normally. 20 random extracted profile sequences get printed out. ## Current Behavior. The program failed at checking `realSeq.length() != querySeqLen`. The two values differ greatly.; Changing `extractProfileSequence()` to `extractProfileConsensus()` also causes the same erroneous behavior. ## Steps to Reproduce (for bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:2728,Availability,Error,Error,2728,"or bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultdb tmp; mmseqs result2profile querydb swissprot resultdb profiledb; ```; Build `mmseqs-playground` using the following command:. ```; cd <project_root>; mkdir -p build; cd build; cmake ..; make -j 64; ```; And then run `mmseqs-playground printprofie` on `profiledb` created just now. ```shell; build/src/mmseqs-playground printprofile data/profiledb --threads 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```shell; $ build/src/mmseqs-playground printprofile data/tmp/profile --threads 1; printprofile data/tmp/profile --threads 1. MMseqs Version: 34aa577a8f1c4269993fcd755526db4f742c5e86; Threads 1; k-mer length 0; Verbosity 3. Error: sequence length does not match.; Expected equence length: 310; Actual sequence length: 165; ```. ![image](https://user-images.githubusercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detec",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:2973,Availability,avail,available,2973," resultdb tmp; mmseqs result2profile querydb swissprot resultdb profiledb; ```; Build `mmseqs-playground` using the following command:. ```; cd <project_root>; mkdir -p build; cd build; cmake ..; make -j 64; ```; And then run `mmseqs-playground printprofie` on `profiledb` created just now. ```shell; build/src/mmseqs-playground printprofile data/profiledb --threads 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```shell; $ build/src/mmseqs-playground printprofile data/tmp/profile --threads 1; printprofile data/tmp/profile --threads 1. MMseqs Version: 34aa577a8f1c4269993fcd755526db4f742c5e86; Threads 1; k-mer length 0; Verbosity 3. Error: sequence length does not match.; Expected equence length: 310; Actual sequence length: 165; ```. ![image](https://user-images.githubusercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5745,Modifiability,Config,Configuring,5745,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4374,Performance,Perform,Performing,4374,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4415,Performance,Perform,Performing,4415,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4466,Performance,Perform,Performing,4466,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4506,Performance,Perform,Performing,4506,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4556,Performance,Perform,Performing,4556,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4599,Performance,Perform,Performing,4599,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4652,Performance,Perform,Performing,4652,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4695,Performance,Perform,Performing,4695,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4748,Performance,Perform,Performing,4748,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4789,Performance,Perform,Performing,4789,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4840,Performance,Perform,Performing,4840,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4881,Performance,Perform,Performing,4881,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4932,Performance,Perform,Performing,4932,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4972,Performance,Perform,Performing,4972,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5069,Performance,Perform,Performing,5069,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5108,Performance,Perform,Performing,5108,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5157,Performance,Perform,Performing,5157,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5196,Performance,Perform,Performing,5196,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5245,Performance,Perform,Performing,5245,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5287,Performance,Perform,Performing,5287,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5338,Performance,Perform,Performing,5338,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5377,Performance,Perform,Performing,5377,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5490,Performance,Perform,Performing,5490,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5526,Performance,Perform,Performing,5526,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5603,Performance,Perform,Performing,5603,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5640,Performance,Perform,Performing,5640,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:3742,Safety,Detect,Detecting,3742,"busercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:3778,Safety,Detect,Detecting,3778,"busercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:3880,Safety,Detect,Detecting,3880,"busercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:3915,Safety,Detect,Detecting,3915,"busercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4005,Safety,Detect,Detecting,4005,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4039,Safety,Detect,Detecting,4039,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4136,Safety,Detect,Detecting,4136,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4169,Safety,Detect,Detecting,4169,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:38,Testability,test,testing,38,"I created a playground repository for testing mmseqs functions. Repo link: [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). In `printprofile.cpp` in that repo, I wrote the following lines to extract the profile sequences and store them in a vector:. ```c++; // reader is a DBReader<unsigned int> of DbType::HMM_PROFILE; for (size_t i = 0; i < reader.getSize(); i++); {; const char *seqData = reader.getData(i, thread_idx);; size_t querySeqLen = reader.getSeqLen(i);; seq.mapSequence(i, i, seqData, querySeqLen);; std::string realSeq;; seq.extractProfileSequence(seqData, *subMat, realSeq);; if (realSeq.length() != querySeqLen) {; Debug(Debug::ERROR) << ""Error: sequence length does not match.\n"";; Debug(Debug::ERROR) << ""Expected equence length: "" << querySeqLen << ""\n"";; Debug(Debug::ERROR) << ""Actual sequence length: "" << realSeq.length() << ""\n"";; EXIT(EXIT_FAILURE);; }; results.push_back(realSeq);; }; ```. And then print then randomly:. ```c++; Debug(Debug::INFO) << ""Randomly print profile sequences: \n"";; // randomly sample 20 sequences to print; for (size_t i = 0; i < 20; i++); {; size_t idx = std::rand() % allProfileSeqs.size();; Debug(Debug::INFO) << allProfileSeqs[idx] << ""\n"";; }; ```. I expect the extarcted profile sequences to have the same length as `querySeqLen`. However, the length of `realSeq` differs from `querySeqLen` greatly. . ## Expected Behavior. Program executes normally. 20 random extracted profile sequences get printed out. ## Current Behavior. The program failed at checking `realSeq.length() != querySeqLen`. The two values differ greatly.; Changing `extractProfileSequence()` to `extractProfileConsensus()` also causes the same erroneous behavior. ## Steps to Reproduce (for bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4385,Testability,Test,Test,4385,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4426,Testability,Test,Test,4426,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4477,Testability,Test,Test,4477,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4517,Testability,Test,Test,4517,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4567,Testability,Test,Test,4567,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4610,Testability,Test,Test,4610,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4663,Testability,Test,Test,4663,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4706,Testability,Test,Test,4706,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4759,Testability,Test,Test,4759,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4800,Testability,Test,Test,4800,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4851,Testability,Test,Test,4851,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4892,Testability,Test,Test,4892,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4943,Testability,Test,Test,4943,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:4983,Testability,Test,Test,4983,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5080,Testability,Test,Test,5080,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5119,Testability,Test,Test,5119,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5168,Testability,Test,Test,5168,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5207,Testability,Test,Test,5207,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5256,Testability,Test,Test,5256,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5298,Testability,Test,Test,5298,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5349,Testability,Test,Test,5349,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5388,Testability,Test,Test,5388,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5501,Testability,Test,Test,5501,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5537,Testability,Test,Test,5537,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5614,Testability,Test,Test,5614,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/567:5651,Testability,Test,Test,5651,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567
https://github.com/soedinglab/MMseqs2/issues/570:13,Performance,perform,performed,13,"Hello I have performed a search using as query nucleotide multifasta and as a target an aminoacidic multifasta. The alignment is performed at aminoacidic level by translating the nucleotide multifasta. So, when I run `mmseqs convertalis` and I retrieve a blastn output format 6 table, this table shows the information about the aminoacidic alignment? . I'm particularly parsing the 7th and 8th column of the table (start and end position of alignment of the query sequence) and want to be sure if I'm looking the start and end of the nucleotide or aminoacidic sequence. Thanks for your time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570
https://github.com/soedinglab/MMseqs2/issues/570:129,Performance,perform,performed,129,"Hello I have performed a search using as query nucleotide multifasta and as a target an aminoacidic multifasta. The alignment is performed at aminoacidic level by translating the nucleotide multifasta. So, when I run `mmseqs convertalis` and I retrieve a blastn output format 6 table, this table shows the information about the aminoacidic alignment? . I'm particularly parsing the 7th and 8th column of the table (start and end position of alignment of the query sequence) and want to be sure if I'm looking the start and end of the nucleotide or aminoacidic sequence. Thanks for your time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570
https://github.com/soedinglab/MMseqs2/issues/572:369,Availability,avail,available,369,"Hi. I have a question on outputting custom column headers. This [wiki page](https://github.com/soedinglab/mmseqs2/wiki#custom-alignment-format-with-convertalis) states: ; `Column headers can be added to the output with --format-mode 4`. I am using MMseqs2 Version: 13.45111 - when looking at the help text on command line, there does not seem to be a `--format-mode 4` available. Am I missing something?. More importantly: how can I generate column headers?. Thanks in advance. ```; mmseqs convertalis -h; usage: mmseqs convertalis <i:queryDb> <i:targetDb> <i:alignmentDB> <o:alignmentFile> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: align:; --gap-open TWIN Gap open cost [nucl:5,aa:11]; --gap-extend TWIN Gap extension cost [nucl:2,aa:1]; misc:; --format-mode INT Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML [0]; --format-output STR Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen; tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov; qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]. ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572
https://github.com/soedinglab/MMseqs2/issues/572:723,Modifiability,extend,extend,723,"Hi. I have a question on outputting custom column headers. This [wiki page](https://github.com/soedinglab/mmseqs2/wiki#custom-alignment-format-with-convertalis) states: ; `Column headers can be added to the output with --format-mode 4`. I am using MMseqs2 Version: 13.45111 - when looking at the help text on command line, there does not seem to be a `--format-mode 4` available. Am I missing something?. More importantly: how can I generate column headers?. Thanks in advance. ```; mmseqs convertalis -h; usage: mmseqs convertalis <i:queryDb> <i:targetDb> <i:alignmentDB> <o:alignmentFile> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: align:; --gap-open TWIN Gap open cost [nucl:5,aa:11]; --gap-extend TWIN Gap extension cost [nucl:2,aa:1]; misc:; --format-mode INT Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length, 3: Pretty HTML [0]; --format-output STR Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen; tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov; qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]. ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572
https://github.com/soedinglab/MMseqs2/issues/573:57,Availability,error,error,57,"Hello,. I'm trying to run createdb but got the following error message. I have tried with less FASTA files as input but I still got the same message. ## Expected Behavior; createdb works without error. ## Current Behavior; createdb is not able to create a DB since it cannot open the output file for writing. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); MMseqs Version: 92deb92fb46583b4c68932111303d12dfa121364; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; Cannot open sequenceDB.source for writing. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/573
https://github.com/soedinglab/MMseqs2/issues/573:195,Availability,error,error,195,"Hello,. I'm trying to run createdb but got the following error message. I have tried with less FASTA files as input but I still got the same message. ## Expected Behavior; createdb works without error. ## Current Behavior; createdb is not able to create a DB since it cannot open the output file for writing. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); MMseqs Version: 92deb92fb46583b4c68932111303d12dfa121364; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; Cannot open sequenceDB.source for writing. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/573
https://github.com/soedinglab/MMseqs2/issues/573:63,Integrability,message,message,63,"Hello,. I'm trying to run createdb but got the following error message. I have tried with less FASTA files as input but I still got the same message. ## Expected Behavior; createdb works without error. ## Current Behavior; createdb is not able to create a DB since it cannot open the output file for writing. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); MMseqs Version: 92deb92fb46583b4c68932111303d12dfa121364; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; Cannot open sequenceDB.source for writing. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/573
https://github.com/soedinglab/MMseqs2/issues/573:141,Integrability,message,message,141,"Hello,. I'm trying to run createdb but got the following error message. I have tried with less FASTA files as input but I still got the same message. ## Expected Behavior; createdb works without error. ## Current Behavior; createdb is not able to create a DB since it cannot open the output file for writing. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); MMseqs Version: 92deb92fb46583b4c68932111303d12dfa121364; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; Cannot open sequenceDB.source for writing. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/573
https://github.com/soedinglab/MMseqs2/issues/574:1087,Availability,down,download,1087,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574
https://github.com/soedinglab/MMseqs2/issues/574:1204,Deployability,install,installation,1204,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574
https://github.com/soedinglab/MMseqs2/issues/574:1195,Testability,test,test,1195,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574
https://github.com/soedinglab/MMseqs2/issues/576:196,Availability,error,error,196,"When I am running the mmseq2 in the conda environment to convert the expandable profile databases to MMseqs2 format following the protocol:. mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db. error:. Invalid Command: tsv2exprofiledb; Did you mean ""mmseqs convertprofiledb""?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/576
https://github.com/soedinglab/MMseqs2/issues/576:130,Integrability,protocol,protocol,130,"When I am running the mmseq2 in the conda environment to convert the expandable profile databases to MMseqs2 format following the protocol:. mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db. error:. Invalid Command: tsv2exprofiledb; Did you mean ""mmseqs convertprofiledb""?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/576
https://github.com/soedinglab/MMseqs2/issues/577:1871,Availability,Mask,Mask,1871,"neage 1; Compressed 0; Threads 32; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:1888,Availability,Mask,Mask,1888,"neage 1; Compressed 0; Threads 32; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive sear",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:2082,Availability,Mask,Mask,2082,"rapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files true; Report mode 0; Alignment format 0; Fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:21579,Availability,mask,mask,21579,"16803073/tmp_hsp1; search tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/first tmp/6713; 332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 32 -s 2 --split-memory-limit 200G --sp; aced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQY",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:21588,Availability,mask,mask-lower-case,21588,"16803073/tmp_hsp1; search tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/first tmp/6713; 332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 32 -s 2 --split-memory-limit 200G --sp; aced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQY",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:22149,Availability,Mask,Masked,22149,"48/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequences passed prefiltering per query sequence; 16 median result list length; 125561700 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 20m 11s 194ms; Time for merging to pref_0_tmp_0_tmp: 0h 53m 2s 600",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:23414,Availability,Mask,Masked,23414, 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequences passed prefiltering per query sequence; 16 median result list length; 125561700 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 20m 11s 194ms; Time for merging to pref_0_tmp_0_tmp: 0h 53m 2s 600ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.92M 2m 23s 524ms; Index table: Masked residues: 206230655; Index table: fill; [=====================; ```. ## Context; ```; free -h; total used free shared buff/cache available; Mem: 409G 135G 86G 1.4M 186G 270G; Swap: 0B 0B 0B; ```; Google Cloud Platform (64 vCPU and 425984 MiB); Boot disk: 6000 GB; Ubuntu 18.4,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:23550,Availability,avail,available,23550, 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequences passed prefiltering per query sequence; 16 median result list length; 125561700 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 20m 11s 194ms; Time for merging to pref_0_tmp_0_tmp: 0h 53m 2s 600ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.92M 2m 23s 524ms; Index table: Masked residues: 206230655; Index table: fill; [=====================; ```. ## Context; ```; free -h; total used free shared buff/cache available; Mem: 409G 135G 86G 1.4M 186G 270G; Swap: 0B 0B 0B; ```; Google Cloud Platform (64 vCPU and 425984 MiB); Boot disk: 6000 GB; Ubuntu 18.4,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:21864,Energy Efficiency,consumption,consumption,21864,"min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:1084,Integrability,wrap,wrapped,1084,"ide database (97 GB) with uniprotkb. . ## Current Behavior; The first filtering step (easy-taxonomy) runs for about 12 hours now. Is that correct? Is there a way to speed up the pre-filtering? If the pre-filtering process is split into 6 parts, can I expect that every section takes 12 hours?. ## Steps to Reproduce (for bugs); ```; mmseqs databases UniProtKB databases/uniprotkb tmp; mmseqs easy-taxonomy input.fna databases/uniprotkb taxdb tmp --dbtype 2 --lca-mode 4 --orf-filter 0 --tax-lineage 1 --split-memory-limit 200G --threads 32; ```; ## MMseqs Output (for bugs); Create directory tmp; ```; MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 4; Majority threshold 0.5; Vote mode 1; LCA ranks ; Column with taxonomic lineage 1; Compressed 0; Threads 32; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 200G; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:21679,Performance,load,load-mode,21679,"16803073/tmp_hsp1; search tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/first tmp/6713; 332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 32 -s 2 --split-memory-limit 200G --sp; aced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQY",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/577:23544,Performance,cache,cache,23544, 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequences passed prefiltering per query sequence; 16 median result list length; 125561700 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 20m 11s 194ms; Time for merging to pref_0_tmp_0_tmp: 0h 53m 2s 600ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.92M 2m 23s 524ms; Index table: Masked residues: 206230655; Index table: fill; [=====================; ```. ## Context; ```; free -h; total used free shared buff/cache available; Mem: 409G 135G 86G 1.4M 186G 270G; Swap: 0B 0B 0B; ```; Google Cloud Platform (64 vCPU and 425984 MiB); Boot disk: 6000 GB; Ubuntu 18.4,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577
https://github.com/soedinglab/MMseqs2/issues/579:1387,Performance,load,load-mode,1387,"Hi,; I ran the `mmseqs search` command on one sample (named 'B001'), and all went well. Now I would like to use `mmseqs convertalis` to convert the result database file into a .m8 file; however, `mmseqs convertalis` expects one file as input for the result database, and the output from `mmseqs search` produced 10 result_db files from one sample:. `mmseqs2_B001_result_db.0	mmseqs2_B001_result_db.6; mmseqs2_B001_result_db.1	mmseqs2_B001_result_db.7; mmseqs2_B001_result_db.2	mmseqs2_B001_result_db.8; mmseqs2_B001_result_db.3	mmseqs2_B001_result_db.9; mmseqs2_B001_result_db.4	mmseqs2_B001_result_db.dbtype; mmseqs2_B001_result_db.5	mmseqs2_B001_result_db.index`. Is this acceptable? If so, is there a way to merge the 'result_db' files into one file? Alternatively, should I convert each of these outputs into a .m8 file separately, and then merge?. For reference, I ran this command to produce the above output:. `mmseqs search /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/tmp --db-load-mode 3 --threads 10 --max-seqs 25 -s 1 -a -e 1e-5`. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579
https://github.com/soedinglab/MMseqs2/issues/580:258,Availability,down,downgrades,258,"Dear all,. Does MMSeqs2 provide a way (a command) to generate PSSM profiles from the MMSeqs2 multiple sequence alignment (msa) output file out.mm_msa?. I think providing such a functionality can help a lot. In this way, we don't need to call psiblast (which downgrades the runtime performance of the machine-learning tools) anymore to generate PSSM features for the protein residues. Alright?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580
https://github.com/soedinglab/MMseqs2/issues/580:281,Performance,perform,performance,281,"Dear all,. Does MMSeqs2 provide a way (a command) to generate PSSM profiles from the MMSeqs2 multiple sequence alignment (msa) output file out.mm_msa?. I think providing such a functionality can help a lot. In this way, we don't need to call psiblast (which downgrades the runtime performance of the machine-learning tools) anymore to generate PSSM features for the protein residues. Alright?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580
https://github.com/soedinglab/MMseqs2/issues/580:308,Usability,learn,learning,308,"Dear all,. Does MMSeqs2 provide a way (a command) to generate PSSM profiles from the MMSeqs2 multiple sequence alignment (msa) output file out.mm_msa?. I think providing such a functionality can help a lot. In this way, we don't need to call psiblast (which downgrades the runtime performance of the machine-learning tools) anymore to generate PSSM features for the protein residues. Alright?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580
https://github.com/soedinglab/MMseqs2/issues/583:344,Availability,Error,Error,344,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:377,Availability,error,error,377,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:2258,Availability,Mask,Mask,2258,"lurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:2276,Availability,Mask,Mask,2276,"lurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:2307,Availability,Mask,Mask,2307,"output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:3329,Availability,Mask,Mask,3329," Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:3347,Availability,Mask,Mask,3347," Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:3378,Availability,Mask,Mask,3378,"Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Version: 	3b9cf88179737563acfdb83b516c0b5219cc531e; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; k-mer length 	0; Alphabet size 	aa:21,nucl:5; Compositional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:4278,Availability,mask,mask,4278,"positional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your En",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:4287,Availability,mask,mask-prob,4287,"positional bias 	1; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your En",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:4303,Availability,mask,mask-lower-case,4303,"	300; Mask residues 	1; Mask residues probability	0.9; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	seq:0,prof:0; Check compatible 	0; Search type 	0; Split database 	1; Split memory limit 	0; Verbosity 	3; Threads 	56; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parame",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:5038,Availability,Error,Error,5038,"; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirects stderr to this file; ##SBATCH -o %j.out ### redirects standard output stdout to this file; #SBATCH -p haswell ### types of nodes on taurus: west, dandy, smp, gpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:5071,Availability,error,error,5071,"; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirects stderr to this file; ##SBATCH -o %j.out ### redirects standard output stdout to this file; #SBATCH -p haswell ### types of nodes on taurus: west, dandy, smp, gpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:101,Energy Efficiency,consumption,consumption,101,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:4479,Energy Efficiency,consumption,consumption,4479," 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirect",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:384,Safety,Detect,Detected,384,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/583:5078,Safety,Detect,Detected,5078,"; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirects stderr to this file; ##SBATCH -o %j.out ### redirects standard output stdout to this file; #SBATCH -p haswell ### types of nodes on taurus: west, dandy, smp, gpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583
https://github.com/soedinglab/MMseqs2/issues/586:1312,Availability,echo,echo,1312," ```; >random_seq; NTLGEQNARIWSEREVGICLARKHPFLDFSVVKDMIATGLGTDYKALSPQ; ```. and running `easy-search` with the above fasta as both the query and target:. `mmseqs easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits` produces an empty `result.tsv`. Running the above command without the `--greedy-best-hits` flag results in the expected `result.tsv`:; ```; random_seq	random_seq	1.000	50	0	0	1	50	1	50	1.586E-38	108; ```. My guess is that there is a bug in the `summarizeresult` command being run when `--greedy-best-hits` is passed in:; `summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3`. But it's quite possible I'm missing something... thanks for your time!. ## Expected Behavior; A result.tsv with content; ```; random_seq	random_seq	1.000	50	0	0	1	50	1	50	1.586E-38	108; ```. ## Current Behavior; An empty result.tsv. ## Steps to Reproduce (for bugs); ```; echo "">random_seq\nNTLGEQNARIWSEREVGICLARKHPFLDFSVVKDMIATGLGTDYKALSPQ"" > seq.fasta; mmseqs easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits; ```. ## MMseqs Output (for bugs); <details>. ```; Create directory tmp; easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:2658,Availability,Mask,Mask,2658,". MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:2676,Availability,Mask,Mask,2676,". MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:2878,Availability,Mask,Mask,2878,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:5588,Availability,mask,mask,5588,"essing: 0h 0m 0s 38ms; createdb seq.fasta tmp/15248047069833069253/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences. Time for merging to target_h: 0h 0m 0s 9ms; Time for merging to target: 0h 0m 0s 8ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 40ms; Create directory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:5597,Availability,mask,mask-lower-case,5597,"essing: 0h 0m 0s 38ms; createdb seq.fasta tmp/15248047069833069253/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences. Time for merging to target_h: 0h 0m 0s 9ms; Time for merging to target: 0h 0m 0s 8ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 40ms; Create directory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:6053,Availability,Mask,Masked,6053,"3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:5814,Energy Efficiency,consumption,consumption,5814,"ectory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 siz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:1797,Integrability,wrap,wrapped,1797," guess is that there is a bug in the `summarizeresult` command being run when `--greedy-best-hits` is passed in:; `summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3`. But it's quite possible I'm missing something... thanks for your time!. ## Expected Behavior; A result.tsv with content; ```; random_seq	random_seq	1.000	50	0	0	1	50	1	50	1.586E-38	108; ```. ## Current Behavior; An empty result.tsv. ## Steps to Reproduce (for bugs); ```; echo "">random_seq\nNTLGEQNARIWSEREVGICLARKHPFLDFSVVKDMIATGLGTDYKALSPQ"" > seq.fasta; mmseqs easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits; ```. ## MMseqs Output (for bugs); <details>. ```; Create directory tmp; easy-search seq.fasta seq.fasta result.tsv tmp --cov-mode 1 -c 1 --greedy-best-hits . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	1; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:7249,Integrability,wrap,wrapped-scoring,7249,"er size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:7611,Modifiability,extend,extend,7611,"==================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:9210,Modifiability,extend,extend,9210,"3734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result_best: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 17ms; convertalis tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result_best result.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 11ms; rmdb tmp/15248047069833069253/result_best -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target_h -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/query -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/query_h -v 3 ; ```. </details>. ## Context; See above. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Wh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:5686,Performance,load,load-mode,5686,"essing: 0h 0m 0s 38ms; createdb seq.fasta tmp/15248047069833069253/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences. Time for merging to target_h: 0h 0m 0s 9ms; Time for merging to target: 0h 0m 0s 8ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 40ms; Create directory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:7468,Performance,load,load-mode,7468,"le init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/586:9248,Performance,load,load-mode,9248,"3734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result_best: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 17ms; convertalis tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result_best result.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 11ms; rmdb tmp/15248047069833069253/result_best -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target_h -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/query -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/query_h -v 3 ; ```. </details>. ## Context; See above. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Wh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586
https://github.com/soedinglab/MMseqs2/issues/588:481,Availability,Avail,Avail,481,"## Current Behavior; I did `mmseqs createdb` for [nt.gz database](https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/), and now try to index it using the following command:; `/usr/bin/time -f ""%P %M"" mmseqs createindex --threads 8 --search-type 3 mmseqs_database temporary`; But the process dies at some point, giving an _error: indexdb died_,; while I definitely have enough space on the server:; `(base) chechekinao@maecenas:~/scratch/Olga/RNA_alignment$ df -h . ; Filesystem Size Used Avail Use% Mounted on ; /dev/sdb 29T 26T 1.6T 95% /raid`; Can you, please, help me fix this?. ## MMseqs Output ; ![image](https://user-images.githubusercontent.com/60808830/183816312-a279b20a-e484-46f2-a6fb-d17551befaa6.png). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): 13.45111",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/588
https://github.com/soedinglab/MMseqs2/issues/589:949,Performance,load,load-mode,949,"Hi,. I'm currently attempting to search a multifasta file against itself using `mmseqs search`. The file contains 10432883 sequences so naturally it's going to take a long time. I stopped the pre-filtering step after about 24 hours and am now trying to optimise my parameters to speed up the search process. I'm wondering if you could advise me on the recommended settings for doing this?. After doing some reading and generally trying to get my head around what is happening, this is what I've come up with so far:. ```; mmseqs \; createdb \; /gut/output_noblast/gut_p/combined_ffn.fasta \; /gut/mmseqs/querydb/queryDB;. mmseqs \; createindex \; /gut/mmseqs/querydb/queryDB \; /temp_data/akjshdf;. mmseqs \; touchdb \; /gut/mmseqs/querydb/queryDB;. mmseqs \; search \; /gut/mmseqs/querydb/queryDB \; /gut/mmseqs/querydb/queryDB \; /gut/mmseqs/resultdb/resultDB \; --search-type 3 \; --threads 40 \; --start-sens 1 \; --sens-steps 3 \; -s 7 \; --db-load-mode 2 \; /temp_data/akjshdf;; ```. Are there further optimisations I could make or something else I could be doing differently?. Many thanks for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/589
https://github.com/soedinglab/MMseqs2/issues/592:50,Availability,error,error,50,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:116,Availability,Fault,Fault,116,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:1827,Availability,Mask,Mask,1827,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:1845,Availability,Mask,Mask,1845,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:1877,Availability,Mask,Mask,1877," alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:2090,Availability,Mask,Mask,2090,"x reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:3659,Availability,mask,mask,3659,"ode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:3668,Availability,mask,mask-prob,3668,"ode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:3684,Availability,mask,mask-lower-case,3684,"se; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURAR",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:6181,Availability,mask,mask-profile,6181,"ubstitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:6821,Availability,fault,fault,6821,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:6828,Availability,Error,Error,6828,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:4020,Energy Efficiency,consumption,consumption,4020,"	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:56,Integrability,message,message,56,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:833,Integrability,wrap,wrapped,833,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:4929,Integrability,wrap,wrapped-scoring,4929,"16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:5398,Modifiability,extend,extend,5398,"atches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:6523,Modifiability,extend,extend,6523,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:420,Performance,load,load-mode,420,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:638,Performance,load,load-mode,638,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:3773,Performance,load,load-mode,3773,"se; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURAR",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:5173,Performance,load,load-mode,5173,"noacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/592:6481,Performance,load,load-mode,6481,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592
https://github.com/soedinglab/MMseqs2/issues/594:1724,Availability,Mask,Mask,1724,"2.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:1742,Availability,Mask,Mask,1742,"2.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:1774,Availability,Mask,Mask,1774,"ments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:1993,Availability,Mask,Mask,1993,"	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:17608,Availability,mask,mask,17608,"423/search_tmp/1950629703809443685/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 95.29M 10m 53s 267ms; Time for merging to q_orfs_aa_h: 0h 14m 59s 800ms; Time for merging to q_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:17617,Availability,mask,mask-prob,17617,"423/search_tmp/1950629703809443685/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 95.29M 10m 53s 267ms; Time for merging to q_orfs_aa_h: 0h 14m 59s 800ms; Time for merging to q_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:17633,Availability,mask,mask-lower-case,17633,"2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 95.29M 10m 53s 267ms; Time for merging to q_orfs_aa_h: 0h 14m 59s 800ms; Time for merging to q_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:18157,Availability,Mask,Masked,18157,"3/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences passed prefiltering per query sequence; 300 median result list length; 134238 sequences with 0 size result lists; Time for merging to pref: 0h 30m 15s 580ms; Time for processing: 88h 9m 11s 291ms; swapresults rep",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:17913,Energy Efficiency,consumption,consumption,17913,"_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:727,Integrability,wrap,wrapped,727,"## Expected Behavior; The functional annotation of representative sequences (75 GB) in a FASTA file with eggNOG and PFAM. ## Current Behavior; I started with the eggNOG annotation, which is running for more than 120 hours now. Is there a way to speed the process up?. ## MMseqs Output (for bugs); ```; repSEQS.fna; Create directory repSEQS_eggnog.tmp; easy-search repSEQS.fna databases/eggnog repSEQS_eggnog.csv repSEQS_eggnog.tmp \; --dbtype 2 \; --split-memory-limit 300G \; --threads 56 \; --remove-tmp-files false \; --greedy-best-hits 1 . MMseqs Version: 	8ff26f23a6b880df36cadb707890084503ceaffb; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	56; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	300G; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:19579,Modifiability,extend,extend,19579,"step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences passed prefiltering per query sequence; 300 median result list length; 134238 sequences with 0 size result lists; Time for merging to pref: 0h 30m 15s 580ms; Time for processing: 88h 9m 11s 291ms; swapresults repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --split-memory-limit 300G --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 56 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 1.30B 2h 8m 45s 98ms. Reading results.; [=================================================================] 1.30B 5h 47m 7s 401ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 26.35K 11m 16s 126ms. Time for merging to pref_swapped_0: 0h 40m 12s 625ms. Reading results.; [=================================================================] 1.30B 5h 40m 43s 346ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 32.57K 11m 9s 696ms. Time for merging to pref_swapped_1: 0h 38m 42s 418ms. Reading results.; [=================================================================] 1.30B 5h 39m 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:17722,Performance,load,load-mode,17722,"2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 95.29M 10m 53s 267ms; Time for merging to q_orfs_aa_h: 0h 14m 59s 800ms; Time for merging to q_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/594:19631,Performance,load,load-mode,19631,"step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences passed prefiltering per query sequence; 300 median result list length; 134238 sequences with 0 size result lists; Time for merging to pref: 0h 30m 15s 580ms; Time for processing: 88h 9m 11s 291ms; swapresults repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --split-memory-limit 300G --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 56 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 1.30B 2h 8m 45s 98ms. Reading results.; [=================================================================] 1.30B 5h 47m 7s 401ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 26.35K 11m 16s 126ms. Time for merging to pref_swapped_0: 0h 40m 12s 625ms. Reading results.; [=================================================================] 1.30B 5h 40m 43s 346ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 32.57K 11m 9s 696ms. Time for merging to pref_swapped_1: 0h 38m 42s 418ms. Reading results.; [=================================================================] 1.30B 5h 39m 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594
https://github.com/soedinglab/MMseqs2/issues/595:67,Availability,avail,available,67,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:349,Availability,avail,available,349,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:2342,Availability,Mask,Mask,2342,"62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:2360,Availability,Mask,Mask,2360,"62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:2392,Availability,Mask,Mask,2392,"gnments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:2611,Availability,Mask,Mask,2611,"t 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:4214,Availability,mask,mask,4214,"rd frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:4223,Availability,mask,mask-prob,4223,"rd frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:4239,Availability,mask,mask-lower-case,4239,"Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:4852,Availability,Mask,Masked,4852,"tide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RE",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:6567,Availability,avail,available,6567,"shold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RELEASE -DNATIVE_ARCH=0 -DCMAKE_C_FLAGS=""-O3 -mcpu=a64fx"" -DCMAKE_CXX_FLAGS=""-O3 -mcpu=a64fx"" -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45 ..`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): A64FX and 32 Gb of ram; * Operating system and version: Rocky Linux 8.4. I'm wondering if the per-node memory limitation is also limiting the number of threads that can be used, or is there something about how I'm calling mmseqs that I should be changing in order to utilize 48 cores/threads per node? I've tried setting the value of `--threads` to 48, to the total number of cores available on all nodes, and not setting it at all. In each case, the max # of threads/cores used per node is 12. Thanks!; Dave",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:5895,Deployability,RELEASE,RELEASE,5895,"shold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; * Which MMseqs version was used: self compiled; * For self-compiled and Homebrew: : GCC 12.1 ,OpenMPI 4.1.4, CMAKE 3.22. Build command: `cmake -DCMAKE_BUILD_TYPE=RELEASE -DNATIVE_ARCH=0 -DCMAKE_C_FLAGS=""-O3 -mcpu=a64fx"" -DCMAKE_CXX_FLAGS=""-O3 -mcpu=a64fx"" -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45 ..`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): A64FX and 32 Gb of ram; * Operating system and version: Rocky Linux 8.4. I'm wondering if the per-node memory limitation is also limiting the number of threads that can be used, or is there something about how I'm calling mmseqs that I should be changing in order to utilize 48 cores/threads per node? I've tried setting the value of `--threads` to 48, to the total number of cores available on all nodes, and not setting it at all. In each case, the max # of threads/cores used per node is 12. Thanks!; Dave",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:130,Energy Efficiency,schedul,scheduler,130,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:4570,Energy Efficiency,consumption,consumption,4570,"ace limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 83); Query db start 1 to 20588; Target db start 1 to 207919; ...; ```. ## Context; I'm running this on a cluster with aarch64 (actually A64FX) CPU architecture. The cluster also has limited memory per node -- only 32 GB. ## Your Environment; Include as ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:1347,Integrability,wrap,wrapped,1347,"here are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	384; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer match",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:820,Performance,load,load,820,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:839,Performance,load,load,839,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:4328,Performance,load,load-mode,4328,"Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/595:693,Testability,log,log,693,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595
https://github.com/soedinglab/MMseqs2/issues/596:88,Availability,down,down,88,"Hi. I am doing a hierarchcal clustering of a protein database - clustering all proteins down to 95% representatives, then clustering the 95% representatives to 80% id, then to 70% and so forth. Based on recommendations, I am using the easy-linclust steps to 80% id, then switching to the easy-cluster mode. The linclust steps are lightning fast, but when switching to easy-cluster the process stops at the prefilter stage for 10 days -with the below parameters. How can I speed up the easy-cluster steps and still ensure ""quality"" clusters that respect the percent ID cut off?. Many thanks for any tips!. ## Steps to Reproduce (for bugs). Command:; ```; REASSIGN=TRUE mmseqs easy-cluster --min-seq-id 0.70 --cluster-reassign 1 -c 0.8 -s 6 --cov-mode 1 --alignment-mode 3 --similarity-type 2 --max-seq-len 2001 --threads 96 --split-memory-limit 750G --remove-tmp-files -v 2 proteins80.fasta proteins70.mm tmp; ```; Running on local SSD, so IO should be fast. Still running fine, producing files in clu_tmp:. `pref_step2_tmp_0.index.58`. ; ## Context; ## Your Environment; MMseqs2 Version: 1c739ae79a0f96f5f9e28f49dae9343d69be7a3d; Statically compiled, AVX2 version; Server has 1Tb mem and using 96 threads. Running Ubuntu 18.04.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/596
https://github.com/soedinglab/MMseqs2/issues/599:787,Availability,error,error,787,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:6686,Availability,Mask,Mask,6686,". MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:6704,Availability,Mask,Mask,6704,". MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:6906,Availability,Mask,Mask,6906,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:10724,Availability,mask,mask,10724,"=================================] 1 0s 0ms; Time for merging to query_seqs_h: 0h 0m 0s 0ms; Time for merging to query_seqs: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; splitsequence tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:10733,Availability,mask,mask-lower-case,10733,"=================================] 1 0s 0ms; Time for merging to query_seqs_h: 0h 0m 0s 0ms; Time for merging to query_seqs: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; splitsequence tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:11174,Availability,Mask,Masked,11174," 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:13743,Availability,mask,mask-profile,13743,"2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:14794,Availability,mask,mask,14794,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:14803,Availability,mask,mask-lower-case,14803,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:15118,Availability,Error,Error,15118,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:15141,Availability,Error,Error,15141,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:15166,Availability,Error,Error,15166,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:15234,Deployability,install,installed,15234,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:240,Energy Efficiency,allocate,allocate,240,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:10944,Energy Efficiency,consumption,consumption,10944," 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:15011,Energy Efficiency,consumption,consumption,15011,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:15079,Energy Efficiency,allocate,allocate,15079,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:417,Integrability,message,message,417,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:5825,Integrability,wrap,wrapped,5825,"UGGAGGAACACCAGUGGCGAAGGCGACUUUCU; GGUCUGUAACUGACGCUGAUGUGCGAAAGCGUGGGGAUCAAACAGGAUUAGAUACCCUGGUAGUCCACGCCGUAAACGAU; GAGUGCUAAGUGUUAGGGGGUUUCCGCCCCUUAGUGCUGCAGCUAACGCAUUAAGCACUCCGCCUGGGGAGUACGACCGC; AAGGUUGAAACUCAAAGGAAUUGACGGGGACCCGCACAAGCGGUGGAGCAUGUGGUUUAAUUCGAAGCAACGCGAAGAAC; CUUACCAAAUCUUGACAUCCUCUGACCCCUCUAGAGAUAGAGUUUUCCCCUUCGGGGGACAGAGUGACAGGUGGUGCAUG; GUUGUCGUCAGCUCGCGUCGUGAGAUGUUGGGUUAAGUCCCGCAACGAGCGCAACCCUUAAGCUUAGUUGCCAUCAUUAA; GUUGGGCACUCUAAGUUGACUGCCGGUGACAAACCGGAGGAAGGUGGGGAUGACGUCAAAUCAUCAUGCCCCUUAUGAUU; UGGGCUACACACGUGCUACAAUGGACAAUACAAAGGGCAGCGAAACUGCGAGGUCAAGCAAAUCCCAUAAAGUUGUUCUC; AGUUCGGAUUGUAGUCUGCAACUCGACUACAUGAAGCUGGAAUCGCUAGUAAUCGUAGAUCAGCAUGCUACGGUGAAUAC; GUUCCCGGGUCU. ## MMseqs Output (for bugs); easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	1; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:12572,Integrability,wrap,wrapped-scoring,12572,"ACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:12934,Modifiability,extend,extend,12934,"queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:13954,Modifiability,extend,extend,13954,"zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:10822,Performance,load,load-mode,10822,"=================================] 1 0s 0ms; Time for merging to query_seqs_h: 0h 0m 0s 0ms; Time for merging to query_seqs: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; splitsequence tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:12791,Performance,load,load-mode,12791,"es calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:13912,Performance,load,load-mode,13912,"zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:14892,Performance,load,load-mode,14892,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/599:529,Testability,log,log,529,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599
https://github.com/soedinglab/MMseqs2/issues/601:3744,Availability,redundant,redundant,3744,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/601:3744,Safety,redund,redundant,3744,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/601:429,Testability,test,tested,429,"Dear MMSeqs2 devlopers, . I was a user of CDHIT to remove the duplications in a dataset. However, it is not ready for big data. So, I come across MMSeqs2 which can be used as an alternative to CDHIT from this paper [(https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6026198/)](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6026198/). . My command for CDHIT: ; cd-hit -i `<input fasta file>` -o `<output fasta file>` -c `1.00`. I have tested with a few parameters of MMSeqs clustering. Unfortunately, it does not work as expected. ; ## example fasta file ; (consisting of 8 sequences - S2 and S3 are partial identical sequences of S1 while S5, S6, S7, and S8 are partial identical sequences of S4; expected final cluster representative: S1 and S4); ```; >S1; MKQYIVLACMCLVAAAMPTSLXXXXSSCTEEENKHHMGIDVIIKVTKQDQTPTNDKICQSVTEVTETEDDEVSEEVVKGDPTTYYTIVGAGLNMNFGFTKCPKILSISESSDGNTVNTRLSSVSPGQGKDSPAITREEALAMIKDCEMSIDIRCSEEEKDSDIKTHPVLGSNISHKKVSYKDIIGSTIVDTKCVKNLEFSVRIGDMCEESSELEVKDGFKYVDGSASEGATDDTSLIDSTKLKACV. >S2; MKQYIVLACMCLVAAAMPTSLXXXXSSCTEE. >S3; SEEEKDSDIKTHPVLGSNISHKKVSYKDIIGSTIVDTKCVKNLEFSVRIGDMCEESSELEVKDGFKYVDGSASEGATDDTSLIDSTKLKACV. >S4; MDEMDEIVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHYKYYP. >S5; MDEMDEIVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPID",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/601:2703,Testability,Test,Tested,2703,"DDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/601:2724,Testability,Test,Test,2724,"DDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/601:3011,Testability,Test,Test,3011,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/601:3077,Testability,test,test,3077,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/601:3085,Testability,test,test,3085,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601
https://github.com/soedinglab/MMseqs2/issues/602:1051,Availability,Mask,Mask,1051,"vior; i am doing a cluster process on 15 million seq, but i am stuck on rescorediagonal, watch with top command, i find it's not memory's issue since only 8G Ram is used, i use 128 thread and 400G Ram, i believe it's enough for this cluster. The strange thing is -- when i decrease seq num to 7.5 million, it works just fine, i am confused what makes it stuck. ## Current Behavior. mmseqs cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:1069,Availability,Mask,Mask,1069,"vior; i am doing a cluster process on 15 million seq, but i am stuck on rescorediagonal, watch with top command, i find it's not memory's issue since only 8G Ram is used, i use 128 thread and 400G Ram, i believe it's enough for this cluster. The strange thing is -- when i decrease seq num to 7.5 million, it works just fine, i am confused what makes it stuck. ## Current Behavior. mmseqs cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:1101,Availability,Mask,Mask,1101,"mory's issue since only 8G Ram is used, i use 128 thread and 400G Ram, i believe it's enough for this cluster. The strange thing is -- when i decrease seq num to 7.5 million, it works just fine, i am confused what makes it stuck. ## Current Behavior. mmseqs cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary file",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3398,Availability,mask,mask,3398,"uster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3407,Availability,mask,mask-prob,3407,"uster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3423,Availability,mask,mask-lower-case,3423,"1878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3892,Availability,mask,mask,3892," 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3901,Availability,mask,mask-prob,3901," 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3917,Availability,mask,mask-lower-case,3917,"le 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:4373,Availability,mask,mask,4373,"0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:4382,Availability,mask,mask-prob,4382,"0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:4398,Availability,mask,mask-lower-case,4398," 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:4627,Energy Efficiency,Reduce,Reduced,4627," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:1502,Integrability,wrap,wrapped,1502,"0.3 --threads 128; cluster tmpDB DB_clu tmp --min-seq-id 0.3 --threads 128 . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mod",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:2768,Integrability,wrap,wrapped-scoring,2768,"-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:5253,Integrability,wrap,wrapped-scoring,5253," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:2340,Modifiability,extend,extendable,2340,"text:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3241,Modifiability,extend,extend,3241,"e 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3500,Modifiability,extend,extendable,3500,"1878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:4034,Modifiability,extend,extendable,4034,"ca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:4515,Modifiability,extend,extendable,4515," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3016,Performance,load,load-mode,3016,"results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:5413,Performance,load,load-mode,5413," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:2317,Security,hash,hash,2317,"text:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3448,Security,hash,hash-shift,3448,"1878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:3982,Security,hash,hash-shift,3982,"ca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/602:4463,Security,hash,hash-shift,4463," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602
https://github.com/soedinglab/MMseqs2/issues/603:1159,Availability,Mask,Mask,1159,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:1176,Availability,Mask,Mask,1176,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:2669,Availability,failure,failure,2669,"65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3517,Availability,mask,mask,3517,"memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3526,Availability,mask,mask-lower-case,3526,"memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3976,Availability,mask,mask,3976,"ul:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The fai",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3985,Availability,mask,mask-lower-case,3985,"ul:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The fai",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:4966,Availability,failure,failure,4966,"-mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:8784,Availability,failure,failure,8784,"432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:10559,Availability,failure,failure,10559,"mp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:17118,Availability,avail,available,17118,"v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:2600,Deployability,install,installations,2600,"man/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:4897,Deployability,install,installations,4897,"r-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:8715,Deployability,install,installations,8715,"ancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:10490,Deployability,install,installations,10490,"904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:2488,Energy Efficiency,allocate,allocate,2488,"; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:4209,Energy Efficiency,Reduce,Reduced,4209,": 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:4330,Energy Efficiency,consumption,consumption,4330,"at nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; ----------------------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:4785,Energy Efficiency,allocate,allocate,4785,"-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:8603,Energy Efficiency,allocate,allocate,8603,"p/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/942042864",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:10378,Energy Efficiency,allocate,allocate,10378,":880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:623,Integrability,wrap,wrapped,623,"## Expected Behavior; cluster all the sequences. ## Current Behavior; some sequences are lost, rather than clustered accordingly . ## Steps to Reproduce (for bugs); easy-linclust fasta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:5861,Integrability,wrap,wrapped-scoring,5861,"e set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:9776,Integrability,wrap,wrapped-scoring,9776,"failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:11540,Integrability,wrap,wrapped-scoring,11540,"et to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:1267,Modifiability,extend,extendable,1267,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3642,Modifiability,extend,extendable,3642,"ld be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:4101,Modifiability,extend,extendable,4101,"----------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:11840,Modifiability,extend,extend,11840," also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:6021,Performance,load,load-mode,6021,"i-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [==================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:9936,Performance,load,load-mode,9936,"Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locke",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:11775,Performance,load,load-mode,11775,"ou may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compresse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:1224,Security,hash,hash,1224,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3591,Security,hash,hash-shift,3591,"ld be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:4050,Security,hash,hash-shift,4050,"----------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:298,Testability,test,test,298,"## Expected Behavior; cluster all the sequences. ## Current Behavior; some sequences are lost, rather than clustered accordingly . ## Steps to Reproduce (for bugs); easy-linclust fasta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:321,Testability,test,test,321,"## Expected Behavior; cluster all the sequences. ## Current Behavior; some sequences are lost, rather than clustered accordingly . ## Steps to Reproduce (for bugs); easy-linclust fasta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:1629,Testability,test,test,1629," Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:1991,Testability,test,test,1991,"nt b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:2091,Testability,test,test,2091,"ues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:2144,Testability,test,test,2144,"ues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:2185,Testability,test,test,2185,"ues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:2224,Testability,test,test,2224,"ues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3272,Testability,test,test,3272,"q-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3313,Testability,test,test,3313,"q-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3731,Testability,test,test,3731,"); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:3772,Testability,test,test,3772,"); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:5573,Testability,test,test,5573,"89ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:5614,Testability,test,test,5614,"89ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:5655,Testability,test,test,5655,"89ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:5724,Testability,test,test,5724,"89ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:6345,Testability,test,test,6345,"834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:6386,Testability,test,test,6386,"834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:6464,Testability,test,test,6464,"834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:7336,Testability,test,test,7336,oman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:7417,Testability,test,test,7417,oman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:7458,Testability,test,test,7458,oman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:7670,Testability,test,test,7670,"K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:7751,Testability,test,test,7751,"K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:7820,Testability,test,test,7820,"K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:8010,Testability,test,test,8010,"l time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; help",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:8087,Testability,test,test,8087,"l time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; help",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:8178,Testability,test,test,8178,"l time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; help",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:9390,Testability,test,test,9390,"--------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:9476,Testability,test,test,9476,"--------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:9562,Testability,test,test,9562,"--------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:9639,Testability,test,test,9639,"--------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:11156,Testability,test,test,11156,"----------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:11242,Testability,test,test,11242,"----------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:11328,Testability,test,test,11328,"----------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:11406,Testability,test,test,11406,"----------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:12416,Testability,test,test,12416,ent-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:12502,Testability,test,test,12502,ent-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:12570,Testability,test,test,12570,ent-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:13425,Testability,test,test,13425,edundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/94204286487,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:13466,Testability,test,test,13466,edundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/94204286487,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:13505,Testability,test,test,13505,edundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/94204286487,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:13579,Testability,test,test,13579,edundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/94204286487,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14123,Testability,test,test,14123,==========================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/94204286487107,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14233,Testability,test,test,14233,e alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/94,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14352,Testability,test,test,14352, 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14467,Testability,test,test,14467,48710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14594,Testability,test,test,14594,1/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14712,Testability,test,test,14712,=======================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fa,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14831,Testability,test,test,14831,===============================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14947,Testability,test,test,14947,0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:14988,Testability,test,test,14988,0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15029,Testability,test,test,15029,0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15068,Testability,test,test,15068,0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15235,Testability,test,test,15235,u_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Re,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15276,Testability,test,test,15276,u_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Re,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15315,Testability,test,test,15315,u_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Re,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15560,Testability,test,test,15560,rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15601,Testability,test,test,15601,rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15642,Testability,test,test,15642,rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15685,Testability,test,test,15685,rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15811,Testability,test,test,15811,710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15852,Testability,test,test,15852,710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:15891,Testability,test,test,15891,710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16050,Testability,test,test,16050,"428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16091,Testability,test,test,16091,"428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16132,Testability,test,test,16132,"428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16176,Testability,test,test,16176,"428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16299,Testability,test,test,16299,"t/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16381,Testability,test,test,16381,"==============================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16465,Testability,test,test,16465,"Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs ver",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16551,Testability,test,test,16551,"ult2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/603:16635,Testability,test,test,16635,"1/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603
https://github.com/soedinglab/MMseqs2/issues/605:53,Deployability,install,install,53,"## Expected Behavior; I have tried different ways to install mmseqs into a Docker image, non seem to work. And using Brew works well on my local machine but inside a Docker image, it also doesn't work. I tried using the mmseqs2 docker image on Docker hub, it installed but I am currently having a ""pip install"" issue. Pip doesn't work to install other Python packages.; ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605
https://github.com/soedinglab/MMseqs2/issues/605:259,Deployability,install,installed,259,"## Expected Behavior; I have tried different ways to install mmseqs into a Docker image, non seem to work. And using Brew works well on my local machine but inside a Docker image, it also doesn't work. I tried using the mmseqs2 docker image on Docker hub, it installed but I am currently having a ""pip install"" issue. Pip doesn't work to install other Python packages.; ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605
https://github.com/soedinglab/MMseqs2/issues/605:302,Deployability,install,install,302,"## Expected Behavior; I have tried different ways to install mmseqs into a Docker image, non seem to work. And using Brew works well on my local machine but inside a Docker image, it also doesn't work. I tried using the mmseqs2 docker image on Docker hub, it installed but I am currently having a ""pip install"" issue. Pip doesn't work to install other Python packages.; ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605
https://github.com/soedinglab/MMseqs2/issues/605:338,Deployability,install,install,338,"## Expected Behavior; I have tried different ways to install mmseqs into a Docker image, non seem to work. And using Brew works well on my local machine but inside a Docker image, it also doesn't work. I tried using the mmseqs2 docker image on Docker hub, it installed but I am currently having a ""pip install"" issue. Pip doesn't work to install other Python packages.; ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605
https://github.com/soedinglab/MMseqs2/issues/607:166,Availability,error,error,166,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607
https://github.com/soedinglab/MMseqs2/issues/607:172,Integrability,message,message,172,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607
https://github.com/soedinglab/MMseqs2/issues/607:973,Performance,load,load,973,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607
https://github.com/soedinglab/MMseqs2/issues/607:1012,Performance,load,load,1012,"or; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails with `Could not de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607
https://github.com/soedinglab/MMseqs2/issues/607:88,Testability,test,test,88,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607
https://github.com/soedinglab/MMseqs2/issues/608:85,Availability,redundant,redundant,85,"Hi, . I have a ~150 samples of protein fasta files, which I'd like to generate a non-redundant set of proteins from. I have tried concatenating the files to run the following:; ```; mmseqs easy-linclust --cov-mode 0 -c 0.8 --min-seq-id 0.3 all_nomis_proteins.faa mmseqs2_output tmp; ```. However, the concatenated file has 400 Mio genes, making it computationally infeasible. What may be the best approach here?. 1. cluster smaller sets of samples and then re-cluster? ; 2. for point-1 above, can one provide multiple inputs or should concatenate the smaller sets?; 3. for `re-clustering` after an initial round, is it possible to output the `non-redundant` fasta file?. Thank you for your input!; -Susheel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608
https://github.com/soedinglab/MMseqs2/issues/608:647,Availability,redundant,redundant,647,"Hi, . I have a ~150 samples of protein fasta files, which I'd like to generate a non-redundant set of proteins from. I have tried concatenating the files to run the following:; ```; mmseqs easy-linclust --cov-mode 0 -c 0.8 --min-seq-id 0.3 all_nomis_proteins.faa mmseqs2_output tmp; ```. However, the concatenated file has 400 Mio genes, making it computationally infeasible. What may be the best approach here?. 1. cluster smaller sets of samples and then re-cluster? ; 2. for point-1 above, can one provide multiple inputs or should concatenate the smaller sets?; 3. for `re-clustering` after an initial round, is it possible to output the `non-redundant` fasta file?. Thank you for your input!; -Susheel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608
https://github.com/soedinglab/MMseqs2/issues/608:85,Safety,redund,redundant,85,"Hi, . I have a ~150 samples of protein fasta files, which I'd like to generate a non-redundant set of proteins from. I have tried concatenating the files to run the following:; ```; mmseqs easy-linclust --cov-mode 0 -c 0.8 --min-seq-id 0.3 all_nomis_proteins.faa mmseqs2_output tmp; ```. However, the concatenated file has 400 Mio genes, making it computationally infeasible. What may be the best approach here?. 1. cluster smaller sets of samples and then re-cluster? ; 2. for point-1 above, can one provide multiple inputs or should concatenate the smaller sets?; 3. for `re-clustering` after an initial round, is it possible to output the `non-redundant` fasta file?. Thank you for your input!; -Susheel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608
https://github.com/soedinglab/MMseqs2/issues/608:647,Safety,redund,redundant,647,"Hi, . I have a ~150 samples of protein fasta files, which I'd like to generate a non-redundant set of proteins from. I have tried concatenating the files to run the following:; ```; mmseqs easy-linclust --cov-mode 0 -c 0.8 --min-seq-id 0.3 all_nomis_proteins.faa mmseqs2_output tmp; ```. However, the concatenated file has 400 Mio genes, making it computationally infeasible. What may be the best approach here?. 1. cluster smaller sets of samples and then re-cluster? ; 2. for point-1 above, can one provide multiple inputs or should concatenate the smaller sets?; 3. for `re-clustering` after an initial round, is it possible to output the `non-redundant` fasta file?. Thank you for your input!; -Susheel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608
https://github.com/soedinglab/MMseqs2/issues/609:333,Deployability,Update,Update,333,I'm running the command: `mmseqs easy-taxonomy taxdb output tmp -e 1e-5 -s 6 --blacklist --tax-lineage 1 --majority 0.75` along with a custom database and taxonomy. However many of the taxonomy results have <0.75 agreement (fewer than 75% of genes with taxonomy agree with the assigned taxon). I've attached the output and log file. Update: I tried running `mmseqs easy-taxonomy` using various values for `--majority` and the outputs are identical.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609
https://github.com/soedinglab/MMseqs2/issues/609:323,Testability,log,log,323,I'm running the command: `mmseqs easy-taxonomy taxdb output tmp -e 1e-5 -s 6 --blacklist --tax-lineage 1 --majority 0.75` along with a custom database and taxonomy. However many of the taxonomy results have <0.75 agreement (fewer than 75% of genes with taxonomy agree with the assigned taxon). I've attached the output and log file. Update: I tried running `mmseqs easy-taxonomy` using various values for `--majority` and the outputs are identical.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609
https://github.com/soedinglab/MMseqs2/issues/611:349,Availability,error,error,349,## Expected Behavior. - indexdb command should process RNA sequences and report k-mers of size 15; - a search with a RNA sequence on this database should finish gracefully. ## Current Behavior. - indexdb on RNA sequences treats them as protein sequence (?) and creates k-mers of size 6; - a search with a RNA sequence on this database results in an error. ## Steps to Reproduce (for bugs). 1. Install v5-2e4efbf of MMseqs2-App; ```; cd /opt/mmseqs; git clone https://github.com/soedinglab/MMseqs2-App.git; cd MMseqs2-App; git checkout v5-2e4efbf; ```; 3. Create `/opt/mmseqs/MMseqs2-App/docker-compose/databases/pdb_rna_sequence.fasta` with some test RNA sequences:; ```; >4QEI_2; GCGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG; >6Q8V_1; GGCGAAGAACCGGGGAGCC; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; >1VQL_1; UUGGCUACUAUGCCAGCUGGUGGAUUGCUCGGCUCAGGCGCUGAUGAAGGACGUGCCAAGCUGCGAUAAGCCAUGGGGAGCCGCACGGAGGCGAAGAACCAUGGAUUUCCGAAUGAGAAUCUCUCUAACAAUUGCUUCGCGCAAUGAGGAACCCCGAGAACUGAAACAUCUCAGUAUCGGGAGGAACAGAAAACGCAAUGUGAUGUCGUUAGUAACCGCGAGUGAACGCGAUACAGCCCAAACCGAAGCCCUCACGGGCAAUGUGGUGUCAGGGCUACCUCUCAUCAGCCGACCGUCUCGACGAAGUCUCUUGGAACAGAGCGUGAUACAGGGUGACAACCCCGUACUCGAGACCAGUACGACGUGCGGUAGUGCCAGAGUAGCGGGGGUUGGAUAUCCCUCGCGAAUAACGCAGGCAUCGACUGCGAAGGCUAAACACAACCUGAGACCGAUAGUGAACAAGUAGUGUGAACGAACGCUGCAAAGUACCCUCAGAAGGGAGGCGAAAUAGAGCAUGAAAUCAGUUGGCGAUCGAGCGACAGGGCAUACAAGGUCCCUCGACGAAUGACCGACGCGCGAGCGUCCAGUAAGACUCACGGGAAGCCGAUGUUCUGUCGUACGUUUUGAAAAACGAGCCAGGGAGUGUGUCUGCAUGGCAAGUCUAACCGGAGUAUCCGGGGAGGCACAGGGAAACCGACAUGGCCGCAGGGCUUUGCCCGAGGGCCGCCGUCUUCAAGGGCGGGGAGCCAUGUGGACACGACCCGAAUCCGGACGAUCUACGCAUGGACAAGAUGAAGCGUGCCGAAAGGCACGUGGAAGUCUGUUAGAGUUGGUGUCCUACAAUACCCUCUCGUGAUCUAUGUGUAGGGGUGAAAGGCCCAUCGAGUCCGGCAACAGCUGGUUCCAAUCGAAACAUGUCGAAGCAUGACCUCCGCCGAGGUAGUCUGUGAGGUAGAGCGACCGAUUGGUGUGUCCGCCUCCGAGAGGAGUCGGCACACCUGUCAAACUCCAAACUUACAGACGCCGUUUGACGCGGGGAUUCCGGUGCGCGGGGUAAGCCUGUGUACCAGGAGGGGAACAACCCAGAGAUAGGUUAAGGUCCCCAAGUGUGGAUUAAGUGUAAUCCUCUGAAGGUGGUCUCGAGCCCUAGACAGCCGGGAGGUGAGCUUAGAAG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:7967,Availability,Down,Downloaded,7967,"AGGUGAACCUGCGGAAGGAUCAUUA; >2G1G_1; ACGGGCUCAUAACCCGU; >6VZJ_8; AUGUUUUUUUUUUUUUUUGAUUUGGUGAGAGG; ```; 4. Create `/opt/mmseqs/MMseqs2-App/docker-compose/databases/pdb_rna_sequence.params`:; ```; {; ""display"": {; ""name"": ""PDB RNA sequence (seqres)"",; ""version"": ""2022-09-22"",; ""default"": false,; ""order"": 2,; ""index"": ""--search-type 3"",; ""search"": ""--max-seqs 2000 --search-type 3 --strand 1""; }; }; ```; 5. Call `docker-compose up --no-color`. ## MMseqs Output (for bugs); ```; /usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.12) or chardet (3.0.4) doesn't match a supported version!; warnings.warn(""urllib3 ({}) or chardet ({}) doesn't match a supported ""; Creating network ""docker-compose_default"" with the default driver; Creating volume ""docker-compose_redis-volume"" with default driver; Pulling mmseqs-web-redis (redis:alpine)...; alpine: Pulling from library/redis; Digest: sha256:dc1b954f5a1db78e31b8870966294d2f93fa8a7fba5c1337a1ce4ec55f311bc3; Status: Downloaded newer image for redis:alpine; Pulling mmseqs-web-api (soedinglab/mmseqs2-app-backend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-backend; Digest: sha256:cb3937c294b3e666af4f4a424af0b7c4adc4f5469e2f309651b9a852731d786d; Status: Downloaded newer image for soedinglab/mmseqs2-app-backend:version-5; Pulling mmseqs-web-webserver (soedinglab/mmseqs2-app-frontend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-frontend; Digest: sha256:30690f07999e0d1d7eccfe63c40df2b11d246590f094014e16987ed5d74d06d9; Status: Downloaded newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:8223,Availability,Down,Downloaded,8223,"022-09-22"",; ""default"": false,; ""order"": 2,; ""index"": ""--search-type 3"",; ""search"": ""--max-seqs 2000 --search-type 3 --strand 1""; }; }; ```; 5. Call `docker-compose up --no-color`. ## MMseqs Output (for bugs); ```; /usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.12) or chardet (3.0.4) doesn't match a supported version!; warnings.warn(""urllib3 ({}) or chardet ({}) doesn't match a supported ""; Creating network ""docker-compose_default"" with the default driver; Creating volume ""docker-compose_redis-volume"" with default driver; Pulling mmseqs-web-redis (redis:alpine)...; alpine: Pulling from library/redis; Digest: sha256:dc1b954f5a1db78e31b8870966294d2f93fa8a7fba5c1337a1ce4ec55f311bc3; Status: Downloaded newer image for redis:alpine; Pulling mmseqs-web-api (soedinglab/mmseqs2-app-backend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-backend; Digest: sha256:cb3937c294b3e666af4f4a424af0b7c4adc4f5469e2f309651b9a852731d786d; Status: Downloaded newer image for soedinglab/mmseqs2-app-backend:version-5; Pulling mmseqs-web-webserver (soedinglab/mmseqs2-app-frontend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-frontend; Digest: sha256:30690f07999e0d1d7eccfe63c40df2b11d246590f094014e16987ed5d74d06d9; Status: Downloaded newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-w",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:8515,Availability,Down,Downloaded,8515,"sDependencyWarning: urllib3 (1.26.12) or chardet (3.0.4) doesn't match a supported version!; warnings.warn(""urllib3 ({}) or chardet ({}) doesn't match a supported ""; Creating network ""docker-compose_default"" with the default driver; Creating volume ""docker-compose_redis-volume"" with default driver; Pulling mmseqs-web-redis (redis:alpine)...; alpine: Pulling from library/redis; Digest: sha256:dc1b954f5a1db78e31b8870966294d2f93fa8a7fba5c1337a1ce4ec55f311bc3; Status: Downloaded newer image for redis:alpine; Pulling mmseqs-web-api (soedinglab/mmseqs2-app-backend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-backend; Digest: sha256:cb3937c294b3e666af4f4a424af0b7c4adc4f5469e2f309651b9a852731d786d; Status: Downloaded newer image for soedinglab/mmseqs2-app-backend:version-5; Pulling mmseqs-web-webserver (soedinglab/mmseqs2-app-frontend:version-5)...; version-5: Pulling from soedinglab/mmseqs2-app-frontend; Digest: sha256:30690f07999e0d1d7eccfe63c40df2b11d246590f094014e16987ed5d74d06d9; Status: Downloaded newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Wa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:10102,Availability,reboot,reboot,10102,"1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Converting sequences; mmseqs-web-worker_1 | [=; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence_h: 0h 0m 0s 12ms; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence: 0h 0m 0s 9ms; mmseqs-web-worker_1 | Database type: Aminoacid; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 60ms; mmseqs-web-worker_1 | indexdb /opt/mmseqs-web/databases/pdb_rna_sequence /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:11228,Availability,mask,mask,11228,"Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Converting sequences; mmseqs-web-worker_1 | [=; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence_h: 0h 0m 0s 12ms; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence: 0h 0m 0s 9ms; mmseqs-web-worker_1 | Database type: Aminoacid; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 60ms; mmseqs-web-worker_1 | indexdb /opt/mmseqs-web/databases/pdb_rna_sequence /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 1023M; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 918ms; mmseqs-web-worker_1 | Index table: Masked residues: 4422171; mmseqs-web-worker_1 | Index table: fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:11237,Availability,mask,mask-lower-case,11237,"Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Converting sequences; mmseqs-web-worker_1 | [=; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence_h: 0h 0m 0s 12ms; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence: 0h 0m 0s 9ms; mmseqs-web-worker_1 | Database type: Aminoacid; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 60ms; mmseqs-web-worker_1 | indexdb /opt/mmseqs-web/databases/pdb_rna_sequence /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 1023M; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 918ms; mmseqs-web-worker_1 | Index table: Masked residues: 4422171; mmseqs-web-worker_1 | Index table: fil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:12151,Availability,Mask,Masked,12151,5535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 1023M; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 918ms; mmseqs-web-worker_1 | Index table: Masked residues: 4422171; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 61ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 40961; mmseqs-web-worker_1 | DB size: 488 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.000640; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | AAGAGA	872; mmseqs-web-worker_1 | CGGACA	532; mmseqs-web-worker_1 | AAGACG	524; mmseqs-web-worker_1 | AGAGCC	460; mmseqs-web-worker_1 | AAGCGC	453; mmseqs-web-worker_1 | AAAGGG	440; mmseqs-web-worker_1 | CGAGGG	403; mmseqs-web-worker_1 | AGCCAG	386; mmseqs-web-worker_1 | GCGCAG	385; mmseqs-web-worker_1 | AACAGG	323; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-wo,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:13670,Availability,error,error,13670,"k-mer size: 0.000640; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | AAGAGA	872; mmseqs-web-worker_1 | CGGACA	532; mmseqs-web-worker_1 | AAGACG	524; mmseqs-web-worker_1 | AGAGCC	460; mmseqs-web-worker_1 | AAGCGC	453; mmseqs-web-worker_1 | AAAGGG	440; mmseqs-web-worker_1 | CGAGGG	403; mmseqs-web-worker_1 | AGCCAG	386; mmseqs-web-worker_1 | GCGCAG	385; mmseqs-web-worker_1 | AACAGG	323; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.idx: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 3s 688ms; mmseqs-web-worker_1 | touchdb /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version:	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:14001,Availability,mask,mask,14001,"INDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.idx: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 3s 688ms; mmseqs-web-worker_1 | touchdb /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version:	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=============",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:14010,Availability,mask,mask-lower-case,14010,"INDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.idx: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 3s 688ms; mmseqs-web-worker_1 | touchdb /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version:	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=============",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:15093,Availability,Mask,Masked,15093,reads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.75K 1s 426ms; mmseqs-web-worker_1 | Index table: Masked residues: 29698; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.75K 0s 783ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 6377423; mmseqs-web-worker_1 | DB size: 8228 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.005939; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | GAGTGGTTAGGCGGA	1170; mmseqs-web-worker_1 | TGAAACGGCCCCCAC	886; mmseqs-web-worker_1 | CCCCCAAGGGACAGT	883; mmseqs-web-worker_1 | GGGTAGTCCGCAGGC	882; mmseqs-web-worker_1 | TTGGTAAGCCACGGC	882; mmseqs-web-worker_1 | GGGGCAGCGTGATTT	882; mmseqs-web-worker_1 | TGGTAAGTCCAGACG	882; mmseqs-web-worker_1 | AACGATTAATCGGAG	865; mmseqs-web-worker_1 | ATTAGGGGCCAAACG	855; mmseqs-web-worker_1 | TTCAGCAAGCGACTT	854; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:19628,Availability,mask,mask,19628,"--use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | [=================================================================] 1 0s 5ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 6ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/q_orfs_aa /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:19637,Availability,mask,mask-lower-case,19637,"--use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | [=================================================================] 1 0s 5ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 6ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/q_orfs_aa /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:20191,Availability,Error,Error,20191,"203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /ticket HTTP/1.0"" 200 67; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /tickets HTTP/1.0"" 200 137; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 67; mmseqs-web-worker_1 | Tmp /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp folder does not exist or is not a directory.; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/job.fasta /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query --dbtype 0 --shuffle 0 --createdb-mode 0 --id-offset 0 --compresse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:20236,Availability,Error,Error,20236,"203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /ticket HTTP/1.0"" 200 67; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /tickets HTTP/1.0"" 200 137; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 67; mmseqs-web-worker_1 | Tmp /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp folder does not exist or is not a directory.; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/job.fasta /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query --dbtype 0 --shuffle 0 --createdb-mode 0 --id-offset 0 --compresse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:20283,Availability,Error,Error,20283,"203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /ticket HTTP/1.0"" 200 67; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /tickets HTTP/1.0"" 200 137; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 67; mmseqs-web-worker_1 | Tmp /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp folder does not exist or is not a directory.; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/job.fasta /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query --dbtype 0 --shuffle 0 --createdb-mode 0 --id-offset 0 --compresse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:20355,Availability,Error,Error,20355,"203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /ticket HTTP/1.0"" 200 67; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""POST /tickets HTTP/1.0"" 200 137; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:17 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 67; mmseqs-web-worker_1 | Tmp /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp folder does not exist or is not a directory.; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/job.fasta /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query --dbtype 0 --shuffle 0 --createdb-mode 0 --id-offset 0 --compresse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:22936,Availability,mask,mask,22936,"bs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:22945,Availability,mask,mask-lower-case,22945,"bs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:31728,Availability,error,error,31728,"rt,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | 2022/09/22 23:07:17 Process finished gracefully without error; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 68; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/type/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 18; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""POST /tickets HTTP/1.0"" 200 138; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/queries/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/7/0 HTTP/1.0"" 200 63; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/0 HTTP/1.0"" 200 126; ```. ## Context; On a weekly basis, some new sequences are added to the FAS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:32529,Availability,error,errors,32529,"Z-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | 2022/09/22 23:07:17 Process finished gracefully without error; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 68; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /ticket/type/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A HTTP/1.0"" 200 18; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""POST /tickets HTTP/1.0"" 200 138; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/queries/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/7/0 HTTP/1.0"" 200 63; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:07:18 +0000] ""GET /result/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/0 HTTP/1.0"" 200 126; ```. ## Context; On a weekly basis, some new sequences are added to the FASTA file. This week, RNA searching stopped working and seems to report errors for all queries. We didn't make any version changes and have been using mmseqs via MMseqs2-App v5 for a long time. Last week's data now shows the same behavior (but was fine a week ago). Indexing for protein and DNA sequences still works as expected. DNA k-mers have size 15. I find it peculiar that the top k-mers for RNA sequences don't contain any U (or T), as it was the case previously. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; docker image distributed by MMseqs2-App. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; N/A. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 2 CPUs, 16 GB me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:393,Deployability,Install,Install,393,## Expected Behavior. - indexdb command should process RNA sequences and report k-mers of size 15; - a search with a RNA sequence on this database should finish gracefully. ## Current Behavior. - indexdb on RNA sequences treats them as protein sequence (?) and creates k-mers of size 6; - a search with a RNA sequence on this database results in an error. ## Steps to Reproduce (for bugs). 1. Install v5-2e4efbf of MMseqs2-App; ```; cd /opt/mmseqs; git clone https://github.com/soedinglab/MMseqs2-App.git; cd MMseqs2-App; git checkout v5-2e4efbf; ```; 3. Create `/opt/mmseqs/MMseqs2-App/docker-compose/databases/pdb_rna_sequence.fasta` with some test RNA sequences:; ```; >4QEI_2; GCGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG; >6Q8V_1; GGCGAAGAACCGGGGAGCC; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; >1VQL_1; UUGGCUACUAUGCCAGCUGGUGGAUUGCUCGGCUCAGGCGCUGAUGAAGGACGUGCCAAGCUGCGAUAAGCCAUGGGGAGCCGCACGGAGGCGAAGAACCAUGGAUUUCCGAAUGAGAAUCUCUCUAACAAUUGCUUCGCGCAAUGAGGAACCCCGAGAACUGAAACAUCUCAGUAUCGGGAGGAACAGAAAACGCAAUGUGAUGUCGUUAGUAACCGCGAGUGAACGCGAUACAGCCCAAACCGAAGCCCUCACGGGCAAUGUGGUGUCAGGGCUACCUCUCAUCAGCCGACCGUCUCGACGAAGUCUCUUGGAACAGAGCGUGAUACAGGGUGACAACCCCGUACUCGAGACCAGUACGACGUGCGGUAGUGCCAGAGUAGCGGGGGUUGGAUAUCCCUCGCGAAUAACGCAGGCAUCGACUGCGAAGGCUAAACACAACCUGAGACCGAUAGUGAACAAGUAGUGUGAACGAACGCUGCAAAGUACCCUCAGAAGGGAGGCGAAAUAGAGCAUGAAAUCAGUUGGCGAUCGAGCGACAGGGCAUACAAGGUCCCUCGACGAAUGACCGACGCGCGAGCGUCCAGUAAGACUCACGGGAAGCCGAUGUUCUGUCGUACGUUUUGAAAAACGAGCCAGGGAGUGUGUCUGCAUGGCAAGUCUAACCGGAGUAUCCGGGGAGGCACAGGGAAACCGACAUGGCCGCAGGGCUUUGCCCGAGGGCCGCCGUCUUCAAGGGCGGGGAGCCAUGUGGACACGACCCGAAUCCGGACGAUCUACGCAUGGACAAGAUGAAGCGUGCCGAAAGGCACGUGGAAGUCUGUUAGAGUUGGUGUCCUACAAUACCCUCUCGUGAUCUAUGUGUAGGGGUGAAAGGCCCAUCGAGUCCGGCAACAGCUGGUUCCAAUCGAAACAUGUCGAAGCAUGACCUCCGCCGAGGUAGUCUGUGAGGUAGAGCGACCGAUUGGUGUGUCCGCCUCCGAGAGGAGUCGGCACACCUGUCAAACUCCAAACUUACAGACGCCGUUUGACGCGGGGAUUCCGGUGCGCGGGGUAAGCCUGUGUACCAGGAGGGGAACAACCCAGAGAUAGGUUAAGGUCCCCAAGUGUGGAUUAAGUGUAAUCCUCUGAAGGUGGUCUCGAGCCCUAGACAGCCGGGAGGUGAGCUUAGAAG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:11447,Energy Efficiency,consumption,consumption,11447,"pdb_rna_sequence_h: 0h 0m 0s 12ms; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence: 0h 0m 0s 9ms; mmseqs-web-worker_1 | Database type: Aminoacid; mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 60ms; mmseqs-web-worker_1 | indexdb /opt/mmseqs-web/databases/pdb_rna_sequence /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 1023M; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 918ms; mmseqs-web-worker_1 | Index table: Masked residues: 4422171; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.79K 0s 61ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 40961; mmseqs-web-worker_1 | DB size: 488 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.000640; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | AAGAGA	872; mmseqs-web-worker_1 | CGGACA	532; mmseqs-web-worker_1 | AAGACG	524; mmseqs-web-worker_1 | AGAGCC	460; mmseqs-web-worker_1 | AAGCGC	4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:14220,Energy Efficiency,consumption,consumption,14220,"er_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Write HDR2INDEX (20); mmseqs-web-worker_1 | Write HDR2DATA (21); mmseqs-web-worker_1 | Write GENERATOR (22); mmseqs-web-worker_1 | Index table: counting k-mers; mmseqs-web-worker_1 | [=================================================================] 10.75K 1s 426ms; mmseqs-web-worker_1 | Index table: Masked residues: 29698; mmseqs-web-worker_1 | Index table: fill; mmseqs-web-worker_1 | [=================================================================] 10.75K 0s 783ms; mmseqs-web-worker_1 | Index statistics; mmseqs-web-worker_1 | Entries: 6377423; mmseqs-web-worker_1 | DB size: 8228 MB; mmseqs-web-worker_1 | Avg k-mer size: 0.005939; mmseqs-web-worker_1 | Top 10 k-mers; mmseqs-web-worker_1 | GAGTGGTTAGGCGGA	1170; mmseqs-web-worker_1 | TGAAACGGCCCCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:23401,Energy Efficiency,consumption,consumption,23401,"41378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0.120000 k-mers per position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 queries produce too much hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:24959,Integrability,wrap,wrapped-scoring,24959,"er position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 queries produce too much hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:9508,Modifiability,config,config,9508,"ed newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:9549,Modifiability,config,config,9549,"ed newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:9579,Modifiability,config,config,9579,"ting docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:25254,Modifiability,extend,extend,25254,"_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 37ms; mmseqs-web-worker_1 | Remove temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:30540,Modifiability,extend,extend,30540,"9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs_aa ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/alis_pdb_rna_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:19726,Performance,load,load-mode,19726,"--use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | [=================================================================] 1 0s 5ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 6ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/q_orfs_aa /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:23034,Performance,load,load-mode,23034,"bs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:25190,Performance,load,load-mode,25190," hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:27865,Performance,load,load-mode,27865,427893312161071/search_tmp/7042327585447941378/search/input_0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/aln_merge -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 2 --compressed 0 --db-load-mode 2 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Computing ORF lookup; mmseqs-web-worker_1 | Computing contig offsets; mmseqs-web-worker_1 | Computing contig lookup; mmseqs-web-worker_1 | Time for contig lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Writing results to: /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result; mmseqs-web-worker_1 | [==============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:30568,Performance,load,load-mode,30568,"9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs_aa ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/alis_pdb_rna_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:646,Testability,test,test,646,fasta` with some test RNA sequences:; ```; >4QEI_2; GCGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG; >6Q8V_1; GGCGAAGAACCGGGGAGCC; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; >1VQL_1; UUGGCUACUAUGCCAGCUGGUGGAUUGCUCGGCUCAGGCGCUGAUGAAGGACGUGCCAAGCUGCGAUAAGCCAUGGGGAGCCGCACGGAGGCGAAGAACCAUGGAUUUCCGAAUGAGAAUCUCUCUAACAAUUGCUUCGCGCAAUGAGGAACCCCGAGAACUGAAACAUCUCAGUAUCGGGAGGAACAGAAAACGCAAUGUGAUGUCGUUAGUAACCGCGAGUGAACGCGAUACAGCCCAAACCGAAGCCCUCACGGGCAAUGUGGUGUCAGGGCUACCUCUCAUCAGCCGACCGUCUCGACGAAGUCUCUUGGAACAGAGCGUGAUACAGGGUGACAACCCCGUACUCGAGACCAGUACGACGUGCGGUAGUGCCAGAGUAGCGGGGGUUGGAUAUCCCUCGCGAAUAACGCAGGCAUCGACUGCGAAGGCUAAACACAACCUGAGACCGAUAGUGAACAAGUAGUGUGAACGAACGCUGCAAAGUACCCUCAGAAGGGAGGCGAAAUAGAGCAUGAAAUCAGUUGGCGAUCGAGCGACAGGGCAUACAAGGUCCCUCGACGAAUGACCGACGCGCGAGCGUCCAGUAAGACUCACGGGAAGCCGAUGUUCUGUCGUACGUUUUGAAAAACGAGCCAGGGAGUGUGUCUGCAUGGCAAGUCUAACCGGAGUAUCCGGGGAGGCACAGGGAAACCGACAUGGCCGCAGGGCUUUGCCCGAGGGCCGCCGUCUUCAAGGGCGGGGAGCCAUGUGGACACGACCCGAAUCCGGACGAUCUACGCAUGGACAAGAUGAAGCGUGCCGAAAGGCACGUGGAAGUCUGUUAGAGUUGGUGUCCUACAAUACCCUCUCGUGAUCUAUGUGUAGGGGUGAAAGGCCCAUCGAGUCCGGCAACAGCUGGUUCCAAUCGAAACAUGUCGAAGCAUGACCUCCGCCGAGGUAGUCUGUGAGGUAGAGCGACCGAUUGGUGUGUCCGCCUCCGAGAGGAGUCGGCACACCUGUCAAACUCCAAACUUACAGACGCCGUUUGACGCGGGGAUUCCGGUGCGCGGGGUAAGCCUGUGUACCAGGAGGGGAACAACCCAGAGAUAGGUUAAGGUCCCCAAGUGUGGAUUAAGUGUAAUCCUCUGAAGGUGGUCUCGAGCCCUAGACAGCCGGGAGGUGAGCUUAGAAG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/611:13698,Testability,log,logs,13698,"386; mmseqs-web-worker_1 | GCGCAG	385; mmseqs-web-worker_1 | AACAGG	323; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.idx: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 3s 688ms; mmseqs-web-worker_1 | touchdb /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version:	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Writ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611
https://github.com/soedinglab/MMseqs2/issues/612:50,Deployability,pipeline,pipeline,50,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612
https://github.com/soedinglab/MMseqs2/issues/612:646,Deployability,Pipeline,Pipeline,646,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612
https://github.com/soedinglab/MMseqs2/issues/612:224,Safety,sanity check,sanity check,224,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612
https://github.com/soedinglab/MMseqs2/issues/612:802,Safety,Sanity Check,Sanity Check,802,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612
https://github.com/soedinglab/MMseqs2/issues/613:429,Availability,error,error,429,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613
https://github.com/soedinglab/MMseqs2/issues/613:536,Availability,Error,Error,536,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613
https://github.com/soedinglab/MMseqs2/issues/613:569,Availability,Error,Error,569,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613
https://github.com/soedinglab/MMseqs2/issues/613:499,Energy Efficiency,allocate,allocate,499,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613
https://github.com/soedinglab/MMseqs2/issues/613:654,Testability,log,log,654,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613
https://github.com/soedinglab/MMseqs2/issues/613:665,Testability,log,log,665,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613
https://github.com/soedinglab/MMseqs2/issues/613:726,Testability,log,log,726,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613
https://github.com/soedinglab/MMseqs2/issues/614:933,Integrability,message,message,933,"I'm upgrading a snake workflow that uses an older version of mmseqs (bc080d753c826a3f9153310f9e12b66976fba905) to a newer one (b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2). I'm having some trouble getting old commands to work with the newer version. For the taxonomy call:; ```; mmseqs taxonomy <i:queryDB> <i:targetDB> <o:taxaDB> <tmpDir> [options]; ```; I'm using a targetDB that was generated with the old version, so I wondered if that could be an issue. But remaking the targetDB with the new version didn't fix it in a previous attempt. ## Expected Behavior. Convert alignment results into an .m8 formatted file. Exactly like shandley was trying to do in this issue:; https://github.com/soedinglab/MMseqs2/issues/226. ## Current Behavior. I'm following the commands given in the solution to this issue here: https://github.com/soedinglab/MMseqs2/issues/226. While the taxonomy call works fine, the convertalis call fails with the message:; [Backtrace cigar is missing in the alignment result. Please recompute the alignment with the -a flag. ## Steps to Reproduce (for bugs). Used the commands given as the solution to this issue:; https://github.com/soedinglab/MMseqs2/issues/226. This has worked fine for the older version of mmseqs2, but no longer works with the new version. This taxonomy call produces output files in taxonomyResult with 10 columns:. ```; mmseqs taxonomy \; seqtable_queryDB \; targetDB \; taxonomyResult \; tmp_aa \; -a \; -s 7 \; --tax-output-mode 1 \; --search-type 2 \; --threads 16; ```. Next I try to convert the taxonomyResult to .m8 using mmseqs convertalis, which fails. ```; mmseqs convertalis \; seqtable_queryDB \; targetDB \; taxonomyResult \; aln.m8 \; --format-output ""query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln""; ````. ## MMseqs Output (for bugs). [Backtrace cigar is missing in the alignment result. Please recompute the alignment with the -a flag.; Command: mmseqs align results/results/mmseqs_aa_out/seqtable_q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/614
https://github.com/soedinglab/MMseqs2/issues/616:111,Availability,error,error,111,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:163,Availability,error,error,163,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:239,Availability,error,error,239,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:1764,Availability,Mask,Mask,1764,"de 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:1781,Availability,Mask,Mask,1781,"de 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:1812,Availability,Mask,Mask,1812,"prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:2791,Availability,Mask,Mask,2791," results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:2808,Availability,Mask,Mask,2808," results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:2839,Availability,Mask,Mask,2839,"; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:3674,Availability,mask,mask,3674,"t,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 19",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:3683,Availability,mask,mask-prob,3683,"t,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 19",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:3699,Availability,mask,mask-lower-case,3699,"ositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosity 3; Threads 4; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEX",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:4276,Availability,Mask,Masked,4276,"lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score bias 0; Compositional bias 1; Co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:3874,Energy Efficiency,consumption,consumption,3874," codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Compressed 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Strand selection 1; Remove temporary files true. indexdb db/human db/human --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 1 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 4 . Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:169,Integrability,message,messages,169,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:245,Integrability,message,message,245,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:706,Performance,load,load-mode,706,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:963,Performance,load,load-mode,963,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/616:4978,Performance,load,load-mode,4978,"Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score bias 0; Compositional bias 1; Compositional bias 1; E-value threshold inf; Seq. id. threshold 0; Coverage threshold 0; Coverage mode 0; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Expand filter clusters 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.95; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Preload mode 1; Compressed 0; Threads 4; Verbosity 3. Index version: 16; Generated by: 8799829d213f31b647fc69e0572a0c828c5aaf63; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 8799829d213f31b647fc69e0572a0c828c5aaf63; ScoreMatrix: VTML80.out; Invalid database ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616
https://github.com/soedinglab/MMseqs2/issues/617:188,Availability,error,error,188,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/617:280,Availability,fault,fault,280,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/617:432,Availability,Error,Error,432,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/617:919,Availability,Error,Error,919,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/617:1020,Deployability,pipeline,pipeline,1020,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/617:151,Testability,test,tested,151,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/617:665,Testability,log,log,665,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/617:925,Testability,log,log,925,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617
https://github.com/soedinglab/MMseqs2/issues/618:354,Availability,mask,mask,354,"## Expected Behavior; Align 2Gb sequence to 1Gb vertebrate genome like BLASTN.; ## Current Behavior; Stuck on `prefilter` for days.; ## Steps to Reproduce (for bugs); The command I used is:; ```; mmseqs easy-search ${Query} ${Target} altseq.toref tmp --min-seq-id 0.9 -c 0.8 --cov-mode 1 --max-seq-len 100000000 --exact-kmer-matching 1 --search-type 3 --mask 0 --threads 16 --split-memory-limit 96G --format-output query,target,fident,nident,qcov,tcov,evalue,bits; ```. ## Context; Considering the ultra-fast speed of MMseqs2, I want to use MMseqs2 to replace BLASTN in my pipeline. In my case, the reference genome is about 1 Gb (max chromosome ~45Mb), and the query sequences are about 2 Gb (max length: ~3.5Mb, mean length:~60Kb). Could I do this with MMseqs2? If so, what parameters do I need to adjust? and how long should I expect to complete this alignment?. ## Your Environment; * MMseqs2 Version: 13.45111. Build by conda. **Server specifications**; * 64bit: Yes; * AVX2: Yes; * SSE4.1: Yes; * 40 Cores; * 768 GB RAM. **Operating system and version:**; * openSUSE Leap 15.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/618
https://github.com/soedinglab/MMseqs2/issues/618:573,Deployability,pipeline,pipeline,573,"## Expected Behavior; Align 2Gb sequence to 1Gb vertebrate genome like BLASTN.; ## Current Behavior; Stuck on `prefilter` for days.; ## Steps to Reproduce (for bugs); The command I used is:; ```; mmseqs easy-search ${Query} ${Target} altseq.toref tmp --min-seq-id 0.9 -c 0.8 --cov-mode 1 --max-seq-len 100000000 --exact-kmer-matching 1 --search-type 3 --mask 0 --threads 16 --split-memory-limit 96G --format-output query,target,fident,nident,qcov,tcov,evalue,bits; ```. ## Context; Considering the ultra-fast speed of MMseqs2, I want to use MMseqs2 to replace BLASTN in my pipeline. In my case, the reference genome is about 1 Gb (max chromosome ~45Mb), and the query sequences are about 2 Gb (max length: ~3.5Mb, mean length:~60Kb). Could I do this with MMseqs2? If so, what parameters do I need to adjust? and how long should I expect to complete this alignment?. ## Your Environment; * MMseqs2 Version: 13.45111. Build by conda. **Server specifications**; * 64bit: Yes; * AVX2: Yes; * SSE4.1: Yes; * 40 Cores; * 768 GB RAM. **Operating system and version:**; * openSUSE Leap 15.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/618
https://github.com/soedinglab/MMseqs2/issues/622:22,Availability,Down,Download,22,## Expected Behavior; Download ResFinder database with; ```; mmseqs databases Resfinder /home/database/Resfinder /home/database/tmp_Resfinder; ```; ## Current Behavior; ```; Error: createdb died; ```. ## MMseqs Output (for bugs); ```; databases Resfinder /home/database/Resfinder /home/database/tmp_Resfinder . MMseqs Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 96; Verbosity 3. createdb /home/database/tmp_Resfinder/6305220775298885891/aminoglycoside.fsa /home/database/tmp_Resfinder/6305220775298885891/beta-lactam.fsa /home/database/tmp_Resfinder/6305220775298885891/colistin.fsa /home/database/tmp_Resfinder/6305220775298885891/fosfomycin.fsa /home/database/tmp_Resfinder/6305220775298885891/fusidicacid.fsa /home/database/tmp_Resfinder/6305220775298885891/glycopeptide.fsa /home/database/tmp_Resfinder/6305220775298885891/macrolide.fsa /home/database/tmp_Resfinder/6305220775298885891/misc.fsa /home/database/tmp_Resfinder/6305220775298885891/nitroimidazole.fsa /home/database/tmp_Resfinder/6305220775298885891/oxazolidinone.fsa /home/database/tmp_Resfinder/6305220775298885891/phenicol.fsa /home/database/tmp_Resfinder/6305220775298885891/pseudomonicacid.fsa /home/database/tmp_Resfinder/6305220775298885891/quinolone.fsa /home/database/tmp_Resfinder/6305220775298885891/rifampicin.fsa /home/database/tmp_Resfinder/6305220775298885891/sulphonamide.fsa /home/database/tmp_Resfinder/6305220775298885891/tetracycline.fsa /home/database/tmp_Resfinder/6305220775298885891/trimethoprim.fsa /home/database/Resfinder --compressed 0 -v 3 . Converting sequences; [Fasta entry 2460 is invalid]; Error: createdb died; ```; ## Context; Annotation of genes with database ResFinder. ## Your Environment; Ubuntu 20.04.5 LTS; Architecture x86/64; RAM (MiB): 638976; vCPU: 96,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/622
https://github.com/soedinglab/MMseqs2/issues/622:174,Availability,Error,Error,174,## Expected Behavior; Download ResFinder database with; ```; mmseqs databases Resfinder /home/database/Resfinder /home/database/tmp_Resfinder; ```; ## Current Behavior; ```; Error: createdb died; ```. ## MMseqs Output (for bugs); ```; databases Resfinder /home/database/Resfinder /home/database/tmp_Resfinder . MMseqs Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 96; Verbosity 3. createdb /home/database/tmp_Resfinder/6305220775298885891/aminoglycoside.fsa /home/database/tmp_Resfinder/6305220775298885891/beta-lactam.fsa /home/database/tmp_Resfinder/6305220775298885891/colistin.fsa /home/database/tmp_Resfinder/6305220775298885891/fosfomycin.fsa /home/database/tmp_Resfinder/6305220775298885891/fusidicacid.fsa /home/database/tmp_Resfinder/6305220775298885891/glycopeptide.fsa /home/database/tmp_Resfinder/6305220775298885891/macrolide.fsa /home/database/tmp_Resfinder/6305220775298885891/misc.fsa /home/database/tmp_Resfinder/6305220775298885891/nitroimidazole.fsa /home/database/tmp_Resfinder/6305220775298885891/oxazolidinone.fsa /home/database/tmp_Resfinder/6305220775298885891/phenicol.fsa /home/database/tmp_Resfinder/6305220775298885891/pseudomonicacid.fsa /home/database/tmp_Resfinder/6305220775298885891/quinolone.fsa /home/database/tmp_Resfinder/6305220775298885891/rifampicin.fsa /home/database/tmp_Resfinder/6305220775298885891/sulphonamide.fsa /home/database/tmp_Resfinder/6305220775298885891/tetracycline.fsa /home/database/tmp_Resfinder/6305220775298885891/trimethoprim.fsa /home/database/Resfinder --compressed 0 -v 3 . Converting sequences; [Fasta entry 2460 is invalid]; Error: createdb died; ```; ## Context; Annotation of genes with database ResFinder. ## Your Environment; Ubuntu 20.04.5 LTS; Architecture x86/64; RAM (MiB): 638976; vCPU: 96,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/622
https://github.com/soedinglab/MMseqs2/issues/622:1697,Availability,Error,Error,1697,## Expected Behavior; Download ResFinder database with; ```; mmseqs databases Resfinder /home/database/Resfinder /home/database/tmp_Resfinder; ```; ## Current Behavior; ```; Error: createdb died; ```. ## MMseqs Output (for bugs); ```; databases Resfinder /home/database/Resfinder /home/database/tmp_Resfinder . MMseqs Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 96; Verbosity 3. createdb /home/database/tmp_Resfinder/6305220775298885891/aminoglycoside.fsa /home/database/tmp_Resfinder/6305220775298885891/beta-lactam.fsa /home/database/tmp_Resfinder/6305220775298885891/colistin.fsa /home/database/tmp_Resfinder/6305220775298885891/fosfomycin.fsa /home/database/tmp_Resfinder/6305220775298885891/fusidicacid.fsa /home/database/tmp_Resfinder/6305220775298885891/glycopeptide.fsa /home/database/tmp_Resfinder/6305220775298885891/macrolide.fsa /home/database/tmp_Resfinder/6305220775298885891/misc.fsa /home/database/tmp_Resfinder/6305220775298885891/nitroimidazole.fsa /home/database/tmp_Resfinder/6305220775298885891/oxazolidinone.fsa /home/database/tmp_Resfinder/6305220775298885891/phenicol.fsa /home/database/tmp_Resfinder/6305220775298885891/pseudomonicacid.fsa /home/database/tmp_Resfinder/6305220775298885891/quinolone.fsa /home/database/tmp_Resfinder/6305220775298885891/rifampicin.fsa /home/database/tmp_Resfinder/6305220775298885891/sulphonamide.fsa /home/database/tmp_Resfinder/6305220775298885891/tetracycline.fsa /home/database/tmp_Resfinder/6305220775298885891/trimethoprim.fsa /home/database/Resfinder --compressed 0 -v 3 . Converting sequences; [Fasta entry 2460 is invalid]; Error: createdb died; ```; ## Context; Annotation of genes with database ResFinder. ## Your Environment; Ubuntu 20.04.5 LTS; Architecture x86/64; RAM (MiB): 638976; vCPU: 96,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/622
https://github.com/soedinglab/MMseqs2/issues/623:196,Deployability,configurat,configuration,196,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623
https://github.com/soedinglab/MMseqs2/issues/623:196,Modifiability,config,configuration,196,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623
https://github.com/soedinglab/MMseqs2/issues/623:328,Testability,test,test,328,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623
https://github.com/soedinglab/MMseqs2/issues/624:1465,Availability,error,error,1465,"Dear developers; Is it possible to replace nt.fna.taxidmapping with a standard one (taxidmapfile)?. ```; http://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz; sed '1d' nucl_gb.accession2taxid | awk '{print $2"" ""$3}' > taxidmapfile; ```. Then ; ```; mmseqs createdb nt.fna nt.fnaDB; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file taxidmapfile --threads 16; mmseqs createindex nt.fnaDB tmp --threads 16; ```. ```; mmseqs createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16; Create directory /media/sergey/Disk_4/MMseq2_DB/tmp; createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16. MMseqs Version: 13.45111; NCBI tax dump directory /media/sergey/Disk_4/taxonomy/; Taxonomy mapping file /media/sergey/Disk_4/taxidmapfile; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 16; Verbosity 3. sh: 0: getcwd() failed: No such file or directory; Loading nodes file ... Done, got 2449198 nodes; Loading merged file ... Done, added 69078 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```. MMseqs2 Version: 13.45111; RAM 32Gb + Swp 20 Gb. When using the command to limit memory, I get the following error; Unrecognized parameter ""--split-memory-limit"".",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/624
https://github.com/soedinglab/MMseqs2/issues/624:1191,Performance,Load,Loading,1191,"Dear developers; Is it possible to replace nt.fna.taxidmapping with a standard one (taxidmapfile)?. ```; http://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz; sed '1d' nucl_gb.accession2taxid | awk '{print $2"" ""$3}' > taxidmapfile; ```. Then ; ```; mmseqs createdb nt.fna nt.fnaDB; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file taxidmapfile --threads 16; mmseqs createindex nt.fnaDB tmp --threads 16; ```. ```; mmseqs createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16; Create directory /media/sergey/Disk_4/MMseq2_DB/tmp; createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16. MMseqs Version: 13.45111; NCBI tax dump directory /media/sergey/Disk_4/taxonomy/; Taxonomy mapping file /media/sergey/Disk_4/taxidmapfile; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 16; Verbosity 3. sh: 0: getcwd() failed: No such file or directory; Loading nodes file ... Done, got 2449198 nodes; Loading merged file ... Done, added 69078 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```. MMseqs2 Version: 13.45111; RAM 32Gb + Swp 20 Gb. When using the command to limit memory, I get the following error; Unrecognized parameter ""--split-memory-limit"".",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/624
https://github.com/soedinglab/MMseqs2/issues/624:1239,Performance,Load,Loading,1239,"Dear developers; Is it possible to replace nt.fna.taxidmapping with a standard one (taxidmapfile)?. ```; http://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz; sed '1d' nucl_gb.accession2taxid | awk '{print $2"" ""$3}' > taxidmapfile; ```. Then ; ```; mmseqs createdb nt.fna nt.fnaDB; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file taxidmapfile --threads 16; mmseqs createindex nt.fnaDB tmp --threads 16; ```. ```; mmseqs createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16; Create directory /media/sergey/Disk_4/MMseq2_DB/tmp; createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16. MMseqs Version: 13.45111; NCBI tax dump directory /media/sergey/Disk_4/taxonomy/; Taxonomy mapping file /media/sergey/Disk_4/taxidmapfile; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 16; Verbosity 3. sh: 0: getcwd() failed: No such file or directory; Loading nodes file ... Done, got 2449198 nodes; Loading merged file ... Done, added 69078 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```. MMseqs2 Version: 13.45111; RAM 32Gb + Swp 20 Gb. When using the command to limit memory, I get the following error; Unrecognized parameter ""--split-memory-limit"".",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/624
https://github.com/soedinglab/MMseqs2/issues/624:1296,Performance,Load,Loading,1296,"Dear developers; Is it possible to replace nt.fna.taxidmapping with a standard one (taxidmapfile)?. ```; http://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz; sed '1d' nucl_gb.accession2taxid | awk '{print $2"" ""$3}' > taxidmapfile; ```. Then ; ```; mmseqs createdb nt.fna nt.fnaDB; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file taxidmapfile --threads 16; mmseqs createindex nt.fnaDB tmp --threads 16; ```. ```; mmseqs createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16; Create directory /media/sergey/Disk_4/MMseq2_DB/tmp; createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16. MMseqs Version: 13.45111; NCBI tax dump directory /media/sergey/Disk_4/taxonomy/; Taxonomy mapping file /media/sergey/Disk_4/taxidmapfile; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 16; Verbosity 3. sh: 0: getcwd() failed: No such file or directory; Loading nodes file ... Done, got 2449198 nodes; Loading merged file ... Done, added 69078 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```. MMseqs2 Version: 13.45111; RAM 32Gb + Swp 20 Gb. When using the command to limit memory, I get the following error; Unrecognized parameter ""--split-memory-limit"".",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/624
https://github.com/soedinglab/MMseqs2/issues/625:509,Deployability,release,released,509,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:704,Deployability,release,released,704,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:848,Deployability,install,installed,848,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:2744,Deployability,install,installations,2744,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:611,Integrability,depend,depending,611,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:152,Safety,predict,predicted,152,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:1897,Testability,log,log,1897,"358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/phar",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:2063,Testability,log,log,2063,". # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:2112,Testability,log,log,2112,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:2416,Testability,Log,Log,2416,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:2657,Testability,test,tested,2657,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:2898,Testability,log,log,2898,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:2981,Testability,log,log,2981,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:3014,Testability,log,log,3014,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/625:3097,Testability,log,log,3097,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625
https://github.com/soedinglab/MMseqs2/issues/626:1019,Availability,avail,available,1019,"Hi,. I have a quick question for which I could not find a solution on the manual. ; Is there a way to extract a specific set of sequences (and potentially a specific subsequence region) out of mmseqs2 DB?; From what I have seen, mmseqs view --id-list extract sequences only based on the internal DB id and not the sequence id (e.g that printed on the search output). Is there an easy way to do it? Something like blastdbcmd equivalent?. For example, I have the following hit:; `Uniq65133;size=2; NR_027575.1 0.928 56 4 0 1 56 892 946 2.908E-13 80 58 0.966 573370 Desulfovibrio magneticus gene for 16S rRNA`; ; mmseqs view DB --id-list ""NR_027575.1"" --idx-entry-type 3; `X17276.1 Giant Panda satellite 1 DNA`. Only when I locate the sequence id on the DB.lookup I manage to get the correct seq with view:; mmseqs view DB --id-list 2068063 --idx-entry-type 3; `NR_027575.1 Desulfovibrio magneticus RS-1 16S ribosomal RNA, partial sequenceD43944.2 Desulfovibrio magneticus gene for 16S rRNA `. I don't have the results DB available anymore, so reformatting the results is unfortunately not an option... Any advice?. Sorry if I missed any trivial answer in the user guide :-)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/626
https://github.com/soedinglab/MMseqs2/issues/626:1162,Usability,guid,guide,1162,"Hi,. I have a quick question for which I could not find a solution on the manual. ; Is there a way to extract a specific set of sequences (and potentially a specific subsequence region) out of mmseqs2 DB?; From what I have seen, mmseqs view --id-list extract sequences only based on the internal DB id and not the sequence id (e.g that printed on the search output). Is there an easy way to do it? Something like blastdbcmd equivalent?. For example, I have the following hit:; `Uniq65133;size=2; NR_027575.1 0.928 56 4 0 1 56 892 946 2.908E-13 80 58 0.966 573370 Desulfovibrio magneticus gene for 16S rRNA`; ; mmseqs view DB --id-list ""NR_027575.1"" --idx-entry-type 3; `X17276.1 Giant Panda satellite 1 DNA`. Only when I locate the sequence id on the DB.lookup I manage to get the correct seq with view:; mmseqs view DB --id-list 2068063 --idx-entry-type 3; `NR_027575.1 Desulfovibrio magneticus RS-1 16S ribosomal RNA, partial sequenceD43944.2 Desulfovibrio magneticus gene for 16S rRNA `. I don't have the results DB available anymore, so reformatting the results is unfortunately not an option... Any advice?. Sorry if I missed any trivial answer in the user guide :-)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/626
https://github.com/soedinglab/MMseqs2/issues/627:125,Availability,error,error,125,"I'm trying to create a profile database (and a pre-computed index) for the ColabFold database. However, I keep getting a bus error when running `createindex`. Commands:. ```bash; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/cola",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:558,Availability,Error,Error,558,"I'm trying to create a profile database (and a pre-computed index) for the ColabFold database. However, I keep getting a bus error when running `createindex`. Commands:. ```bash; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/cola",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:855,Availability,mask,mask,855,"I'm trying to create a profile database (and a pre-computed index) for the ColabFold database. However, I keep getting a bus error when running `createindex`. Commands:. ```bash; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/cola",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:864,Availability,mask,mask-prob,864,"I'm trying to create a profile database (and a pre-computed index) for the ColabFold database. However, I keep getting a bus error when running `createindex`. Commands:. ```bash; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/cola",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:880,Availability,mask,mask-lower-case,880,"I'm trying to create a profile database (and a pre-computed index) for the ColabFold database. However, I keep getting a bus error when running `createindex`. Commands:. ```bash; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/cola",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:1424,Availability,error,error,1424,"tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:1506,Availability,Error,Error,1506,"tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:1533,Availability,error,error,1533,"tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:2596,Availability,mask,mask,2596," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:2605,Availability,mask,mask-prob,2605," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:2621,Availability,mask,mask-lower-case,2621," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:3165,Availability,error,error,3165," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:3247,Availability,Error,Error,3247," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:3274,Availability,error,error,3274," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:1122,Energy Efficiency,consumption,consumption,1122,"db_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. Error:; ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/627:2863,Energy Efficiency,consumption,consumption,2863," died; srun: error: nid00316: task 0: Exited with exit code 1; ```. ## Steps to Reproduce (for bugs). ```bash; aria2c -x 16 https://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar zxfv colabfold_envdb_202108.tar.gz; mmseqs tsv2exprofiledb ""colabfold_envdb_202108"" ""colabfold_envdb_202108_db""; # Move database files to a ""colabfold_envdb_202108"" directory; mmseqs result2profile colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_seq colabfold_envdb_202108/colabfold_envdb_202108_db_aln colabfold_envdb_202108/colabfold_envdb_202108_db_profile; mmseqs createindex colabfold_envdb_202108/colabfold_envdb_202108_db_profile tmp --remove-tmp-files 1 -s 3 --split 128 --search-type 2; ```. ## MMseqs Output (for bugs); ```; indexdb colabfold_envdb_202108/colabfold_envdb_202108_db_profile colabfold_envdb_202108/colabfold_envdb_202108_db_profile --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 3 --k-score seq:2147483647,prof:2147483647 --check-compatible 0 --search-type 0 --split 196 --split-memory-limit 0 -v 3 --threads 64. Target split mode. Searching through 196 splits; Estimated memory consumption: 23G; Write VERSION (0); Write META (1); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; tmp/14397750133336515699/createindex.sh: line 56: 15941 Bus error ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; [========================Error: indexdb died; srun: error: nid00316: task 0: Exited with exit code 1; ```; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs2 Version: 4589151554eb83a70ff0c4d04d21b83cabc203e4; * Linux, 128 GB of memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627
https://github.com/soedinglab/MMseqs2/issues/628:263,Usability,simpl,simply,263,"## Expected Behavior; More docs about the pairaln module, which seems to be an important module for the MSA pairing of AlphaFold Multimer. ## Current Behavior; I cannot find any descriptions about what this module do. Does it pair any given sequences? Or it just simply extracts the species descriptions in UniRef30 (wrt the MSA pairing demand in ColabFold)? If this is the case, the naming can be a little bit confusing.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628
https://github.com/soedinglab/MMseqs2/issues/629:704,Availability,error,error,704,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629
https://github.com/soedinglab/MMseqs2/issues/629:479,Deployability,Update,Update,479,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629
https://github.com/soedinglab/MMseqs2/issues/629:89,Performance,cache,cache,89,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629
https://github.com/soedinglab/MMseqs2/issues/629:247,Performance,cache,cache,247,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629
https://github.com/soedinglab/MMseqs2/issues/629:724,Performance,load,load-mode,724,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629
https://github.com/soedinglab/MMseqs2/issues/630:142,Deployability,update,update,142,"Hi, Thanks always for the nice tool!; I have clustered a large sequence set with `mmseqs linclust `, and now I want to add some sequences and update the clustering result with `mmseqs clusterupdate`. But it seemed that `mmseqs clusterupdate` updates clustering results with the `mmseqs cluster` algorithm but not `mmseqs linclust `.; I am guessing this because all the parameters of `mmseqs clusterupdate` match with `mmseqs cluster`, but not `mmseqs linclust `. Is it correct?; Is it possible to update clustering with `mmseqs linclust ` algorithm?. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/630
https://github.com/soedinglab/MMseqs2/issues/630:242,Deployability,update,updates,242,"Hi, Thanks always for the nice tool!; I have clustered a large sequence set with `mmseqs linclust `, and now I want to add some sequences and update the clustering result with `mmseqs clusterupdate`. But it seemed that `mmseqs clusterupdate` updates clustering results with the `mmseqs cluster` algorithm but not `mmseqs linclust `.; I am guessing this because all the parameters of `mmseqs clusterupdate` match with `mmseqs cluster`, but not `mmseqs linclust `. Is it correct?; Is it possible to update clustering with `mmseqs linclust ` algorithm?. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/630
https://github.com/soedinglab/MMseqs2/issues/630:497,Deployability,update,update,497,"Hi, Thanks always for the nice tool!; I have clustered a large sequence set with `mmseqs linclust `, and now I want to add some sequences and update the clustering result with `mmseqs clusterupdate`. But it seemed that `mmseqs clusterupdate` updates clustering results with the `mmseqs cluster` algorithm but not `mmseqs linclust `.; I am guessing this because all the parameters of `mmseqs clusterupdate` match with `mmseqs cluster`, but not `mmseqs linclust `. Is it correct?; Is it possible to update clustering with `mmseqs linclust ` algorithm?. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/630
https://github.com/soedinglab/MMseqs2/issues/632:6859,Availability,fault,fault,6859,"hes 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: line 73: 121353 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTD; B"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died; Error: Search died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 7.4e23d. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; statically-compiled using conda. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Nodes: 1; Cores per node: 128; Memory: 240.00 GB. * Operating system and version:; linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632
https://github.com/soedinglab/MMseqs2/issues/632:6969,Availability,Error,Error,6969,"hes 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: line 73: 121353 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTD; B"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died; Error: Search died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 7.4e23d. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; statically-compiled using conda. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Nodes: 1; Cores per node: 128; Memory: 240.00 GB. * Operating system and version:; linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632
https://github.com/soedinglab/MMseqs2/issues/632:6997,Availability,Error,Error,6997,"hes 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: line 73: 121353 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTD; B"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died; Error: Search died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 7.4e23d. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; statically-compiled using conda. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Nodes: 1; Cores per node: 128; Memory: 240.00 GB. * Operating system and version:; linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632
https://github.com/soedinglab/MMseqs2/issues/632:7019,Availability,Error,Error,7019,"hes 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: line 73: 121353 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTD; B"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died; Error: Search died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 7.4e23d. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; statically-compiled using conda. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Nodes: 1; Cores per node: 128; Memory: 240.00 GB. * Operating system and version:; linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632
https://github.com/soedinglab/MMseqs2/issues/632:5834,Modifiability,extend,extend,5834,"e; join to DB ; Compute Positions ; Replace transitively . Filtering with a filter files.; ..............................................Time for merging files: 0h 0m 0s 668ms; Time for processing: 0h 0m 2s 11ms; Program call:; align contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/52586018941986723; 32/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_filter2 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601; 894198672332/aln --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.99 --seq-id-mode 0 --alt-ali 0 -c 0.6 --cov-mode 1 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --realign; 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632
https://github.com/soedinglab/MMseqs2/issues/632:1371,Performance,perform,performs,1371,"emory. PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs easy-cluster contigs.fasta contigs99 contigs99.tmp --min-seq-id 0.99 -c 0.6 --cov-mode 1. in addition, i think these posts are also relevant ; https://github.com/soedinglab/MMseqs2/issues/617; https://github.com/soedinglab/MMseqs2/issues/608. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Rescore mode 0; Remove hits by seq.id. and coverage false; E-value threshold 0.001; Coverage threshold 0.6; Coverage Mode 1; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Include identical Seq. Id. false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Preload mode 0; Threads 128; Verbosity 3. Prefilter database: contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref; Query database: contigs99.tmp/13034246008736284953/input; Touch data file contigs99.tmp/13034246008736284953/input ... Done.; Target database: contigs99.tmp/13034246008736284953/input; Result database: contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_rescore1; ...............................................; Done.; Time for merging files: 0h 0m 0s 679ms; Time for processing: 0h 0m 1s 529ms; Program call:; clust contigs99.tmp/13034246008736284953/input contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_rescore1 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216; 221615/linclust/5258601894198672332/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 -v 3 . MMseqs Version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632
https://github.com/soedinglab/MMseqs2/issues/632:5769,Performance,load,load-mode,5769,"; Extract n lines 0; Numerical comparison operator ; Numerical comparison value 0; Sort entries 0; Include identical Seq. Id. false; join to DB ; Compute Positions ; Replace transitively . Filtering with a filter files.; ..............................................Time for merging files: 0h 0m 0s 668ms; Time for processing: 0h 0m 2s 11ms; Program call:; align contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/52586018941986723; 32/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_filter2 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601; 894198672332/aln --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.99 --seq-id-mode 0 --alt-ali 0 -c 0.6 --cov-mode 1 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --realign; 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632
https://github.com/soedinglab/MMseqs2/issues/633:208,Availability,error,error,208,"## Expected Behavior; `MMseqs2` should compile successfully. ## Current Behavior; `MMseqs2` does not compile (I am trying to compile it to take advantage of its MPI functionality). `make` terminates with the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633
https://github.com/soedinglab/MMseqs2/issues/633:492,Availability,error,error,492,"## Expected Behavior; `MMseqs2` should compile successfully. ## Current Behavior; `MMseqs2` does not compile (I am trying to compile it to take advantage of its MPI functionality). `make` terminates with the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633
https://github.com/soedinglab/MMseqs2/issues/633:692,Availability,error,error,692,"## Expected Behavior; `MMseqs2` should compile successfully. ## Current Behavior; `MMseqs2` does not compile (I am trying to compile it to take advantage of its MPI functionality). `make` terminates with the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633
https://github.com/soedinglab/MMseqs2/issues/633:1402,Availability,error,error,1402,"h the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 2x Intel(R) Xeon(R) Silver 4214; 187 GB total system memory.; * Operating system and version: Scientific Linux 7.9 (Nitrogen).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633
https://github.com/soedinglab/MMseqs2/issues/633:1493,Availability,avail,available,1493,"h the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 2x Intel(R) Xeon(R) Silver 4214; 187 GB total system memory.; * Operating system and version: Scientific Linux 7.9 (Nitrogen).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633
https://github.com/soedinglab/MMseqs2/issues/633:1321,Deployability,Release,Release,1321,"h the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 2x Intel(R) Xeon(R) Silver 4214; 187 GB total system memory.; * Operating system and version: Scientific Linux 7.9 (Nitrogen).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633
https://github.com/soedinglab/MMseqs2/issues/633:1601,Deployability,install,install,1601,"h the error:; ```; [ 94%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/workflow/EasySearch.cpp.o; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp: In function 'int doeasysearch(int, const char**, const Command&, bool)':; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:34: error: 'easysearch_sh' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; | ^~~~~~~~~~~~~; /path/to/mmseqs2_mpi/src/workflow/EasySearch.cpp:141:49: error: 'easysearch_sh_len' was not declared in this scope; 141 | FileUtil::writeFile(program, easysearch_sh, easysearch_sh_len);; ```; (Indicated here are the last few lines only.). ## Steps to Reproduce (for bugs); Compilation tools:; ```; cmake v3.21.4; gcc v10.2.0; openmpi v4.1.1; git v2.31.1; make v3.82; ```; Clone latest `MMseqs2` version with; ```; git clone https://github.com/soedinglab/MMseqs2.git; ```. Follow compilation instructions for linux as provided [here](https://github.com/soedinglab/mmseqs2/wiki#compile-from-source-under-linux) with the following modification:; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DREQUIRE_OPENMP=0 -DCMAKE_INSTALL_PREFIX=. ..; ```; This results in the error indicated above. ## MMseqs Output (for bugs); Some additional data, if necessary, is available [here](https://gist.github.com/vragh/89c426b70c63248c73ff120757149c9d). ## Context; I'm trying to install `MMseqs2` with MPI capabilities so that I can parallelize a large search over multiple `slurm` nodes on a HPC. ## Your Environment; * Commit: the version I cloned should be equivalent to [[fce06b1](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011)](https://github.com/soedinglab/MMseqs2/commit/fce06b11ceeb2068fc1105400244817d17d9c011) ?; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 2x Intel(R) Xeon(R) Silver 4214; 187 GB total system memory.; * Operating system and version: Scientific Linux 7.9 (Nitrogen).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/633
https://github.com/soedinglab/MMseqs2/issues/634:298,Deployability,install,installed,298,"Hello! . First of all, I must confess that I have been using MMseqs2 for several years now and it has made my life much happier since then :smile:. I just saw that in the latest version you have enabled the option to run a workflow for profile-profile search, which is great news!. However, I have installed that version and have been searching the wiki and help and can't find how to run it. is there a specific command for it or am I missing something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/634
https://github.com/soedinglab/MMseqs2/issues/637:1170,Testability,log,log,1170,"I'm trying to align a custom representation of a protein together with a corresponding substitution matrix. . [aminobert_embedding_no_tokens_mat.txt](https://github.com/soedinglab/MMseqs2/files/9975230/aminobert_embedding_no_tokens_mat.txt) (change file extension to "".out""); [aminobert_embedding_no_tokens_u_seq.txt](https://github.com/soedinglab/MMseqs2/files/9975231/aminobert_embedding_no_tokens_u_seq.txt) (change file extension to "".fasta""). ## Expected Behavior; Compute an Alignment through the easy-search workflow (prefilter + align); ## Current Behavior; Does not compute an Alignment through the easy-search workflow (prefilter + align). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs easy-search aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens.m8 tmp -s 7.5 --sub-mat aminobert_embedding_no_tokens.out --seed-sub-mat aminobert_embedding_no_tokens.out. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqs_easy_search.log](https://github.com/soedinglab/MMseqs2/files/9975251/mmseqs_easy_search.log). ## Your Environment; current mmseqs version, prebuilt, SSE4.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/637
https://github.com/soedinglab/MMseqs2/issues/637:1246,Testability,log,log,1246,"I'm trying to align a custom representation of a protein together with a corresponding substitution matrix. . [aminobert_embedding_no_tokens_mat.txt](https://github.com/soedinglab/MMseqs2/files/9975230/aminobert_embedding_no_tokens_mat.txt) (change file extension to "".out""); [aminobert_embedding_no_tokens_u_seq.txt](https://github.com/soedinglab/MMseqs2/files/9975231/aminobert_embedding_no_tokens_u_seq.txt) (change file extension to "".fasta""). ## Expected Behavior; Compute an Alignment through the easy-search workflow (prefilter + align); ## Current Behavior; Does not compute an Alignment through the easy-search workflow (prefilter + align). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs easy-search aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens.m8 tmp -s 7.5 --sub-mat aminobert_embedding_no_tokens.out --seed-sub-mat aminobert_embedding_no_tokens.out. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqs_easy_search.log](https://github.com/soedinglab/MMseqs2/files/9975251/mmseqs_easy_search.log). ## Your Environment; current mmseqs version, prebuilt, SSE4.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/637
https://github.com/soedinglab/MMseqs2/issues/638:104,Usability,guid,guide,104,Please how do I generate neff of an MSA using Mmseqs? I saw something about that in page 57 of the user guide but not much was discussed on how to get it. Can I get a help on this? Thanks.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/638
https://github.com/soedinglab/MMseqs2/issues/639:394,Availability,redundant,redundant,394,"## Expected Behavior. When aligning assembled proteins to representative sequences of clusters (clustered at 90% amino acid identity) there should be 0 or 1 hit with > 90% identity and >90% coverage. ## Current Behavior. A single protein can align to over 200 representative sequences while fitting the identity and coverage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639
https://github.com/soedinglab/MMseqs2/issues/639:2526,Deployability,Release,Release,2526,"s serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with linclust, so I attempted to cluster de-duplicated sequences from this catalogue with the easy-cluster workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Your Environment. MMseqs2 Release 14-7e284, installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639
https://github.com/soedinglab/MMseqs2/issues/639:2544,Deployability,install,installed,2544,"s serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with linclust, so I attempted to cluster de-duplicated sequences from this catalogue with the easy-cluster workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Your Environment. MMseqs2 Release 14-7e284, installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639
https://github.com/soedinglab/MMseqs2/issues/639:394,Safety,redund,redundant,394,"## Expected Behavior. When aligning assembled proteins to representative sequences of clusters (clustered at 90% amino acid identity) there should be 0 or 1 hit with > 90% identity and >90% coverage. ## Current Behavior. A single protein can align to over 200 representative sequences while fitting the identity and coverage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639
https://github.com/soedinglab/MMseqs2/issues/639:760,Testability,test,tested,760,"## Expected Behavior. When aligning assembled proteins to representative sequences of clusters (clustered at 90% amino acid identity) there should be 0 or 1 hit with > 90% identity and >90% coverage. ## Current Behavior. A single protein can align to over 200 representative sequences while fitting the identity and coverage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639
https://github.com/soedinglab/MMseqs2/issues/639:1317,Testability,Test,Testing,1317,"verage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with linclust, so I attempted to cluster de-dupli",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639
https://github.com/soedinglab/MMseqs2/issues/640:264,Availability,error,error,264,"## Expected Behavior. Expect the `-s` option to work with floats like `4.`. I.e., `-s 4.` does not work, but `-s 4` and `-s 4.0` do work. (Note that the evalue option `-e` does work with all three: `-e 4`, `-e 4.`, and `-e 4.0`.). ## Current Behavior. It gives an error: `Error in argument -s`. ## Steps to Reproduce (for bugs). Does not work. ```; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4.; ```. Does work. ```; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4.0; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4.; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4.0; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4. ... lots of output describing the command line options ... Error in argument -s; ```. ## Your Environment. * commit: 7e2840992948ee89dcc336522dc98a74fe0adf00; * statically compiled: `mmseqs-linux-avx2`; * OS: Ubuntu 22.04.1 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/640
https://github.com/soedinglab/MMseqs2/issues/640:272,Availability,Error,Error,272,"## Expected Behavior. Expect the `-s` option to work with floats like `4.`. I.e., `-s 4.` does not work, but `-s 4` and `-s 4.0` do work. (Note that the evalue option `-e` does work with all three: `-e 4`, `-e 4.`, and `-e 4.0`.). ## Current Behavior. It gives an error: `Error in argument -s`. ## Steps to Reproduce (for bugs). Does not work. ```; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4.; ```. Does work. ```; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4.0; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4.; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4.0; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4. ... lots of output describing the command line options ... Error in argument -s; ```. ## Your Environment. * commit: 7e2840992948ee89dcc336522dc98a74fe0adf00; * statically compiled: `mmseqs-linux-avx2`; * OS: Ubuntu 22.04.1 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/640
https://github.com/soedinglab/MMseqs2/issues/640:903,Availability,Error,Error,903,"## Expected Behavior. Expect the `-s` option to work with floats like `4.`. I.e., `-s 4.` does not work, but `-s 4` and `-s 4.0` do work. (Note that the evalue option `-e` does work with all three: `-e 4`, `-e 4.`, and `-e 4.0`.). ## Current Behavior. It gives an error: `Error in argument -s`. ## Steps to Reproduce (for bugs). Does not work. ```; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4.; ```. Does work. ```; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4; mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4.0; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4.; mmseqs easy-search queries.faa targets.faa out.tsv tmp -e 4.0; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-search queries.faa targets.faa out.tsv tmp -s 4. ... lots of output describing the command line options ... Error in argument -s; ```. ## Your Environment. * commit: 7e2840992948ee89dcc336522dc98a74fe0adf00; * statically compiled: `mmseqs-linux-avx2`; * OS: Ubuntu 22.04.1 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/640
https://github.com/soedinglab/MMseqs2/issues/641:388,Availability,Error,Error,388,"## Expected Behavior; Runs a search with multiple iterations. ## Current Behavior; Running the search with default `--num-iterations` (1) sometimes misses the 100% ID match to the profile query, so I have to rerun. I thought I would just specify `--num-iterations 3`. To clarify, `--num-iterations 1` works, anything greater than 1 fails. `--num-iterations 2` (same for more); I now get ""Error in computePSSMFromMSA. First sequence of MSA is not allowed to contain gaps.; Error: Create profile died"". ## Steps to Reproduce (for bugs); Increasing iterations. ## MMseqs Output (for bugs); [Log](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ca1bf365503e8c3e4e05b2ee8bf8572eec7aabc8/failure_output). [Fasta](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ad892db5ff0937de43402cefed0178fc2629f5ed/cormil3.1.faa) used in `createdb --createdb-mode 1 --shuffle 0` for db prefix cormil3.1.faa. [Alignment for profile model](https://gist.githubusercontent.com/xonq/0da2789fabaf681114dfa6fb674f1666/raw/8ed35a57aa4240ca0015a2442b272a4a8f87a165/ACT1.stk) used `convertmsa`, then `msa2profile --match-mode 1`. ## Context; It fails to retrieve 100% ID hits in some proteomes when searching many seqdbs with a profiledb with one iteration, so I need to increase the iterations, which breaks the search command. . ## Your Environment. MMseqs2 Version: 14.7e284. Compiled from miniconda via Bioconda channel. CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it"". Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641
https://github.com/soedinglab/MMseqs2/issues/641:472,Availability,Error,Error,472,"## Expected Behavior; Runs a search with multiple iterations. ## Current Behavior; Running the search with default `--num-iterations` (1) sometimes misses the 100% ID match to the profile query, so I have to rerun. I thought I would just specify `--num-iterations 3`. To clarify, `--num-iterations 1` works, anything greater than 1 fails. `--num-iterations 2` (same for more); I now get ""Error in computePSSMFromMSA. First sequence of MSA is not allowed to contain gaps.; Error: Create profile died"". ## Steps to Reproduce (for bugs); Increasing iterations. ## MMseqs Output (for bugs); [Log](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ca1bf365503e8c3e4e05b2ee8bf8572eec7aabc8/failure_output). [Fasta](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ad892db5ff0937de43402cefed0178fc2629f5ed/cormil3.1.faa) used in `createdb --createdb-mode 1 --shuffle 0` for db prefix cormil3.1.faa. [Alignment for profile model](https://gist.githubusercontent.com/xonq/0da2789fabaf681114dfa6fb674f1666/raw/8ed35a57aa4240ca0015a2442b272a4a8f87a165/ACT1.stk) used `convertmsa`, then `msa2profile --match-mode 1`. ## Context; It fails to retrieve 100% ID hits in some proteomes when searching many seqdbs with a profiledb with one iteration, so I need to increase the iterations, which breaks the search command. . ## Your Environment. MMseqs2 Version: 14.7e284. Compiled from miniconda via Bioconda channel. CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it"". Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641
https://github.com/soedinglab/MMseqs2/issues/641:588,Testability,Log,Log,588,"## Expected Behavior; Runs a search with multiple iterations. ## Current Behavior; Running the search with default `--num-iterations` (1) sometimes misses the 100% ID match to the profile query, so I have to rerun. I thought I would just specify `--num-iterations 3`. To clarify, `--num-iterations 1` works, anything greater than 1 fails. `--num-iterations 2` (same for more); I now get ""Error in computePSSMFromMSA. First sequence of MSA is not allowed to contain gaps.; Error: Create profile died"". ## Steps to Reproduce (for bugs); Increasing iterations. ## MMseqs Output (for bugs); [Log](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ca1bf365503e8c3e4e05b2ee8bf8572eec7aabc8/failure_output). [Fasta](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ad892db5ff0937de43402cefed0178fc2629f5ed/cormil3.1.faa) used in `createdb --createdb-mode 1 --shuffle 0` for db prefix cormil3.1.faa. [Alignment for profile model](https://gist.githubusercontent.com/xonq/0da2789fabaf681114dfa6fb674f1666/raw/8ed35a57aa4240ca0015a2442b272a4a8f87a165/ACT1.stk) used `convertmsa`, then `msa2profile --match-mode 1`. ## Context; It fails to retrieve 100% ID hits in some proteomes when searching many seqdbs with a profiledb with one iteration, so I need to increase the iterations, which breaks the search command. . ## Your Environment. MMseqs2 Version: 14.7e284. Compiled from miniconda via Bioconda channel. CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it"". Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641
https://github.com/soedinglab/MMseqs2/issues/642:423,Performance,load,load-mode,423,"*Sorry if this is not the correct place to ask!* ; ; I want to use MMseqs2 to find diverse homolgous sequences on which I can then run global MSA alignment. ; I have a bunch of questions after experimenting a bit. ; ; 1. What is the correct way to filter search results? When using 'mmseqs search', why don't the profile filtering options such as --diff or --max-seq-id etc. get applied? ; I'm running: ; `SEARCH_PAR=""--db-load-mode 2 --num-iterations 3 --sort-results 1 -e 0.001 --filter-msa 1 -c 0.75 --cov-mode 2 --max-seq-id 0.9""` ; `mmseqs search queryDB targetDB result_alnDB tmp ${SEARCH_PAR}` ; result_alnDB contains sequences above 0.9 sequence identity to the query. ; To apply filtering I run mmseqs filterresult after my search: ; `mmseqs filterresult queryDB targetDB result_alnDB filtered_alnDB tmp --max-seq-id 0.9` ; ; 2. How does the --diff flag work? The help says it selects the n most diverse sequences in blocks of 50. I would expect --diff 50 to not apply any filtering. ; ; 3. What score does the --qsc flag work on? What does the score range [-50.0,100.0] mean? ; ; 4. What does applying filter buckets with the --qid flag do? I would expect it to return an equal number of hits per bucket. ; ; After searching (and filtering results) I would like to return an unaligned fasta file. ; I do this with: ; `mmseqs createseqfiledb targetDB result_alnDB fastaDB` ; `mmseqs result2flat targetDB targetDB fastaDB fasta_results.fa --use-fasta-header 1`; I subsequently split that file whenever two consecutive lines begin with '^>'. ; ; 5. Why does createseqfiledb create files ending in 0-95 ? How do they belong together? ; ; 6. I originally expect to return fasta output with convert2fasta but that module complains that it needs header information. Running createsubdb before that only returns the representative sequences instead of all results. ; ; 7. Is there a way to add the original query sequence to my fasta output in mmseqs? ; ; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/642
https://github.com/soedinglab/MMseqs2/issues/643:558,Availability,error,error,558,"Hi,. Appologies if this question has already been answered, but I do not seem to find it in the manual and within the entered Issues. I have run a clustering and would like to visualise the clusters in Cytoscape. As far as I know I have to run an all-vs-all search on my clustering results (and converting the results toa BLAST tabulated output) . However, I cannot find a way to do it directly from the clustering results using something like:; ```; mmseqs cluster DB DB_clu tmp; mmseqs search DB_clu DB_clu DB_clu_allvsall tmp; ```; as I get the following error:; ```; Input database ""DB_clu "" has the wrong type (Clustering); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```; Instead, it seems that I have to convert the clustered database to a normal database, i.e.; ```; mmseqs cluster DB DB_clu tmp; mmseqs createseqfiledb DB DB_clu DB_clu_seq ; mmseqs result2flat DB DB DB_clu_seq DB_clu_seq.fasta; mmseqs createdb DB_clu_seq.fasta DB_clu_seq_DB; mmseqs search DB_clu_seq_DB DB_clu_seq_DB DB_clu_allvsall tmp; ```; Is it the best way to do it (as it seems a little convoluted)? Or is there a way to do a all-vs-all search directly from the clustered results which would be easier/faster?. Many thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/643
https://github.com/soedinglab/MMseqs2/issues/646:125,Performance,perform,perform,125,"## Expected Behavior; ## Current Behavior; Hi I make a databse from uniprotref 100 (/databases/uniprot/uniref/uniref100) and perform mmseqs easy-search. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs easy-search MySeqs.aa UniprotDB alnRes.m8 tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. alnRes.m8 head ; g3521.t1 UniRef100_A0A2V2UU05 0.991 488 4 0 1 488 1 488 0.000E+00 1044; g3521.t1 UniRef100_Q4DIV5 0.989 488 5 0 1 488 1 488 0.000E+00 1043; g3521.t1 UniRef100_Q4DR82 0.987 488 6 0 1 488 1 488 0.000E+00 1041; g3521.t1 UniRef100_K2MZR3 0.928 488 35 0 1 488 1 488 9.437E-322 988. Now I wish to obtain a description from each ID of the second column (similiar to blastdbcmd command to retrieve description form blastdb using a list of ids. It's possible to retrieve the information from each ID?. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/646
https://github.com/soedinglab/MMseqs2/issues/648:18,Availability,error,error,18,"A bit a of a dumb error on my part but it took a minute for me to figure out what was going on so I wanted to document it here in case it helps someone else. . I was running `mmseqs easy-search` and was trying to set option `-c` but kept getting `Error in argument -c`. Problem was I was using something like `-c .1`, but it requires the leading zero -> `-c 0.1`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/648
https://github.com/soedinglab/MMseqs2/issues/648:247,Availability,Error,Error,247,"A bit a of a dumb error on my part but it took a minute for me to figure out what was going on so I wanted to document it here in case it helps someone else. . I was running `mmseqs easy-search` and was trying to set option `-c` but kept getting `Error in argument -c`. Problem was I was using something like `-c .1`, but it requires the leading zero -> `-c 0.1`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/648
https://github.com/soedinglab/MMseqs2/issues/649:192,Availability,error,error,192,"## Expected Behavior; Append sequence information to generated clusters to have sequence information within each cluster for subsequent analyses. ## Current Behavior; The software returns the error that the clusters are not the right database type . ## Steps to Reproduce (for bugs). mmseqs createdb Uniprot_E_Coli.fasta Ecoli.DB --dbtype 1; mkdir tmp; mmseqs cluster --min-seq-id 0.3 -c 0.9 Ecoli.DB Ecoli.DB_clu tmp; for i in {0..63}; do; mmseqs createseqfiledb Ecoli.DB Ecoli.DB_clu.${i} Ecoli.db_clu_seq; done. ## MMseqs Output (for bugs). MMseqs Version: 14.7e284; Min sequences 1; Max sequences 2147483647; HH format false; Preload mode 0; Threads 64; Compressed 0; Verbosity 3. Input database ""Ecoli.DB_clu.63"" has the wrong type (Generic); Allowed input:; - Alignment; - Prefilter; - Bi-directional prefilter; - Clustering. ## Context. I tried running the code provided above and it returned the error mentioned above for each cluster. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 14.7e284; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): bioconda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE4.1 CPU: AMD EPYC Rome 7302 32 cores, 64 threads, 3GHz. System memory: 1024 GB.; * Operating system and version: ""CentOS Linux 7 (Core)""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/649
https://github.com/soedinglab/MMseqs2/issues/649:904,Availability,error,error,904,"## Expected Behavior; Append sequence information to generated clusters to have sequence information within each cluster for subsequent analyses. ## Current Behavior; The software returns the error that the clusters are not the right database type . ## Steps to Reproduce (for bugs). mmseqs createdb Uniprot_E_Coli.fasta Ecoli.DB --dbtype 1; mkdir tmp; mmseqs cluster --min-seq-id 0.3 -c 0.9 Ecoli.DB Ecoli.DB_clu tmp; for i in {0..63}; do; mmseqs createseqfiledb Ecoli.DB Ecoli.DB_clu.${i} Ecoli.db_clu_seq; done. ## MMseqs Output (for bugs). MMseqs Version: 14.7e284; Min sequences 1; Max sequences 2147483647; HH format false; Preload mode 0; Threads 64; Compressed 0; Verbosity 3. Input database ""Ecoli.DB_clu.63"" has the wrong type (Generic); Allowed input:; - Alignment; - Prefilter; - Bi-directional prefilter; - Clustering. ## Context. I tried running the code provided above and it returned the error mentioned above for each cluster. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 14.7e284; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): bioconda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2/SSE4.1 CPU: AMD EPYC Rome 7302 32 cores, 64 threads, 3GHz. System memory: 1024 GB.; * Operating system and version: ""CentOS Linux 7 (Core)""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/649
https://github.com/soedinglab/MMseqs2/issues/650:351,Performance,load,load-mode,351,"## Expected Behavior; I am trying to generate MSAs by querying uniref50 to uniref30. ## Current Behavior; No output for the expandaln step. ## Steps to Reproduce (for bugs); ```linux; mmseqs createdb uniref50.fasta uniref50QueryDB; sudo vmtouch -t -l -d -w uniref30_2202_db.idx; mmseqs search uniref50QueryDB ../uniref30/uniref30_2202_db res tmp --db-load-mode 2; mmseqs expandaln uniref50QueryDB ../uniref30/uniref30_2202_db res ../uniref30/uniref30_2202_db_aln res_expanded --db-load-mode 2; ```. ## MMseqs Output (for bugs); This is the output for the last step (i.e. expandaln). ```linux; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	0.001; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	64; Verbosity 	3. Alignment must contain a backtrace.; ```; Alignment must contain a backtrace. appears multiple times in red color. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Run under a linux server.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/650
https://github.com/soedinglab/MMseqs2/issues/650:481,Performance,load,load-mode,481,"## Expected Behavior; I am trying to generate MSAs by querying uniref50 to uniref30. ## Current Behavior; No output for the expandaln step. ## Steps to Reproduce (for bugs); ```linux; mmseqs createdb uniref50.fasta uniref50QueryDB; sudo vmtouch -t -l -d -w uniref30_2202_db.idx; mmseqs search uniref50QueryDB ../uniref30/uniref30_2202_db res tmp --db-load-mode 2; mmseqs expandaln uniref50QueryDB ../uniref30/uniref30_2202_db res ../uniref30/uniref30_2202_db_aln res_expanded --db-load-mode 2; ```. ## MMseqs Output (for bugs); This is the output for the last step (i.e. expandaln). ```linux; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	0.001; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	64; Verbosity 	3. Alignment must contain a backtrace.; ```; Alignment must contain a backtrace. appears multiple times in red color. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Run under a linux server.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/650
https://github.com/soedinglab/MMseqs2/issues/651:158,Energy Efficiency,Reduce,Reduced,158,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651
https://github.com/soedinglab/MMseqs2/issues/651:166,Safety,redund,redundancy,166,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651
https://github.com/soedinglab/MMseqs2/issues/651:527,Security,access,access,527,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651
https://github.com/soedinglab/MMseqs2/issues/653:45,Availability,robust,robust,45,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653
https://github.com/soedinglab/MMseqs2/issues/653:198,Integrability,depend,depending,198,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653
https://github.com/soedinglab/MMseqs2/issues/653:646,Security,expose,exposed,646,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653
https://github.com/soedinglab/MMseqs2/issues/653:706,Testability,Assert,Assert,706,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653
https://github.com/soedinglab/MMseqs2/issues/654:314,Availability,error,error,314,"Hi, I am trying to run `alignall` on a clusterDB and it fails due to lacking `diagonal information` in some queries. . Thank you for this awesome piece of software!. ## Expected Behavior; Alignment of all cluster members when clustering a nucleotide fasta file. ## Current Behavior. `mmseqs alignall` dies with an error. ## Steps to Reproduce (for bugs). `tmp.fa` contains 425 nucleotide sequences between 100 kb to ~5 kb. ```; mmseqs createdb tmp.fa db ; mmseqs cluster db clu /tmp/ --max-seqs 1000 --threads 40 --min-seq-id 0.8 -e 0.000010 -c 0.8; mmseqs alignall db clu alignDb -a ; mmseqs createtsv db db clu clu.tsv; ```. ## MMseqs Output (for bugs); `mmseqs alignall db clu alignDb -a ` returns. ```; Query sequence 400 has a result with no diagonal information. Please check your database.; ```. ## Context; I am trying to cluster TE models predicted by RepeatModeler2, so there is likely quite a bit repetitiveness within and across the sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; `MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled as a HPC cluster module. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; I requested a node with 40 CPUs and 160 GB ram for this job. * Operating system and version:; `uname -a` gives:; ```; Linux g-02-c0082 3.10.0-1062.4.1.el7.x86_64 #1 SMP Fri Oct 18 17:15:30 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/654
https://github.com/soedinglab/MMseqs2/issues/654:848,Safety,predict,predicted,848,"Hi, I am trying to run `alignall` on a clusterDB and it fails due to lacking `diagonal information` in some queries. . Thank you for this awesome piece of software!. ## Expected Behavior; Alignment of all cluster members when clustering a nucleotide fasta file. ## Current Behavior. `mmseqs alignall` dies with an error. ## Steps to Reproduce (for bugs). `tmp.fa` contains 425 nucleotide sequences between 100 kb to ~5 kb. ```; mmseqs createdb tmp.fa db ; mmseqs cluster db clu /tmp/ --max-seqs 1000 --threads 40 --min-seq-id 0.8 -e 0.000010 -c 0.8; mmseqs alignall db clu alignDb -a ; mmseqs createtsv db db clu clu.tsv; ```. ## MMseqs Output (for bugs); `mmseqs alignall db clu alignDb -a ` returns. ```; Query sequence 400 has a result with no diagonal information. Please check your database.; ```. ## Context; I am trying to cluster TE models predicted by RepeatModeler2, so there is likely quite a bit repetitiveness within and across the sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; `MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled as a HPC cluster module. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; I requested a node with 40 CPUs and 160 GB ram for this job. * Operating system and version:; `uname -a` gives:; ```; Linux g-02-c0082 3.10.0-1062.4.1.el7.x86_64 #1 SMP Fri Oct 18 17:15:30 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/654
https://github.com/soedinglab/MMseqs2/issues/655:542,Availability,down,download,542,"## Expected Behavior; Symlinks should be created.; ## Current Behavior; Symlinks are not created; ## Steps to Reproduce (for bugs); mmseqs aliasdb uniref30_2202_db_h uniref30_2202_db_seq_h -v 3. ## MMseqs Output (for bugs); aliasdb uniref30_2202_db_h uniref30_2202_db_seq_h -v 3 . MMseqs Version:	ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; Verbosity	3. Could not create symlink of uniref30_2202_db_h!. ## Context; I am trying setup MMseqs2 to run ColabFold locally. I am using the setup_databases.sh script for this. The scripts works well to download the databases but on the line; ```; mmseqs tsv2exprofiledb ""uniref30_2202"" ""uniref30_2202_db""; ```; I get an error i.e. Could not create symlink of uniref30_2202_db_h!; I am posting this here instead of ColabFold because I can also reproduce the error by directly issuing the command. ## Your Environment; I have tried both the latest binary and compiling from source. I would be really grateful for any sugestions.; Best,; Amin.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/655
https://github.com/soedinglab/MMseqs2/issues/655:660,Availability,error,error,660,"## Expected Behavior; Symlinks should be created.; ## Current Behavior; Symlinks are not created; ## Steps to Reproduce (for bugs); mmseqs aliasdb uniref30_2202_db_h uniref30_2202_db_seq_h -v 3. ## MMseqs Output (for bugs); aliasdb uniref30_2202_db_h uniref30_2202_db_seq_h -v 3 . MMseqs Version:	ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; Verbosity	3. Could not create symlink of uniref30_2202_db_h!. ## Context; I am trying setup MMseqs2 to run ColabFold locally. I am using the setup_databases.sh script for this. The scripts works well to download the databases but on the line; ```; mmseqs tsv2exprofiledb ""uniref30_2202"" ""uniref30_2202_db""; ```; I get an error i.e. Could not create symlink of uniref30_2202_db_h!; I am posting this here instead of ColabFold because I can also reproduce the error by directly issuing the command. ## Your Environment; I have tried both the latest binary and compiling from source. I would be really grateful for any sugestions.; Best,; Amin.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/655
https://github.com/soedinglab/MMseqs2/issues/655:797,Availability,error,error,797,"## Expected Behavior; Symlinks should be created.; ## Current Behavior; Symlinks are not created; ## Steps to Reproduce (for bugs); mmseqs aliasdb uniref30_2202_db_h uniref30_2202_db_seq_h -v 3. ## MMseqs Output (for bugs); aliasdb uniref30_2202_db_h uniref30_2202_db_seq_h -v 3 . MMseqs Version:	ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; Verbosity	3. Could not create symlink of uniref30_2202_db_h!. ## Context; I am trying setup MMseqs2 to run ColabFold locally. I am using the setup_databases.sh script for this. The scripts works well to download the databases but on the line; ```; mmseqs tsv2exprofiledb ""uniref30_2202"" ""uniref30_2202_db""; ```; I get an error i.e. Could not create symlink of uniref30_2202_db_h!; I am posting this here instead of ColabFold because I can also reproduce the error by directly issuing the command. ## Your Environment; I have tried both the latest binary and compiling from source. I would be really grateful for any sugestions.; Best,; Amin.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/655
https://github.com/soedinglab/MMseqs2/issues/656:47,Safety,predict,prediction,47,"Hello. I am currently running a variant impact prediction based on MSA.; Recently, an [preprint](https://www.biorxiv.org/content/10.1101/2022.12.13.520259v1.full) was published. . > Alignment-based protein mutational landscape prediction: doing more with less, Marina Abakarova, Céline Marquet, Michael Rera, Burkhard Rost, Elodie Laine, bioRxiv 2022.12.13.520259; doi: https://doi.org/10.1101/2022.12.13.520259. This is that MSAs that can be created in colabfold using mmseqs2 are useful for variant impact prediction. Now that we have our gene database, we would like to run this workflow using our own database.; So we looked at the contents of the colabfold script and found that we need the expandable profile databases that are created by mmseqs2. However, when I looked for how to create this database, I could not find it.; I found the following command on the wiki, which converts already created expandable profile databases, right?; ```; wget http://wwwuser.gwdg.de/~compbiol/colabfold/uniref30_2103.tar.gz; tar xzvf uniref30_2103.tar.gz; mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db; ```. Can you please tell me how to create it?; Thank you in advance. Keigo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/656
https://github.com/soedinglab/MMseqs2/issues/656:227,Safety,predict,prediction,227,"Hello. I am currently running a variant impact prediction based on MSA.; Recently, an [preprint](https://www.biorxiv.org/content/10.1101/2022.12.13.520259v1.full) was published. . > Alignment-based protein mutational landscape prediction: doing more with less, Marina Abakarova, Céline Marquet, Michael Rera, Burkhard Rost, Elodie Laine, bioRxiv 2022.12.13.520259; doi: https://doi.org/10.1101/2022.12.13.520259. This is that MSAs that can be created in colabfold using mmseqs2 are useful for variant impact prediction. Now that we have our gene database, we would like to run this workflow using our own database.; So we looked at the contents of the colabfold script and found that we need the expandable profile databases that are created by mmseqs2. However, when I looked for how to create this database, I could not find it.; I found the following command on the wiki, which converts already created expandable profile databases, right?; ```; wget http://wwwuser.gwdg.de/~compbiol/colabfold/uniref30_2103.tar.gz; tar xzvf uniref30_2103.tar.gz; mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db; ```. Can you please tell me how to create it?; Thank you in advance. Keigo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/656
https://github.com/soedinglab/MMseqs2/issues/656:508,Safety,predict,prediction,508,"Hello. I am currently running a variant impact prediction based on MSA.; Recently, an [preprint](https://www.biorxiv.org/content/10.1101/2022.12.13.520259v1.full) was published. . > Alignment-based protein mutational landscape prediction: doing more with less, Marina Abakarova, Céline Marquet, Michael Rera, Burkhard Rost, Elodie Laine, bioRxiv 2022.12.13.520259; doi: https://doi.org/10.1101/2022.12.13.520259. This is that MSAs that can be created in colabfold using mmseqs2 are useful for variant impact prediction. Now that we have our gene database, we would like to run this workflow using our own database.; So we looked at the contents of the colabfold script and found that we need the expandable profile databases that are created by mmseqs2. However, when I looked for how to create this database, I could not find it.; I found the following command on the wiki, which converts already created expandable profile databases, right?; ```; wget http://wwwuser.gwdg.de/~compbiol/colabfold/uniref30_2103.tar.gz; tar xzvf uniref30_2103.tar.gz; mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db; ```. Can you please tell me how to create it?; Thank you in advance. Keigo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/656
https://github.com/soedinglab/MMseqs2/issues/657:372,Availability,avail,available,372,"Hello,. I have installed mmseqs2 in linux with anaconda with the following command (the one shown in your documentation):; conda install -c conda-forge -c bioconda mmseqs2. Now I am trying to run the following command. mmseqs cluster DB DB_clu tmp --strand 1. In order to consider only the forward and not the reverse strand. However I see that the --strand option is not available. I have found the --strand option in the https://github.com/soedinglab/MMseqs2/blob/master/src/commons/Parameters.cpp file. Is there any way to consider only the forward strand for cluster my data? . Thank you so much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/657
https://github.com/soedinglab/MMseqs2/issues/657:15,Deployability,install,installed,15,"Hello,. I have installed mmseqs2 in linux with anaconda with the following command (the one shown in your documentation):; conda install -c conda-forge -c bioconda mmseqs2. Now I am trying to run the following command. mmseqs cluster DB DB_clu tmp --strand 1. In order to consider only the forward and not the reverse strand. However I see that the --strand option is not available. I have found the --strand option in the https://github.com/soedinglab/MMseqs2/blob/master/src/commons/Parameters.cpp file. Is there any way to consider only the forward strand for cluster my data? . Thank you so much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/657
https://github.com/soedinglab/MMseqs2/issues/657:129,Deployability,install,install,129,"Hello,. I have installed mmseqs2 in linux with anaconda with the following command (the one shown in your documentation):; conda install -c conda-forge -c bioconda mmseqs2. Now I am trying to run the following command. mmseqs cluster DB DB_clu tmp --strand 1. In order to consider only the forward and not the reverse strand. However I see that the --strand option is not available. I have found the --strand option in the https://github.com/soedinglab/MMseqs2/blob/master/src/commons/Parameters.cpp file. Is there any way to consider only the forward strand for cluster my data? . Thank you so much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/657
https://github.com/soedinglab/MMseqs2/issues/658:1504,Availability,down,down,1504," (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:3622,Availability,avail,available,3622,"g). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:3341,Deployability,RELEASE,RELEASE,3341,"h out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:3393,Deployability,install,install,3393,"s 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:3440,Deployability,RELEASE,RELEASE,3440,"s 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:3492,Deployability,install,install,3492,"Mseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CP",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:3941,Deployability,release,release,3941,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:3966,Deployability,Release,Release,3966,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:633,Performance,response time,response time,633,"Some issues / unexpected behavior when running mmseqs search and other features used in colabfold. But the low speed happens in the mmseqs step, so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLT",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:1050,Performance,load,load,1050,"expected behavior when running mmseqs search and other features used in colabfold. But the low speed happens in the mmseqs step, so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:1108,Performance,load,load,1108,", so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:1140,Performance,load,load,1140,", so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:2433,Performance,load,load-mode,2433,"mber of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:4412,Performance,cache,cache,4412,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:4428,Performance,cache,cache,4428,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:4443,Performance,cache,cache,4443,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:4460,Performance,cache,cache,4460,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:2541,Testability,log,log,2541,"D or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/658:2617,Testability,log,log,2617,"e docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, wit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658
https://github.com/soedinglab/MMseqs2/issues/661:706,Deployability,patch,patch,706,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/661:3909,Modifiability,variab,variables,3909," sizeof *state - 1];; ; }; void Random::seed (long x); @@ -73,7 +73,7 @@ void Random::seed (long x); ; // linear congruential initializer; 	for (i = 1; i < sizeof state / sizeof *state; ++i) {; -		state [i] = 1103515245 * state [i - 1] + 12345;; +		state [i] = 1103515245ul * state [i - 1] + 12345ul;; 	}; ; 	rJ = &state [r_off];; @@ -85,7 +85,7 @@ void Random::seed (long x); long Random::number () // uniform random x : 0 <= x <= exp2 (31) - 1; ; {; -	long r;; +	unsigned long r;; ; 	r = *rK;; 	r += *rJ--;; @@ -97,6 +97,6 @@ long Random::number () // uniform random; 			rJ = &state [sizeof state / sizeof *state - 1];; }; 	; - return (r >> 1) &0x7fffffff; // discard the least-random bit; + return (r >> 1) &0x7ffffffful; // discard the least-random bit; }; ```. 3. Instead of [running plain xxd](https://github.com/soedinglab/MMseqs2/blob/master/cmake/MMseqsResourceCompiler.cmake#L35), we generate header files for resource files with the following pattern:; ```; """"""; #ifndef MMSEQS2_XXD_{1}_H_; #define MMSEQS2_XXD_{1}_H_; #include ""mmseqs2/{0}_data.h"". // Use casters to make values act as properties. This is to prevent static variables causing; // ""initialization order fiasco"".; struct {0}_CharCaster {{; operator const unsigned char*() const {{; return reinterpret_cast<const unsigned char*>({0}_data_create()->data);; }}; operator const char*() const {{; return reinterpret_cast<const char*>({0}_data_create()->data);; }}; operator const void*() const {{; return reinterpret_cast<const void*>({0}_data_create()->data);; }}; }};. struct {0}_LenCaster {{; operator unsigned int() const {{; return static_cast<unsigned int>({0}_data_create()->size);; }}; }};. inline constexpr {0}_CharCaster {0};; inline constexpr {0}_LenCaster {0}_len;; ```. where `{0}` is the filename of the respective file. 4. Changing `\n` to `\0` in [this line](https://github.com/soedinglab/MMseqs2/blob/a5d49655330d144788c6e1bf8551d7cc1d356b0c/src/test/TestTranslate.cpp#L15). We hope this is helpful.; Best wishes",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/661:51,Safety,detect,detect,51,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/661:102,Security,sanitiz,sanitizer,102,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/661:123,Security,sanitiz,sanitizer,123,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/661:371,Security,sanitiz,sanitizers,371,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/661:4707,Testability,test,test,4707," sizeof *state - 1];; ; }; void Random::seed (long x); @@ -73,7 +73,7 @@ void Random::seed (long x); ; // linear congruential initializer; 	for (i = 1; i < sizeof state / sizeof *state; ++i) {; -		state [i] = 1103515245 * state [i - 1] + 12345;; +		state [i] = 1103515245ul * state [i - 1] + 12345ul;; 	}; ; 	rJ = &state [r_off];; @@ -85,7 +85,7 @@ void Random::seed (long x); long Random::number () // uniform random x : 0 <= x <= exp2 (31) - 1; ; {; -	long r;; +	unsigned long r;; ; 	r = *rK;; 	r += *rJ--;; @@ -97,6 +97,6 @@ long Random::number () // uniform random; 			rJ = &state [sizeof state / sizeof *state - 1];; }; 	; - return (r >> 1) &0x7fffffff; // discard the least-random bit; + return (r >> 1) &0x7ffffffful; // discard the least-random bit; }; ```. 3. Instead of [running plain xxd](https://github.com/soedinglab/MMseqs2/blob/master/cmake/MMseqsResourceCompiler.cmake#L35), we generate header files for resource files with the following pattern:; ```; """"""; #ifndef MMSEQS2_XXD_{1}_H_; #define MMSEQS2_XXD_{1}_H_; #include ""mmseqs2/{0}_data.h"". // Use casters to make values act as properties. This is to prevent static variables causing; // ""initialization order fiasco"".; struct {0}_CharCaster {{; operator const unsigned char*() const {{; return reinterpret_cast<const unsigned char*>({0}_data_create()->data);; }}; operator const char*() const {{; return reinterpret_cast<const char*>({0}_data_create()->data);; }}; operator const void*() const {{; return reinterpret_cast<const void*>({0}_data_create()->data);; }}; }};. struct {0}_LenCaster {{; operator unsigned int() const {{; return static_cast<unsigned int>({0}_data_create()->size);; }}; }};. inline constexpr {0}_CharCaster {0};; inline constexpr {0}_LenCaster {0}_len;; ```. where `{0}` is the filename of the respective file. 4. Changing `\n` to `\0` in [this line](https://github.com/soedinglab/MMseqs2/blob/a5d49655330d144788c6e1bf8551d7cc1d356b0c/src/test/TestTranslate.cpp#L15). We hope this is helpful.; Best wishes",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/661:4712,Testability,Test,TestTranslate,4712," sizeof *state - 1];; ; }; void Random::seed (long x); @@ -73,7 +73,7 @@ void Random::seed (long x); ; // linear congruential initializer; 	for (i = 1; i < sizeof state / sizeof *state; ++i) {; -		state [i] = 1103515245 * state [i - 1] + 12345;; +		state [i] = 1103515245ul * state [i - 1] + 12345ul;; 	}; ; 	rJ = &state [r_off];; @@ -85,7 +85,7 @@ void Random::seed (long x); long Random::number () // uniform random x : 0 <= x <= exp2 (31) - 1; ; {; -	long r;; +	unsigned long r;; ; 	r = *rK;; 	r += *rJ--;; @@ -97,6 +97,6 @@ long Random::number () // uniform random; 			rJ = &state [sizeof state / sizeof *state - 1];; }; 	; - return (r >> 1) &0x7fffffff; // discard the least-random bit; + return (r >> 1) &0x7ffffffful; // discard the least-random bit; }; ```. 3. Instead of [running plain xxd](https://github.com/soedinglab/MMseqs2/blob/master/cmake/MMseqsResourceCompiler.cmake#L35), we generate header files for resource files with the following pattern:; ```; """"""; #ifndef MMSEQS2_XXD_{1}_H_; #define MMSEQS2_XXD_{1}_H_; #include ""mmseqs2/{0}_data.h"". // Use casters to make values act as properties. This is to prevent static variables causing; // ""initialization order fiasco"".; struct {0}_CharCaster {{; operator const unsigned char*() const {{; return reinterpret_cast<const unsigned char*>({0}_data_create()->data);; }}; operator const char*() const {{; return reinterpret_cast<const char*>({0}_data_create()->data);; }}; operator const void*() const {{; return reinterpret_cast<const void*>({0}_data_create()->data);; }}; }};. struct {0}_LenCaster {{; operator unsigned int() const {{; return static_cast<unsigned int>({0}_data_create()->size);; }}; }};. inline constexpr {0}_CharCaster {0};; inline constexpr {0}_LenCaster {0}_len;; ```. where `{0}` is the filename of the respective file. 4. Changing `\n` to `\0` in [this line](https://github.com/soedinglab/MMseqs2/blob/a5d49655330d144788c6e1bf8551d7cc1d356b0c/src/test/TestTranslate.cpp#L15). We hope this is helpful.; Best wishes",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661
https://github.com/soedinglab/MMseqs2/issues/663:377,Testability,test,tested,377,"Hi. Is mmseqs deterministic? When running linclust on a large FASTA file of proteins, one would expect to get very similar clusters when rerunning the same command on the same fasta file (with default linclust parameters, with —min-seq-id 0.95 -c 0.8). Input: fasta file with ~500mio *nearly* identical sequences (size slowly incrementing, order of sequences may change). Also tested with exact same sequences where order of sequences changed. . ## Current Behavior. Notice 10-20% of clusters have changed after each run. . Version: latest daily, ubuntu 20.04, 96 core amd server. Any tricks to produce stable clusters? Kmers per seq, sorting the sequences, etc?. Many thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/663
https://github.com/soedinglab/MMseqs2/issues/664:272,Availability,down,downloads,272,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664
https://github.com/soedinglab/MMseqs2/issues/664:214,Deployability,release,release,214,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664
https://github.com/soedinglab/MMseqs2/issues/664:719,Deployability,release,release,719,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664
https://github.com/soedinglab/MMseqs2/issues/664:10,Testability,benchmark,benchmarking,10,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664
https://github.com/soedinglab/MMseqs2/issues/666:129,Availability,down,download,129,"## Expected Behavior. nrtotaxmapping to create a _mapping file. ## Current Behavior. When I am running the databases workflow to download the NR database the workflow fails on the nrtotaxmapping step at the end. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. $ mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Reading symbols from mmseqs...; (gdb) r; Starting program: /home/kthurime/mmseqs/bin/mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<cha",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:2037,Energy Efficiency,allocate,allocate,2037,"x-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:2279,Energy Efficiency,allocate,allocate,2279,"mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:2053,Performance,optimiz,optimized,2053,"x-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:2074,Performance,optimiz,optimized,2074,"x-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:2303,Performance,optimiz,optimized,2303,"osity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:2620,Performance,optimiz,optimized,2620,"ab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:2641,Performance,optimiz,optimized,2641,"ab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:3614,Performance,optimiz,optimized,3614," std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7fffffffd290); at /usr/include/c++/9/bits/stl_iterator.h:803; #12 nrtotaxmapping (argc=<optimized out>, argv=<optimized out>, command=...); at /home/vsts/work/1/s/src/util/nrtotaxmapping.cpp:96; #13 0x0000000000426a27 in runCommand (p=0x1288200, argc=argc@entry=8, argv=argv@entry=0x7fffffffe3b8); at /home/vsts/work/1/s/src/commons/Application.cpp:40; #14 0x000000000040e501 in main (argc=10, argv=0x7fffffffe3a8); at /home/vsts/work/1/s/src/commons/Application.cpp:203. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): f5b588be54de35876eff90f3694b67e1d00856ef; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 16 vCPU and 64 GB memory; * Operating system and version: Ubuntu 20.04.5 LTS (GNU/Linux 5.15.0-1021-gcp x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:3636,Performance,optimiz,optimized,3636," std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7fffffffd290); at /usr/include/c++/9/bits/stl_iterator.h:803; #12 nrtotaxmapping (argc=<optimized out>, argv=<optimized out>, command=...); at /home/vsts/work/1/s/src/util/nrtotaxmapping.cpp:96; #13 0x0000000000426a27 in runCommand (p=0x1288200, argc=argc@entry=8, argv=argv@entry=0x7fffffffe3b8); at /home/vsts/work/1/s/src/commons/Application.cpp:40; #14 0x000000000040e501 in main (argc=10, argv=0x7fffffffe3a8); at /home/vsts/work/1/s/src/commons/Application.cpp:203. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): f5b588be54de35876eff90f3694b67e1d00856ef; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 16 vCPU and 64 GB memory; * Operating system and version: Ubuntu 20.04.5 LTS (GNU/Linux 5.15.0-1021-gcp x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:1459,Safety,Abort,Aborted,1459,"ion2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Reading symbols from mmseqs...; (gdb) r; Starting program: /home/kthurime/mmseqs/bin/mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_trait",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/666:1571,Safety,abort,abort,1571,"to also post the complete output of MMseqs. You can use gist.github.com for large output. Reading symbols from mmseqs...; (gdb) r; Starting program: /home/kthurime/mmseqs/bin/mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666
https://github.com/soedinglab/MMseqs2/issues/667:2570,Availability,Mask,Mask,2570,"rix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:2588,Availability,Mask,Mask,2588,"rix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:2620,Availability,Mask,Mask,2620,"ignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:2839,Availability,Mask,Mask,2839,"ct 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:4382,Availability,mask,mask,4382,"tig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details abou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:4391,Availability,mask,mask-prob,4391,"tig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details abou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:4407,Availability,mask,mask-lower-case,4407,"okup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:4911,Energy Efficiency,consumption,consumption,4911,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:1578,Integrability,wrap,wrapped,1578,"ld_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	10000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:696,Performance,load,load-mode,696,"## Expected Behavior; I'm using mmseqs driven by colabfold to search against large db.; ## Current Behavior; When colabfold executing ""search"" step, mmseqs generates ""prefilter"" step, and args are ""--split 0 --split-mode 2 --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:1350,Performance,load,load-mode,1350," --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:4496,Performance,load,load-mode,4496,"okup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:5032,Performance,optimiz,optimize,5032,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:383,Safety,avoid,avoid,383,"## Expected Behavior; I'm using mmseqs driven by colabfold to search against large db.; ## Current Behavior; When colabfold executing ""search"" step, mmseqs generates ""prefilter"" step, and args are ""--split 0 --split-mode 2 --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/667:5094,Safety,Avoid,Avoid,5094,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667
https://github.com/soedinglab/MMseqs2/issues/668:22,Availability,Down,Downloading,22,"## Expected Behavior; Downloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668
https://github.com/soedinglab/MMseqs2/issues/668:410,Availability,down,download,410,"## Expected Behavior; Downloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668
https://github.com/soedinglab/MMseqs2/issues/668:590,Availability,Error,Error,590,"## Expected Behavior; Downloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668
https://github.com/soedinglab/MMseqs2/issues/668:1192,Availability,down,download,1192,"ownloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668
https://github.com/soedinglab/MMseqs2/issues/668:1372,Availability,Error,Error,1372,"ownloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668
https://github.com/soedinglab/MMseqs2/issues/668:440,Safety,Abort,Aborted,440,"## Expected Behavior; Downloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668
https://github.com/soedinglab/MMseqs2/issues/668:1222,Safety,Abort,Aborted,1222,"ownloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668
https://github.com/soedinglab/MMseqs2/issues/669:1777,Availability,Mask,Mask,1777,"Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:1794,Availability,Mask,Mask,1794,"Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:1825,Availability,Mask,Mask,1825," E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:2032,Availability,Mask,Mask,2032," 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. extractorfs readsDNA10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:4036,Availability,mask,mask,4036," Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. extractorfs readsDNA10 /tmp/4466913777158595479/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 8.53M 19s 320ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:4045,Availability,mask,mask-prob,4045," Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. extractorfs readsDNA10 /tmp/4466913777158595479/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 8.53M 19s 320ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:4061,Availability,mask,mask-lower-case,4061,"7483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 8.53M 19s 320ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:5028,Availability,fault,fault,5028,"mit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 medi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:5049,Availability,Error,Error,5049,"mit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 medi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:4437,Energy Efficiency,consumption,consumption,4437,"0ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model na",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:884,Integrability,wrap,wrapped,884,"Hi all,. I was trying for the first time to run MMseqs to assign taxonomy. Just to test it I used a set of short reads as input and tried to annotate it against the uniref100 db. Everything works fine but I'm having problems in the last step of the process. ## Expected Behavior. ` mmseqs taxonomy readsDNA10 uniref_db result /tmp -s 6 `. should generate a result file with the assigned taxonomy. ## Current Behavior. MMseqs Version: 60b77df37df55c3984870760591facbb361c3939; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:4149,Performance,load,load-mode,4149,"7483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 8.53M 19s 320ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:5604,Performance,cache,cache,5604," --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists. means that nothing hit the DB, right?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:5624,Performance,cache,cache,5624," --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists. means that nothing hit the DB, right?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:5643,Performance,cache,cache,5643," --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists. means that nothing hit the DB, right?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:5661,Performance,cache,cache,5661," --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists. means that nothing hit the DB, right?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/669:83,Testability,test,test,83,"Hi all,. I was trying for the first time to run MMseqs to assign taxonomy. Just to test it I used a set of short reads as input and tried to annotate it against the uniref100 db. Everything works fine but I'm having problems in the last step of the process. ## Expected Behavior. ` mmseqs taxonomy readsDNA10 uniref_db result /tmp -s 6 `. should generate a result file with the assigned taxonomy. ## Current Behavior. MMseqs Version: 60b77df37df55c3984870760591facbb361c3939; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669
https://github.com/soedinglab/MMseqs2/issues/671:92,Modifiability,extend,extend,92,"Hi,. I'm looking to use the UniRef90 sequences as representatives of gene clusters and then extend these clusters with additional sequences. Is it possible to take the set of ~153 million UniRef90 sequences and indicate that each one should be used as a cluster representative (i.e. if there are X input sequences, I want exactly X clusters)? Ideally, I'd avoid doing any actual clustering here since I've pre-selected the representatives. Thanks for any suggestions or insights you can provide. Cheers,; Donovan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/671
https://github.com/soedinglab/MMseqs2/issues/671:356,Safety,avoid,avoid,356,"Hi,. I'm looking to use the UniRef90 sequences as representatives of gene clusters and then extend these clusters with additional sequences. Is it possible to take the set of ~153 million UniRef90 sequences and indicate that each one should be used as a cluster representative (i.e. if there are X input sequences, I want exactly X clusters)? Ideally, I'd avoid doing any actual clustering here since I've pre-selected the representatives. Thanks for any suggestions or insights you can provide. Cheers,; Donovan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/671
https://github.com/soedinglab/MMseqs2/issues/673:423,Availability,error,error,423,"I tried the current conda version of mmseqs, which is MMseqs2 Version: 14.7e284. I ran the following commands ; mmseqs createdb --dbtype 2 input.fas DB; mmseqs cluster DB clusterRes /dev/shm/user/ --min-seq-id 0.95 -c 0.8 --cov-mode 1. When trying to get the sequences with; mmseqs convert2fasta clusterRes out_cluster.fas; (I also tried with and without the --use-header-file 0 and --use-header-file 1 option.). I get the error message: ; Database clusterRes needs header information. I found no explanation for this. I created an output database and hoped to get the result converted back to fasta files. I get this same error message when trying the clusterupdate option.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673
https://github.com/soedinglab/MMseqs2/issues/673:623,Availability,error,error,623,"I tried the current conda version of mmseqs, which is MMseqs2 Version: 14.7e284. I ran the following commands ; mmseqs createdb --dbtype 2 input.fas DB; mmseqs cluster DB clusterRes /dev/shm/user/ --min-seq-id 0.95 -c 0.8 --cov-mode 1. When trying to get the sequences with; mmseqs convert2fasta clusterRes out_cluster.fas; (I also tried with and without the --use-header-file 0 and --use-header-file 1 option.). I get the error message: ; Database clusterRes needs header information. I found no explanation for this. I created an output database and hoped to get the result converted back to fasta files. I get this same error message when trying the clusterupdate option.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673
https://github.com/soedinglab/MMseqs2/issues/673:429,Integrability,message,message,429,"I tried the current conda version of mmseqs, which is MMseqs2 Version: 14.7e284. I ran the following commands ; mmseqs createdb --dbtype 2 input.fas DB; mmseqs cluster DB clusterRes /dev/shm/user/ --min-seq-id 0.95 -c 0.8 --cov-mode 1. When trying to get the sequences with; mmseqs convert2fasta clusterRes out_cluster.fas; (I also tried with and without the --use-header-file 0 and --use-header-file 1 option.). I get the error message: ; Database clusterRes needs header information. I found no explanation for this. I created an output database and hoped to get the result converted back to fasta files. I get this same error message when trying the clusterupdate option.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673
https://github.com/soedinglab/MMseqs2/issues/673:629,Integrability,message,message,629,"I tried the current conda version of mmseqs, which is MMseqs2 Version: 14.7e284. I ran the following commands ; mmseqs createdb --dbtype 2 input.fas DB; mmseqs cluster DB clusterRes /dev/shm/user/ --min-seq-id 0.95 -c 0.8 --cov-mode 1. When trying to get the sequences with; mmseqs convert2fasta clusterRes out_cluster.fas; (I also tried with and without the --use-header-file 0 and --use-header-file 1 option.). I get the error message: ; Database clusterRes needs header information. I found no explanation for this. I created an output database and hoped to get the result converted back to fasta files. I get this same error message when trying the clusterupdate option.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673
https://github.com/soedinglab/MMseqs2/issues/674:2326,Availability,error,errors,2326,"QERLWFLYQLEANGY; TYNMPFRFQIDGNLDVNIFRKALETIMQRHELLRTCFQEVDKTPRQIIKLKIQLNLPLLD; LLQELSHLYEAFDKNNLILDQISLFNTVIFPFGKDNSYFAYFTKSGFLT^@MFNLKHQLYLLISKFLEKQKRIEKHKKLSDNATFHSSVKFIGKCINYREDKTLIQIGENT; VIIGELAIFPFGGKIEIGRNCYIGEGTRIRSATSIKIGNEVIISDDVSIYDTDAHSLNYV; LRQKEFMEVLILNNLIKDAKDVDIQSAPVVIEDHVWIGFNVAILKGVTIGKGAIIGAGSV; VTKDVEPFTIVAGNPAKIIK^@MNVAEKTSDSINLKEDVRTFNQSLQEFLRFIQVYWYPKEHQDRAFSQIIRSWGMLVLLFL; LLVGLVGLNAFNSFVFRDLITFTEARDAEKLTHLVIIYAITLGSMTFFGGLSKFLKKLIA; LDWYQWINSSILQKYFKNRAYYQINFKGDIENPDQRLSQEIQPIARTTMDFLTTCVEKVM; EMLVFIAILWSISKTISIVLLVYTIIGNIVATYITQQLNKVNKQQLEIEGTYKYAMTHVR; THAESIAFFRGEEKELNIIQRKFNQVIKIMIERINWERTQEFFNRGYQSIVQIFPFLIVS; PLYISGEIEFGQVNQVSYCCYFFSTALSVLVDEFGRSREFINYIERLEEFYQALEGVSEQ; TNPVNTIKVIEDNNLAFDDVTLQTPDAAKVIVEHLSLSVEPGEGLLIVGPSGRGKSSLLR; AISGLWNTGTGHLVRPPLDDLLFLPQRPYIILGNLREQLIYPQTTTEMSESQLKEILQEV; NLQDVLNRIKNFDEEVDWENILSLGEQQRLAFARLFVNQPDFVILDEATSALDLKNEDHL; YKQLQQTGKTFISVGHRESLFNYHQRVLELSEDSTWRLMRMADYHPSTAIATHSNNEQTV; DETIEIVSEINNQDNFTHQEMQKLTNYSLSTIKNKARRGQTIVANDGMSYRYDK; ```; ## Steps to Reproduce (for bugs). ```; mmseqs easy-linclust mmseqs_100/mmseqs2_rep_seq.gt11.fasta mmseqs_90/mmseqs2 tmp --min-seq-id 0.9 -c 0.8 --cov-mode 1 --dbtype 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. No errors. ## Context. Confusing about what the ^@ characters are doing. It looks like they are concatenating the proteins?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; ```; MMseqs2 Version: 14.7e284; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674
https://github.com/soedinglab/MMseqs2/issues/675:20,Usability,guid,guide,20,"Looking at the user guide and at the code I cannot seem to understand the difference between the evalThr and evalProfile parameters of the search method. Given their names I have a hard time understanding which of the two the -e parameter changes, it would be nice to provide a specific explanation of all the hyperparameters of the functions as it is especially usefull for new users as I am.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675
https://github.com/soedinglab/MMseqs2/issues/677:112,Availability,Error,Error,112,"## Expected Behavior; Compare a set of distinct unknown proteins to PHROGs DB via MMseqs2. ## Current Behavior; Error: Alignment died. All .index are empty. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb GENOMAD/genomad_output/Bins_summary/Bins_virus_proteins.faa PHROGS/target_seq ##This command seems to work. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677
https://github.com/soedinglab/MMseqs2/issues/677:1847,Availability,Error,Error,1847," -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677
https://github.com/soedinglab/MMseqs2/issues/677:949,Integrability,wrap,wrapped-scoring,949,"## Expected Behavior; Compare a set of distinct unknown proteins to PHROGs DB via MMseqs2. ## Current Behavior; Error: Alignment died. All .index are empty. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb GENOMAD/genomad_output/Bins_summary/Bins_virus_proteins.faa PHROGS/target_seq ##This command seems to work. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677
https://github.com/soedinglab/MMseqs2/issues/677:1418,Modifiability,extend,extend,1418,"rk. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specific",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677
https://github.com/soedinglab/MMseqs2/issues/677:1193,Performance,load,load-mode,1193,"nt Behavior; Error: Alignment died. All .index are empty. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb GENOMAD/genomad_output/Bins_summary/Bins_virus_proteins.faa PHROGS/target_seq ##This command seems to work. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit us",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677
https://github.com/soedinglab/MMseqs2/issues/678:2280,Availability,Mask,Mask,2280,"sity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:2297,Availability,Mask,Mask,2297,"sity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:2328,Availability,Mask,Mask,2328,"lue threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:2535,Availability,Mask,Mask,2535," 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_B",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:4368,Availability,mask,mask,4368,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:4377,Availability,mask,mask-prob,4377,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:4393,Availability,mask,mask-lower-case,4393,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:97,Energy Efficiency,consumption,consumption,97,"Hi,. I am using mmseqs2 for the taxonomy assignment using NR database. However, Estimated memory consumption is 2T. Is that normal? Also, my input is already protein. My another question is about the speed. Is there any way to speed it up?. ```; MMseqs Version: 14.7e284; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [===================================; Time for merging to BH193L-2_S20_database_h: 0h 0m 0s 80ms; Time for merging to BH193L-2_S20_database: 0h 0m 0s 85ms; Database type: Aminoacid; Time for processing: 0h 0m 17s 880ms; Create directory tmp_BH193L-2_S20; taxonomy --lca-mode 3 --threads 36 -e 0.0001 --tax-lineage 1 -s 3 --lca-ranks species,genus,family,order,class,phylum,kingdom,superkingdom BH193L-2_S20_database NR BH193L-2_S20.result tmp_BH193L-2_S20. MMseqs Version: 14.7e284; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks species,genus,family,order,class,phylum,kingdom,superkingdom; Column with taxonomic lineage 1; Compressed 0; Threads 36; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed sub",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:4675,Energy Efficiency,consumption,consumption,4675,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:1382,Integrability,wrap,wrapped,1382,"eric ids 0; Compressed 0; Verbosity 3. Converting sequences; [===================================; Time for merging to BH193L-2_S20_database_h: 0h 0m 0s 80ms; Time for merging to BH193L-2_S20_database: 0h 0m 0s 85ms; Database type: Aminoacid; Time for processing: 0h 0m 17s 880ms; Create directory tmp_BH193L-2_S20; taxonomy --lca-mode 3 --threads 36 -e 0.0001 --tax-lineage 1 -s 3 --lca-ranks species,genus,family,order,class,phylum,kingdom,superkingdom BH193L-2_S20_database NR BH193L-2_S20.result tmp_BH193L-2_S20. MMseqs Version: 14.7e284; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks species,genus,family,order,class,phylum,kingdom,superkingdom; Column with taxonomic lineage 1; Compressed 0; Threads 36; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.0001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 3; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/678:4482,Performance,load,load-mode,4482,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678
https://github.com/soedinglab/MMseqs2/issues/679:123,Availability,error,error,123,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:235,Availability,fault,fault,235,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:1672,Availability,Mask,Mask,1672,"MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Simil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:1690,Availability,Mask,Mask,1690,"MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Simil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:1722,Availability,Mask,Mask,1722,"lease ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Clust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:4939,Availability,mask,mask,4939,"721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-comp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:4948,Availability,mask,mask-prob,4948,"721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-comp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:4964,Availability,mask,mask-lower-case,4964,"94185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:5192,Availability,error,error,5192,"nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:5212,Availability,fault,fault,5212,"nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:5356,Availability,fault,fault,5356,"-seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc -N2 --ntasks=2 --cpus-per-task=10 --mem-per-cpu=8G` ie, 2 nodes, 80GB ram per node. ; * Operating system and version: RHEL 7.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:5454,Availability,Error,Error,5454,"-seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc -N2 --ntasks=2 --cpus-per-task=10 --mem-per-cpu=8G` ie, 2 nodes, 80GB ram per node. ; * Operating system and version: RHEL 7.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:5479,Availability,Error,Error,5479,"-seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc -N2 --ntasks=2 --cpus-per-task=10 --mem-per-cpu=8G` ie, 2 nodes, 80GB ram per node. ; * Operating system and version: RHEL 7.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:5501,Availability,Error,Error,5501,"-seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: g++ version 10.3.0, cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SLURM system, called; `salloc -N2 --ntasks=2 --cpus-per-task=10 --mem-per-cpu=8G` ie, 2 nodes, 80GB ram per node. ; * Operating system and version: RHEL 7.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:102,Deployability,install,installation,102,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:359,Deployability,install,installation,359,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:506,Deployability,install,installed,506,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:765,Deployability,Release,Release,765,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:788,Deployability,install,install,788,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:2116,Integrability,wrap,wrapped,2116,"or large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:4311,Integrability,wrap,wrapped-scoring,4311," -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:307,Modifiability,variab,variable,307,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:2998,Modifiability,extend,extendable,2998,"; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb exp.fa tmp2/6664721939282577716/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/66647219392825777",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:4782,Modifiability,extend,extend,4782,"-remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when y",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:5041,Modifiability,extend,extendable,5041,"94185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:4557,Performance,load,load-mode,4557,"put: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:2975,Security,hash,hash,2975,"; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb exp.fa tmp2/6664721939282577716/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/66647219392825777",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:4989,Security,hash,hash-shift,4989,"94185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:262,Testability,test,test,262,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:925,Testability,test,test,925,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/679:1126,Testability,test,test,1126,"on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scorin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679
https://github.com/soedinglab/MMseqs2/issues/680:649,Availability,error,errors,649,"The function summarizealis is not documented in the wiki. But the help messege does not print the relevant information in https://github.com/soedinglab/MMseqs2/blob/6b9388469a41935813f5d207d6d149767feb4c42/src/MMseqsBase.cpp#L1028. Could this be the case for other functions?. I use mmseqs v 14.7e284 installed with mamba. See ; ```; $ mmseqs summarizealis -h. usage: mmseqs summarizealis <i:alignmentDB> <o:summerizedDB> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: common:; --threads INT Number of CPU-cores used (all by default) [16]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Mirdita M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases of clustered and deeply annotated protein sequences and alignments. Nucleic Acids Research 45(D1), D170-D176 (2017). ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/680
https://github.com/soedinglab/MMseqs2/issues/680:301,Deployability,install,installed,301,"The function summarizealis is not documented in the wiki. But the help messege does not print the relevant information in https://github.com/soedinglab/MMseqs2/blob/6b9388469a41935813f5d207d6d149767feb4c42/src/MMseqsBase.cpp#L1028. Could this be the case for other functions?. I use mmseqs v 14.7e284 installed with mamba. See ; ```; $ mmseqs summarizealis -h. usage: mmseqs summarizealis <i:alignmentDB> <o:summerizedDB> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: common:; --threads INT Number of CPU-cores used (all by default) [16]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Mirdita M, von den Driesch L, Galiez C, Martin M, Soding J, Steinegger M: Uniclust databases of clustered and deeply annotated protein sequences and alignments. Nucleic Acids Research 45(D1), D170-D176 (2017). ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/680
https://github.com/soedinglab/MMseqs2/issues/682:131,Availability,error,error,131,"## Expected Behavior; `mmseqs easy-linclust` executes with flag `--min-seq-id`. ## Current Behavior; `mmseqs easy-linclust` throws error `Error in argument --min-seq-id` when given flag `--min-seq-id`. ## Steps to Reproduce (for bugs). ```; curl -JLO https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/016/584/425/GCA_016584425.1_ASM1658442v1/GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis modul",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:138,Availability,Error,Error,138,"## Expected Behavior; `mmseqs easy-linclust` executes with flag `--min-seq-id`. ## Current Behavior; `mmseqs easy-linclust` throws error `Error in argument --min-seq-id` when given flag `--min-seq-id`. ## Steps to Reproduce (for bugs). ```; curl -JLO https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/016/584/425/GCA_016584425.1_ASM1658442v1/GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis modul",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1430,Availability,mask,mask,1430,"658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1439,Availability,Mask,Mask,1439,"658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1492,Availability,mask,masking,1492,"658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1524,Availability,mask,masking,1524,"658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1539,Availability,mask,mask-prob,1539,"658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1555,Availability,Mask,Mask,1555,"658442v1_translated_cds.faa.gz; mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1; ```. ## MMseqs Output (for bugs). ```; $ mmseqs easy-linclust GCA_016584425.1_ASM1658442v1_translated_cds.faa.gz tmp_linclust tmp_mmseqs --min-seq-id .9 -c .9 --similarity-type 2 --cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1614,Availability,mask,mask-lower-case,1614,"cov-mode 1. usage: mmseqs easy-linclust <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]> <o:clusterPrefix> <tmpDir> [options]; By Martin Steinegger <martin.steinegger@snu.ac.kr>; options: prefilter:; --comp-bias-corr INT Correct for locally biased amino acid composition (range 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:1883,Availability,avail,available,1883,"ge 0-1) [1]; --comp-bias-corr-scale FLOAT Correct for locally biased amino acid composition (range 0-1) [1.000]; --add-self-matches BOOL Artificially add entries of queries with themselves (for clustering) [0]; --alph-size TWIN Alphabet size (range 2-21) [aa:21,nucl:5]; --spaced-kmer-mode INT 0: use consecutive positions in k-mers; 1: use spaced k-mers [0]; --spaced-kmer-pattern STR User-specified spaced k-mer pattern []; --mask INT Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --seq-id-mode INT 0: alignment length 1: shorter, 2: longer sequence [0]; --alt-ali INT Show up to this many alternative alignments [0]; -c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:5823,Availability,error,errors,5823,"quence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.out]; --max-seq-len INT Maximum sequence length [65535]; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; --remove-tmp-files BOOL Delete temporary files [1]; --force-reuse BOOL Reuse tmp filse in tmp/latest folder ignoring parameters and version changes [0]; --mpi-runner STR Use MPI on compute cluster with this MPI command (e.g. ""mpirun -np 42"") []; expert:; --filter-hits BOOL Filter hits by seq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:7395,Availability,Error,Error,7395,"eq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .lookup file containing mapping from internal id, fasta id and file number [0]. examples:; mmseqs easy-linclust examples/DB.fasta result tmp. # Linclust output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjecency list. # Important parameter: --min-seq-id, --cov-mode and -c; # --cov-mode; # 0 1 2; # Q: MAVGTACRPA 60% IGN 60%; # T: -AVGTAC--- 60% 100% IGN; # -c 0.7 - + -; # -c 0.6 + + +. # Cluster nucleotide sequences; mmseqs easy-linclust examples/DB.fasta result tmp --kmer-per-seq-scale 0.3. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Steinegger M, Soding J: Clustering huge protein sequence sets in linear time. Nature Communications, 9(1), 2542 (2018); Error in argument --min-seq-id; ```; ## Context; I would like to use linclust to cluster sequences at 90 length/90% identity, but the flag `--min-seq-id` keeps throwing an error. is there a different way to specify sequence identity threshold for `easy-linclust`?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): NA; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; ```; mmseqs2 14.7e284 pl5321h893b172_0 bioconda; ```; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: NA; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Apple M1 Max, 64 GB memory,10 CPU; * Operating system and version: Apple, Ventura 13.0. I reproduced the error on Ubuntu AWS EC2 as well with the same version of mmseqs2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:7567,Availability,error,error,7567,"eq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .lookup file containing mapping from internal id, fasta id and file number [0]. examples:; mmseqs easy-linclust examples/DB.fasta result tmp. # Linclust output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjecency list. # Important parameter: --min-seq-id, --cov-mode and -c; # --cov-mode; # 0 1 2; # Q: MAVGTACRPA 60% IGN 60%; # T: -AVGTAC--- 60% 100% IGN; # -c 0.7 - + -; # -c 0.6 + + +. # Cluster nucleotide sequences; mmseqs easy-linclust examples/DB.fasta result tmp --kmer-per-seq-scale 0.3. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Steinegger M, Soding J: Clustering huge protein sequence sets in linear time. Nature Communications, 9(1), 2542 (2018); Error in argument --min-seq-id; ```; ## Context; I would like to use linclust to cluster sequences at 90 length/90% identity, but the flag `--min-seq-id` keeps throwing an error. is there a different way to specify sequence identity threshold for `easy-linclust`?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): NA; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; ```; mmseqs2 14.7e284 pl5321h893b172_0 bioconda; ```; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: NA; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Apple M1 Max, 64 GB memory,10 CPU; * Operating system and version: Apple, Ventura 13.0. I reproduced the error on Ubuntu AWS EC2 as well with the same version of mmseqs2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:8303,Availability,error,error,8303,"eq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .lookup file containing mapping from internal id, fasta id and file number [0]. examples:; mmseqs easy-linclust examples/DB.fasta result tmp. # Linclust output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjecency list. # Important parameter: --min-seq-id, --cov-mode and -c; # --cov-mode; # 0 1 2; # Q: MAVGTACRPA 60% IGN 60%; # T: -AVGTAC--- 60% 100% IGN; # -c 0.7 - + -; # -c 0.6 + + +. # Cluster nucleotide sequences; mmseqs easy-linclust examples/DB.fasta result tmp --kmer-per-seq-scale 0.3. references:; - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017); - Steinegger M, Soding J: Clustering huge protein sequence sets in linear time. Nature Communications, 9(1), 2542 (2018); Error in argument --min-seq-id; ```; ## Context; I would like to use linclust to cluster sequences at 90 length/90% identity, but the flag `--min-seq-id` keeps throwing an error. is there a different way to specify sequence identity threshold for `easy-linclust`?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): NA; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; ```; mmseqs2 14.7e284 pl5321h893b172_0 bioconda; ```; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: NA; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Apple M1 Max, 64 GB memory,10 CPU; * Operating system and version: Apple, Ventura 13.0. I reproduced the error on Ubuntu AWS EC2 as well with the same version of mmseqs2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:2393,Integrability,wrap,wrapped-scoring,2393," in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --seq-id-mode INT 0: alignment length 1: shorter, 2: longer sequence [0]; --alt-ali INT Show up to this many alternative alignments [0]; -c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.800]; --cov-mode INT 0: coverage of query and target; 1: coverage of target; 2: coverage of query; 3: target seq. length has to be at least x% of query length; 4: query seq. length has to be at least x% of target length; 5: short seq. needs to be at least x% of the other seq. length [0]; --max-rejected INT Maximum rejected alignments before alignment calculation for a query is stopped [2147483647]; --max-accept INT Maximum accepted alignment",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:2489,Integrability,wrap,wrapped,2489," in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]; --mask-prob FLOAT Mask sequences is probablity is above threshold [0.900]; --mask-lower-case INT Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]; -k INT k-mer length (0: automatically set to optimum) [0]; --split-memory-limit BYTE Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]; align:; -a BOOL Add backtrace string (convert to alignments with mmseqs convertalis module) [0]; --alignment-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment [0]; --alignment-output-mode INT How to compute the alignment:; 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; 5: score only (output) cluster format [0]; --wrapped-scoring BOOL Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start [0]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-seq-id FLOAT List matches above this sequence identity (for clustering) (range 0.0-1.0) [0.000]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --seq-id-mode INT 0: alignment length 1: shorter, 2: longer sequence [0]; --alt-ali INT Show up to this many alternative alignments [0]; -c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.800]; --cov-mode INT 0: coverage of query and target; 1: coverage of target; 2: coverage of query; 3: target seq. length has to be at least x% of query length; 4: query seq. length has to be at least x% of target length; 5: short seq. needs to be at least x% of the other seq. length [0]; --max-rejected INT Maximum rejected alignments before alignment calculation for a query is stopped [2147483647]; --max-accept INT Maximum accepted alignment",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:4029,Modifiability,extend,extend,4029,"hort seq. needs to be at least x% of the other seq. length [0]; --max-rejected INT Maximum rejected alignments before alignment calculation for a query is stopped [2147483647]; --max-accept INT Maximum accepted alignments before alignment calculation for a query is stopped [2147483647]; --score-bias FLOAT Score bias when computing SW alignment (in bits) [0.000]; --realign BOOL Compute more conservative, shorter alignments (scores and E-values not changed) [0]; --realign-score-bias FLOAT Additional bias when computing realignment [-0.200]; --realign-max-seqs INT Maximum number of results to return in realignment [2147483647]; --corr-score-weight FLOAT Weight of backtrace correlation score that is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignmen",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:4901,Modifiability,extend,extendable,4901,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:4930,Modifiability,extend,extendable,4930,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:5994,Performance,load,load-mode,5994," admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.out]; --max-seq-len INT Maximum sequence length [65535]; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; --remove-tmp-files BOOL Delete temporary files [1]; --force-reuse BOOL Reuse tmp filse in tmp/latest folder ignoring parameters and version changes [0]; --mpi-runner STR Use MPI on compute cluster with this MPI command (e.g. ""mpirun -np 42"") []; expert:; --filter-hits BOOL Filter hits by seq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .lookup file containing mapping from internal id, fasta id and file number [0]. examples:; mmseqs easy-linclust examples/DB.fasta result tmp. # Linclust output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjecency list. # Important parameter: --min-seq-id, --cov-mode and -c; # --cov-mode; # 0 1 2; # Q: MAVGTACRPA 60% IGN 60%; # T: -AVGTAC--- 60% 100% IGN; # -c 0.7 - + -; # -c 0.6 + + +. # Cluster nucleotide sequences; mmseqs easy-linclust examples/DB.fasta result tmp --kmer-per-seq-scale 0.3. references:; - Steineg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:4833,Security,hash,hash-shift,4833,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/682:4860,Security,hash,hash,4860,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682
https://github.com/soedinglab/MMseqs2/issues/684:155,Availability,down,downloaded,155,"## Expected Behavior; Run mmseqs databases to create a taxonomic database that uses recent data from uniref, e.g uniref100 . ## Current Behavior; A recent downloaded uniref100 fasta file has 342650444 however using the mmseqs databases creates a taxonomic database that has only 1462990. I didn't get any error about something failing and couldn't find any information about reduced database. . ## Steps to Reproduce (for bugs); mmseqs databases UniRef100 databases_mmseqs/uniref100 tmp2. ## Context; I am trying to run easy-taxonomy on a fasta file using uniref100. I got a result using the mmseqs database generated taxdb but it was making really bad taxonomic assignments that got me wondering. Eventually I realized that it wasn't containing many of my expected uniref entries and that it is actually significantly smaller than a recent uniref100 fasta download.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684
https://github.com/soedinglab/MMseqs2/issues/684:305,Availability,error,error,305,"## Expected Behavior; Run mmseqs databases to create a taxonomic database that uses recent data from uniref, e.g uniref100 . ## Current Behavior; A recent downloaded uniref100 fasta file has 342650444 however using the mmseqs databases creates a taxonomic database that has only 1462990. I didn't get any error about something failing and couldn't find any information about reduced database. . ## Steps to Reproduce (for bugs); mmseqs databases UniRef100 databases_mmseqs/uniref100 tmp2. ## Context; I am trying to run easy-taxonomy on a fasta file using uniref100. I got a result using the mmseqs database generated taxdb but it was making really bad taxonomic assignments that got me wondering. Eventually I realized that it wasn't containing many of my expected uniref entries and that it is actually significantly smaller than a recent uniref100 fasta download.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684
https://github.com/soedinglab/MMseqs2/issues/684:857,Availability,down,download,857,"## Expected Behavior; Run mmseqs databases to create a taxonomic database that uses recent data from uniref, e.g uniref100 . ## Current Behavior; A recent downloaded uniref100 fasta file has 342650444 however using the mmseqs databases creates a taxonomic database that has only 1462990. I didn't get any error about something failing and couldn't find any information about reduced database. . ## Steps to Reproduce (for bugs); mmseqs databases UniRef100 databases_mmseqs/uniref100 tmp2. ## Context; I am trying to run easy-taxonomy on a fasta file using uniref100. I got a result using the mmseqs database generated taxdb but it was making really bad taxonomic assignments that got me wondering. Eventually I realized that it wasn't containing many of my expected uniref entries and that it is actually significantly smaller than a recent uniref100 fasta download.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684
https://github.com/soedinglab/MMseqs2/issues/684:375,Energy Efficiency,reduce,reduced,375,"## Expected Behavior; Run mmseqs databases to create a taxonomic database that uses recent data from uniref, e.g uniref100 . ## Current Behavior; A recent downloaded uniref100 fasta file has 342650444 however using the mmseqs databases creates a taxonomic database that has only 1462990. I didn't get any error about something failing and couldn't find any information about reduced database. . ## Steps to Reproduce (for bugs); mmseqs databases UniRef100 databases_mmseqs/uniref100 tmp2. ## Context; I am trying to run easy-taxonomy on a fasta file using uniref100. I got a result using the mmseqs database generated taxdb but it was making really bad taxonomic assignments that got me wondering. Eventually I realized that it wasn't containing many of my expected uniref entries and that it is actually significantly smaller than a recent uniref100 fasta download.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/684
https://github.com/soedinglab/MMseqs2/issues/686:2552,Availability,down,downstream,2552,"2 1.529E-92 100.000 F*TFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ FQTFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ 155 156 1 155 0.994 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; EP00831_Metopus_contortus_T000356 EP00831_Metopus_contortus_P049864 5.174E-135 100.000 LQQKLLL*MEILIQL*QISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD LQQKLLLQMEILIQLQQISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD 215 215 1 215 1.000 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; ```; In Translation table 6, two additional codons code for glutamine instead of ending the translation. From the NCBI's ```gencode.dmp```, standard above, 6th below:; ```; FFLLSSSSYY**CC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG; FFLLSSSSYYQQCC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG. ```; The sequences above are from Metopus ciliates [that do use the Tr. table 6](https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=5964&lvl=3&lin=f&keep=1&srchmode=1&unlock). This may affect downstream analyses. Environment:; ```; $ mmseqs version; 8799829d213f31b647fc69e0572a0c828c5aaf63; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.2 LTS""; PRETTY_NAME=""Ubuntu 22.04.2 LTS""; <...>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/686
https://github.com/soedinglab/MMseqs2/issues/686:2664,Deployability,release,release,2664,"2 1.529E-92 100.000 F*TFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ FQTFPDLLSRKFFLFTFIHLLLLQWFKALPYSILILIKLLIKRNFFFYKTSARQFWRFLLPASCSAVSGFLHFRLTFPAQPYFSAARISPQSQPQLHLLRASPVRWTAFQSISHLRETGCVPLKSTHVLCVDTVSYTHLTLQTILLVQISVAAVQ 155 156 1 155 0.994 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; EP00831_Metopus_contortus_T000356 EP00831_Metopus_contortus_P049864 5.174E-135 100.000 LQQKLLL*MEILIQL*QISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD LQQKLLLQMEILIQLQQISIGPRTVTTTGISMDTKVEPTLTNIDIENYDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVVEGEVNPIFTNIDIENYDEGITIKVDADGDGDDDDGEPHAPTTPTMDVIRIYYSPESWKSDRTTSTKAIVDEGITIKVDADGDGDDDSGEPHAPTTPTMDVIRIYYSPESWKSD 215 215 1 215 1.000 2661169 -_cellular organisms;d_Eukaryota;-_Sar;-_Alveolata;p_Ciliophora;-_Intramacronucleata;c_Armophorea;o_Metopida;f_Metopidae;g_Metopus;s_Metopus contortus; ```; In Translation table 6, two additional codons code for glutamine instead of ending the translation. From the NCBI's ```gencode.dmp```, standard above, 6th below:; ```; FFLLSSSSYY**CC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG; FFLLSSSSYYQQCC*WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG. ```; The sequences above are from Metopus ciliates [that do use the Tr. table 6](https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=5964&lvl=3&lin=f&keep=1&srchmode=1&unlock). This may affect downstream analyses. Environment:; ```; $ mmseqs version; 8799829d213f31b647fc69e0572a0c828c5aaf63; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.2 LTS""; PRETTY_NAME=""Ubuntu 22.04.2 LTS""; <...>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/686
https://github.com/soedinglab/MMseqs2/issues/687:393,Energy Efficiency,efficient,efficiently,393,"Hi,. When I run `createdb; createindex` on a fasta DB file, I generally observe the end result (all the generated output files together) is roughly ~10x bigger than the input fasta file. Most of it is the .idx files generated by `createindex`. The only way I got mmseqs to run fast is by using `db_load_mode=2`, getting the entire target DB in memory at the same time. Running `mmseqs search` efficiently against a large DB thus presents really large memory requirements. ; Is there any way around it (either currently, or planned)? E.g. searching against a compressed version of the DB?. Thank you!; Kuba",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/687
https://github.com/soedinglab/MMseqs2/issues/688:1070,Usability,simpl,simply,1070,"Hi, I am doing a search with the same fasta in query and subject. Doing so, I noticed that the sequence identity computed between the exact same sequence is not equal to 1. I used the following command line: ; `mmseqs search example.fasta.dbm example.fasta.dbm example.fasta.dbm_selfMMseq tmp -s 5.7 --search-type 4 --max-seqs 100000 --threads 20 `; I am using MMseq version 13.45111. If I focus on the sequence named 1441628, we can see in the following screenshot that the percentage of identity of itself against itself in not 1. In addition, there are several hits, and none on the full length of the sequence. ![Screenshot_20230323_112234](https://user-images.githubusercontent.com/57403425/227251314-6cb3f088-b125-414f-a15c-efd85c8c0c93.png). Whereas with blastn, I have the expected behaviour, which is a single hit on the full length of the sequence, with 100% of identity:; ![Screenshot_20230323_112448](https://user-images.githubusercontent.com/57403425/227252003-f94f513c-bc28-44d6-bb70-6c278b91daed.png). I tried running MMseq with the option `-a`, which is simply supposed to add backtrace string, according to the help. The output being different, I now understand that this option also calculate the percentage of identity differently. I now get hits with 100% identity, however, there are still several hits and none on the full length of the sequence:; ![Screenshot_20230323_112723](https://user-images.githubusercontent.com/57403425/227252775-92ad6a26-5703-4b3a-ad85-6709a2a4a8fb.png). I am thus very confused by the outputs generated by MMseq, even with the option `-a`, and would like to know whether someone has any explanation about it? Of course, I don't need MMseq to tell me the percentage of identity between a same sequence, I know it is 100%, but the fact that MMseq cannot figure this out worries me, including for search between different sequences. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/688
https://github.com/soedinglab/MMseqs2/issues/689:333,Availability,error,error,333,"## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:558,Availability,error,error,558,"## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1176,Availability,mask,mask,1176,"eproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1185,Availability,mask,mask-prob,1185,"eproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1201,Availability,mask,mask-lower-case,1201,". You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1646,Availability,error,error,1646,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1829,Availability,Error,Error,1829,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1852,Availability,Error,Error,1852,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:2011,Deployability,install,install,2011,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:2189,Deployability,install,install,2189,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1533,Energy Efficiency,consumption,consumption,1533,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:481,Performance,load,load-mode,481,"## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:1290,Performance,load,load-mode,1290,". You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/689:2038,Performance,load,load,2038,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689
https://github.com/soedinglab/MMseqs2/issues/690:1188,Availability,down,download,1188,"s with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFIL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:210,Performance,response time,response time,210,"I had carefully read this similar issue below. I think my problem may be different and with more details.; https://github.com/soedinglab/MMseqs2/issues/658; ## Expected Behavior; mmseqs local runs with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:301,Safety,predict,prediction,301,"I had carefully read this similar issue below. I think my problem may be different and with more details.; https://github.com/soedinglab/MMseqs2/issues/658; ## Expected Behavior; mmseqs local runs with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:2427,Safety,timeout,timeout,2427,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:2608,Safety,timeout,timeout,2608,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:1888,Testability,test,test,1888,"nce in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:2954,Testability,log,log-mmseqs-msa-server,2954,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:2976,Testability,log,log,2976,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:3034,Testability,log,log-mmseqs-msa-server,3034,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/690:3056,Testability,log,log,3056,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690
https://github.com/soedinglab/MMseqs2/issues/691:31,Availability,error,error,31,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691
https://github.com/soedinglab/MMseqs2/issues/691:51,Availability,down,downloading,51,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691
https://github.com/soedinglab/MMseqs2/issues/691:102,Availability,down,downloading,102,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691
https://github.com/soedinglab/MMseqs2/issues/691:194,Availability,Down,Download,194,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691
https://github.com/soedinglab/MMseqs2/issues/691:242,Availability,error,error,242,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691
https://github.com/soedinglab/MMseqs2/issues/691:527,Deployability,install,installed,527,Hi all i seem to be getting an error at the end of downloading the NR database. ## Expected Behavior; downloading NR database using mmseqs databases NR outpath/NCBI_NR tmp. ## Current Behavior; Download goes well until the end where i get an error. createdb tmp/2421402983074857069/nr.gz outpath/NCBI_NR --compressed 0 -v 3 . Converting sequences; Cannot open outpath/NCBI_NR.source for writing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. running on ubuntu 22.04.2; installed using conda; MMseqs version 14.7e284; intel,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/691
https://github.com/soedinglab/MMseqs2/issues/692:268,Availability,error,errors,268,"## Expected Behavior; Search corretly for multiple proteins. ## Current Behavior; If I search for protein like: `MADITDKTAEQLENLNIQDD:KQAATGSESQSVENSSASLYV`, local server fails:; ```; 2023-04-14 13:43:03,073 Could not get MSA/templates for Seq1: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; Traceback (most recent call last):; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 1404, in run; = get_msa_and_templates(jobname, query_sequence, result_dir, msa_mode, use_templates,; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 862, in get_msa_and_templates; paired_a3m_lines = run_mmseqs2(; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/colabfold.py"", line 226, in run_mmseqs2; raise Exception(f'MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.'); Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; 2023-04-14 13:43:03,075 Done; ```. The error does not happen with your public server and also it does not happen if I use `colabfold_search`. It happens only when using server API on a local server. Proteins without `:` work ok even via server API. I believe the problem is:; ```; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: Input taxonomy database ""/dev/shm/colab/db/uniref30_2202_db.idx"" is missing files:; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_mapping; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_nodes.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_names.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_merged.dmp; ```. I have latest: `mmseqs-linux-sse41.tar.gz`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/692
https://github.com/soedinglab/MMseqs2/issues/692:334,Availability,error,error,334,"## Expected Behavior; Search corretly for multiple proteins. ## Current Behavior; If I search for protein like: `MADITDKTAEQLENLNIQDD:KQAATGSESQSVENSSASLYV`, local server fails:; ```; 2023-04-14 13:43:03,073 Could not get MSA/templates for Seq1: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; Traceback (most recent call last):; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 1404, in run; = get_msa_and_templates(jobname, query_sequence, result_dir, msa_mode, use_templates,; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 862, in get_msa_and_templates; paired_a3m_lines = run_mmseqs2(; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/colabfold.py"", line 226, in run_mmseqs2; raise Exception(f'MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.'); Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; 2023-04-14 13:43:03,075 Done; ```. The error does not happen with your public server and also it does not happen if I use `colabfold_search`. It happens only when using server API on a local server. Proteins without `:` work ok even via server API. I believe the problem is:; ```; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: Input taxonomy database ""/dev/shm/colab/db/uniref30_2202_db.idx"" is missing files:; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_mapping; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_nodes.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_names.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_merged.dmp; ```. I have latest: `mmseqs-linux-sse41.tar.gz`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/692
https://github.com/soedinglab/MMseqs2/issues/692:874,Availability,error,errors,874,"## Expected Behavior; Search corretly for multiple proteins. ## Current Behavior; If I search for protein like: `MADITDKTAEQLENLNIQDD:KQAATGSESQSVENSSASLYV`, local server fails:; ```; 2023-04-14 13:43:03,073 Could not get MSA/templates for Seq1: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; Traceback (most recent call last):; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 1404, in run; = get_msa_and_templates(jobname, query_sequence, result_dir, msa_mode, use_templates,; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 862, in get_msa_and_templates; paired_a3m_lines = run_mmseqs2(; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/colabfold.py"", line 226, in run_mmseqs2; raise Exception(f'MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.'); Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; 2023-04-14 13:43:03,075 Done; ```. The error does not happen with your public server and also it does not happen if I use `colabfold_search`. It happens only when using server API on a local server. Proteins without `:` work ok even via server API. I believe the problem is:; ```; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: Input taxonomy database ""/dev/shm/colab/db/uniref30_2202_db.idx"" is missing files:; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_mapping; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_nodes.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_names.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_merged.dmp; ```. I have latest: `mmseqs-linux-sse41.tar.gz`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/692
https://github.com/soedinglab/MMseqs2/issues/692:940,Availability,error,error,940,"## Expected Behavior; Search corretly for multiple proteins. ## Current Behavior; If I search for protein like: `MADITDKTAEQLENLNIQDD:KQAATGSESQSVENSSASLYV`, local server fails:; ```; 2023-04-14 13:43:03,073 Could not get MSA/templates for Seq1: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; Traceback (most recent call last):; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 1404, in run; = get_msa_and_templates(jobname, query_sequence, result_dir, msa_mode, use_templates,; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 862, in get_msa_and_templates; paired_a3m_lines = run_mmseqs2(; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/colabfold.py"", line 226, in run_mmseqs2; raise Exception(f'MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.'); Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; 2023-04-14 13:43:03,075 Done; ```. The error does not happen with your public server and also it does not happen if I use `colabfold_search`. It happens only when using server API on a local server. Proteins without `:` work ok even via server API. I believe the problem is:; ```; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: Input taxonomy database ""/dev/shm/colab/db/uniref30_2202_db.idx"" is missing files:; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_mapping; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_nodes.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_names.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_merged.dmp; ```. I have latest: `mmseqs-linux-sse41.tar.gz`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/692
https://github.com/soedinglab/MMseqs2/issues/692:1024,Availability,error,errors,1024,"## Expected Behavior; Search corretly for multiple proteins. ## Current Behavior; If I search for protein like: `MADITDKTAEQLENLNIQDD:KQAATGSESQSVENSSASLYV`, local server fails:; ```; 2023-04-14 13:43:03,073 Could not get MSA/templates for Seq1: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; Traceback (most recent call last):; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 1404, in run; = get_msa_and_templates(jobname, query_sequence, result_dir, msa_mode, use_templates,; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 862, in get_msa_and_templates; paired_a3m_lines = run_mmseqs2(; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/colabfold.py"", line 226, in run_mmseqs2; raise Exception(f'MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.'); Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; 2023-04-14 13:43:03,075 Done; ```. The error does not happen with your public server and also it does not happen if I use `colabfold_search`. It happens only when using server API on a local server. Proteins without `:` work ok even via server API. I believe the problem is:; ```; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: Input taxonomy database ""/dev/shm/colab/db/uniref30_2202_db.idx"" is missing files:; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_mapping; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_nodes.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_names.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_merged.dmp; ```. I have latest: `mmseqs-linux-sse41.tar.gz`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/692
https://github.com/soedinglab/MMseqs2/issues/692:1090,Availability,error,error,1090,"## Expected Behavior; Search corretly for multiple proteins. ## Current Behavior; If I search for protein like: `MADITDKTAEQLENLNIQDD:KQAATGSESQSVENSSASLYV`, local server fails:; ```; 2023-04-14 13:43:03,073 Could not get MSA/templates for Seq1: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; Traceback (most recent call last):; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 1404, in run; = get_msa_and_templates(jobname, query_sequence, result_dir, msa_mode, use_templates,; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 862, in get_msa_and_templates; paired_a3m_lines = run_mmseqs2(; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/colabfold.py"", line 226, in run_mmseqs2; raise Exception(f'MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.'); Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; 2023-04-14 13:43:03,075 Done; ```. The error does not happen with your public server and also it does not happen if I use `colabfold_search`. It happens only when using server API on a local server. Proteins without `:` work ok even via server API. I believe the problem is:; ```; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: Input taxonomy database ""/dev/shm/colab/db/uniref30_2202_db.idx"" is missing files:; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_mapping; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_nodes.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_names.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_merged.dmp; ```. I have latest: `mmseqs-linux-sse41.tar.gz`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/692
https://github.com/soedinglab/MMseqs2/issues/692:1178,Availability,error,error,1178,"## Expected Behavior; Search corretly for multiple proteins. ## Current Behavior; If I search for protein like: `MADITDKTAEQLENLNIQDD:KQAATGSESQSVENSSASLYV`, local server fails:; ```; 2023-04-14 13:43:03,073 Could not get MSA/templates for Seq1: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; Traceback (most recent call last):; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 1404, in run; = get_msa_and_templates(jobname, query_sequence, result_dir, msa_mode, use_templates,; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/batch.py"", line 862, in get_msa_and_templates; paired_a3m_lines = run_mmseqs2(; File ""/opt/python3.9/lib/python3.9/site-packages/colabfold/colabfold.py"", line 226, in run_mmseqs2; raise Exception(f'MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.'); Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later.; 2023-04-14 13:43:03,075 Done; ```. The error does not happen with your public server and also it does not happen if I use `colabfold_search`. It happens only when using server API on a local server. Proteins without `:` work ok even via server API. I believe the problem is:; ```; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: Input taxonomy database ""/dev/shm/colab/db/uniref30_2202_db.idx"" is missing files:; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_mapping; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_nodes.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_names.dmp; Apr 14 13:42:56 urga1.cerit-sc.cz msa-server: - /dev/shm/colab/db/uniref30_2202_db.idx_merged.dmp; ```. I have latest: `mmseqs-linux-sse41.tar.gz`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/692
https://github.com/soedinglab/MMseqs2/issues/693:754,Availability,echo,echo,754,"## Expected Behavior; * Create multiple sequence alignment FASTA (or .a3m) file from `mmseqs easy-search`.; * I can see how to convert a resulting DB to `.m8` but I'd like to convert in the other direction. ## Current Behavior; `mmseqs easy-search` creates a `.m8` tab-delimited BLAST file. Can `easy-search` create a multiple sequence alignment FASTA (or .a3m) file?. ## Steps to Reproduce (for bugs). ```bash; format_out=""query,target,fident,alnlen,mismatch,gapopen,qstart,qend""; format_out=""$format_out,tstart,tend,evalue,bits,qseq,tseq""; cmd=""; mmseqs easy-search; query.fasta; target_DB; result.tsv; tmp_easy_search; -a 1; --alignment-mode 3; --remove-tmp-files 0; --sort-results 0; --threads 96 ; --format-mode 4; --format-output '$format_out'; ""; echo ""$cmd"" | cat -n; eval $cmd; ```. ## MMseqs Output (for bugs); ```; # mmseqs easy-search; # query.fasta; # target_DB; # result.tsv; # tmp_easy_search; # -a 1; # --alignment-mode 3; # --remove-tmp-files 0; # --sort-results 0; # --threads 96 ; # --format-mode 4; # --format-output 'query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq'; ; Create directory tmp_easy_search; easy-search query.fasta target_DB result.tsv tmp_easy_search -a 1 --alignment-mode 3 --remove-tmp-files 0 --sort-results 0 --threads 96 --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:2602,Availability,Mask,Mask,2602,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:2620,Availability,Mask,Mask,2620,"um62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:2652,Availability,Mask,Mask,2652,"ignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:2871,Availability,Mask,Mask,2871,"ct 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:5373,Availability,mask,mask,5373,"reatedb query.fasta tmp_easy_search/6745795380167965363/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:5382,Availability,mask,mask-prob,5382,"reatedb query.fasta tmp_easy_search/6745795380167965363/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:5398,Availability,mask,mask-lower-case,5398,"y_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/67457953801679",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:5776,Energy Efficiency,consumption,consumption,5776,"a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:1608,Integrability,wrap,wrapped,1608,"sult.tsv; tmp_easy_search; -a 1; --alignment-mode 3; --remove-tmp-files 0; --sort-results 0; --threads 96 ; --format-mode 4; --format-output '$format_out'; ""; echo ""$cmd"" | cat -n; eval $cmd; ```. ## MMseqs Output (for bugs); ```; # mmseqs easy-search; # query.fasta; # target_DB; # result.tsv; # tmp_easy_search; # -a 1; # --alignment-mode 3; # --remove-tmp-files 0; # --sort-results 0; # --threads 96 ; # --format-mode 4; # --format-output 'query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq'; ; Create directory tmp_easy_search; easy-search query.fasta target_DB result.tsv tmp_easy_search -a 1 --alignment-mode 3 --remove-tmp-files 0 --sort-results 0 --threads 96 --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq . MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:6701,Integrability,wrap,wrapped-scoring,6701,"40f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:7170,Modifiability,extend,extend,7170,"rflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:8133,Modifiability,extend,extend,8133,"lign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; [=================================================================] 1 0s 0ms; Time for merging to result.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms; ```. ## Context; * I would like to create a multiple sequence alignment FASTA file from the results from `easy-search` to use as input to other tools. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32. * Operating system and version:. ```; uname -a; Linux lambda-servername 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ``",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:5487,Performance,load,load-mode,5487,"y_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/67457953801679",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:6945,Performance,load,load-mode,6945,"iltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_D",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/693:8171,Performance,load,load-mode,8171,"lign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; [=================================================================] 1 0s 0ms; Time for merging to result.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms; ```. ## Context; * I would like to create a multiple sequence alignment FASTA file from the results from `easy-search` to use as input to other tools. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32. * Operating system and version:. ```; uname -a; Linux lambda-servername 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ``",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693
https://github.com/soedinglab/MMseqs2/issues/695:119,Availability,error,error,119,"## Expected Behavior; `mmseqs expandaln` to complete successfully. ## Current Behavior; `mmseqs expandaln` throws this error:. ```; Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:1255,Availability,mask,mask,1255," Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --real",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:1264,Availability,mask,mask-prob,1264," Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --real",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:1280,Availability,mask,mask-lower-case,1280,"## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:2563,Availability,mask,mask-profile,2563,"_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:3503,Availability,mask,mask,3503,"/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:3512,Availability,mask,mask-prob,3512,"/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:3528,Availability,mask,mask-lower-case,3528,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:5537,Availability,mask,mask-profile,5537,"83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:6477,Availability,mask,mask,6477,"/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:6486,Availability,mask,mask-prob,6486,"/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:6502,Availability,mask,mask-lower-case,6502,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:1778,Integrability,wrap,wrapped-scoring,1778,"ilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:4363,Integrability,wrap,wrapped-scoring,4363,"10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/ta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:7337,Integrability,wrap,wrapped-scoring,7337,"10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:2245,Modifiability,extend,extend,2245,"ct-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:2905,Modifiability,extend,extend,2905,"-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:4830,Modifiability,extend,extend,4830,"20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:5879,Modifiability,extend,extend,5879," 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:7804,Modifiability,extend,extend,7804,"20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## MMseqs Output (for bugs); [MMseqs output](https://gist.github.com/bchodkowski-vir/a144575014463748bfed089df6a8c03a). ## Context; I wish to run",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:712,Performance,load,load-mode,712,"## Expected Behavior; `mmseqs expandaln` to complete successfully. ## Current Behavior; `mmseqs expandaln` throws this error:. ```; Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:1369,Performance,load,load-mode,1369,"## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:2020,Performance,load,load-mode,2020,"leotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --g",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:2863,Performance,load,load-mode,2863,"-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:3617,Performance,load,load-mode,3617,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:4605,Performance,load,load-mode,4605,"mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:5837,Performance,load,load-mode,5837," 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:6591,Performance,load,load-mode,6591,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:7579,Performance,load,load-mode,7579,"mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:8325,Performance,load,load-mode,8325,"ode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## MMseqs Output (for bugs); [MMseqs output](https://gist.github.com/bchodkowski-vir/a144575014463748bfed089df6a8c03a). ## Context; I wish to run `colabfold_search` on my own database via `--db1 'target_DB'`. `colabfold_search` works fine with `--db1 'uniref30_2103_db'`. Number of sequences in `query.fasta`: 1; ```; egrep -c '^>' query.fasta; 1. wc -l result_20230419_115721/qdb; 1 result_20230419_115721/qdb; ```. Number of sequences in `target_DB.fasta`: 104664; ```; egrep -c '^>' target_DB.fasta; 104664. wc -l target_DB; 104664 target_DB; ```. Number of sequences in resulting database `res`: 1011; ```; wc -l result_20230419_115721/res; 1011 result_20230419_115721/res; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:11181,Testability,log,log,11181,"ng to see what these `awk` commands returned when looking at databases:. ```; awk 'BEGIN { min = 2^32; } $3 < min { min = $3 }; $3 > max { max = $3 } { sum = sum + $3; n = n + 1; } END { print sum/n,min,max; }' $out_DB; awk 'BEGIN { min = 2^32; } $2 < min { min = $2 }; $2 > max { max = $2 } { sum = sum + $2; n = n + 1; } END { print sum/n,min,max; }' $out_DB. out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; target_DB/target_DB.index | 412.665 2 8110 | 2.15005e+07 0 43190597; target_DB/target_DB.idx.index | 6.04213e+07 1 512000009 | 5.54188e+08 0 1261572096; result_20230419_115721/qdb.index | 114 114 114 | 0 0; result_20230419_115721/qdb_h.index | 190 190 190 | 0 0; result_20230419_115721/res.index | 58682 58682 58682 | 0 0; ```. I can run these sequences via `mmseqs easy-search` (which does not call `expandaln`):; ```; easy-search query.fasta /home/user/project/target_DB/target_DB result_DB tmp_easy_search --db-output 1 --max-seqs 10000. wc -l result_DB; 606 result_DB. # awk sum/n,min,max; out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; result_DB.index | 104112 104112 104112 | 0 0; ```. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * self-compiled; * `cmake version 3.16.3`; * The CXX compiler identification is `GNU 9.4.0`; * The C compiler identification is `GNU 9.4.0`; * [cmake.000.log](https://gist.github.com/bchodkowski-vir/13fdfdb33efac1ee1fcb6e7b71846643) created Sep 1 2022; * [make.000.log](https://gist.github.com/bchodkowski-vir/8cb1557213a05f3032abed310d5a10c4) created Sep 1 2022; * [make_install.000.log](https://gist.github.com/bchodkowski-vir/fe17acc49335bf8312c14a0cec14c9b9) created Sep 1 2022; * `uname -a`; * `Linux lambda-name 5.4.0-144-generic #161-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux`. Please let me know if there is any other information I can share to help debug this. Kind regards.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:11292,Testability,log,log,11292,"ng to see what these `awk` commands returned when looking at databases:. ```; awk 'BEGIN { min = 2^32; } $3 < min { min = $3 }; $3 > max { max = $3 } { sum = sum + $3; n = n + 1; } END { print sum/n,min,max; }' $out_DB; awk 'BEGIN { min = 2^32; } $2 < min { min = $2 }; $2 > max { max = $2 } { sum = sum + $2; n = n + 1; } END { print sum/n,min,max; }' $out_DB. out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; target_DB/target_DB.index | 412.665 2 8110 | 2.15005e+07 0 43190597; target_DB/target_DB.idx.index | 6.04213e+07 1 512000009 | 5.54188e+08 0 1261572096; result_20230419_115721/qdb.index | 114 114 114 | 0 0; result_20230419_115721/qdb_h.index | 190 190 190 | 0 0; result_20230419_115721/res.index | 58682 58682 58682 | 0 0; ```. I can run these sequences via `mmseqs easy-search` (which does not call `expandaln`):; ```; easy-search query.fasta /home/user/project/target_DB/target_DB result_DB tmp_easy_search --db-output 1 --max-seqs 10000. wc -l result_DB; 606 result_DB. # awk sum/n,min,max; out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; result_DB.index | 104112 104112 104112 | 0 0; ```. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * self-compiled; * `cmake version 3.16.3`; * The CXX compiler identification is `GNU 9.4.0`; * The C compiler identification is `GNU 9.4.0`; * [cmake.000.log](https://gist.github.com/bchodkowski-vir/13fdfdb33efac1ee1fcb6e7b71846643) created Sep 1 2022; * [make.000.log](https://gist.github.com/bchodkowski-vir/8cb1557213a05f3032abed310d5a10c4) created Sep 1 2022; * [make_install.000.log](https://gist.github.com/bchodkowski-vir/fe17acc49335bf8312c14a0cec14c9b9) created Sep 1 2022; * `uname -a`; * `Linux lambda-name 5.4.0-144-generic #161-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux`. Please let me know if there is any other information I can share to help debug this. Kind regards.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/695:11411,Testability,log,log,11411,"ng to see what these `awk` commands returned when looking at databases:. ```; awk 'BEGIN { min = 2^32; } $3 < min { min = $3 }; $3 > max { max = $3 } { sum = sum + $3; n = n + 1; } END { print sum/n,min,max; }' $out_DB; awk 'BEGIN { min = 2^32; } $2 < min { min = $2 }; $2 > max { max = $2 } { sum = sum + $2; n = n + 1; } END { print sum/n,min,max; }' $out_DB. out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; target_DB/target_DB.index | 412.665 2 8110 | 2.15005e+07 0 43190597; target_DB/target_DB.idx.index | 6.04213e+07 1 512000009 | 5.54188e+08 0 1261572096; result_20230419_115721/qdb.index | 114 114 114 | 0 0; result_20230419_115721/qdb_h.index | 190 190 190 | 0 0; result_20230419_115721/res.index | 58682 58682 58682 | 0 0; ```. I can run these sequences via `mmseqs easy-search` (which does not call `expandaln`):; ```; easy-search query.fasta /home/user/project/target_DB/target_DB result_DB tmp_easy_search --db-output 1 --max-seqs 10000. wc -l result_DB; 606 result_DB. # awk sum/n,min,max; out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; result_DB.index | 104112 104112 104112 | 0 0; ```. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * self-compiled; * `cmake version 3.16.3`; * The CXX compiler identification is `GNU 9.4.0`; * The C compiler identification is `GNU 9.4.0`; * [cmake.000.log](https://gist.github.com/bchodkowski-vir/13fdfdb33efac1ee1fcb6e7b71846643) created Sep 1 2022; * [make.000.log](https://gist.github.com/bchodkowski-vir/8cb1557213a05f3032abed310d5a10c4) created Sep 1 2022; * [make_install.000.log](https://gist.github.com/bchodkowski-vir/fe17acc49335bf8312c14a0cec14c9b9) created Sep 1 2022; * `uname -a`; * `Linux lambda-name 5.4.0-144-generic #161-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux`. Please let me know if there is any other information I can share to help debug this. Kind regards.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695
https://github.com/soedinglab/MMseqs2/issues/697:329,Availability,Error,Error,329,"## Expected Behavior; assign taxonomy to Metagenome contigs, and the database is created from krakenuniq bacterial database.; ## Current Behavior; tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:352,Availability,Error,Error,352,"## Expected Behavior; assign taxonomy to Metagenome contigs, and the database is created from krakenuniq bacterial database.; ## Current Behavior; tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:377,Availability,Error,Error,377,"## Expected Behavior; assign taxonomy to Metagenome contigs, and the database is created from krakenuniq bacterial database.; ## Current Behavior; tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:1708,Availability,mask,mask,1708,"ia-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:2379,Availability,mask,mask,2379,"e search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:2388,Availability,mask,mask-prob,2388,"e search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:2404,Availability,mask,mask-lower-case,2404,", using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statica",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:3031,Availability,Error,Error,3031,"m62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. system:linux; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 56; On-line CPU(s) list: 0-55; Thread(s) per core: 1; Core(s) per socket: 28; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 106; Model name: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:3054,Availability,Error,Error,3054,"m62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. system:linux; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 56; On-line CPU(s) list: 0-55; Thread(s) per core: 1; Core(s) per socket: 28; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 106; Model name: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:3079,Availability,Error,Error,3079,"m62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. system:linux; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 56; On-line CPU(s) list: 0-55; Thread(s) per core: 1; Core(s) per socket: 28; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 106; Model name: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:2684,Energy Efficiency,consumption,consumption,2684,"mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:2493,Performance,load,load-mode,2493,", using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statica",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:860,Testability,test,test,860,"## Expected Behavior; assign taxonomy to Metagenome contigs, and the database is created from krakenuniq bacterial database.; ## Current Behavior; tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:895,Testability,test,test,895,"## Expected Behavior; assign taxonomy to Metagenome contigs, and the database is created from krakenuniq bacterial database.; ## Current Behavior; tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/697:1495,Testability,test,test,1495,"roduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697
https://github.com/soedinglab/MMseqs2/issues/698:6751,Availability,Mask,Mask,6751,"	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:6769,Availability,Mask,Mask,6769,"	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:6801,Availability,Mask,Mask,6801,"ignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:7020,Availability,Mask,Mask,7020,"ject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:8548,Availability,mask,mask,8548,"mes 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:8557,Availability,mask,mask-prob,8557,"mes 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:8573,Availability,mask,mask-lower-case,8573,"s 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:9095,Availability,Mask,Masked,9095,"consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:1956,Energy Efficiency,reduce,reduce,1956,"ior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target fident qcov tcov; XP_645403.1 XP_640770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:8855,Energy Efficiency,consumption,consumption,8855,"g exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:680,Integrability,protocol,protocol,680,"## Main Issue. Dear mmseqs team,. I am a fairly new user of your software and have run into some unexpected behavior which I am unable to resolve. I am attempting to cluster a database of eukaryotic protein sequences (~1.8*10e6 sequences) using profile search based clustering. I am attempting to iterate or cascade the workflow described in ""How to cluster using profiles"". The issue I am encountering is that sequences of very different length are merged in clustering despite providing -c 0.8 --covmode 0 during the searches. This causes issues during cascaded clustering as single domain proteins are merged with multi-domain proteins. . Example output after one round of the protocol (described below, -c 0.8, --covmode 0). ![poor_MSA](https://user-images.githubusercontent.com/131811718/234382984-9eacd216-41b8-46af-a694-7805a1ea4d5d.png). For basic cascaded clustering ""mmseqs cluster"" or single round clustering using ""search"" followed by ""clust"" the behavior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:1848,Integrability,protocol,protocol,1848,"clustering ""mmseqs cluster"" or single round clustering using ""search"" followed by ""clust"" the behavior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:5757,Integrability,wrap,wrapped,5757,"ity 	3. Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; [=================================================================] 1.27M 21m 19s 868ms; Time for merging to euk72-90.profile2: 0h 0m 40s 828ms; Time for processing: 0h 23m 5s 420ms; profile2consensus euk72-90.profile2 euk72-90.consensus2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix	aa:blosum62.out,nucl:nucleotide.out; Max sequence length	65535; Threads 	48; Compressed 	0; Verbosity 	3. [=================================================================] 1.27M 2m 13s 834ms; Time for merging to euk72-90.consensus2: 0h 0m 0s 850ms; Time for processing: 0h 2m 15s 974ms; search euk72-90.profile2 euk72-90.consensus2 euk72-90.profile_search2 .mmseqs_tmp -s 7 -c 0.8 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	48; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:10322,Integrability,wrap,wrapped-scoring,10322,"; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:10793,Modifiability,extend,extend,10793,"mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Time for processing: 0h 33m 55s 605ms; clust euk72-90.profile2 euk72-90.profile_search2 euk72-90.clust2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Cluster mode 	0; Max connected component depth	1000; Similarity type 	2; Threads 	48; Compressed 	0; Verbosity 	3. Clustering mode: Set Cover; [=================================================================] 1.27M 0s 909ms; Sort entries; Find missing connections; Found 12659367 new connections.; Re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:3895,Performance,Load,Loading,3895,"40770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0.813; XP_638978.1 XP_640770.1 0.311 0.988 0.978; XP_640255.1 XP_640770.1 0.479 0.989 0.978; XP_629182.1 XP_640770.1 0.468 0.989 0.978; XP_645001.1 XP_640770.1 0.441 0.989 0.978; XP_640768.1 XP_640770.1 0.547 1.000 1.000; XP_629181.1 XP_640770.1 0.485 0.989 0.978; XP_643412.2 XP_640770.1 0.523 0.979 0.989; XP_635471.1 XP_640770.1 0.542 0.987 0.813; XP_629090.1 XP_640770.1 0.487 1.000 0.967; XP_640770.1 XP_640770.1 0.605 1.000 1.000; XP_640770.1 XP_640989.2 0.541 0.989 0.940; XP_640770.1 XP_640994.1 0.537 0.989 0.939; XP_640770.1 XP_640768.1 0.513 1.000 1.000; XP_640770.1 XP_640766.1 0.520 0.989 0.990; XP_640770.1 XP_640764.1 0.531 0.989 0.938; XP_640770.1 XP_640763.1 0.532 0.989 0.935; XP_640770.1 XP_640792.1 0.504 0.989 0.989; ...; ... ## MMseqs Output (for bugs); Omitting the initial prefilering and providing one round of iterated profile based clustering output. . [-] Unloading mmseqs 2-13-45111-219-gaabc78c ; [+] Loading mmseqs 2-13-45111-219-gaabc78c ; result2profile euk72-90.profile euk72-90.consensus euk72-90.profile_search euk72-90.profile2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; ; Profile E-value threshold 	0.001; Compositional bias 	1; Compositional bias 	1 ; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Preload mode 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Gap pseudo count 	10; Threads 	48; Compressed 	0; Verbosity 	3. Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; [==========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:8662,Performance,load,load-mode,8662,"s 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:10568,Performance,load,load-mode,10568,"filtering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Time for processing: 0h 33m 55s 605ms; clust euk72-90.profile2 euk72-90.profile_search2 euk72-90.clust2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Cluster mode 	0; Max conne",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/698:1972,Safety,redund,redundancy,1972,"ior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target fident qcov tcov; XP_645403.1 XP_640770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698
https://github.com/soedinglab/MMseqs2/issues/699:117,Performance,perform,performed,117,"## Context; I am working with metagenomic data; Assemblies and gene annotation have been made by samples and then we performed a clustering at 95% identity to clustered genes by sample into one genes catalog. The tradictionnal command used is based on CD-HIt : `cd-hit-est -c 0.95`.; I want to test mmseq for saving computing time (original, isn't it?!). ## Expected Behavior; results similar to cd-hit in a much less time. ## Current Behavior; input =13 387 709 nucleic sequences. cd-hit output : 2,102,272 clusters; linclust output : 1,986,968 clusters (ok good start); cluster output : 8062 cluster (!!! what ?). I did not check anything further, except that both mmseq clustering ran well. I obviously miss something !; ; How is that possible that `cluster` produced only 8k clusters ?. ## Your Environment; mmseqs2-v14-7e284. the command lines used : ; * for linclust; `mmseqs easy-cluster AllSamples-cd-hit-est.0.95 mmseq_easyCluster tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`; for cluster; `mmseqs easy-linclust AllSamples-cd-hit-est.0.95 mmseq_easyLinclust tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/699
https://github.com/soedinglab/MMseqs2/issues/699:294,Testability,test,test,294,"## Context; I am working with metagenomic data; Assemblies and gene annotation have been made by samples and then we performed a clustering at 95% identity to clustered genes by sample into one genes catalog. The tradictionnal command used is based on CD-HIt : `cd-hit-est -c 0.95`.; I want to test mmseq for saving computing time (original, isn't it?!). ## Expected Behavior; results similar to cd-hit in a much less time. ## Current Behavior; input =13 387 709 nucleic sequences. cd-hit output : 2,102,272 clusters; linclust output : 1,986,968 clusters (ok good start); cluster output : 8062 cluster (!!! what ?). I did not check anything further, except that both mmseq clustering ran well. I obviously miss something !; ; How is that possible that `cluster` produced only 8k clusters ?. ## Your Environment; mmseqs2-v14-7e284. the command lines used : ; * for linclust; `mmseqs easy-cluster AllSamples-cd-hit-est.0.95 mmseq_easyCluster tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`; for cluster; `mmseqs easy-linclust AllSamples-cd-hit-est.0.95 mmseq_easyLinclust tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/699
https://github.com/soedinglab/MMseqs2/issues/701:57,Availability,down,downloaded,57,"## Expected Behavior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/701:502,Availability,Down,Download,502,"## Expected Behavior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/701:1356,Availability,down,downloaded,1356,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/701:1403,Availability,down,downloaded,1403,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/701:1460,Availability,down,download,1460,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/701:1643,Availability,down,downloaded,1643,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/701:1707,Availability,down,downloaded,1707,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/701:1909,Deployability,install,install,1909,"ior; Starting from nr which was already downloaded, generate all of the required files to run mmseqs taxonomy to assign taxonomy to metagenome assembled genomes. ## Current Behavior; nr.fnaDB_mapping is empty (ls -thor reveals it is 0 bytes and mmseqs easy-taxonomy displays ""nr.fnaDB_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.""). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz; #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot; diamond makedb --in nr -d nr.dmnd; #Prepare taxonomy database for mmseqs2; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; rm taxdump.tar.gz; blastdbcmd -db nr -entry all > nr.fna; blastdbcmd -db nr -entry all -outfmt ""%a %T"" > nr.fna.taxidmapping; mmseqs createdb nr.fna nr.fnaDB && \; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I want to use MMseqs2 to assign taxonomy to contig-level metagenome-assembled genomes. I had previously downloaded nr as above, so hopefully the way I downloaded it works for MMseqs? I could alternatively re-download nr entirely with the mmseqs workflows, but would prefer not to do that if possible for consistency with analyses that are already done and used the version of nr that I have downloaded. I don't think versioning is actually a problem as I downloaded nr within the past couple months. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; I am using a conda environment created using `conda install -c bioconda mmseqs2` on April 19, 2023.; version: 14.7e284 (via conda list in activated environment)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701
https://github.com/soedinglab/MMseqs2/issues/702:307,Availability,avail,available,307,"## Expected Behaviour. Unknown. ## Current Behaviour. I am trying to re-create the clustered nr database currently featured on the BLAST site. The cluster step appears to stall after merging the split files and I get the message ""Cannot touch 215222407074 into main memory"". I have 188G of RAM and 63 cores available. I have tried to reduce the amount of memory using the --split-memory-limit 70G, --split-mode 2, --split 2, and --compressed 1 options but it does not appear to have helped. This is my first time using MMseqs so any help would be much appreciated. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:1707,Availability,Mask,Mask,1707,"nd empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	100",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:1725,Availability,Mask,Mask,1725,"nd empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	100",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:1757,Availability,Mask,Mask,1757,"ory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4130,Availability,mask,mask,4130,"00000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4139,Availability,mask,mask-prob,4139,"00000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4155,Availability,mask,mask-lower-case,4155,"6542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4624,Availability,mask,mask,4624," 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4633,Availability,mask,mask-prob,4633," 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4649,Availability,mask,mask-lower-case,4649,"le 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:5135,Availability,mask,mask,5135,"sk 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 spli",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:5144,Availability,mask,mask-prob,5144,"sk 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 spli",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:5160,Availability,mask,mask-lower-case,5160,"--hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:334,Energy Efficiency,reduce,reduce,334,"## Expected Behaviour. Unknown. ## Current Behaviour. I am trying to re-create the clustered nr database currently featured on the BLAST site. The cluster step appears to stall after merging the split files and I get the message ""Cannot touch 215222407074 into main memory"". I have 188G of RAM and 63 cores available. I have tried to reduce the amount of memory using the --split-memory-limit 70G, --split-mode 2, --split 2, and --compressed 1 options but it does not appear to have helped. This is my first time using MMseqs so any help would be much appreciated. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:5422,Energy Efficiency,Reduce,Reduced,5422,"62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:221,Integrability,message,message,221,"## Expected Behaviour. Unknown. ## Current Behaviour. I am trying to re-create the clustered nr database currently featured on the BLAST site. The cluster step appears to stall after merging the split files and I get the message ""Cannot touch 215222407074 into main memory"". I have 188G of RAM and 63 cores available. I have tried to reduce the amount of memory using the --split-memory-limit 70G, --split-mode 2, --split 2, and --compressed 1 options but it does not appear to have helped. This is my first time using MMseqs so any help would be much appreciated. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Create directory tmp; cluster --min-seq-id 0.9 --cov-mode 0 -c 0.9 DB DB_clu tmp --remove-tmp-files --threads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:2157,Integrability,wrap,wrapped,2157,"eads 40 --split-memory-limit 70G --split-mode 2 --split 4 --compressed 1 . MMseqs Version: 	bdd169b3e285299cab792e62d60eb1f4e4e434d2; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	4; Split mode 	2; Split memory limit 	70G; Coverage threshold 	0.9; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:3500,Integrability,wrap,wrapped-scoring,3500,"t 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:6842,Integrability,wrap,wrapped-scoring,6842,"split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 827ms; Sort by rep. sequence 0h 0m 3s 410ms; Merge splits ... Time for fill: 0h 14m 22s 381ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 1h 16m 36s 224ms; rescorediagonal DB DB tmp/10260956542131223380/linclust/4311072182387952617/pref tmp/10260956542131223380/linclust/4311072182387952617/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 1 -v 3 . Can not touch 215222407074 into main memory; [> ] 0.00% 1 eta -. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:3045,Modifiability,extend,extendable,3045,"ry path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:3973,Modifiability,extend,extend,3973,"ust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4234,Modifiability,extend,extendable,4234,"6542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4768,Modifiability,extend,extendable,4768,"n:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:5279,Modifiability,extend,extendable,5279,"filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:3748,Performance,load,load-mode,3748,"type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:7002,Performance,load,load-mode,7002,"split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 827ms; Sort by rep. sequence 0h 0m 3s 410ms; Merge splits ... Time for fill: 0h 14m 22s 381ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 1h 16m 36s 224ms; rescorediagonal DB DB tmp/10260956542131223380/linclust/4311072182387952617/pref tmp/10260956542131223380/linclust/4311072182387952617/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 1 -v 3 . Can not touch 215222407074 into main memory; [> ] 0.00% 1 eta -. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:3022,Security,hash,hash,3022,"ry path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4180,Security,hash,hash-shift,4180,"6542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:4714,Security,hash,hash-shift,4714,"n:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/702:5225,Security,hash,hash-shift,5225,"filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702
https://github.com/soedinglab/MMseqs2/issues/703:222,Availability,fault,fault,222,"## Expected Behavior; Taxonomy assignment of viral OTU sequences (nucleotide) using the 2bLCA method against a custom formatted amino acid database from IMG/VR. ## Current Behavior; The LCA step dies due to a segmentation fault when using a small test dataset that I have previously had success with when using Antônio Camargo's ICTV MMseqs2 protein database (https://github.com/apcamargo/ictv-mmseqs2-protein-database). For reference, I have also allocated 40 cores and 700gb RAM to this job, which fails after consuming only 178gb of mem.; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loadin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:3184,Availability,error,error,3184,"batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; **40 cpus, 700gb RAM**; * Operating system and version:; * Operating System: **CentOS Linux 7 (Core)**; * Kernel: **Linux 3.10.0-1160.62.1.el7.x",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:3344,Availability,fault,fault,3344,"output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **bioconda**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; **40 cpus, 700gb RAM**; * Operating system and version:; * Operating System: **CentOS Linux 7 (Core)**; * Kernel: **Linux 3.10.0-1160.62.1.el7.x86_64**. [job-mmseqs_easytax_050523_error.txt](https://github.com/soedinglab/MMseqs2/files/11426489/job-mmseqs_easytax_050523_error.txt); [job-mmseqs_easytax_050523_out.txt](https://github.com/soedinglab/MMseqs2/files/11426490/job-mmseqs_e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:1501,Deployability,integrat,integrate,1501,"sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:448,Energy Efficiency,allocate,allocated,448,"## Expected Behavior; Taxonomy assignment of viral OTU sequences (nucleotide) using the 2bLCA method against a custom formatted amino acid database from IMG/VR. ## Current Behavior; The LCA step dies due to a segmentation fault when using a small test dataset that I have previously had success with when using Antônio Camargo's ICTV MMseqs2 protein database (https://github.com/apcamargo/ictv-mmseqs2-protein-database). For reference, I have also allocated 40 cores and 700gb RAM to this job, which fails after consuming only 178gb of mem.; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loadin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:1501,Integrability,integrat,integrate,1501,"sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:1995,Performance,Load,Loading,1995,"a.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:2040,Performance,Load,Loading,2040,"b --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:2093,Performance,Load,Loading,2093,"db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:2831,Performance,load,load,2831," 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/703:247,Testability,test,test,247,"## Expected Behavior; Taxonomy assignment of viral OTU sequences (nucleotide) using the 2bLCA method against a custom formatted amino acid database from IMG/VR. ## Current Behavior; The LCA step dies due to a segmentation fault when using a small test dataset that I have previously had success with when using Antônio Camargo's ICTV MMseqs2 protein database (https://github.com/apcamargo/ictv-mmseqs2-protein-database). For reference, I have also allocated 40 cores and 700gb RAM to this job, which fails after consuming only 178gb of mem.; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loadin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703
https://github.com/soedinglab/MMseqs2/issues/705:181,Usability,clear,clearly,181,"Hi,. Is it possible to see all the hits (seq id, e-val etc.) for a query sequence that are used to inform the lca? I have some hits to the taxonomic level 'root' that seem to to be clearly from a particular taxa when I blast them against NR and I'd like to see in more detail what's going on in the lca stage of mmseq taxonomy. Cheers,; Andrew",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/705
https://github.com/soedinglab/MMseqs2/issues/706:22,Availability,Down,Downloading,22,"## Expected Behavior; Downloading the latest MMseqs2 tarball with `wget` should work consistently:; `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. ## Current Behavior; Downloading the latest MMseqs2 tarball with `wget` is not working consistently, nor for `curl` (see below for examples and output). ## Steps to Reproduce (for bugs); 1. First test case—running `wget` doesn't work the first time, but works the second time:; ```; root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:17:43-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:180,Availability,Down,Downloading,180,"## Expected Behavior; Downloading the latest MMseqs2 tarball with `wget` should work consistently:; `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. ## Current Behavior; Downloading the latest MMseqs2 tarball with `wget` is not working consistently, nor for `curl` (see below for examples and output). ## Steps to Reproduce (for bugs); 1. First test case—running `wget` doesn't work the first time, but works the second time:; ```; root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:17:43-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:4174,Deployability,Pipeline,Pipelines,4174,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:4768,Deployability,Release,Release,4768,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:4818,Deployability,release,releases,4818,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:1534,Integrability,protocol,protocol,1534,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:1707,Integrability,protocol,protocol,1707,"|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:2049,Integrability,protocol,protocol,2049,"d.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:2733,Integrability,protocol,protocol,2733,"//mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:1527,Security,secur,secure-protocol,1527,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:1700,Security,secur,secure-protocol,1700,"|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:2042,Security,secur,secure-protocol,2042,"d.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:2726,Security,secur,secure-protocol,2726,"//mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:355,Testability,test,test,355,"## Expected Behavior; Downloading the latest MMseqs2 tarball with `wget` should work consistently:; `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. ## Current Behavior; Downloading the latest MMseqs2 tarball with `wget` is not working consistently, nor for `curl` (see below for examples and output). ## Steps to Reproduce (for bugs); 1. First test case—running `wget` doesn't work the first time, but works the second time:; ```; root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:17:43-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:465,Testability,test,test,465,"## Expected Behavior; Downloading the latest MMseqs2 tarball with `wget` should work consistently:; `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. ## Current Behavior; Downloading the latest MMseqs2 tarball with `wget` is not working consistently, nor for `curl` (see below for examples and output). ## Steps to Reproduce (for bugs); 1. First test case—running `wget` doesn't work the first time, but works the second time:; ```; root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:17:43-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:787,Testability,test,test,787,"## Expected Behavior; Downloading the latest MMseqs2 tarball with `wget` should work consistently:; `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. ## Current Behavior; Downloading the latest MMseqs2 tarball with `wget` is not working consistently, nor for `curl` (see below for examples and output). ## Steps to Reproduce (for bugs); 1. First test case—running `wget` doesn't work the first time, but works the second time:; ```; root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:17:43-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:1498,Testability,test,test,1498,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:3394,Testability,test,test,3394,".gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:3484,Testability,test,test,3484,".gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:3813,Testability,test,test,3813,"-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-i",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/706:4184,Testability,test,tests,4184,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706
https://github.com/soedinglab/MMseqs2/issues/707:1663,Availability,Mask,Mask,1663,"74787915800795625; lrwxrwxrwx. 1 igregore igregore 19 May 25 01:48 latest -> 7574787915800795625. ## Steps to Reproduce (for bugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clusteri",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:1680,Availability,Mask,Mask,1680,"74787915800795625; lrwxrwxrwx. 1 igregore igregore 19 May 25 01:48 latest -> 7574787915800795625. ## Steps to Reproduce (for bugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clusteri",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:1711,Availability,Mask,Mask,1711,"ugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4873,Availability,mask,mask,4873,"lust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4882,Availability,mask,mask-prob,4882,"lust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4898,Availability,mask,mask-lower-case,4898,"/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5431,Availability,mask,mask,5431,"d 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5440,Availability,mask,mask-prob,5440,"d 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5456,Availability,mask,mask-lower-case,5456,"f-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5974,Availability,mask,mask,5974,"nly-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5983,Availability,mask,mask-prob,5983,"nly-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5999,Availability,mask,mask-lower-case,5999,"re-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:16591,Availability,mask,mask,16591,"915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/clust -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:16600,Availability,mask,mask-prob,16600,"915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/clust -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:16616,Availability,mask,mask-lower-case,16616,"esubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:17139,Availability,Mask,Masked,17139,"0795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Target db start 1 to 9304; [=================================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 2 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:21468,Availability,mask,mask,21468,"6712. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 20ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:21477,Availability,mask,mask-prob,21477,"6712. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 20ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:21493,Availability,mask,mask-lower-case,21493,"ubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:22015,Availability,Mask,Masked,22015,"95625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db start 1 to 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:26296,Availability,mask,mask,26296,"f clusters: 5991. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 23ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:26305,Availability,mask,mask-prob,26305,"f clusters: 5991. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 23ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:26321,Availability,mask,mask-lower-case,26321,"3ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:26843,Availability,Mask,Masked,26843,"0795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db start 1 to 5991; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/inp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:762,Deployability,install,install,762,"""MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00"". ## Expected Behavior. mmseqs easy-cluster --help. says that running this command. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. I should get two FASTAs and one .tsv. Quoting the help:. examples:; mmseqs easy-cluster examples/DB.fasta result tmp; # Cluster output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjacency list. ## Current Behavior. No FASTA or .tsv is created. See current output:. ls -l /tmp/mydir; total 0; drwxr-xr-x. 2 igregore igregore 120 May 25 01:48 7574787915800795625; lrwxrwxrwx. 1 igregore igregore 19 May 25 01:48 latest -> 7574787915800795625. ## Steps to Reproduce (for bugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:798,Deployability,Release,Release,798,"""MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00"". ## Expected Behavior. mmseqs easy-cluster --help. says that running this command. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. I should get two FASTAs and one .tsv. Quoting the help:. examples:; mmseqs easy-cluster examples/DB.fasta result tmp; # Cluster output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjacency list. ## Current Behavior. No FASTA or .tsv is created. See current output:. ls -l /tmp/mydir; total 0; drwxr-xr-x. 2 igregore igregore 120 May 25 01:48 7574787915800795625; lrwxrwxrwx. 1 igregore igregore 19 May 25 01:48 latest -> 7574787915800795625. ## Steps to Reproduce (for bugs); install the latest version (MMseqs2 Release 14-7e284, 13 Oct 2022, precompiled AVX2) in /opt and run as shown in the help:. mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir. ## MMseqs Output (for bugs). ```; mmseqs easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:6223,Energy Efficiency,Reduce,Reduced,6223,"blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:16888,Energy Efficiency,consumption,consumption,16888,"ssing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Target db start 1 to 9304; [=================================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:21766,Energy Efficiency,consumption,consumption,21766,"ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db start 1 to 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 media",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:26594,Energy Efficiency,consumption,consumption,26594," 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db start 1 to 5991; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:2094,Integrability,wrap,wrapped,2094,"result /tmp/mydir; Create directory /tmp/mydir; easy-cluster /opt/mmseqs/examples/DB.fasta result /tmp/mydir . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 4; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa ; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4245,Integrability,wrap,wrapped-scoring,4245,"fle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/657336320172",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:6972,Integrability,wrap,wrapped-scoring,6972,"0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20.00K 0s 10ms ; Time for merging to pref_rescore1: 0h 0m 0s 4ms==================>] 99.51% 19.90K eta 0s ; Time for processing: 0h 0m 0s 25ms; clust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 20.00K 0s 7ms ; Sort entries; Find missing connections; Found 12302 new connections.; Reconstruct initial order; [============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:10302,Integrability,wrap,wrapped-scoring,10302,"73363201721293217/pref_filter1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 --filter-file /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/order_redundancy --threads 8 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 11.80K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 19ms; rescorediagonal /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:11317,Integrability,wrap,wrapped-scoring,11317,"--wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for pro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:18523,Integrability,wrap,wrapped-scoring,18523,"h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Target db start 1 to 9304; [=================================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 2 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:23374,Integrability,wrap,wrapped-scoring,23374,"index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db start 1 to 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:28206,Integrability,wrap,wrapped-scoring,28206,"x table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db start 1 to 5991; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:2898,Modifiability,extend,extendable,2898,"; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /opt/mmseqs/examples/DB.fasta /tmp/mydir/7574787915800795625/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4716,Modifiability,extend,extend,4716," 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4975,Modifiability,extend,extendable,4975,"/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5573,Modifiability,extend,extendable,5573,"ntext:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:6116,Modifiability,extend,extendable,6116,"tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:11788,Modifiability,extend,extend,11788,"ing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for processing: 0h 0m 1s 238ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:18994,Modifiability,extend,extend,18994,"ist length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for processing: 0h 0m 1s 367ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 9.30K 0s 6ms ; Sort entries;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:23845,Modifiability,extend,extend,23845,"e; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for processing: 0h 0m 0s 270ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 6.71K 0s 8ms ; Sort entries; Find missi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:28677,Modifiability,extend,extend,28677,"; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for processing: 0h 0m 0s 232ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 5.99K 0s 4ms ; Sort entries; Find missi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4491,Performance,load,load-mode,4491,"0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:7132,Performance,load,load-mode,7132,"extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20.00K 0s 10ms ; Time for merging to pref_rescore1: 0h 0m 0s 4ms==================>] 99.51% 19.90K eta 0s ; Time for processing: 0h 0m 0s 25ms; clust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 20.00K 0s 7ms ; Sort entries; Find missing connections; Found 12302 new connections.; Reconstruct initial order; [=================================================================] 100.00% 20.00K 0s 12ms ; Add missing connections; [==============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:10460,Performance,load,load-mode,10460,"/pref_filter2 --filter-file /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/order_redundancy --threads 8 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 11.80K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 19ms; rescorediagonal /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:11563,Performance,load,load-mode,11563,"3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for processing: 0h 0m 1s 238ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:16704,Performance,load,load-mode,16704,"esubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:18769,Performance,load,load-mode,18769,"=======================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 2 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for processing: 0h 0m 1s 367ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 /tmp/mydir/7574787",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:21582,Performance,load,load-mode,21582,"ubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:23620,Performance,load,load-mode,23620,"o 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for processing: 0h 0m 0s 270ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 /tmp/mydir/757478791580079562",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:26410,Performance,load,load-mode,26410,"3ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:28452,Performance,load,load-mode,28452,"91; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for processing: 0h 0m 0s 232ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 /tmp/mydir/757478791580079562",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:33548,Performance,load,load-mode,33548,5625/clu_tmp/4370341951257379003/aln_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2_h -v 3 . Time for processing: 0h 0m 0s 0ms; createtsv /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/cluster.tsv --threads 8 -v 3 . Time for merging to cluster.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; result2repseq /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_rep --db-load-mode 0 --compressed 0 --threads 8 -v 3 . [=================================================================] 100.00% 5.77K 0s 9ms ; Time for merging to clu_rep: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 17ms; result2flat /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_rep /tmp/mydir/7574787915800795625/rep_seq.fasta --use-fasta-header -v 3 . Time for processing: 0h 0m 0s 15ms; createseqfiledb /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_seqs --threads 8 -v 3 . [=================================================================] 100.00% 5.77K 0s 7ms ; Time for merging to clu_seqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 18ms; result2flat /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_seqs /tmp/mydir/7574787915800795625/all_seqs,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:2876,Security,hash,hash,2876,"; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /opt/mmseqs/examples/DB.fasta /tmp/mydir/7574787915800795625/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:4923,Security,hash,hash-shift,4923,"/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:5521,Security,hash,hash-shift,5521,"ntext:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/707:6064,Security,hash,hash-shift,6064,"tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707
https://github.com/soedinglab/MMseqs2/issues/708:2251,Availability,Mask,Mask,2251,"nclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708
https://github.com/soedinglab/MMseqs2/issues/708:2269,Availability,Mask,Mask,2269,"nclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	fals",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708
https://github.com/soedinglab/MMseqs2/issues/708:2301,Availability,Mask,Mask,2301,"	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708
https://github.com/soedinglab/MMseqs2/issues/708:2520,Availability,Mask,Mask,2520,"65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Cou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708
https://github.com/soedinglab/MMseqs2/issues/708:153,Deployability,pipeline,pipeline,153,"Hi MMseqs2 team,. I am completely new to MMseqs2 and simply want to taxonomically classify a few (30 max.) amino acid sequences that I retrieved from my pipeline. For this, I want to use the Uniref90 repository and I started with creating the database and indexed:. mmseqs createdb uniref90.fasta uniref90_DB; mmseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708
https://github.com/soedinglab/MMseqs2/issues/708:1322,Integrability,wrap,wrapped,1322,"mseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708
https://github.com/soedinglab/MMseqs2/issues/708:53,Usability,simpl,simply,53,"Hi MMseqs2 team,. I am completely new to MMseqs2 and simply want to taxonomically classify a few (30 max.) amino acid sequences that I retrieved from my pipeline. For this, I want to use the Uniref90 repository and I started with creating the database and indexed:. mmseqs createdb uniref90.fasta uniref90_DB; mmseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708
https://github.com/soedinglab/MMseqs2/issues/710:1110,Availability,Mask,Mask,1110," seems to not be willing to run on my machine : . mmseqs easy-cluster /Users/s/Documents/Albatros/protein//short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1; Create directory /Volumes/s/tmp; easy-cluster /Users/s/Documents/Albatros/short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Sim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:1128,Availability,Mask,Mask,1128," seems to not be willing to run on my machine : . mmseqs easy-cluster /Users/s/Documents/Albatros/protein//short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1; Create directory /Volumes/s/tmp; easy-cluster /Users/s/Documents/Albatros/short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Sim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:1160,Availability,Mask,Mask,1160,"lus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1; Create directory /Volumes/s/tmp; easy-cluster /Users/s/Documents/Albatros/short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:4487,Availability,mask,mask,4487,"mp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:4496,Availability,mask,mask-prob,4496,"mp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:4512,Availability,mask,mask-lower-case,4512,"81369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5056,Availability,mask,mask,5056,"7 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5065,Availability,mask,mask-prob,5065,"7 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5081,Availability,mask,mask-lower-case,5081," --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5611,Availability,mask,mask,5611,"re-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5620,Availability,mask,mask-prob,5620,"re-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5636,Availability,mask,mask-lower-case,5636," 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:9915,Availability,fault,fault,9915,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:10038,Availability,Error,Error,10038,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:10075,Availability,Error,Error,10075,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:10097,Availability,Error,Error,10097,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:48,Energy Efficiency,efficient,efficient,48,"Hi all, thanks for this MMseqs2 that seems very efficient. Unfortunately it seems to not be willing to run on my machine : . mmseqs easy-cluster /Users/s/Documents/Albatros/protein//short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1; Create directory /Volumes/s/tmp; easy-cluster /Users/s/Documents/Albatros/short_name-Group/true_plus300_proteins-13-strains_shortname-group.fa /Users/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5859,Energy Efficiency,Reduce,Reduced,5859,"nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:1554,Integrability,wrap,wrapped,1554,"rs/s/Documents/Albatros/protein/short_name-Group/clusterRes /Volumes/s/tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1. MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	1; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mod",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:3857,Integrability,wrap,wrapped-scoring,3857,"ompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:6626,Integrability,wrap,wrapped-scoring,6626," --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 1.81K 0s 7ms; Time for merging to pref_rescore1: 0h 0m 0s 64ms; Time for processing: 0h 0m 0s 310ms; clust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 13ms. Size of the sequence database: 1807; Size of the alignment database: 1807; Number of clusters: 757. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 49ms; c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:9574,Integrability,wrap,wrapped-scoring,9574,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:2389,Modifiability,extend,extendable,2389," path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /Users/s/Documents/protein/true_plus300_proteins-13-strains_shortname-group.fa /Volumes/s/tmp/3581369344000996149/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:4330,Modifiability,extend,extend,4330,"ove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:4589,Modifiability,extend,extendable,4589,"81369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5198,Modifiability,extend,extendable,5198," --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5753,Modifiability,extend,extendable,5753,"000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:4105,Performance,load,load-mode,4105," 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-k",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:6786,Performance,load,load-mode,6786,"nore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 1.81K 0s 7ms; Time for merging to pref_rescore1: 0h 0m 0s 64ms; Time for processing: 0h 0m 0s 310ms; clust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 13ms. Size of the sequence database: 1807; Size of the alignment database: 1807; Number of clusters: 757. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 49ms; createsubdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy /Volumes/s/tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:9734,Performance,load,load-mode,9734,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:2366,Security,hash,hash,2366," path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /Users/s/Documents/protein/true_plus300_proteins-13-strains_shortname-group.fa /Volumes/s/tmp/3581369344000996149/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:4537,Security,hash,hash-shift,4537,"81369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5146,Security,hash,hash-shift,5146," --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/710:5701,Security,hash,hash-shift,5701,"000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710
https://github.com/soedinglab/MMseqs2/issues/711:756,Modifiability,extend,extended,756,"Is there documentation of the spec for SAM format used by `mmseqs`? I have aligned a bunch of protein sequences (both query and target are proteins) that resulted in >7.5M alignments and ; * all of them have 16 in column 2. What does this mean? ; * what is the sequence shown in column 10? Is it that of the target or the query? ; * given the target and query sequences, and the SAM file, is there a way to produce the alignment? I see the start coordinate for the target in column 4, and using the information in the CIGAR string it is feasible to come up with the aligned region of the target sequence (or query, based on the answer to the previous question) but what about the query (or target)? ; * is it possible to include the `MD:Z:` tag and/or the extended CIGAR format to include exact mismatch information? . I am using MMseqs2 Version: 14.7e284 and would be happy to provide example alignments, if needed.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/711
https://github.com/soedinglab/MMseqs2/issues/712:237,Usability,clear,clear,237,"If I use the command:; ```; mmseqs easy-cluster {input} {params.outprefix} tmp/ --min-seq-id 0.9; ```. How will mmseqs determine the representative cluster? I've tried reading through the documentation, issues, and papers, but it wasn't clear to me how the representative was selected for `easy-cluster`...I'm sorry if I missed something! I think in the linclust paper it's mentioned that the longest sequence is selected as the representative, but I couldn't find a similar citation for `easy-cluster`.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/712
https://github.com/soedinglab/MMseqs2/pull/714:110,Deployability,patch,patching,110,"Due to changes in the way it handles includes, `MMseqs2` wasn't building with `gcc13`. These 4 files required patching to make them behave ...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714
https://github.com/soedinglab/MMseqs2/issues/715:229,Performance,optimiz,optimized,229,"Hi, thanks for making this toolkit! I'm excited to start using it with my data. I have a set of viral genomes that I would like to cluster. From the wiki and the paper, I understand that linclust by default runs a process that's optimized for protein sequences (using blosum64, kmer length..). Can it run on nucleotide sequences? What would be the way to go about it?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/715
https://github.com/soedinglab/MMseqs2/issues/716:731,Deployability,install,installed,731,"## Expected Behavior; I am using mmseqs2 to cluster a list of ~4500 protein domains. My fasta file looks like this:; ```; >0; KHRNMHCKVSLLDDTVYECVVEKHAKGQDLLKRVCEHLNLLEEDYFGLAIWDNATSKTWLDSAKEIKKQVRGVPWNFTFN; >1; VEHHTFFRLTSTDTIPKSKFLALGSKFRYSGRTQAQTRQASALIDRPAPHFERTASKRASRSLDGAAAVDSADRSPRPTS; >2; ERLDGENIYIRHSNLMLEDLDKSQEEIKKHHASISELKKNFMESVPEPRPSEWDKRLSTHSPFRTLNINGQIPTGEGPPL; ...; ```. I am using the following commands to cluster them:; ```; mmseqs createdb domains.fasta domains; mkdir tmp; mmseqs cluster domains domains_clu tmp --min-seq-id 0.25; ```. When I ran this a few days ago locally on my mac, this returned 8 files (`domains_clu.0` through `domains_clu.7`), and they all had sequences. ## Current Behavior. I just installed mmseqs2 on a remote cluster and ran these commands again, and now they return 48 files (`domains_clu.0` through `domains_clu.47`), and all of them are empty except `domains_clu.0`, `domains_clu.12`, and `domains_clu.14`. The data is identical to before. ## MMseqs Output; Output for `createdb domains.fasta domains`:; ```; MMseqs Version: 	14.7e284; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [4445] 0s 67ms; Time for merging to domains_h: 0h 0m 0s 36ms; Time for merging to domains: 0h 0m 0s 34ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 214ms; ```. The mmseqs cluster output is here: https://gist.github.com/lillianpetersen/b3344457890808097554467726d74e60. ## Your Environment; To install I used:; `mamba install -c conda-forge -c bioconda mmseqs2`. version:; ```; $ mmseqs version; 14.7e284; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/716
https://github.com/soedinglab/MMseqs2/issues/716:1562,Deployability,install,install,1562,"## Expected Behavior; I am using mmseqs2 to cluster a list of ~4500 protein domains. My fasta file looks like this:; ```; >0; KHRNMHCKVSLLDDTVYECVVEKHAKGQDLLKRVCEHLNLLEEDYFGLAIWDNATSKTWLDSAKEIKKQVRGVPWNFTFN; >1; VEHHTFFRLTSTDTIPKSKFLALGSKFRYSGRTQAQTRQASALIDRPAPHFERTASKRASRSLDGAAAVDSADRSPRPTS; >2; ERLDGENIYIRHSNLMLEDLDKSQEEIKKHHASISELKKNFMESVPEPRPSEWDKRLSTHSPFRTLNINGQIPTGEGPPL; ...; ```. I am using the following commands to cluster them:; ```; mmseqs createdb domains.fasta domains; mkdir tmp; mmseqs cluster domains domains_clu tmp --min-seq-id 0.25; ```. When I ran this a few days ago locally on my mac, this returned 8 files (`domains_clu.0` through `domains_clu.7`), and they all had sequences. ## Current Behavior. I just installed mmseqs2 on a remote cluster and ran these commands again, and now they return 48 files (`domains_clu.0` through `domains_clu.47`), and all of them are empty except `domains_clu.0`, `domains_clu.12`, and `domains_clu.14`. The data is identical to before. ## MMseqs Output; Output for `createdb domains.fasta domains`:; ```; MMseqs Version: 	14.7e284; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [4445] 0s 67ms; Time for merging to domains_h: 0h 0m 0s 36ms; Time for merging to domains: 0h 0m 0s 34ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 214ms; ```. The mmseqs cluster output is here: https://gist.github.com/lillianpetersen/b3344457890808097554467726d74e60. ## Your Environment; To install I used:; `mamba install -c conda-forge -c bioconda mmseqs2`. version:; ```; $ mmseqs version; 14.7e284; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/716
https://github.com/soedinglab/MMseqs2/issues/716:1586,Deployability,install,install,1586,"## Expected Behavior; I am using mmseqs2 to cluster a list of ~4500 protein domains. My fasta file looks like this:; ```; >0; KHRNMHCKVSLLDDTVYECVVEKHAKGQDLLKRVCEHLNLLEEDYFGLAIWDNATSKTWLDSAKEIKKQVRGVPWNFTFN; >1; VEHHTFFRLTSTDTIPKSKFLALGSKFRYSGRTQAQTRQASALIDRPAPHFERTASKRASRSLDGAAAVDSADRSPRPTS; >2; ERLDGENIYIRHSNLMLEDLDKSQEEIKKHHASISELKKNFMESVPEPRPSEWDKRLSTHSPFRTLNINGQIPTGEGPPL; ...; ```. I am using the following commands to cluster them:; ```; mmseqs createdb domains.fasta domains; mkdir tmp; mmseqs cluster domains domains_clu tmp --min-seq-id 0.25; ```. When I ran this a few days ago locally on my mac, this returned 8 files (`domains_clu.0` through `domains_clu.7`), and they all had sequences. ## Current Behavior. I just installed mmseqs2 on a remote cluster and ran these commands again, and now they return 48 files (`domains_clu.0` through `domains_clu.47`), and all of them are empty except `domains_clu.0`, `domains_clu.12`, and `domains_clu.14`. The data is identical to before. ## MMseqs Output; Output for `createdb domains.fasta domains`:; ```; MMseqs Version: 	14.7e284; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [4445] 0s 67ms; Time for merging to domains_h: 0h 0m 0s 36ms; Time for merging to domains: 0h 0m 0s 34ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 214ms; ```. The mmseqs cluster output is here: https://gist.github.com/lillianpetersen/b3344457890808097554467726d74e60. ## Your Environment; To install I used:; `mamba install -c conda-forge -c bioconda mmseqs2`. version:; ```; $ mmseqs version; 14.7e284; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/716
https://github.com/soedinglab/MMseqs2/issues/717:3018,Availability,mask,mask,3018,"rging to query: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Database type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Time for merging to query.lookup: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Tmp /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp folder does not exist or is not a directory.; docker-compose-mmseqs-web-worker-1 | prefilter /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:3027,Availability,mask,mask-lower-case,3027,"rging to query: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Database type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Time for merging to query.lookup: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Tmp /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp folder does not exist or is not a directory.; docker-compose-mmseqs-web-worker-1 | prefilter /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:10036,Availability,error,error,10036,"| ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker-1 | Removing temporary files; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | 2023/06/12 21:32:54 Process finished gracefully without error; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /ticket/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg HTTP/1.0"" 200 68; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /ticket/type/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg HTTP/1.0"" 200 18; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""POST /tickets HTTP/1.0"" 200 138; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /result/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/0 HTTP/1.0"" 200 161; docker-compose-mmseqs-web-api-1 | 172.17.0.5 - - [12/Jun/2023:21:32:55 +0000] ""GET /result/queries/q5hCr61",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:3568,Energy Efficiency,consumption,consumption,3568,h-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Query db start 1 to 1; docker-compose-mmseqs-web-worker-1 | Target db start 1 to 382389; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 3ms; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | 19.566667 k-mers per position; docker-compose-mmseqs-web-worker-1 | 3351 DB matches per sequence; docker-compose-mmseqs-web-worker-1 | 0 overflows; docker-compose-mmseqs-web-worker-1 | 0 queries produce too much hits (truncated result); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time f,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:5345,Integrability,wrap,wrapped-scoring,5345,"per sequence; docker-compose-mmseqs-web-worker-1 | 0 overflows; docker-compose-mmseqs-web-worker-1 | 0 queries produce too much hits (truncated result); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [===================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:5641,Modifiability,extend,extend,5641,"rging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 2ms; docker-compose-mmseqs-web-worker-1 | Time for merging to result: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | 6 alignments calculated.; docker-compose-mmseqs-web-worker-1 | 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; docker-compose-mmseqs-web-worker-1 | 0.000000 hits per query sequence.; docker-compose-mmseqs-web-worker-1 | Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:8587,Modifiability,extend,extend,8587,"eb-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/aln_merge -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | convertalis /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/alis_pdb_protein_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 0 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:3116,Performance,load,load-mode,3116,"rging to query: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Database type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Time for merging to query.lookup: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Tmp /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp folder does not exist or is not a directory.; docker-compose-mmseqs-web-worker-1 | prefilter /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:5576,Performance,load,load-mode,5576,"esult); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 2ms; docker-compose-mmseqs-web-worker-1 | Time for merging to result: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | ; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/717:8615,Performance,load,load-mode,8615,"eb-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/aln_merge -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | convertalis /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/alis_pdb_protein_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 0 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717
https://github.com/soedinglab/MMseqs2/issues/718:348,Availability,Error,Error,348,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718
https://github.com/soedinglab/MMseqs2/issues/718:371,Availability,Error,Error,371,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718
https://github.com/soedinglab/MMseqs2/issues/718:396,Availability,Error,Error,396,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718
https://github.com/soedinglab/MMseqs2/issues/718:105,Integrability,message,message,105,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718
https://github.com/soedinglab/MMseqs2/issues/718:1346,Security,access,access,1346,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718
https://github.com/soedinglab/MMseqs2/issues/718:1391,Security,access,access,1391,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718
https://github.com/soedinglab/MMseqs2/issues/719:26,Availability,error,error,26,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:158,Availability,error,error,158,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:261,Availability,error,error,261,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:364,Availability,error,error,364,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:467,Availability,error,error,467,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:569,Availability,error,error,569,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:672,Availability,error,error,672,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:775,Availability,error,error,775,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:878,Availability,error,error,878,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:989,Availability,error,error,989,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/719:71,Safety,predict,predicted,71,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719
https://github.com/soedinglab/MMseqs2/issues/720:1497,Availability,Mask,Mask,1497,"4.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/720:1514,Availability,Mask,Mask,1514,"4.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/720:1545,Availability,Mask,Mask,1545,"ength 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/720:1752,Availability,Mask,Mask,1752,"al bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Gap pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/720:3359,Availability,error,error,3359,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/720:541,Integrability,wrap,wrapped,541,"## Expected Behavior; The search should work as easy-search for the protein sequence fasta file. ## Current Behavior; Only easy-search is working for the protein sequence fasta file. ## Steps to Reproduce (for bugs); ` mmseqs search /mount-nfs/mydataset/single_train_sequences.fasta /mount-nfs/unierf100/uniref100.fasta /mount-nfs/mmseq_single/alRes.m8 ./tmp`. ## MMseqs Output (for bugs); ```; MMseqs Version: 14.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 240; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/720:3214,Integrability,message,message,3214,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/720:3417,Testability,test,test,3417,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720
https://github.com/soedinglab/MMseqs2/issues/721:131,Energy Efficiency,reduce,reduces,131,What E-Values and sequence identity should I be shooting for in an easy-search workflow? I'm having a hard time to understand what reduces false positives the most.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/721
https://github.com/soedinglab/MMseqs2/issues/722:58,Safety,predict,predicted,58,"Hi, just a direct question that when the ORF fasta files (predicted by prodigal) is the input file with easy-taxonomy (MMseqs Version: 	14.7e284), whether the fasta sequence will be again used to predict the ORF first or without ORF prediction and directly for a taxonomy assigment?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/722
https://github.com/soedinglab/MMseqs2/issues/722:196,Safety,predict,predict,196,"Hi, just a direct question that when the ORF fasta files (predicted by prodigal) is the input file with easy-taxonomy (MMseqs Version: 	14.7e284), whether the fasta sequence will be again used to predict the ORF first or without ORF prediction and directly for a taxonomy assigment?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/722
https://github.com/soedinglab/MMseqs2/issues/722:233,Safety,predict,prediction,233,"Hi, just a direct question that when the ORF fasta files (predicted by prodigal) is the input file with easy-taxonomy (MMseqs Version: 	14.7e284), whether the fasta sequence will be again used to predict the ORF first or without ORF prediction and directly for a taxonomy assigment?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/722
https://github.com/soedinglab/MMseqs2/issues/724:1211,Availability,fault,fault,1211,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724
https://github.com/soedinglab/MMseqs2/issues/724:31,Testability,test,testDB,31,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724
https://github.com/soedinglab/MMseqs2/issues/724:38,Testability,test,testDB,38,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724
https://github.com/soedinglab/MMseqs2/issues/724:45,Testability,test,testDB,45,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724
https://github.com/soedinglab/MMseqs2/issues/724:56,Testability,test,testDB,56,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724
https://github.com/soedinglab/MMseqs2/issues/724:824,Testability,test,testDB,824,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724
https://github.com/soedinglab/MMseqs2/issues/724:1071,Testability,test,testDB,1071,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724
https://github.com/soedinglab/MMseqs2/issues/725:517,Availability,error,error,517,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725
https://github.com/soedinglab/MMseqs2/issues/725:677,Deployability,install,installation,677,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725
https://github.com/soedinglab/MMseqs2/issues/725:523,Integrability,message,message,523,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725
https://github.com/soedinglab/MMseqs2/issues/725:375,Testability,test,tests,375,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725
https://github.com/soedinglab/MMseqs2/issues/725:429,Testability,test,tests,429,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725
https://github.com/soedinglab/MMseqs2/issues/725:449,Testability,test,test,449,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725
https://github.com/soedinglab/MMseqs2/issues/725:545,Testability,test,test,545,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725
https://github.com/soedinglab/MMseqs2/issues/726:637,Availability,redundant,redundant,637,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726
https://github.com/soedinglab/MMseqs2/issues/726:577,Energy Efficiency,reduce,reduce,577,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726
https://github.com/soedinglab/MMseqs2/issues/726:404,Performance,load,load-mode,404,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726
https://github.com/soedinglab/MMseqs2/issues/726:637,Safety,redund,redundant,637,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726
https://github.com/soedinglab/MMseqs2/issues/727:15,Availability,error,error,15,"I am having an error message saying ""2023-07-03 13:58:41,863 Warning: importing 'simtk.openmm' is deprecated. Import 'openmm' instead."" What should I do to solve it?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/727
https://github.com/soedinglab/MMseqs2/issues/727:21,Integrability,message,message,21,"I am having an error message saying ""2023-07-03 13:58:41,863 Warning: importing 'simtk.openmm' is deprecated. Import 'openmm' instead."" What should I do to solve it?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/727
https://github.com/soedinglab/MMseqs2/issues/728:484,Availability,Error,Error,484,"Hi there. I tried to run MMSEQS easy-search with different values of --threads and --split-memory-limit (<200G) but no success. I tried to reindex UniRef90 using --split-memory-limit 200G, still no success. So I'm wondering if it's really possible to run MMSEQS on UniRef90 with 256GB of RAM, or if I'm missing an option that makes it possible. Thank you in advance for the help. Guillaume. ## Expected Behavior; Complete the search. ## Current Behavior. Fail at the prefilter stage. Error: Prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Downloaded UniRef90 using the mmseqs databases tool. Then:; mmseqs easy-search ./DNAP-BAIT ./UniRef90 RST /tmp/MMS$$ --threads 4. ## MMseqs Output (for bugs). easy-search /shared/projects/phycovir/SONIA/DNAP-BAIT ./UniRef90 RST /tmp/MMS6178 --threads 4 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:507,Availability,Error,Error,507,"Hi there. I tried to run MMSEQS easy-search with different values of --threads and --split-memory-limit (<200G) but no success. I tried to reindex UniRef90 using --split-memory-limit 200G, still no success. So I'm wondering if it's really possible to run MMSEQS on UniRef90 with 256GB of RAM, or if I'm missing an option that makes it possible. Thank you in advance for the help. Guillaume. ## Expected Behavior; Complete the search. ## Current Behavior. Fail at the prefilter stage. Error: Prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Downloaded UniRef90 using the mmseqs databases tool. Then:; mmseqs easy-search ./DNAP-BAIT ./UniRef90 RST /tmp/MMS$$ --threads 4. ## MMseqs Output (for bugs). easy-search /shared/projects/phycovir/SONIA/DNAP-BAIT ./UniRef90 RST /tmp/MMS6178 --threads 4 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:656,Availability,Down,Downloaded,656,"Hi there. I tried to run MMSEQS easy-search with different values of --threads and --split-memory-limit (<200G) but no success. I tried to reindex UniRef90 using --split-memory-limit 200G, still no success. So I'm wondering if it's really possible to run MMSEQS on UniRef90 with 256GB of RAM, or if I'm missing an option that makes it possible. Thank you in advance for the help. Guillaume. ## Expected Behavior; Complete the search. ## Current Behavior. Fail at the prefilter stage. Error: Prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Downloaded UniRef90 using the mmseqs databases tool. Then:; mmseqs easy-search ./DNAP-BAIT ./UniRef90 RST /tmp/MMS$$ --threads 4. ## MMseqs Output (for bugs). easy-search /shared/projects/phycovir/SONIA/DNAP-BAIT ./UniRef90 RST /tmp/MMS6178 --threads 4 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:2055,Availability,Mask,Mask,2055,"um62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:2073,Availability,Mask,Mask,2073,"um62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:2105,Availability,Mask,Mask,2105,"lignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:2324,Availability,Mask,Mask,2324,"ect 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:4819,Availability,mask,mask,4819,"edb /shared/projects/phycovir/SONIA/DNAP-BAIT /tmp/MMS6178/15560953143015620527/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [405] 0s 59ms; Time for merging to query_h: 0h 0m 0s 2ms; Time for merging to query: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 76ms; Create directory /tmp/MMS6178/15560953143015620527/search_tmp; search /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:4828,Availability,mask,mask-prob,4828,"edb /shared/projects/phycovir/SONIA/DNAP-BAIT /tmp/MMS6178/15560953143015620527/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [405] 0s 59ms; Time for merging to query_h: 0h 0m 0s 2ms; Time for merging to query: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 76ms; Create directory /tmp/MMS6178/15560953143015620527/search_tmp; search /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFI",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:4844,Availability,mask,mask-lower-case,4844,"5] 0s 59ms; Time for merging to query_h: 0h 0m 0s 2ms; Time for merging to query: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 76ms; Create directory /tmp/MMS6178/15560953143015620527/search_tmp; search /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Staticall",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:5465,Availability,Mask,Masked,5465,"ult /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AVX2/SSE = yes for both",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:5720,Availability,Error,Error,5720,"ult /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AVX2/SSE = yes for both",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:5743,Availability,Error,Error,5743,"ult /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AVX2/SSE = yes for both",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:5170,Energy Efficiency,consumption,consumption,5170,"560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Statically-compiled. Use a compute node using the following SLURM reservation: ""srun -p fast --exclusive --pty bash"". Compute node has 54 cores and 256 Go RAM; Operating System: CentOS Linux 7 (Core); CPE OS Name: cpe:/o:centos:centos:7; Kernel: Linux 3.10.0-1160.6.1.el7.x86_64; Architecture: x86-64; AV",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:1062,Integrability,wrap,wrapped,1062,"different values of --threads and --split-memory-limit (<200G) but no success. I tried to reindex UniRef90 using --split-memory-limit 200G, still no success. So I'm wondering if it's really possible to run MMSEQS on UniRef90 with 256GB of RAM, or if I'm missing an option that makes it possible. Thank you in advance for the help. Guillaume. ## Expected Behavior; Complete the search. ## Current Behavior. Fail at the prefilter stage. Error: Prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Downloaded UniRef90 using the mmseqs databases tool. Then:; mmseqs easy-search ./DNAP-BAIT ./UniRef90 RST /tmp/MMS$$ --threads 4. ## MMseqs Output (for bugs). easy-search /shared/projects/phycovir/SONIA/DNAP-BAIT ./UniRef90 RST /tmp/MMS6178 --threads 4 . MMseqs Version: 	14.7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	4; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/728:4933,Performance,load,load-mode,4933,"5] 0s 59ms; Time for merging to query_h: 0h 0m 0s 2ms; Time for merging to query: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 76ms; Create directory /tmp/MMS6178/15560953143015620527/search_tmp; search /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Staticall",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728
https://github.com/soedinglab/MMseqs2/issues/729:335,Availability,down,download,335,"## Expected Behavior; map queries to GTDB then get taxonomy lca of best hits. ## Current Behavior; -all taxonomy results are ""unclassified"" when mapping to GTDB; -the gtdb_mapping file has only a single column (0..256163114) which may be the problem; -I think the gtdb.lookup table may be wrong. ; ; ## Steps to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729
https://github.com/soedinglab/MMseqs2/issues/729:680,Availability,error,errors,680,"## Expected Behavior; map queries to GTDB then get taxonomy lca of best hits. ## Current Behavior; -all taxonomy results are ""unclassified"" when mapping to GTDB; -the gtdb_mapping file has only a single column (0..256163114) which may be the problem; -I think the gtdb.lookup table may be wrong. ; ; ## Steps to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729
https://github.com/soedinglab/MMseqs2/issues/729:2172,Availability,down,download,2172,"to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found in the gtdb.lookup file is 65535, and then it seems to start over at 1 duplicating ids...?. ## Your Environment; MMseqs2 Version: 14.7e284; tried with both latest binary download and conda install; Linux my.local 3.10.0-1160.76.1.el7.x86_64 #1 SMP Wed Aug 10 16:21:17 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729
https://github.com/soedinglab/MMseqs2/issues/729:2191,Deployability,install,install,2191,"to Reproduce (for bugs); -download gtdb.tar.gz; `mmseqs createdb tardb gtdb`; -execute shell commands in databases.sh to create nodes.dmp, names.dmp, mapping_genomes (these files all seem to be fine); `mmseqs createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file ""tmp/taxonomy/mapping_genomes"" --tax-mapping-mode 1`. ## MMseqs Output (for bugs); -no errors or warnings; ```; createtaxdb gtdb tmp/taxdb --ncbi-tax-dump tmp/taxonomy --tax-mapping-file tmp/taxonomy/mapping_genomes --tax-mapping-mode 1 . MMseqs Version: 	14.7e284; NCBI tax dump directory	tmp/taxonomy; Taxonomy mapping file 	tmp/taxonomy/mapping_genomes; Taxonomy mapping mode 	1; Taxonomy db mode 	1; Threads 	28; Verbosity 	3; ```. if I understand correctly, the gtdb.lookup file should have 3 columns: proteinNumber (0.. 256163114), proteinID, sourceGenomeNumber : ; ```; 0 NZ_CP009512.1_1 1; 1 NZ_CP009512.1_33 1; 2 NZ_CP009512.1_65 1; 3 NZ_CP009512.1_97 1; 4 NZ_CP009512.1_129 1; 5 NZ_CP009512.1_161 1; 6 NZ_CP009512.1_193 1; 7 NZ_CP009512.1_225 1; 8 NZ_CP009512.1_257 1; 9 NZ_CP009512.1_289 1; 10 NZ_CP009512.1_321 1; ```; however, my gtdb.lookup file has entries from different genomes pointing to the same source genome number. e.g. ; ```; 0 NZ_CP009512.1_1 1; 100 NZ_CP009512.1_3201 1; 101 NZ_CP009512.1_3233 1; 102180795 NZ_JAAOIZ010000001.1_5 1 #should point to source genome 65537; 102180796 NZ_JAAOIZ010000001.1_37 1 #should point to source genome 65537; 102181002 JAJXZV010000318.1_2 2 #should point to source genome 65538; 102181003 JAJXZV010000021.1_4 2 #should point to source genome 65538; 104066383 NC_007181.1_8 2; 104066384 NC_007181.1_40 2; ```; the highest source genome number found in the gtdb.lookup file is 65535, and then it seems to start over at 1 duplicating ids...?. ## Your Environment; MMseqs2 Version: 14.7e284; tried with both latest binary download and conda install; Linux my.local 3.10.0-1160.76.1.el7.x86_64 #1 SMP Wed Aug 10 16:21:17 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729
https://github.com/soedinglab/MMseqs2/issues/730:36,Availability,error,error,36,"## Expected Behavior. * why did the error happen?; * how to fix it?. ## Current Behavior. ## Steps to Reproduce (for bugs); data: 2.1 billion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our docume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/730:1210,Availability,Mask,Mask,1210,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/730:1227,Availability,Mask,Mask,1227,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/730:1848,Availability,Error,Error,1848,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/730:1896,Availability,Error,Error,1896,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/730:522,Integrability,wrap,wrapped,522,"## Expected Behavior. * why did the error happen?; * how to fix it?. ## Current Behavior. ## Steps to Reproduce (for bugs); data: 2.1 billion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our docume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/730:1321,Modifiability,extend,extendable,1321,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/730:1277,Security,hash,hash,1277,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730
https://github.com/soedinglab/MMseqs2/issues/731:279,Integrability,depend,depends,279,"Hello! ; I am trying to understand how exactly are bit scores and E-values calculated. I found the formula in [The Statistics of Sequence Similarity Scores](https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html) and noticed that besides query and target lengths (n, m), it depends on Lambda and K constants, which are tied to the used substitution scores and gap penalties. I found the function `computeEvalue()` https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/util/extractdomains.cpp#L46-L50. I can see those constants are hardcoded, which stands in contradiction to what is described in the document above. Where are those values coming from? I found they are present in Table 1 in [Altschul, S. F., & Gish, W. (1996). [27] Local alignment statistics. Computer Methods for Macromolecular Sequence Analysis, 460–480. doi:10.1016/s0076-6879(96)66029-7 ](https://doi.org/10.1016/S0076-6879(96)66029-7), but not in the same row.; ; For bit score calculation https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/lib/alp/sls_alignment_evaluer.hpp#L159-L162; those are variables indeed, but I had trouble determining how are they set are how they are changing. It it happening here?; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L48. Thanks in advance for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731
https://github.com/soedinglab/MMseqs2/issues/731:1141,Modifiability,variab,variables,1141,"Hello! ; I am trying to understand how exactly are bit scores and E-values calculated. I found the formula in [The Statistics of Sequence Similarity Scores](https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html) and noticed that besides query and target lengths (n, m), it depends on Lambda and K constants, which are tied to the used substitution scores and gap penalties. I found the function `computeEvalue()` https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/util/extractdomains.cpp#L46-L50. I can see those constants are hardcoded, which stands in contradiction to what is described in the document above. Where are those values coming from? I found they are present in Table 1 in [Altschul, S. F., & Gish, W. (1996). [27] Local alignment statistics. Computer Methods for Macromolecular Sequence Analysis, 460–480. doi:10.1016/s0076-6879(96)66029-7 ](https://doi.org/10.1016/S0076-6879(96)66029-7), but not in the same row.; ; For bit score calculation https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/lib/alp/sls_alignment_evaluer.hpp#L159-L162; those are variables indeed, but I had trouble determining how are they set are how they are changing. It it happening here?; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L48. Thanks in advance for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731
https://github.com/soedinglab/MMseqs2/issues/734:363,Testability,test,testplasmidDB,363,"Hi all!. Thank you again for the mmseq2 software and the detailed explanation in the documentation. I would like to get some advice on running CDHIT2 within MMseq2. #recommendation-To suppress fragments from becoming representative sequences, it is recommended to use --cluster-mode 2 in conjunction with --cov-mode 1; `~/miniconda3/bin/mmseqs cluster ${OUT_DIR}/testplasmidDB ${OUT_DIR}/testplasmidDB_cdhit_clu ${TMP1}/ --cluster-mode 2 --cov-mode 1 -c 0.8`. Based on the recommendation in the documents folder, I should use --cov mode 1 with --cluster-mode 2 (CDHIT2-based clustering). Is this understanding correct?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/734
https://github.com/soedinglab/MMseqs2/issues/735:135,Availability,avail,available,135,"Hi all,. Thanks again for making MMseq2 accessible for all of us to use! I am interested in using `MMseq2 clusterupdate` on a publicly available database to add my protein sequences to the original clusters. I have a few questions to ask about that- ; The clusters of the database exists as protein sequence file of cluster representatives [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) or a cluster membership text file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url). As it is not in the format that MMseq2 takes as input, I am running the following code to generate that-. `mmseqs cluster DB_trimmed DB_trimmed_clu tmp`; 1. My question is that the database is VERY big, and its taking a long time to generate the `DB_trimmed_clu` clusters. Is it possible to use the available tsv file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url) on the website to speed up the process?. 2. I downloaded the cluster representative protein sequences [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) to generate the `DB_trimmed_clu` file. Would I need the complete database to generate the `DB_trimmed_clu` file or the cluster representative protein sequences are okay?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735
https://github.com/soedinglab/MMseqs2/issues/735:893,Availability,avail,available,893,"Hi all,. Thanks again for making MMseq2 accessible for all of us to use! I am interested in using `MMseq2 clusterupdate` on a publicly available database to add my protein sequences to the original clusters. I have a few questions to ask about that- ; The clusters of the database exists as protein sequence file of cluster representatives [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) or a cluster membership text file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url). As it is not in the format that MMseq2 takes as input, I am running the following code to generate that-. `mmseqs cluster DB_trimmed DB_trimmed_clu tmp`; 1. My question is that the database is VERY big, and its taking a long time to generate the `DB_trimmed_clu` clusters. Is it possible to use the available tsv file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url) on the website to speed up the process?. 2. I downloaded the cluster representative protein sequences [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) to generate the `DB_trimmed_clu` file. Would I need the complete database to generate the `DB_trimmed_clu` file or the cluster representative protein sequences are okay?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735
https://github.com/soedinglab/MMseqs2/issues/735:1070,Availability,down,downloaded,1070,"Hi all,. Thanks again for making MMseq2 accessible for all of us to use! I am interested in using `MMseq2 clusterupdate` on a publicly available database to add my protein sequences to the original clusters. I have a few questions to ask about that- ; The clusters of the database exists as protein sequence file of cluster representatives [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) or a cluster membership text file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url). As it is not in the format that MMseq2 takes as input, I am running the following code to generate that-. `mmseqs cluster DB_trimmed DB_trimmed_clu tmp`; 1. My question is that the database is VERY big, and its taking a long time to generate the `DB_trimmed_clu` clusters. Is it possible to use the available tsv file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url) on the website to speed up the process?. 2. I downloaded the cluster representative protein sequences [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) to generate the `DB_trimmed_clu` file. Would I need the complete database to generate the `DB_trimmed_clu` file or the cluster representative protein sequences are okay?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735
https://github.com/soedinglab/MMseqs2/issues/735:40,Security,access,accessible,40,"Hi all,. Thanks again for making MMseq2 accessible for all of us to use! I am interested in using `MMseq2 clusterupdate` on a publicly available database to add my protein sequences to the original clusters. I have a few questions to ask about that- ; The clusters of the database exists as protein sequence file of cluster representatives [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) or a cluster membership text file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url). As it is not in the format that MMseq2 takes as input, I am running the following code to generate that-. `mmseqs cluster DB_trimmed DB_trimmed_clu tmp`; 1. My question is that the database is VERY big, and its taking a long time to generate the `DB_trimmed_clu` clusters. Is it possible to use the available tsv file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url) on the website to speed up the process?. 2. I downloaded the cluster representative protein sequences [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) to generate the `DB_trimmed_clu` file. Would I need the complete database to generate the `DB_trimmed_clu` file or the cluster representative protein sequences are okay?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735
https://github.com/soedinglab/MMseqs2/issues/737:5,Testability,test,test,5,"`cat test.fasta`. ```; >s1; TCEVWGPTSPKLMLSLKLENKEAKVSKREKAVWVLNPEAGMWQCLLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGL; >s2; LLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGLGIFFCVRCRHRRRQAERMSQIKRLLSEKKTCQCPHRFQKTCSPI; ```; The last 44 residues of s1 perfectly match the first 44 residues of s2. ```; mmseqs createdb ../hit_calling_redo_v2/test.fasta test_cd4; mmseqs search test_cd4 test_cd4 resultDB tmp; mmseqs convertalis test_cd4 test_cd4 resultDB result.m8; cat result.m8; ```. ```; s2 s2 1.000 88 0 0 1 88 1 88 1.067E-63 181; s2 s1 0.930 44 3 0 1 44 45 88 7.487E-28 88; s1 s1 1.000 88 0 0 1 88 1 88 4.412E-63 179; s1 s2 0.907 44 4 0 45 88 1 44 6.035E-27 86; ```. ## Expected Behavior. The alignments are correct, but 0 mismatches should be reported. ## Current Behavior. Either 3 or 4 mismatches reported for s1 - s2 alignment. ## Steps to Reproduce (for bugs); See above. ## Your Environment; MMseqs2 Version: f5f780acd64482cd59b46eae0a107f763cd17b4d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/737
https://github.com/soedinglab/MMseqs2/issues/737:334,Testability,test,test,334,"`cat test.fasta`. ```; >s1; TCEVWGPTSPKLMLSLKLENKEAKVSKREKAVWVLNPEAGMWQCLLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGL; >s2; LLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGLGIFFCVRCRHRRRQAERMSQIKRLLSEKKTCQCPHRFQKTCSPI; ```; The last 44 residues of s1 perfectly match the first 44 residues of s2. ```; mmseqs createdb ../hit_calling_redo_v2/test.fasta test_cd4; mmseqs search test_cd4 test_cd4 resultDB tmp; mmseqs convertalis test_cd4 test_cd4 resultDB result.m8; cat result.m8; ```. ```; s2 s2 1.000 88 0 0 1 88 1 88 1.067E-63 181; s2 s1 0.930 44 3 0 1 44 45 88 7.487E-28 88; s1 s1 1.000 88 0 0 1 88 1 88 4.412E-63 179; s1 s2 0.907 44 4 0 45 88 1 44 6.035E-27 86; ```. ## Expected Behavior. The alignments are correct, but 0 mismatches should be reported. ## Current Behavior. Either 3 or 4 mismatches reported for s1 - s2 alignment. ## Steps to Reproduce (for bugs); See above. ## Your Environment; MMseqs2 Version: f5f780acd64482cd59b46eae0a107f763cd17b4d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/737
https://github.com/soedinglab/MMseqs2/issues/738:24,Availability,down,downloaded,24,"## Expected Behavior; I downloaded an created the NT database via:; `mmseqs databases NT NT_db tmp`; And then try to query it with a Fasta file of roughly 100 AAs, like so:; `mmseqs easy-search query_Seq.fasta NT_db res.m8 tmp/ --min-seq-id 0.6 --split-memory-limit 150G`; Since I have 252G of RAM, I expect this to just work. ## Current Behavior; All available RAM is used leading to the following error:. > tmp//2024282319877743305/search_tmp/15490307701832192549/translated_search.sh: line 45: 3856193 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}; Error: extract target orfs step died; Error: Search died. ## Context; From the documentation I would expect this to work. However I read somewhere that it might be necessary to also make the database aware of how large it can be come, not just the search step. If that's the reason it fails, how do I do that without redownloading the entire database (took multiple days)? Thanks in advance for any kind of help. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 7b95387f93e38c3911f9188bc702d63ed3194013; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2 not supported, 252G of RAM; * Operating system and version: Linux (Fedora 31)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/738
https://github.com/soedinglab/MMseqs2/issues/738:352,Availability,avail,available,352,"## Expected Behavior; I downloaded an created the NT database via:; `mmseqs databases NT NT_db tmp`; And then try to query it with a Fasta file of roughly 100 AAs, like so:; `mmseqs easy-search query_Seq.fasta NT_db res.m8 tmp/ --min-seq-id 0.6 --split-memory-limit 150G`; Since I have 252G of RAM, I expect this to just work. ## Current Behavior; All available RAM is used leading to the following error:. > tmp//2024282319877743305/search_tmp/15490307701832192549/translated_search.sh: line 45: 3856193 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}; Error: extract target orfs step died; Error: Search died. ## Context; From the documentation I would expect this to work. However I read somewhere that it might be necessary to also make the database aware of how large it can be come, not just the search step. If that's the reason it fails, how do I do that without redownloading the entire database (took multiple days)? Thanks in advance for any kind of help. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 7b95387f93e38c3911f9188bc702d63ed3194013; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2 not supported, 252G of RAM; * Operating system and version: Linux (Fedora 31)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/738
https://github.com/soedinglab/MMseqs2/issues/738:399,Availability,error,error,399,"## Expected Behavior; I downloaded an created the NT database via:; `mmseqs databases NT NT_db tmp`; And then try to query it with a Fasta file of roughly 100 AAs, like so:; `mmseqs easy-search query_Seq.fasta NT_db res.m8 tmp/ --min-seq-id 0.6 --split-memory-limit 150G`; Since I have 252G of RAM, I expect this to just work. ## Current Behavior; All available RAM is used leading to the following error:. > tmp//2024282319877743305/search_tmp/15490307701832192549/translated_search.sh: line 45: 3856193 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}; Error: extract target orfs step died; Error: Search died. ## Context; From the documentation I would expect this to work. However I read somewhere that it might be necessary to also make the database aware of how large it can be come, not just the search step. If that's the reason it fails, how do I do that without redownloading the entire database (took multiple days)? Thanks in advance for any kind of help. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 7b95387f93e38c3911f9188bc702d63ed3194013; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2 not supported, 252G of RAM; * Operating system and version: Linux (Fedora 31)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/738
https://github.com/soedinglab/MMseqs2/issues/738:575,Availability,Error,Error,575,"## Expected Behavior; I downloaded an created the NT database via:; `mmseqs databases NT NT_db tmp`; And then try to query it with a Fasta file of roughly 100 AAs, like so:; `mmseqs easy-search query_Seq.fasta NT_db res.m8 tmp/ --min-seq-id 0.6 --split-memory-limit 150G`; Since I have 252G of RAM, I expect this to just work. ## Current Behavior; All available RAM is used leading to the following error:. > tmp//2024282319877743305/search_tmp/15490307701832192549/translated_search.sh: line 45: 3856193 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}; Error: extract target orfs step died; Error: Search died. ## Context; From the documentation I would expect this to work. However I read somewhere that it might be necessary to also make the database aware of how large it can be come, not just the search step. If that's the reason it fails, how do I do that without redownloading the entire database (took multiple days)? Thanks in advance for any kind of help. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 7b95387f93e38c3911f9188bc702d63ed3194013; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2 not supported, 252G of RAM; * Operating system and version: Linux (Fedora 31)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/738
https://github.com/soedinglab/MMseqs2/issues/738:613,Availability,Error,Error,613,"## Expected Behavior; I downloaded an created the NT database via:; `mmseqs databases NT NT_db tmp`; And then try to query it with a Fasta file of roughly 100 AAs, like so:; `mmseqs easy-search query_Seq.fasta NT_db res.m8 tmp/ --min-seq-id 0.6 --split-memory-limit 150G`; Since I have 252G of RAM, I expect this to just work. ## Current Behavior; All available RAM is used leading to the following error:. > tmp//2024282319877743305/search_tmp/15490307701832192549/translated_search.sh: line 45: 3856193 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}; Error: extract target orfs step died; Error: Search died. ## Context; From the documentation I would expect this to work. However I read somewhere that it might be necessary to also make the database aware of how large it can be come, not just the search step. If that's the reason it fails, how do I do that without redownloading the entire database (took multiple days)? Thanks in advance for any kind of help. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 7b95387f93e38c3911f9188bc702d63ed3194013; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AVX2 not supported, 252G of RAM; * Operating system and version: Linux (Fedora 31)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/738
https://github.com/soedinglab/MMseqs2/issues/740:327,Availability,error,errorCode,327,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:359,Availability,error,error,359,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:700,Availability,Down,Downloading,700,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:739,Availability,ERROR,ERROR,739,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:755,Availability,Down,Download,755,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:882,Availability,error,errorCode,882,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1003,Availability,error,errorCode,1003," the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/la",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1059,Availability,Down,Download,1059," A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1136,Availability,Down,Download,1136,"abases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/g",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1340,Availability,error,error,1340,"=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1374,Availability,down,download,1374,"o Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1431,Availability,error,errors,1431,"db tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Simila",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1693,Availability,Down,Downloading,1693,"8/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned i",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1736,Availability,down,download,1736,"8/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned i",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1768,Availability,error,error,1768,"8/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned i",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1832,Availability,error,error,1832,"; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; In",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:2611,Availability,down,download,2611,"=================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: N/A; * Server specifications: CPU with SSE and AVX2 support, 512 GB RAM; * Operating system and version: Ubuntu 22.04.3 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:0,Deployability,Release,Release,0,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:255,Deployability,install,install,255,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:821,Deployability,release,releases,821,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:942,Deployability,release,releases,942,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1893,Deployability,release,release,1893,"; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; In",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:2004,Deployability,release,releases,2004,"ource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-comp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:2084,Deployability,release,releases,2084,"ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invoc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:2995,Deployability,install,install,2995,"=================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Similarly, `sed 's|_protein\.faa||g'` should be `sed 's|_protein\.faa\.gz||g'` (approx. line 376). I'd be happy to make a PR if it helps. **Importantly**, although the GTDB should download properly after these fixes, the resulting seqtaxdb will still contain the ID collision issue mentioned in #729 involving the `gtdb.lookup` file. Taxonomy results will be unreliable until #729 is fixed. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 14.7e284; * Which MMseqs version was used: conda install; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: N/A; * Server specifications: CPU with SSE and AVX2 support, 512 GB RAM; * Operating system and version: Ubuntu 22.04.3 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:764,Safety,abort,aborted,764,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1452,Testability,log,log,1452,"db tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Simila",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/740:1367,Usability,resume,resume,1367,"o Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740
https://github.com/soedinglab/MMseqs2/issues/741:291,Availability,fault,fault,291,"I am trying to rewrite github.com/oxpig/anarci to use mmseqs and rust, but I am having some trouble with the converting HMM to mmseqs2 db part. I tried to generate the profile using ffindex_build and from the raw stockholm file, but using both paths at convertprofiledb I get a segmentation fault. ## Expected. Given this alpaca_H.stockholm file: ; ```stockholm; # STOCKHOLM 1.0; #=GF ID alpaca_H; Vicugna_pacos_IGHV3-1*01_IGHJ4*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ7*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ3*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ2*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LEVWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ6*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FGSWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ5*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FEYWGQGTLVTVS-; Vicugna_pacos_IGHV3-3*01_IGHJ4*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ7*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ3*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ2*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741
https://github.com/soedinglab/MMseqs2/issues/741:5611,Availability,fault,fault,5611,"YAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ3*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ2*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------LEVWGQGTLVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ6*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------FGSWGQGTQVTVSS; Vicugna_pacos_IGHV4S1*01_IGHJ5*01 QVQLQESGP-GLVKPSQTLSLTCTVSGGSIT--TSYYAWSWIRQPPGKGLEWMGVIAYD---GSTYYSPSLK-SRTSISRDTSKNQFSLQLSSVTPEDTAVYYCAR--------FEYWGQGTLVTVS-; #=GC RF xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx; //; ```; Given this I would expect a proper db to be able to be built. ## Current Behavior; The convertprofiledb command crashes with a segmentation fault. ## Steps to Reproduce (for bugs); ```bash; mmseqs convertmsa ${BUILD_PIPELINE_FOLDER}/curated_alignments/alpaca_H.stockholm msaDb ; mmseqs msa2profile msaDb alpaca_H_profile ; mmseqs convertprofiledb alpaca_H_profile alpaca_H.db ; ```. ## MMseqs Output (for bugs); ```bash; convertmsa /home/robin/Documents/projects/numerator/anarci/ANARCI/build_pipeline/curated_alignments/alpaca_H.stockholm msaDb . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Identifier field 1; Compressed 0; Verbosity 3. Time for merging to msaDb: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; msa2profile msaDb alpaca_H_profile . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; MSA type 2; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Match mode 0; Match ratio 0.5; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Compositional bias 1; Compositional bias 1; Global sequence w",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741
https://github.com/soedinglab/MMseqs2/issues/741:7400,Availability,fault,fault,7400,"ith a segmentation fault. ## Steps to Reproduce (for bugs); ```bash; mmseqs convertmsa ${BUILD_PIPELINE_FOLDER}/curated_alignments/alpaca_H.stockholm msaDb ; mmseqs msa2profile msaDb alpaca_H_profile ; mmseqs convertprofiledb alpaca_H_profile alpaca_H.db ; ```. ## MMseqs Output (for bugs); ```bash; convertmsa /home/robin/Documents/projects/numerator/anarci/ANARCI/build_pipeline/curated_alignments/alpaca_H.stockholm msaDb . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Identifier field 1; Compressed 0; Verbosity 3. Time for merging to msaDb: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; msa2profile msaDb alpaca_H_profile . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; MSA type 2; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Match mode 0; Match ratio 0.5; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Compositional bias 1; Compositional bias 1; Global sequence weighting false; Filter MSA 1; Use filter only at N seqs 0; Minimum coverage 0; Minimum seq. id. 0.0; Minimum score per column -20; Maximum seq. id. threshold 0.9; Select N most diverse seqs 1000; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Skip query false; Gap pseudo count 10; Threads 4; Compressed 0; Verbosity 3. Finding maximum sequence length and set size.; [=================================================================] 100.00% 1 eta -; Time for merging to alpaca_H_profile_h: 0h 0m 0s 0ms; Time for merging to alpaca_H_profile: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; convertprofiledb alpaca_H_profile alpaca_H.db . MMseqs Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Threads 4; Compressed 0; Verbosity 3. zsh: segmentation fault (core dumped) mmseqs convertprofiledb alpaca_H_profile alpaca_H.db; ```; ## Your Environment; Version: MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00; OS: Manjaro Linux on x64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741
https://github.com/soedinglab/MMseqs2/issues/741:15,Modifiability,rewrite,rewrite,15,"I am trying to rewrite github.com/oxpig/anarci to use mmseqs and rust, but I am having some trouble with the converting HMM to mmseqs2 db part. I tried to generate the profile using ffindex_build and from the raw stockholm file, but using both paths at convertprofiledb I get a segmentation fault. ## Expected. Given this alpaca_H.stockholm file: ; ```stockholm; # STOCKHOLM 1.0; #=GF ID alpaca_H; Vicugna_pacos_IGHV3-1*01_IGHJ4*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ7*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ3*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ2*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------LEVWGQGTLVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ6*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FGSWGQGTQVTVSS; Vicugna_pacos_IGHV3-1*01_IGHJ5*01 EVQLVESGG-GLVQPGGSLRLSCAASGFTF----DDYAMSWVRQAPGKGLEWVSAISWN--GGSTYYAESMK-GRFTISRDNAKNTLYLQMNSLKSEDTAVYYCAK--------FEYWGQGTLVTVS-; Vicugna_pacos_IGHV3-3*01_IGHJ4*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------YDYWGQGTQVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ7*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------MDYWGKGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ3*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNSLKPEDTAVYYCAA--------LDAWGQGTLVTVSS; Vicugna_pacos_IGHV3-3*01_IGHJ2*01 QVQLVESGG-GLVQAGGSLRLSCAASGRTF----SSYAMGWFRQAPGKEREFVAAISWS--GGSTYYADSVK-GRFTISRDNAKNTVYLQMNS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/741
https://github.com/soedinglab/MMseqs2/issues/743:873,Testability,test,test,873,## Expected Behavior; mmseqs map to find the most similar sequences between 2 DB; ## Current Behavior; Same sequences repeated as .fasta out; ```; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; ```; ....; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs map queryDB resultDB tmp -e 10 --min-seq-id 0.1 . mmseqs filterdb resultDB bestResultDB --extract-lines 20 . mmseqs createsubdb bestResultDB queryDB queryDB_sub; rm -f -- queryDB_sub_h*; mmseqs createsubdb bestResultDB queryDB queryDB_sub_h. awk '{ print $1 }' bestResultDB.[0-9]* | sort -u > subset.list; mmseqs createsubdb subset.list queryDB queryDB_sub. mmseqs convert2fasta mmseqs convert2fasta queryDB_sub test.fasta. ```. ## Context; I tried the solution proposed [here](https://github.com/soedinglab/MMseqs2/issues/392) but I certanly doing something wrong. ; ## Your Environment; MMseqs2 Version: 13.45111,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/743
https://github.com/soedinglab/MMseqs2/issues/744:225,Availability,avail,available,225,"## Expected Behavior; A successful install into the conda invironment. ## Current Behavior; Calling `conda install -c conda-forge -c bioconda mmseqs2` is returning:. ```; PackagesNotFoundError: The following packages are not available from current channels:. - mmseqs2. Current channels:. - https://conda.anaconda.org/conda-forge/linux-aarch64; - https://conda.anaconda.org/conda-forge/noarch; - https://conda.anaconda.org/bioconda/linux-aarch64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-aarch64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/linux-aarch64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. ## Steps to Reproduce (for bugs); 1. Open a terminal and activate your conda environment; 2. `conda install -c conda-forge -c bioconda mmseqs2`. ## MMseqs Output (for bugs); See above ""Current Behavior"" section. ## Context; Installing via conda. ## Your Environment; I am using conda 23.5.2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744
https://github.com/soedinglab/MMseqs2/issues/744:35,Deployability,install,install,35,"## Expected Behavior; A successful install into the conda invironment. ## Current Behavior; Calling `conda install -c conda-forge -c bioconda mmseqs2` is returning:. ```; PackagesNotFoundError: The following packages are not available from current channels:. - mmseqs2. Current channels:. - https://conda.anaconda.org/conda-forge/linux-aarch64; - https://conda.anaconda.org/conda-forge/noarch; - https://conda.anaconda.org/bioconda/linux-aarch64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-aarch64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/linux-aarch64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. ## Steps to Reproduce (for bugs); 1. Open a terminal and activate your conda environment; 2. `conda install -c conda-forge -c bioconda mmseqs2`. ## MMseqs Output (for bugs); See above ""Current Behavior"" section. ## Context; Installing via conda. ## Your Environment; I am using conda 23.5.2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744
https://github.com/soedinglab/MMseqs2/issues/744:107,Deployability,install,install,107,"## Expected Behavior; A successful install into the conda invironment. ## Current Behavior; Calling `conda install -c conda-forge -c bioconda mmseqs2` is returning:. ```; PackagesNotFoundError: The following packages are not available from current channels:. - mmseqs2. Current channels:. - https://conda.anaconda.org/conda-forge/linux-aarch64; - https://conda.anaconda.org/conda-forge/noarch; - https://conda.anaconda.org/bioconda/linux-aarch64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-aarch64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/linux-aarch64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. ## Steps to Reproduce (for bugs); 1. Open a terminal and activate your conda environment; 2. `conda install -c conda-forge -c bioconda mmseqs2`. ## MMseqs Output (for bugs); See above ""Current Behavior"" section. ## Context; Installing via conda. ## Your Environment; I am using conda 23.5.2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744
https://github.com/soedinglab/MMseqs2/issues/744:962,Deployability,install,install,962,"## Expected Behavior; A successful install into the conda invironment. ## Current Behavior; Calling `conda install -c conda-forge -c bioconda mmseqs2` is returning:. ```; PackagesNotFoundError: The following packages are not available from current channels:. - mmseqs2. Current channels:. - https://conda.anaconda.org/conda-forge/linux-aarch64; - https://conda.anaconda.org/conda-forge/noarch; - https://conda.anaconda.org/bioconda/linux-aarch64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-aarch64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/linux-aarch64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. ## Steps to Reproduce (for bugs); 1. Open a terminal and activate your conda environment; 2. `conda install -c conda-forge -c bioconda mmseqs2`. ## MMseqs Output (for bugs); See above ""Current Behavior"" section. ## Context; Installing via conda. ## Your Environment; I am using conda 23.5.2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744
https://github.com/soedinglab/MMseqs2/issues/744:1086,Deployability,Install,Installing,1086,"## Expected Behavior; A successful install into the conda invironment. ## Current Behavior; Calling `conda install -c conda-forge -c bioconda mmseqs2` is returning:. ```; PackagesNotFoundError: The following packages are not available from current channels:. - mmseqs2. Current channels:. - https://conda.anaconda.org/conda-forge/linux-aarch64; - https://conda.anaconda.org/conda-forge/noarch; - https://conda.anaconda.org/bioconda/linux-aarch64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-aarch64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/linux-aarch64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. ## Steps to Reproduce (for bugs); 1. Open a terminal and activate your conda environment; 2. `conda install -c conda-forge -c bioconda mmseqs2`. ## MMseqs Output (for bugs); See above ""Current Behavior"" section. ## Context; Installing via conda. ## Your Environment; I am using conda 23.5.2.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744
https://github.com/soedinglab/MMseqs2/issues/745:123,Availability,error,error,123,"Is there a way to specify the forward strand only with easy-cluster or easy-linclust? Providing ""--strand 1"" results in an error. Also, is the sequence type (i.e., AA or DNA) determined automatically when I provide a FASTA with DNA sequences as input? Thanks in advance for any suggestions. Example command:; `mmseqs easy-cluster path/to/FASTA result /tmp/dir --threads 1 -v 2 --cov-mode 1 -c 0.8 --min-seq-id 0.9`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/745
https://github.com/soedinglab/MMseqs2/issues/747:297,Availability,Error,Error,297,"## Expected Behavior; Successful create a search resultDB when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3`; but fail when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3 --num-iterations 2`; ## Current Behavior; Error: Alignment died; Error: Search step died; ## Steps to Reproduce (for bugs); ```; mmseqs createdb query.fasta query/queryDB; mmseqs createdb targegt.fasta target/targetDB; mmseqs query/queryDB target/targetDB search/resultDB tmp -s 7.5 --search-type 3 --num-iterations 2; ```. ## MMseqs Output (for bugs). > MMseqs Version: 	df77d9e6cf640fe8990f247441ab44d4f4ad9cdc; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; R",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:320,Availability,Error,Error,320,"## Expected Behavior; Successful create a search resultDB when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3`; but fail when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3 --num-iterations 2`; ## Current Behavior; Error: Alignment died; Error: Search step died; ## Steps to Reproduce (for bugs); ```; mmseqs createdb query.fasta query/queryDB; mmseqs createdb targegt.fasta target/targetDB; mmseqs query/queryDB target/targetDB search/resultDB tmp -s 7.5 --search-type 3 --num-iterations 2; ```. ## MMseqs Output (for bugs). > MMseqs Version: 	df77d9e6cf640fe8990f247441ab44d4f4ad9cdc; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; R",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:1810,Availability,Mask,Mask,1810,"l:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:1828,Availability,Mask,Mask,1828,"l:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	fal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:1860,Availability,Mask,Mask,1860,"reshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:2079,Availability,Mask,Mask,2079,"pt 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	2; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:4754,Availability,mask,mask,4754,"/7935334228278574252/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 96 --compressed 0 -v 3 . [=================================================================] 100.00% 2.00K 0s 18ms ; Time for merging to query_seqs_h: 0h 0m 0s 62ms; Time for merging to query_seqs: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 213ms; splitsequence tmp/7935334228278574252/query_seqs tmp/7935334228278574252/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:4763,Availability,mask,mask-prob,4763,"/7935334228278574252/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 96 --compressed 0 -v 3 . [=================================================================] 100.00% 2.00K 0s 18ms ; Time for merging to query_seqs_h: 0h 0m 0s 62ms; Time for merging to query_seqs: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 213ms; splitsequence tmp/7935334228278574252/query_seqs tmp/7935334228278574252/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:4779,Availability,mask,mask-lower-case,4779,"Time for merging to query_seqs_h: 0h 0m 0s 62ms; Time for merging to query_seqs: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 213ms; splitsequence tmp/7935334228278574252/query_seqs tmp/7935334228278574252/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:5308,Availability,Mask,Masked,5308,"/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:7459,Availability,Error,Error,7459,"0.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; _**CPU12 vCPU Intel(R) Xeon(R) Platinum 8255C CPU @ 2.50GHz; memory 43G**_; * Operating system and version:**`Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-121-generic x86_64)`**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:7482,Availability,Error,Error,7482,"0.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; _**CPU12 vCPU Intel(R) Xeon(R) Platinum 8255C CPU @ 2.50GHz; memory 43G**_; * Operating system and version:**`Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-121-generic x86_64)`**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:5054,Energy Efficiency,consumption,consumption,5054,"ers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [===============================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:792,Integrability,wrap,wrapped,792,"## Expected Behavior; Successful create a search resultDB when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3`; but fail when run `mmseqs search query/queryDB target/tragetDB search/resultDB -s 7.5 --search-type 3 --num-iterations 2`; ## Current Behavior; Error: Alignment died; Error: Search step died; ## Steps to Reproduce (for bugs); ```; mmseqs createdb query.fasta query/queryDB; mmseqs createdb targegt.fasta target/targetDB; mmseqs query/queryDB target/targetDB search/resultDB tmp -s 7.5 --search-type 3 --num-iterations 2; ```. ## MMseqs Output (for bugs). > MMseqs Version: 	df77d9e6cf640fe8990f247441ab44d4f4ad9cdc; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	2; Max sequence length 	10000; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	96; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7.5; k-mer length 	15; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	1; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; R",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:6696,Integrability,wrap,wrapped-scoring,6696,"GCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Whi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:7165,Modifiability,extend,extend,7165,"0.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; _**CPU12 vCPU Intel(R) Xeon(R) Platinum 8255C CPU @ 2.50GHz; memory 43G**_; * Operating system and version:**`Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-121-generic x86_64)`**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:4868,Performance,load,load-mode,4868,"Time for merging to query_seqs_h: 0h 0m 0s 62ms; Time for merging to query_seqs: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 213ms; splitsequence tmp/7935334228278574252/query_seqs tmp/7935334228278574252/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/747:6940,Performance,load,load-mode,6940,"rity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747
https://github.com/soedinglab/MMseqs2/issues/748:1159,Safety,predict,predict,1159,"Hello, I have a huge target database (123K microbial genomes) and must `search` 60 datasets ranging from a few sequences of size 31 to 200K sequences with some reaching more than 100K nucleotides. Even for the smallest query, the pre-filter step takes most of the time (about 30 hours) on an EPYC cpu (120 threads used). The total run time would be about 80 days. How much could I improve the running time if I `createindex` the database ? I couldnt find the information in the publication, and the other issue I found was about `taxonomy`. EDIT: the target dabatase:; ```; total 299G; -rwxrwx--- 1 guelou01 4294967294 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 4294967294 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 4294967294 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 4294967294 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 4294967294 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 4294967294 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 4294967294 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 4294967294 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; Is there a way to predict how much space it can take ?. Command:; ```; mmseqs search query_DB target_DB result_DB ~/tmp --search-type 3 --threads 120 -a --max-seq-len 1000000 --start-sens 1 --sens-steps 3 -s 7 ; ``` ; Any other suggestions to speed up the process ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748
https://github.com/soedinglab/MMseqs2/issues/750:125,Availability,avail,available,125,"I would like to assign a taxonomic label to my protein sequences using the blast NR database and the mmseqs taxonomy command available in the docker image (quay.io/microbiome-informatics/mmseqs:2.13). I noticed that the default coverage value is zero according to the help page.; `-c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]`. However, if I set the `-c` parameter to 0.8, which sounds reasonable to me, then all of my sequences are labelled as `no rank unclassified`. . Full command: ; ```; mmseqs taxonomy queryDB ${MMSEQS2_DATABASE_DIR} taxresults.database tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies --threads 28; ```. My questions are:; 1. Doesn't it always make sense to increase the `-c` parameter to reduce spurious hits?; 2. How can I inspect the alignment of the best hit?; 3. Does easy-taxonomy also use the same default `lca-mode` or a different one?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750
https://github.com/soedinglab/MMseqs2/issues/750:796,Energy Efficiency,reduce,reduce,796,"I would like to assign a taxonomic label to my protein sequences using the blast NR database and the mmseqs taxonomy command available in the docker image (quay.io/microbiome-informatics/mmseqs:2.13). I noticed that the default coverage value is zero according to the help page.; `-c FLOAT List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]`. However, if I set the `-c` parameter to 0.8, which sounds reasonable to me, then all of my sequences are labelled as `no rank unclassified`. . Full command: ; ```; mmseqs taxonomy queryDB ${MMSEQS2_DATABASE_DIR} taxresults.database tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies --threads 28; ```. My questions are:; 1. Doesn't it always make sense to increase the `-c` parameter to reduce spurious hits?; 2. How can I inspect the alignment of the best hit?; 3. Does easy-taxonomy also use the same default `lca-mode` or a different one?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750
https://github.com/soedinglab/MMseqs2/issues/751:50,Availability,down,download,50,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751
https://github.com/soedinglab/MMseqs2/issues/751:93,Availability,error,error,93,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751
https://github.com/soedinglab/MMseqs2/issues/751:99,Integrability,message,message,99,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751
https://github.com/soedinglab/MMseqs2/issues/751:135,Security,certificate,certificate,135,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751
https://github.com/soedinglab/MMseqs2/issues/751:173,Security,Encrypt,Encrypt,173,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751
https://github.com/soedinglab/MMseqs2/issues/751:196,Security,certificate,certificate,196,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751
https://github.com/soedinglab/MMseqs2/issues/752:11,Deployability,install,installed,11,"mmseqs2 is installed with conda, but the cpu utilization is low when performing the retrieval library",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/752
https://github.com/soedinglab/MMseqs2/issues/752:69,Performance,perform,performing,69,"mmseqs2 is installed with conda, but the cpu utilization is low when performing the retrieval library",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/752
https://github.com/soedinglab/MMseqs2/issues/753:180,Usability,intuit,intuitively,180,"Hi!. I was wondering how I can increase chances of getting more hits with mmseqs search that are not full-length to full-length but subsequences of a query and/or a target? (seems intuitively that --max-accept, playing with -s parameter can help, but maybe i'm missing smth?); Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/753
https://github.com/soedinglab/MMseqs2/issues/754:365,Availability,down,downloaded,365,"## Expected Behavior; nuc reads would align to aa DB. ## Current Behavior; `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`. ## Steps to Reproduce (for bugs); [B5177-2-N919D_T1_interleaved.fq.gz](https://github.com/soedinglab/MMseqs2/files/12657942/B5177-2-N919D_T1_interleaved.fq.gz); DB_TARGET_PATH_NAME is the pfam DB downloaded with mmseqs. ```; mmseqs \; easy-search \; <(zcat B5177-2-N919D_T1_interleaved.fq.gz) \; $DB_TARGET_PATH_NAME \; B5177-2-N919D_T1.tsv \; tmp1 \; \; --threads 12 \; --compressed; ```. ## MMseqs Output (for bugs); No output. ## Context; i try another fasta file, things went well. But with the uploaded file as input, i get the error said `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`, could not figure why. ## Your Environment; mmseqs version: 13.45111; conda installed ; Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-153-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754
https://github.com/soedinglab/MMseqs2/issues/754:702,Availability,error,error,702,"## Expected Behavior; nuc reads would align to aa DB. ## Current Behavior; `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`. ## Steps to Reproduce (for bugs); [B5177-2-N919D_T1_interleaved.fq.gz](https://github.com/soedinglab/MMseqs2/files/12657942/B5177-2-N919D_T1_interleaved.fq.gz); DB_TARGET_PATH_NAME is the pfam DB downloaded with mmseqs. ```; mmseqs \; easy-search \; <(zcat B5177-2-N919D_T1_interleaved.fq.gz) \; $DB_TARGET_PATH_NAME \; B5177-2-N919D_T1.tsv \; tmp1 \; \; --threads 12 \; --compressed; ```. ## MMseqs Output (for bugs); No output. ## Context; i try another fasta file, things went well. But with the uploaded file as input, i get the error said `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`, could not figure why. ## Your Environment; mmseqs version: 13.45111; conda installed ; Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-153-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754
https://github.com/soedinglab/MMseqs2/issues/754:882,Deployability,install,installed,882,"## Expected Behavior; nuc reads would align to aa DB. ## Current Behavior; `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`. ## Steps to Reproduce (for bugs); [B5177-2-N919D_T1_interleaved.fq.gz](https://github.com/soedinglab/MMseqs2/files/12657942/B5177-2-N919D_T1_interleaved.fq.gz); DB_TARGET_PATH_NAME is the pfam DB downloaded with mmseqs. ```; mmseqs \; easy-search \; <(zcat B5177-2-N919D_T1_interleaved.fq.gz) \; $DB_TARGET_PATH_NAME \; B5177-2-N919D_T1.tsv \; tmp1 \; \; --threads 12 \; --compressed; ```. ## MMseqs Output (for bugs); No output. ## Context; i try another fasta file, things went well. But with the uploaded file as input, i get the error said `Input tmp1/15265602719800494645/search_tmp/18256837363344165166/search/pref does not exist`, could not figure why. ## Your Environment; mmseqs version: 13.45111; conda installed ; Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-153-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754
https://github.com/soedinglab/MMseqs2/issues/755:511,Availability,error,error,511,"## Question; Hello to everyone!. I have generated some MSA from some sequences using mmseqs, and after having worked a little with them I have noted an interesting/puzzling fact about these MSA that I want to make sure is not problematic. I generated the MSA as follows:. `mmseqs search query_full source_db target_full tmp/ --num-iterations 3 -a -s 8 -e 0.1 --max-seqs 10000`. Followed by. `mmseqs result2msa query_full source_db target_full msa_full --msa-format-mode 6`. These commands go trough without any error messages and give me the desired MSA. I have noted though that if I then take the seed sequence used in the search function for a particular MSA, and after having realigned with pyhmmer, I compute the normalised hamming distance of the seed sequence from the elements in the MSA, for some MSA I get a histogram like this one. ![image_480](https://github.com/soedinglab/MMseqs2/assets/43722592/eb413cab-480d-4d5b-bca5-851363f38169). Which signals that most of the alignment is at 70%-80% of sequence dissimilarity from the seed MSA. While I know that there can be homologous sequences with low sequence identity, I was expecting also a significant number at lower hamming distance representing close homologous. . ## Question; Is such a behaviour to be expected? From my understanding at some point of the search algorithm mmseqs clusters the different target sequences based on the scores of the seed, could it be that than it selects just a single representative from each cluster and for this reason we have very few similar sequences to the seed in the MSA? If that it the case I would kindly ask you also some references to gain a little more insight in the whole machinery. If on the other side this is not to be expected, what mistake could I be making in the MSA generation?. ## PS. One last curiosity, is the seed sequences included in the MSA generated or not?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/755
https://github.com/soedinglab/MMseqs2/issues/755:517,Integrability,message,messages,517,"## Question; Hello to everyone!. I have generated some MSA from some sequences using mmseqs, and after having worked a little with them I have noted an interesting/puzzling fact about these MSA that I want to make sure is not problematic. I generated the MSA as follows:. `mmseqs search query_full source_db target_full tmp/ --num-iterations 3 -a -s 8 -e 0.1 --max-seqs 10000`. Followed by. `mmseqs result2msa query_full source_db target_full msa_full --msa-format-mode 6`. These commands go trough without any error messages and give me the desired MSA. I have noted though that if I then take the seed sequence used in the search function for a particular MSA, and after having realigned with pyhmmer, I compute the normalised hamming distance of the seed sequence from the elements in the MSA, for some MSA I get a histogram like this one. ![image_480](https://github.com/soedinglab/MMseqs2/assets/43722592/eb413cab-480d-4d5b-bca5-851363f38169). Which signals that most of the alignment is at 70%-80% of sequence dissimilarity from the seed MSA. While I know that there can be homologous sequences with low sequence identity, I was expecting also a significant number at lower hamming distance representing close homologous. . ## Question; Is such a behaviour to be expected? From my understanding at some point of the search algorithm mmseqs clusters the different target sequences based on the scores of the seed, could it be that than it selects just a single representative from each cluster and for this reason we have very few similar sequences to the seed in the MSA? If that it the case I would kindly ask you also some references to gain a little more insight in the whole machinery. If on the other side this is not to be expected, what mistake could I be making in the MSA generation?. ## PS. One last curiosity, is the seed sequences included in the MSA generated or not?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/755
https://github.com/soedinglab/MMseqs2/pull/756:149,Testability,test,tests,149,"Co-authored by: Fabian Kloetzl @kloetzl. - improves speed of FASTA file parsing to 2GBs, see https://github.com/lh3/seqtk/pull/123; - all regression tests passed",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756
https://github.com/soedinglab/MMseqs2/issues/757:2354,Integrability,message,message,2354,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/757:806,Performance,cache,cache,806,"I generated the index files for some Uniprot databases:. ```; mmseqs createdb <databases.fasta.gz> input/targetDB; mmseqs createindex input/targetDB tmp; ```. This step has generated a bunch of ""targetDB.idx.0,1,2...14 ""(each is 52GB), and a ""targetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My quest",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/757:1510,Performance,load,load-mode,1510,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/757:432,Testability,log,log,432,"I generated the index files for some Uniprot databases:. ```; mmseqs createdb <databases.fasta.gz> input/targetDB; mmseqs createindex input/targetDB tmp; ```. This step has generated a bunch of ""targetDB.idx.0,1,2...14 ""(each is 52GB), and a ""targetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My quest",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/757:503,Testability,log,log,503,"I generated the index files for some Uniprot databases:. ```; mmseqs createdb <databases.fasta.gz> input/targetDB; mmseqs createindex input/targetDB tmp; ```. This step has generated a bunch of ""targetDB.idx.0,1,2...14 ""(each is 52GB), and a ""targetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My quest",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/757:1237,Testability,Log,Log,1237,"rgetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/757:2350,Testability,log,log,2350,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/757:1535,Usability,simpl,simple,1535,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757
https://github.com/soedinglab/MMseqs2/issues/758:36,Availability,down,download,36,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758
https://github.com/soedinglab/MMseqs2/issues/758:154,Availability,down,download,154,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758
https://github.com/soedinglab/MMseqs2/issues/758:221,Availability,error,error,221,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758
https://github.com/soedinglab/MMseqs2/issues/758:300,Availability,error,errors,300,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758
https://github.com/soedinglab/MMseqs2/issues/758:533,Availability,error,error,533,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758
