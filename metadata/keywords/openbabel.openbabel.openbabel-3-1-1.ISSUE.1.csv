id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/openbabel/openbabel/issues/925:141,Security,audit,audit,141,"$ svn update; At revision 3364.; $ babel -i mol2 123-pentatriene.mol2 -o inchi; InChI=1S/C5H8/c1-3-5-4-2/h3H2,1-2H3; 1 molecule converted; 4 audit log messages . According to vega it should be:; $ ./vega.sh 123-pentatriene.mol2; InChI=1/C5H6/c1-3-5-4-2/h4H,1H2,2H3. Reported by: maaren",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/925
https://github.com/openbabel/openbabel/issues/925:147,Testability,log,log,147,"$ svn update; At revision 3364.; $ babel -i mol2 123-pentatriene.mol2 -o inchi; InChI=1S/C5H8/c1-3-5-4-2/h3H2,1-2H3; 1 molecule converted; 4 audit log messages . According to vega it should be:; $ ./vega.sh 123-pentatriene.mol2; InChI=1/C5H6/c1-3-5-4-2/h4H,1H2,2H3. Reported by: maaren",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/925
https://github.com/openbabel/openbabel/issues/926:183,Availability,error,error,183,"Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // users.sourceforge.net. Thanks for any help on fixing this!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/926
https://github.com/openbabel/openbabel/issues/926:210,Deployability,update,update,210,"Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // users.sourceforge.net. Thanks for any help on fixing this!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/926
https://github.com/openbabel/openbabel/issues/926:60,Usability,simpl,simply,60,"Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // users.sourceforge.net. Thanks for any help on fixing this!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/926
https://github.com/openbabel/openbabel/issues/926:198,Usability,feedback,feedback,198,"Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // users.sourceforge.net. Thanks for any help on fixing this!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/926
https://github.com/openbabel/openbabel/issues/927:272,Availability,error,error,272,"Sorry! the previously submitted 'bug' was NO BUG. the (wrong) message went like this:. ""Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr; ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // ; users.sourceforge.net. Thanks for any help on fixing this!; "". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/927
https://github.com/openbabel/openbabel/issues/927:299,Deployability,update,update,299,"Sorry! the previously submitted 'bug' was NO BUG. the (wrong) message went like this:. ""Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr; ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // ; users.sourceforge.net. Thanks for any help on fixing this!; "". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/927
https://github.com/openbabel/openbabel/issues/927:62,Integrability,message,message,62,"Sorry! the previously submitted 'bug' was NO BUG. the (wrong) message went like this:. ""Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr; ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // ; users.sourceforge.net. Thanks for any help on fixing this!; "". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/927
https://github.com/openbabel/openbabel/issues/927:148,Usability,simpl,simply,148,"Sorry! the previously submitted 'bug' was NO BUG. the (wrong) message went like this:. ""Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr; ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // ; users.sourceforge.net. Thanks for any help on fixing this!; "". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/927
https://github.com/openbabel/openbabel/issues/927:287,Usability,feedback,feedback,287,"Sorry! the previously submitted 'bug' was NO BUG. the (wrong) message went like this:. ""Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr; ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // ; users.sourceforge.net. Thanks for any help on fixing this!; "". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/927
https://github.com/openbabel/openbabel/issues/928:955,Testability,test,tested,955,"Following is a description of the bug in chain parsing I found using PyBel. The actual description is from an e-mail exchange with Noel O'Boyle, and I have modified it slightly to make more sense in this context. > I tried to iterate over all atoms from the OBMol object, and this; > does work, but I noticed that the chain membership is apparently not parsed; > correctly from the PDB file. For the attached 1ere.pdb, Chain F should; > contain 39 HETATM records - 20 belonging to estrogen and 19 belonging to; > water molecules. However, only the water molecules are given the correct; > chain membership such that the following code returns ""19"" (also see the; > attached IncorrectChains.py):; >; > count = 0; > for ai in range(1,mol.NumAtoms()+1):; > a = mol.GetAtom(ai); > r = a.GetResidue(); > if (r.IsHetAtom(a) and r.GetChain() == ""F""):; > print a.GetType() + "" - "" + r.GetChain(); > count = count + 1; >; > print ""Total: "" + str(count); >; >; > I tested this by changing the conditional to this:; >; > if (r.IsHetAtom(a) and r.GetChain() == ""A""):; >; > In this case the output is ""234"" as the number of HETATMS in Chain A - 120; > for estrogen which should actually be in 6 different chains (A-F) and 18 for; > the waters in chain A. Reported by: kirkd",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/928
https://github.com/openbabel/openbabel/issues/929:127,Availability,error,errors,127,"When reading in a large MOL2 file representing a protein, OB quits with a stack overflow due to expand_kekulize. They are some errors reading the mol2 file, but previously (e.g. with 2.3.1) I just ignored these without any problems. Due to size limitations on SF, I've placed the example MOL2 file at http://publishious.org/site_media/ob_bug/protein.mol2.gz. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/929
https://github.com/openbabel/openbabel/issues/931:172,Energy Efficiency,charge,charge,172,"I used openbabel to calculate molreport format for the molecule below.; > I should be neutral, though babel identified two C=0 groups as C-O(-1); > groups and reported the charge as -1: see below.; > I think this is a bug.; > SDA; >; >; >; > =========PDB INPUT=====================================; > HETATM 1 N UNK 8.243 -0.836 3.570 0.00 0.00 N; > HETATM 2 N UNK 3.982 2.680 -0.001 0.00 0.00 N; > HETATM 3 N UNK 4.499 5.301 -2.550 0.00 0.00 N; > HETATM 4 C UNK 0.000 0.000 0.000 0.00 0.00 C; > HETATM 5 C UNK 2.061 1.196 0.000 0.00 0.00 C; > HETATM 6 C UNK 3.566 1.275 -0.001 0.00 0.00 C; > HETATM 7 C UNK 4.114 0.581 1.248 0.00 0.00 C; > HETATM 8 C UNK 5.642 0.551 1.186 0.00 0.00 C; > HETATM 9 C UNK 6.190 -0.142 2.435 0.00 0.00 C; > HETATM 10 C UNK 7.718 -0.171 2.374 0.00 0.00 C; > HETATM 11 C UNK 4.075 3.355 -1.164 0.00 0.00 C; > HETATM 12 C UNK 4.501 4.800 -1.165 0.00 0.00 C; > HETATM 13 O UNK 1.452 0.000 0.000 0.00 0.00 O; > HETATM 14 O UNK 1.403 2.209 -0.001 0.00 0.00 O; > HETATM 15 O UNK 3.814 2.799 -2.210 0.00 0.00 O; > HETATM 16 H UNK 3.956 0.781 -0.891 0.00 0.00 H; > HETATM 17 H UNK -0.363 -1.028 0.001 0.00 0.00 H; > HETATM 18 H UNK -0.363 0.514 0.890 0.00 0.00 H; > HETATM 19 H UNK -0.363 0.514 -0.890 0.00 0.00 H; > HETATM 20 H UNK 3.732 -0.439 1.294 0.00 0.00 H; > HETATM 21 H UNK 3.797 1.128 2.136 0.00 0.00 H; > HETATM 22 H UNK 6.024 1.571 1.140 0.00 0.00 H; > HETATM 23 H UNK 5.959 0.004 0.299 0.00 0.00 H; > HETATM 24 H UNK 5.808 -1.162 2.482 0.00 0.00 H; > HETATM 25 H UNK 5.873 0.405 3.323 0.00 0.00 H; > HETATM 26 H UNK 8.100 0.849 2.328 0.00 0.00 H; > HETATM 27 H UNK 8.036 -0.718 1.486 0.00 0.00 H; > HETATM 28 H UNK 7.632 -1.173 4.244 0.00 0.00 H; > HETATM 29 H UNK 4.190 3.124 0.836 0.00 0.00 H; > HETATM 30 H UNK 3.797 5.387 -0.575 0.00 0.00 H; > HETATM 31 H UNK 5.498 4.885 -0.730 0.00 0.00 H; > HETATM 32 H UNK 5.120 4.736 -3.127 0.00 0.00 H; > HETATM 33 H UNK 3.546 5.243 -2.928 0.00 0.00 H; > HETATM 34 H UNK 9.573 -0.977 3.734 0.00 0.00 H; > CONECT 1 10 28 34;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:2836,Energy Efficiency,CHARGE,CHARGE,2836,7 0.00 0.00 H; > HETATM 33 H UNK 3.546 5.243 -2.928 0.00 0.00 H; > HETATM 34 H UNK 9.573 -0.977 3.734 0.00 0.00 H; > CONECT 1 10 28 34; > CONECT 2 6 11 29; > CONECT 3 12 32 33; > CONECT 4 13 17 18 19; > CONECT 5 6 13; > CONECT 5 14; > CONECT 5 14; > CONECT 6 2 5 7 16; > CONECT 7 6 8 20 21; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:2899,Energy Efficiency,CHARGE,CHARGE,2899,7 0.00 0.00 H; > HETATM 33 H UNK 3.546 5.243 -2.928 0.00 0.00 H; > HETATM 34 H UNK 9.573 -0.977 3.734 0.00 0.00 H; > CONECT 1 10 28 34; > CONECT 2 6 11 29; > CONECT 3 12 32 33; > CONECT 4 13 17 18 19; > CONECT 5 6 13; > CONECT 5 14; > CONECT 5 14; > CONECT 6 2 5 7 16; > CONECT 7 6 8 20 21; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:2945,Energy Efficiency,CHARGE,CHARGE,2945,HETATM 34 H UNK 9.573 -0.977 3.734 0.00 0.00 H; > CONECT 1 10 28 34; > CONECT 2 6 11 29; > CONECT 3 12 32 33; > CONECT 4 13 17 18 19; > CONECT 5 6 13; > CONECT 5 14; > CONECT 5 14; > CONECT 6 2 5 7 16; > CONECT 7 6 8 20 21; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHAR,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:2990,Energy Efficiency,CHARGE,CHARGE,2990,H; > CONECT 1 10 28 34; > CONECT 2 6 11 29; > CONECT 3 12 32 33; > CONECT 4 13 17 18 19; > CONECT 5 6 13; > CONECT 5 14; > CONECT 5 14; > CONECT 6 2 5 7 16; > CONECT 7 6 8 20 21; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3035,Energy Efficiency,CHARGE,CHARGE,3035, CONECT 3 12 32 33; > CONECT 4 13 17 18 19; > CONECT 5 6 13; > CONECT 5 14; > CONECT 5 14; > CONECT 6 2 5 7 16; > CONECT 7 6 8 20 21; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3079,Energy Efficiency,CHARGE,CHARGE,3079,> CONECT 5 6 13; > CONECT 5 14; > CONECT 5 14; > CONECT 6 2 5 7 16; > CONECT 7 6 8 20 21; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3123,Energy Efficiency,CHARGE,CHARGE,3123,4; > CONECT 6 2 5 7 16; > CONECT 7 6 8 20 21; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3167,Energy Efficiency,CHARGE,CHARGE,3167,; > CONECT 8 7 9 22 23; > CONECT 9 8 10 24 25; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3212,Energy Efficiency,CHARGE,CHARGE,3212,; > CONECT 10 1 9 26 27; > CONECT 11 2 12; > CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3257,Energy Efficiency,CHARGE,CHARGE,3257,CONECT 11 15; > CONECT 11 15; > CONECT 12 3 11 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3303,Energy Efficiency,CHARGE,CHARGE,3303, 30 31; > CONECT 13 4 5; > CONECT 14 5; > CONECT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3349,Energy Efficiency,CHARGE,CHARGE,3349,CT 14 5; > CONECT 15 11; > CONECT 15 11; > CONECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.11,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3395,Energy Efficiency,CHARGE,CHARGE,3395,NECT 16 6; > CONECT 17 4; > CONECT 18 4; > CONECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3440,Energy Efficiency,CHARGE,CHARGE,3440,ECT 19 4; > CONECT 20 7; > CONECT 21 7; > CONECT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3486,Energy Efficiency,CHARGE,CHARGE,3486,CT 22 8; > CONECT 23 8; > CONECT 24 9; > CONECT 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3532,Energy Efficiency,CHARGE,CHARGE,3532,T 25 9; > CONECT 26 10; > CONECT 27 10; > CONECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3577,Energy Efficiency,CHARGE,CHARGE,3577,ECT 28 1; > CONECT 29 2; > CONECT 30 12; > CONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3621,Energy Efficiency,CHARGE,CHARGE,3621,ONECT 31 12; > CONECT 32 3; > CONECT 33 3; > CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > B,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3665,Energy Efficiency,CHARGE,CHARGE,3665, CONECT 34 1; > END; > ==============================; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3709,Energy Efficiency,CHARGE,CHARGE,3709,=========; >; >; >; > ================MOLREPORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3753,Energy Efficiency,CHARGE,CHARGE,3753,ORT OUTPUT===============; > TITLE: sel02.pdb; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3797,Energy Efficiency,CHARGE,CHARGE,3797,b; > FORMULA: C9H19N3O3; > MASS: 217.2655; > TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORD,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3841,Energy Efficiency,CHARGE,CHARGE,3841, TOTAL CHARGE: -2; > TOTAL SPIN: 6409968; > ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1;,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3885,Energy Efficiency,CHARGE,CHARGE,3885,ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.3300; > ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BON,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3929,Energy Efficiency,CHARGE,CHARGE,3929, ATOM: 2 N TYPE: Nam HYB: 2 CHARGE: -0.3500; > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 S,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:3973,Energy Efficiency,CHARGE,CHARGE,3973, > ATOM: 3 N TYPE: N3 HYB: 3 CHARGE: -0.3261; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4017,Energy Efficiency,CHARGE,CHARGE,4017,; > ATOM: 4 C TYPE: C3 HYB: 3 CHARGE: 0.0768; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4061,Energy Efficiency,CHARGE,CHARGE,4061,; > ATOM: 5 C TYPE: C+ HYB: 2 CHARGE: 0.0470; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORD,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4105,Energy Efficiency,CHARGE,CHARGE,4105,; > ATOM: 6 C TYPE: C3 HYB: 3 CHARGE: 0.0632; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORDER: 1; > BOND: 18 START: 7 END: 8 ORDER: 1; ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4149,Energy Efficiency,CHARGE,CHARGE,4149,; > ATOM: 7 C TYPE: C3 HYB: 3 CHARGE: -0.0287; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORDER: 1; > BOND: 18 START: 7 END: 8 ORDER: 1; > BOND: 19 START: 7 END: 20 ORDER: 1; > BOND,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4193,Energy Efficiency,CHARGE,CHARGE,4193,7; > ATOM: 8 C TYPE: C3 HYB: 3 CHARGE: -0.0499; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORDER: 1; > BOND: 18 START: 7 END: 8 ORDER: 1; > BOND: 19 START: 7 END: 20 ORDER: 1; > BOND: 20 START: 7 END: 21 ORDER: 1; > BOND: 21 S,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4237,Energy Efficiency,CHARGE,CHARGE,4237,99; > ATOM: 9 C TYPE: C3 HYB: 3 CHARGE: -0.0406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORDER: 1; > BOND: 18 START: 7 END: 8 ORDER: 1; > BOND: 19 START: 7 END: 20 ORDER: 1; > BOND: 20 START: 7 END: 21 ORDER: 1; > BOND: 21 START: 8 END: 9 ORDER: 1; > BOND: 22 START: 8,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4281,Energy Efficiency,CHARGE,CHARGE,4281,406; > ATOM: 10 C TYPE: C3 HYB: 3 CHARGE: -0.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORDER: 1; > BOND: 18 START: 7 END: 8 ORDER: 1; > BOND: 19 START: 7 END: 20 ORDER: 1; > BOND: 20 START: 7 END: 21 ORDER: 1; > BOND: 21 START: 8 END: 9 ORDER: 1; > BOND: 22 START: 8 END: 22 ORDER: 1; > BOND: 23 START: 8 END: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4325,Energy Efficiency,CHARGE,CHARGE,4325,.0069; > ATOM: 11 C TYPE: C+ HYB: 2 CHARGE: -0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORDER: 1; > BOND: 18 START: 7 END: 8 ORDER: 1; > BOND: 19 START: 7 END: 20 ORDER: 1; > BOND: 20 START: 7 END: 21 ORDER: 1; > BOND: 21 START: 8 END: 9 ORDER: 1; > BOND: 22 START: 8 END: 22 ORDER: 1; > BOND: 23 START: 8 END: 23 ORDER: 1; > BOND: 24 START: 9 END: 10 ORD,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/931:4369,Energy Efficiency,CHARGE,CHARGE,4369,-0.0625; > ATOM: 12 C TYPE: C3 HYB: 3 CHARGE: 0.0171; > ATOM: 13 O TYPE: O3 HYB: 2 CHARGE: -0.5121; > ATOM: 14 O TYPE: O- HYB: 2 CHARGE: -0.8496; > ATOM: 15 O TYPE: O- HYB: 2 CHARGE: -0.8656; > ATOM: 16 H TYPE: H HYB: 0 CHARGE: 0.0565; > ATOM: 17 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 18 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 19 H TYPE: H HYB: 0 CHARGE: 0.0659; > ATOM: 20 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 21 H TYPE: H HYB: 0 CHARGE: 0.0287; > ATOM: 22 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 23 H TYPE: H HYB: 0 CHARGE: 0.0266; > ATOM: 24 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 25 H TYPE: H HYB: 0 CHARGE: 0.0277; > ATOM: 26 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 27 H TYPE: H HYB: 0 CHARGE: 0.0422; > ATOM: 28 H TYPE: H HYB: 0 CHARGE: 0.1182; > ATOM: 29 H TYPE: H HYB: 0 CHARGE: 0.1454; > ATOM: 30 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 31 H TYPE: H HYB: 0 CHARGE: 0.0472; > ATOM: 32 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 33 H TYPE: H HYB: 0 CHARGE: 0.1185; > ATOM: 34 H TYPE: H HYB: 0 CHARGE: 0.1182; > BOND: 0 START: 1 END: 10 ORDER: 1; > BOND: 1 START: 1 END: 28 ORDER: 1; > BOND: 2 START: 1 END: 34 ORDER: 1; > BOND: 3 START: 2 END: 6 ORDER: 1; > BOND: 4 START: 2 END: 11 ORDER: 1; > BOND: 5 START: 2 END: 29 ORDER: 1; > BOND: 6 START: 3 END: 12 ORDER: 1; > BOND: 7 START: 3 END: 32 ORDER: 1; > BOND: 8 START: 3 END: 33 ORDER: 1; > BOND: 9 START: 4 END: 13 ORDER: 1; > BOND: 10 START: 4 END: 17 ORDER: 1; > BOND: 11 START: 4 END: 18 ORDER: 1; > BOND: 12 START: 4 END: 19 ORDER: 1; > BOND: 13 START: 5 END: 6 ORDER: 1; > BOND: 14 START: 5 END: 13 ORDER: 1; > BOND: 15 START: 5 END: 14 ORDER: 2; > BOND: 16 START: 6 END: 7 ORDER: 1; > BOND: 17 START: 6 END: 16 ORDER: 1; > BOND: 18 START: 7 END: 8 ORDER: 1; > BOND: 19 START: 7 END: 20 ORDER: 1; > BOND: 20 START: 7 END: 21 ORDER: 1; > BOND: 21 START: 8 END: 9 ORDER: 1; > BOND: 22 START: 8 END: 22 ORDER: 1; > BOND: 23 START: 8 END: 23 ORDER: 1; > BOND: 24 START: 9 END: 10 ORDER: 1; > BOND: 25 START: 9 END: 24 ORDER: 1;,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/931
https://github.com/openbabel/openbabel/issues/932:464,Availability,down,down,464,"The new kekulize algorithm uses a depth-first search that takes ""forever"" (> 6 hours) to finish for large aromatic systems such as fullerenes. I will be redesigning this as a breadth-first search rather than depth-first, which should make it converge much more rapidly. The problem with depth first is that it wanders all over the molecule trying to assign thousands and millions of combinations of single/double, when it might be that the very first bond it laid down was wrong. By using breadth-first, the algorithm will ensure that all the bonds in a local region make sense before spreading out to the next layer of atoms. For fullerenes, this should make it converge almost immediately on a solution. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/932
https://github.com/openbabel/openbabel/issues/933:48,Availability,down,download,48,"A molecule with 0 atoms was contained in an SDF download from the PDB of all ligands. OpenBabel 2.2.3 segfaulted on Windows when used through the Python interface as follows:. >>> import pybel; >>> mol = pybel.readfile(""sdf"", ""example.sdf"").next(); >>> mol.write(""inchi"") # segfault here. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933
https://github.com/openbabel/openbabel/issues/933:153,Integrability,interface,interface,153,"A molecule with 0 atoms was contained in an SDF download from the PDB of all ligands. OpenBabel 2.2.3 segfaulted on Windows when used through the Python interface as follows:. >>> import pybel; >>> mol = pybel.readfile(""sdf"", ""example.sdf"").next(); >>> mol.write(""inchi"") # segfault here. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933
https://github.com/openbabel/openbabel/issues/934:39,Availability,down,download,39,"The attached file (from the PDB ligand download) has some missing bonds and so is interpreted by OB as containing multiple radicals. When written out and read back in again, an error occurs as the M RAD line is too long. Tested with 2.2.3 (I know that Craig has made some changes since). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934
https://github.com/openbabel/openbabel/issues/934:177,Availability,error,error,177,"The attached file (from the PDB ligand download) has some missing bonds and so is interpreted by OB as containing multiple radicals. When written out and read back in again, an error occurs as the M RAD line is too long. Tested with 2.2.3 (I know that Craig has made some changes since). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934
https://github.com/openbabel/openbabel/issues/934:221,Testability,Test,Tested,221,"The attached file (from the PDB ligand download) has some missing bonds and so is interpreted by OB as containing multiple radicals. When written out and read back in again, an error occurs as the M RAD line is too long. Tested with 2.2.3 (I know that Craig has made some changes since). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934
https://github.com/openbabel/openbabel/issues/1517:84,Energy Efficiency,charge,charges,84,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517
https://github.com/openbabel/openbabel/issues/1517:102,Energy Efficiency,charge,charges,102,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517
https://github.com/openbabel/openbabel/issues/1517:252,Energy Efficiency,charge,charges,252,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517
https://github.com/openbabel/openbabel/issues/1517:294,Energy Efficiency,charge,charges,294,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517
https://github.com/openbabel/openbabel/issues/1517:393,Energy Efficiency,charge,charges,393,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517
https://github.com/openbabel/openbabel/issues/1517:577,Energy Efficiency,Charge,Charges,577,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517
https://github.com/openbabel/openbabel/issues/1517:420,Testability,test,tested,420,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517
https://github.com/openbabel/openbabel/issues/937:254,Availability,error,error,254,"Openbabel 2.2.3 ( Aug 18 2009 -- 16:21:20) on Windows XP, GUI and command line:. Output to CML Version 1 has the following bug:. Output of coordinate value elements are in a ""floatg"" element, that does not exist in CML, it should be ""float"". Probably an error; cause by inproper string handling, the element name ""string"" just before ""float"" leaks a ""g"" ?!. Example:. <molecule xmlns=""http://www.xml-cml.org/dtd/cml_1_0_1.dtd"" id=""Oct-1-ene"">; <atomArray>; <atom id=""a1"">; <string builtin=""elementType"">C</string>; <floatg builtin=""x3"">4.206433</floatg>; ______^_______________________^____. Example input that yields this error:. >babel.exe -icml oct-1-ene.cml -ocml test.cml -x1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/937
https://github.com/openbabel/openbabel/issues/937:623,Availability,error,error,623,"Openbabel 2.2.3 ( Aug 18 2009 -- 16:21:20) on Windows XP, GUI and command line:. Output to CML Version 1 has the following bug:. Output of coordinate value elements are in a ""floatg"" element, that does not exist in CML, it should be ""float"". Probably an error; cause by inproper string handling, the element name ""string"" just before ""float"" leaks a ""g"" ?!. Example:. <molecule xmlns=""http://www.xml-cml.org/dtd/cml_1_0_1.dtd"" id=""Oct-1-ene"">; <atomArray>; <atom id=""a1"">; <string builtin=""elementType"">C</string>; <floatg builtin=""x3"">4.206433</floatg>; ______^_______________________^____. Example input that yields this error:. >babel.exe -icml oct-1-ene.cml -ocml test.cml -x1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/937
https://github.com/openbabel/openbabel/issues/937:668,Testability,test,test,668,"Openbabel 2.2.3 ( Aug 18 2009 -- 16:21:20) on Windows XP, GUI and command line:. Output to CML Version 1 has the following bug:. Output of coordinate value elements are in a ""floatg"" element, that does not exist in CML, it should be ""float"". Probably an error; cause by inproper string handling, the element name ""string"" just before ""float"" leaks a ""g"" ?!. Example:. <molecule xmlns=""http://www.xml-cml.org/dtd/cml_1_0_1.dtd"" id=""Oct-1-ene"">; <atomArray>; <atom id=""a1"">; <string builtin=""elementType"">C</string>; <floatg builtin=""x3"">4.206433</floatg>; ______^_______________________^____. Example input that yields this error:. >babel.exe -icml oct-1-ene.cml -ocml test.cml -x1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/937
https://github.com/openbabel/openbabel/issues/940:151,Energy Efficiency,charge,charges,151,"This is a follow-up to PR#1257827; https://sourceforge.net/tracker/?func=detail&aid=1257827&group_id=40728&atid=428740. The key problem is that formal charges should be assigned for some formats (e.g., XYZ) before aromaticity detection can occur. Many ""standard"" formats (e.g., SDF, SMILES) already have formal charges marked correctly, so this isn't an issue. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/940
https://github.com/openbabel/openbabel/issues/940:311,Energy Efficiency,charge,charges,311,"This is a follow-up to PR#1257827; https://sourceforge.net/tracker/?func=detail&aid=1257827&group_id=40728&atid=428740. The key problem is that formal charges should be assigned for some formats (e.g., XYZ) before aromaticity detection can occur. Many ""standard"" formats (e.g., SDF, SMILES) already have formal charges marked correctly, so this isn't an issue. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/940
https://github.com/openbabel/openbabel/issues/940:226,Safety,detect,detection,226,"This is a follow-up to PR#1257827; https://sourceforge.net/tracker/?func=detail&aid=1257827&group_id=40728&atid=428740. The key problem is that formal charges should be assigned for some formats (e.g., XYZ) before aromaticity detection can occur. Many ""standard"" formats (e.g., SDF, SMILES) already have formal charges marked correctly, so this isn't an issue. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/940
https://github.com/openbabel/openbabel/issues/941:855,Energy Efficiency,reduce,reduced,855,"Hi,. Not really a bug, but here it goes anyway:; I'm using babel (parts of the source code) to process protein structures from the PDB and ; realized that for a couple of (admittedly very) large protein structures such as the ribosome,; babel takes quite some time ( up to one hour) to prepare a file with the ""-p7"" option. . Profiling revealed that a considerable amount of time is spent in OBAromaticTyper::SelectRootAtoms(...) (typer.cpp),; due to the fact that the root atoms are always checked against all rings (which are numerous in large proteins); - even though not actually being part of it. . Attached is a proposal for a slightly modified new version of the function with some loop ; re-organization and including a look-up list for which atom is part of which ring. This ensures that ; rootAtoms are only analyzed in the relevant rings. This reduced the amount to time spent in the ; SelectRootAtoms()-function to a fraction of the original time used. . cheers; F. Reported by: fab5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/941
https://github.com/openbabel/openbabel/issues/943:0,Availability,echo,echo,0,echo 'CC[C@H](C)[C@@H](C)CC' | babel -ismi -osdf | babel -isdf -osmi . produces CCC(C)C(C)CC and not CC[C@H](C)[C@@H](C)CC what it should do. so seen in the lates 2.2.3. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/943
https://github.com/openbabel/openbabel/issues/944:428,Energy Efficiency,charge,charge,428,"The v2000 atom lines are incomplete according to the CT Files spec as of 2007. They are missing 7 trailing fields which causes trouble with some programs, e.g. Dingo from Indigo. Lines 606-611 in mdlformat.cpp should be:. snprintf(buff, BUFF_SIZE, ""%10.4f%10.4f%10.4f %-3s%2d%3d%3d%3d%3d%3d%3d%3d%3d%3d%3d%3d"",; atom->GetX(),; atom->GetY(),; atom->GetZ(),; atom->GetAtomicNum() ? etab.GetSymbol(atom->GetAtomicNum()) : ""* "",; 0,charge,0,0,0,0,0,0,0,0,0,0); . Reported by: @ergo70",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/944
https://github.com/openbabel/openbabel/issues/948:52,Availability,error,errors,52,"Although OB (trunk or version 2.2.3) builds without errors using cmake (version 2.8.0 or 2.6.4),; babel ends in error when invoked from the command line. ""babel -H"" does not display the list; of supported format. When invoked ,v.g. with ""babel file.res file.xyz"", The following error message; is displayed :; ¨babel pa142.res pa142.xyz; babel: cannot write output format!; Open Babel 2.2.99 -- Dec 6 2009 -- 16:51:34; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information."". Version 2.2.3 builds correctly using the old configure script. Louis. Reported by: lricard",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/948
https://github.com/openbabel/openbabel/issues/948:112,Availability,error,error,112,"Although OB (trunk or version 2.2.3) builds without errors using cmake (version 2.8.0 or 2.6.4),; babel ends in error when invoked from the command line. ""babel -H"" does not display the list; of supported format. When invoked ,v.g. with ""babel file.res file.xyz"", The following error message; is displayed :; ¨babel pa142.res pa142.xyz; babel: cannot write output format!; Open Babel 2.2.99 -- Dec 6 2009 -- 16:51:34; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information."". Version 2.2.3 builds correctly using the old configure script. Louis. Reported by: lricard",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/948
https://github.com/openbabel/openbabel/issues/948:278,Availability,error,error,278,"Although OB (trunk or version 2.2.3) builds without errors using cmake (version 2.8.0 or 2.6.4),; babel ends in error when invoked from the command line. ""babel -H"" does not display the list; of supported format. When invoked ,v.g. with ""babel file.res file.xyz"", The following error message; is displayed :; ¨babel pa142.res pa142.xyz; babel: cannot write output format!; Open Babel 2.2.99 -- Dec 6 2009 -- 16:51:34; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information."". Version 2.2.3 builds correctly using the old configure script. Louis. Reported by: lricard",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/948
https://github.com/openbabel/openbabel/issues/948:284,Integrability,message,message,284,"Although OB (trunk or version 2.2.3) builds without errors using cmake (version 2.8.0 or 2.6.4),; babel ends in error when invoked from the command line. ""babel -H"" does not display the list; of supported format. When invoked ,v.g. with ""babel file.res file.xyz"", The following error message; is displayed :; ¨babel pa142.res pa142.xyz; babel: cannot write output format!; Open Babel 2.2.99 -- Dec 6 2009 -- 16:51:34; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information."". Version 2.2.3 builds correctly using the old configure script. Louis. Reported by: lricard",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/948
https://github.com/openbabel/openbabel/issues/948:564,Modifiability,config,configure,564,"Although OB (trunk or version 2.2.3) builds without errors using cmake (version 2.8.0 or 2.6.4),; babel ends in error when invoked from the command line. ""babel -H"" does not display the list; of supported format. When invoked ,v.g. with ""babel file.res file.xyz"", The following error message; is displayed :; ¨babel pa142.res pa142.xyz; babel: cannot write output format!; Open Babel 2.2.99 -- Dec 6 2009 -- 16:51:34; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information."". Version 2.2.3 builds correctly using the old configure script. Louis. Reported by: lricard",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/948
https://github.com/openbabel/openbabel/issues/950:297,Availability,error,error,297,"Isocyanides or isonitriles, normally written as C[N+]#[C-] (methylisocyanide) or c1ccccc1[N+]#[C-] (phenylisocyanide) cannot be search with standard fingerprint-based fastsearch because during index generation the structure is changed erroneously to C#[N]C or C#[N]c1ccccc1. This appears to be an error in valence assignment. Actually, this is an interesting case where the isonitrile C has a valence of 2 not 4. Similarly, nitro groups of the type c1ccccc1[N+](=O)[O-] are turned into O=N(=O)c1ccccc1 during index generation which generates inconsistency between original data and data retrieved by using the index. . obgrep works correctly. babel does not. Seen in 2.2.0 2.2.3 and yesterday SVN 2.2.99 on OpenSuse 10.3. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/950
https://github.com/openbabel/openbabel/issues/951:307,Availability,fault,fault,307,CC(=O)Nc1ccc(cc1)[Sb]2(O)(O)O[Sb](O)(O)(O[Sb]3(O)(O[Sb](O)(O)(O2)c4ccc(N)cc4)O[Sb](O)(O)(O[Sb](O)(O)(O[Sb](O)(O)(O3)c5ccc(N)cc5)c6ccc(NC(=O)C)cc6)c7ccc(N)cc7)c8ccc(N)cc8 NEOSTIBOSAN. leads to crash in yesterday SVN babel 2.2.99. fingerprint similarity . babel NEOSTIBAN.smi -ofpt -xh. produces segmentation fault as well as. index generation. babel NEOSTIBAN.smi -ofs -e. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/951
https://github.com/openbabel/openbabel/issues/952:253,Availability,fault,fault,253,"with reference to 2913217. Oc1ccc(cc1)C1(C)CSc2cc(O)ccc2C1CCCCCCCCC(CCCCC(F)(F)(F)C(F)C(F)(F)C(F)(F)F)C(=O)O 10-[(3RS,4RS)-7-hydroxy-3-(4-hydroxyphenyl)-3-methylthiochroman-4-yl]-2-(5,5,5,6,7,7,8,8,8-nonafluorooctyl)decanoic_acid. leads to segmentation fault in both fingerprint similarity and fastsearch index generation in yesterday SVN but not in 2.2.3. Although the chemical structure is formally wrong, a warning should be issued instead of making the fingerprint routine crash. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/952
https://github.com/openbabel/openbabel/issues/952:469,Integrability,rout,routine,469,"with reference to 2913217. Oc1ccc(cc1)C1(C)CSc2cc(O)ccc2C1CCCCCCCCC(CCCCC(F)(F)(F)C(F)C(F)(F)C(F)(F)F)C(=O)O 10-[(3RS,4RS)-7-hydroxy-3-(4-hydroxyphenyl)-3-methylthiochroman-4-yl]-2-(5,5,5,6,7,7,8,8,8-nonafluorooctyl)decanoic_acid. leads to segmentation fault in both fingerprint similarity and fastsearch index generation in yesterday SVN but not in 2.2.3. Although the chemical structure is formally wrong, a warning should be issued instead of making the fingerprint routine crash. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/952
https://github.com/openbabel/openbabel/issues/955:660,Availability,avail,available,660,"The installer on the main site, used to install a fresh copy of openbabel on a virgin 10.6.2 machine appears to install a broken version of openbabel that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output fil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:1113,Availability,error,error,1113,"stall a broken version of openbabel that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:4,Deployability,install,installer,4,"The installer on the main site, used to install a fresh copy of openbabel on a virgin 10.6.2 machine appears to install a broken version of openbabel that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output fil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:40,Deployability,install,install,40,"The installer on the main site, used to install a fresh copy of openbabel on a virgin 10.6.2 machine appears to install a broken version of openbabel that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output fil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:112,Deployability,install,install,112,"The installer on the main site, used to install a fresh copy of openbabel on a virgin 10.6.2 machine appears to install a broken version of openbabel that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output fil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:2069,Deployability,Install,Install,2069," that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main wiki page. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:1373,Modifiability,plugin,plugin,1373," that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main wiki page. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:1427,Modifiability,plugin,plugins,1427," that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main wiki page. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:1757,Modifiability,plugin,plugin,1757," that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main wiki page. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:1804,Performance,load,loaded,1804," that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main wiki page. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/955:1857,Performance,load,loaders,1857," that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main wiki page. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955
https://github.com/openbabel/openbabel/issues/956:116,Availability,fault,fault,116,Using Linux Ubuntu; Open Babel 2.2.3 . babel -imol2 molecule.mol2 -omol2 molecule_for.mol2 --separate; Segmentation fault. Reported by: jaimerubio,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/956
https://github.com/openbabel/openbabel/issues/957:204,Integrability,message,message,204,The attached CIF file makes OpenBabel crashs either if used as a library or using the command-line convertion tool. This appends on a Debian sid with OpenBabel 2.2.3 or on an Ubuntu Hardy with 2.1.1. The message is:. caliste@myrte:~/tmp$ babel Open_babel_crash.cif Open_babel_crash.xyz; *** glibc detected *** babel: double free or corruption (out): 0x00000000006b6ff0 ***; ======= Backtrace: =========; /lib/libc.so.6[0x7f392848008a]; /lib/libc.so.6(cfree+0x8c)[0x7f3928483c1c]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x59a)[0x7f39293978ea]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x560)[0x7f39265f77a0]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0x7ce)[0x7f392660281e]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat14ReadChemObjectEPNS_12OBConversionE+0x12)[0x7f39265f8042]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEv+0x90)[0x7f39293a6400]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1f7)[0x7f39293a7c17]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x124e)[0x7f39293aad6e]; babel[0x402f26]; /lib/libc.so.6(__libc_start_main+0xf4)[0x7f392842a1c4]; babel(__gxx_personality_v0+0x81)[0x401de9]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:01 70139 /usr/bin/babel; 00605000-00606000 rw-p 00005000 08:01 70139 /usr/bin/babel; 00606000-006c1000 rw-p 00606000 00:00 0 [heap]; 7f3918000000-7f3918021000 rw-p 7f3918000000 00:00 0; 7f3918021000-7f391c000000 ---p 7f3918021000 00:00 0; 7f391f391000-7f391f3a1000 r-xp 00000000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f3a1000-7f391f5a1000 ---p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a1000-7f391f5a2000 rw-p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a2000-7f391f5b2000 r-xp 00000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957
https://github.com/openbabel/openbabel/issues/957:13903,Performance,cache,cacheformat,13903,pubchem.so; 7f3924902000-7f3924903000 rw-p 00012000 08:01 920635 /usr/lib/openbabel/2.1/pubchem.so; 7f3924903000-7f3924913000 r-xp 00000000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957
https://github.com/openbabel/openbabel/issues/957:13995,Performance,cache,cacheformat,13995,hem.so; 7f3924903000-7f3924913000 r-xp 00000000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577b000-7f3925789000 r-xp 00000000 08:01 920646 /usr/lib/o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957
https://github.com/openbabel/openbabel/issues/957:14087,Performance,cache,cacheformat,14087,t.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577b000-7f3925789000 r-xp 00000000 08:01 920646 /usr/lib/openbabel/2.1/viewmolformat.so; 7f3925789000-7f3925988000 ---p 0000e000 08:01 920646 /usr/lib,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957
https://github.com/openbabel/openbabel/issues/957:297,Safety,detect,detected,297,The attached CIF file makes OpenBabel crashs either if used as a library or using the command-line convertion tool. This appends on a Debian sid with OpenBabel 2.2.3 or on an Ubuntu Hardy with 2.1.1. The message is:. caliste@myrte:~/tmp$ babel Open_babel_crash.cif Open_babel_crash.xyz; *** glibc detected *** babel: double free or corruption (out): 0x00000000006b6ff0 ***; ======= Backtrace: =========; /lib/libc.so.6[0x7f392848008a]; /lib/libc.so.6(cfree+0x8c)[0x7f3928483c1c]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x59a)[0x7f39293978ea]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x560)[0x7f39265f77a0]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0x7ce)[0x7f392660281e]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat14ReadChemObjectEPNS_12OBConversionE+0x12)[0x7f39265f8042]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEv+0x90)[0x7f39293a6400]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1f7)[0x7f39293a7c17]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x124e)[0x7f39293aad6e]; babel[0x402f26]; /lib/libc.so.6(__libc_start_main+0xf4)[0x7f392842a1c4]; babel(__gxx_personality_v0+0x81)[0x401de9]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:01 70139 /usr/bin/babel; 00605000-00606000 rw-p 00005000 08:01 70139 /usr/bin/babel; 00606000-006c1000 rw-p 00606000 00:00 0 [heap]; 7f3918000000-7f3918021000 rw-p 7f3918000000 00:00 0; 7f3918021000-7f391c000000 ---p 7f3918021000 00:00 0; 7f391f391000-7f391f3a1000 r-xp 00000000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f3a1000-7f391f5a1000 ---p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a1000-7f391f5a2000 rw-p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a2000-7f391f5b2000 r-xp 00000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957
https://github.com/openbabel/openbabel/issues/958:204,Integrability,message,message,204,The attached CIF file makes OpenBabel crashs either if used as a library or using the command-line convertion tool. This appends on a Debian sid with OpenBabel 2.2.3 or on an Ubuntu Hardy with 2.1.1. The message is:. caliste@myrte:~/tmp$ babel Open_babel_crash.cif Open_babel_crash.xyz; *** glibc detected *** babel: double free or corruption (out): 0x00000000006b6ff0 ***; ======= Backtrace: =========; /lib/libc.so.6[0x7f392848008a]; /lib/libc.so.6(cfree+0x8c)[0x7f3928483c1c]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x59a)[0x7f39293978ea]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x560)[0x7f39265f77a0]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0x7ce)[0x7f392660281e]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat14ReadChemObjectEPNS_12OBConversionE+0x12)[0x7f39265f8042]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEv+0x90)[0x7f39293a6400]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1f7)[0x7f39293a7c17]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x124e)[0x7f39293aad6e]; babel[0x402f26]; /lib/libc.so.6(__libc_start_main+0xf4)[0x7f392842a1c4]; babel(__gxx_personality_v0+0x81)[0x401de9]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:01 70139 /usr/bin/babel; 00605000-00606000 rw-p 00005000 08:01 70139 /usr/bin/babel; 00606000-006c1000 rw-p 00606000 00:00 0 [heap]; 7f3918000000-7f3918021000 rw-p 7f3918000000 00:00 0; 7f3918021000-7f391c000000 ---p 7f3918021000 00:00 0; 7f391f391000-7f391f3a1000 r-xp 00000000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f3a1000-7f391f5a1000 ---p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a1000-7f391f5a2000 rw-p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a2000-7f391f5b2000 r-xp 00000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/958
https://github.com/openbabel/openbabel/issues/958:13903,Performance,cache,cacheformat,13903,pubchem.so; 7f3924902000-7f3924903000 rw-p 00012000 08:01 920635 /usr/lib/openbabel/2.1/pubchem.so; 7f3924903000-7f3924913000 r-xp 00000000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/958
https://github.com/openbabel/openbabel/issues/958:13995,Performance,cache,cacheformat,13995,hem.so; 7f3924903000-7f3924913000 r-xp 00000000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577b000-7f3925789000 r-xp 00000000 08:01 920646 /usr/lib/o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/958
https://github.com/openbabel/openbabel/issues/958:14087,Performance,cache,cacheformat,14087,t.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577b000-7f3925789000 r-xp 00000000 08:01 920646 /usr/lib/openbabel/2.1/viewmolformat.so; 7f3925789000-7f3925988000 ---p 0000e000 08:01 920646 /usr/lib,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/958
https://github.com/openbabel/openbabel/issues/958:297,Safety,detect,detected,297,The attached CIF file makes OpenBabel crashs either if used as a library or using the command-line convertion tool. This appends on a Debian sid with OpenBabel 2.2.3 or on an Ubuntu Hardy with 2.1.1. The message is:. caliste@myrte:~/tmp$ babel Open_babel_crash.cif Open_babel_crash.xyz; *** glibc detected *** babel: double free or corruption (out): 0x00000000006b6ff0 ***; ======= Backtrace: =========; /lib/libc.so.6[0x7f392848008a]; /lib/libc.so.6(cfree+0x8c)[0x7f3928483c1c]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x59a)[0x7f39293978ea]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x560)[0x7f39265f77a0]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0x7ce)[0x7f392660281e]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat14ReadChemObjectEPNS_12OBConversionE+0x12)[0x7f39265f8042]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEv+0x90)[0x7f39293a6400]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1f7)[0x7f39293a7c17]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x124e)[0x7f39293aad6e]; babel[0x402f26]; /lib/libc.so.6(__libc_start_main+0xf4)[0x7f392842a1c4]; babel(__gxx_personality_v0+0x81)[0x401de9]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:01 70139 /usr/bin/babel; 00605000-00606000 rw-p 00005000 08:01 70139 /usr/bin/babel; 00606000-006c1000 rw-p 00606000 00:00 0 [heap]; 7f3918000000-7f3918021000 rw-p 7f3918000000 00:00 0; 7f3918021000-7f391c000000 ---p 7f3918021000 00:00 0; 7f391f391000-7f391f3a1000 r-xp 00000000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f3a1000-7f391f5a1000 ---p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a1000-7f391f5a2000 rw-p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a2000-7f391f5b2000 r-xp 00000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/958
https://github.com/openbabel/openbabel/issues/959:201,Availability,Error,Error,201,"obgrep reports SMARTS as illegal, but it is actually valid SMARTS:. am@box:~$ obgrep ""F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O"" test.smi; ==============================; *** Open Babel Error in SMARTSError; SMARTS Error:; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O; ^. Reported by: maunza",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/959
https://github.com/openbabel/openbabel/issues/959:230,Availability,Error,Error,230,"obgrep reports SMARTS as illegal, but it is actually valid SMARTS:. am@box:~$ obgrep ""F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O"" test.smi; ==============================; *** Open Babel Error in SMARTSError; SMARTS Error:; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O; ^. Reported by: maunza",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/959
https://github.com/openbabel/openbabel/issues/959:144,Testability,test,test,144,"obgrep reports SMARTS as illegal, but it is actually valid SMARTS:. am@box:~$ obgrep ""F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O"" test.smi; ==============================; *** Open Babel Error in SMARTSError; SMARTS Error:; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O; ^. Reported by: maunza",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/959
https://github.com/openbabel/openbabel/issues/961:329,Availability,Error,Error,329,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:743,Availability,error,errors,743,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:350,Modifiability,variab,variables,350,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:719,Modifiability,Config,Configuring,719,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:236,Performance,Perform,Performing,236,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:276,Performance,Perform,Performing,276,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:247,Testability,Test,Test,247,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:287,Testability,Test,Test,287,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/961:463,Testability,test,tested,463,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961
https://github.com/openbabel/openbabel/issues/962:356,Availability,echo,echo,356,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:632,Availability,echo,echo,632,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:832,Availability,echo,echo,832,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:48,Energy Efficiency,charge,charged,48,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:525,Energy Efficiency,charge,charge,525,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:144,Integrability,interface,interface,144,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:476,Integrability,message,messages,476,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:498,Integrability,message,messages,498,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:751,Integrability,message,messages,751,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:773,Integrability,message,messages,773,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:953,Integrability,message,messages,953,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:975,Integrability,message,messages,975,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:488,Security,audit,audit,488,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:763,Security,audit,audit,763,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:965,Security,audit,audit,965,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:272,Testability,test,tested,272,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:494,Testability,log,log,494,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:562,Testability,test,tested,562,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:769,Testability,log,log,769,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/962:971,Testability,log,log,971,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962
https://github.com/openbabel/openbabel/issues/963:49,Safety,detect,detection,49,The enclosed SDF file fails at aromatic / Kekule detection in trunk:. babel example.sdf -osmi; C/C=C/CN1CC[NH+](CC1)CCn1c(c(n2c1nc1c2c(=O)n(c(=O)n1C)C)C)C. babel example.sdf -osmi | babel -ismi -osmi; C/C=C/CN1CC[NH+](CC1)CCN1C(C(N2C1NC1C2C(=O)N(C(=O)N1C)C)C)C. Reported by: @ghutchis,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963
https://github.com/openbabel/openbabel/issues/964:800,Deployability,INSTALL,INSTALL,800,"See background reference:; http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14608. Building openbabel 2.2.3 with gcc 4.3.3 on Tru64 requires two things:; (1) -D_GLIBCXX_USE_C99_MATH in CXX_FLAGS , e.g.; CXXFLAGS='-D_GLIBCXX_USE_C99_MATH -g -O2' ./configure; (2) whenever isfinite() is used, #include <cmah> is needed, there are too many of them; and I got fed up after adding the first couple, so I just added it to the end of src/config.h.in; (adding it to the end of include/openbabel/babelconfig.h also get included to everything). These steps are probably required for most older unix systems which is not linux nor Mac X.; (I'd like to know if either of these are needed on linux, actually, but can't be bothered, since openbabel is shipped with fedora). Also I have a comment to make: the top level INSTALL is misleading. since isfinite() is C99, the c89 part in; CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure; is misleading, and further more, most of openbabel is c++ code so the effective variables are really CXX and CXXFLAGS, not CC/CFLAGS . Reported by: htl10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964
https://github.com/openbabel/openbabel/issues/964:242,Modifiability,config,configure,242,"See background reference:; http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14608. Building openbabel 2.2.3 with gcc 4.3.3 on Tru64 requires two things:; (1) -D_GLIBCXX_USE_C99_MATH in CXX_FLAGS , e.g.; CXXFLAGS='-D_GLIBCXX_USE_C99_MATH -g -O2' ./configure; (2) whenever isfinite() is used, #include <cmah> is needed, there are too many of them; and I got fed up after adding the first couple, so I just added it to the end of src/config.h.in; (adding it to the end of include/openbabel/babelconfig.h also get included to everything). These steps are probably required for most older unix systems which is not linux nor Mac X.; (I'd like to know if either of these are needed on linux, actually, but can't be bothered, since openbabel is shipped with fedora). Also I have a comment to make: the top level INSTALL is misleading. since isfinite() is C99, the c89 part in; CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure; is misleading, and further more, most of openbabel is c++ code so the effective variables are really CXX and CXXFLAGS, not CC/CFLAGS . Reported by: htl10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964
https://github.com/openbabel/openbabel/issues/964:426,Modifiability,config,config,426,"See background reference:; http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14608. Building openbabel 2.2.3 with gcc 4.3.3 on Tru64 requires two things:; (1) -D_GLIBCXX_USE_C99_MATH in CXX_FLAGS , e.g.; CXXFLAGS='-D_GLIBCXX_USE_C99_MATH -g -O2' ./configure; (2) whenever isfinite() is used, #include <cmah> is needed, there are too many of them; and I got fed up after adding the first couple, so I just added it to the end of src/config.h.in; (adding it to the end of include/openbabel/babelconfig.h also get included to everything). These steps are probably required for most older unix systems which is not linux nor Mac X.; (I'd like to know if either of these are needed on linux, actually, but can't be bothered, since openbabel is shipped with fedora). Also I have a comment to make: the top level INSTALL is misleading. since isfinite() is C99, the c89 part in; CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure; is misleading, and further more, most of openbabel is c++ code so the effective variables are really CXX and CXXFLAGS, not CC/CFLAGS . Reported by: htl10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964
https://github.com/openbabel/openbabel/issues/964:898,Modifiability,config,configure,898,"See background reference:; http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14608. Building openbabel 2.2.3 with gcc 4.3.3 on Tru64 requires two things:; (1) -D_GLIBCXX_USE_C99_MATH in CXX_FLAGS , e.g.; CXXFLAGS='-D_GLIBCXX_USE_C99_MATH -g -O2' ./configure; (2) whenever isfinite() is used, #include <cmah> is needed, there are too many of them; and I got fed up after adding the first couple, so I just added it to the end of src/config.h.in; (adding it to the end of include/openbabel/babelconfig.h also get included to everything). These steps are probably required for most older unix systems which is not linux nor Mac X.; (I'd like to know if either of these are needed on linux, actually, but can't be bothered, since openbabel is shipped with fedora). Also I have a comment to make: the top level INSTALL is misleading. since isfinite() is C99, the c89 part in; CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure; is misleading, and further more, most of openbabel is c++ code so the effective variables are really CXX and CXXFLAGS, not CC/CFLAGS . Reported by: htl10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964
https://github.com/openbabel/openbabel/issues/964:989,Modifiability,variab,variables,989,"See background reference:; http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14608. Building openbabel 2.2.3 with gcc 4.3.3 on Tru64 requires two things:; (1) -D_GLIBCXX_USE_C99_MATH in CXX_FLAGS , e.g.; CXXFLAGS='-D_GLIBCXX_USE_C99_MATH -g -O2' ./configure; (2) whenever isfinite() is used, #include <cmah> is needed, there are too many of them; and I got fed up after adding the first couple, so I just added it to the end of src/config.h.in; (adding it to the end of include/openbabel/babelconfig.h also get included to everything). These steps are probably required for most older unix systems which is not linux nor Mac X.; (I'd like to know if either of these are needed on linux, actually, but can't be bothered, since openbabel is shipped with fedora). Also I have a comment to make: the top level INSTALL is misleading. since isfinite() is C99, the c89 part in; CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure; is misleading, and further more, most of openbabel is c++ code so the effective variables are really CXX and CXXFLAGS, not CC/CFLAGS . Reported by: htl10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964
https://github.com/openbabel/openbabel/issues/965:54,Deployability,install,installing,54,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:92,Deployability,install,installing,92,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:167,Deployability,install,install,167,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:273,Deployability,install,install,273,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:330,Deployability,install,installing,330,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:419,Deployability,install,install,419,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:146,Integrability,message,message,146,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:233,Integrability,message,message,233,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/965:474,Usability,simpl,simple,474,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965
https://github.com/openbabel/openbabel/issues/966:438,Availability,error,error,438,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1340,Availability,error,errors,1340,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1508,Availability,Error,Error,1508,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1599,Availability,error,errors,1599,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1245,Integrability,message,messages,1245,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1618,Integrability,message,messages,1618,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1235,Security,audit,audit,1235,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1608,Security,audit,audit,1608,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1241,Testability,log,log,1241,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/966:1614,Testability,log,log,1614,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966
https://github.com/openbabel/openbabel/issues/967:188,Availability,fault,fault,188,"The attached gamout file crashes when OB tries to read it. The file; contains three separate molecules interacting by VDW forces. Backtrace:; Program received signal SIGSEGV, Segmentation fault.; 0xb7b85fb6 in OpenBabel::OBBond::GetBeginAtom (this=0x0) at; /usr/src/openbabel/include/openbabel/bond.h:210; 210 OBAtom *GetBeginAtom() { return(_bgn); }; (gdb) bt; #0 0xb7b85fb6 in OpenBabel::OBBond::GetBeginAtom (this=0x0) at; /usr/src/openbabel/include/openbabel/bond.h:210; #1 0xb7c0d6b2 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=11, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:431; #2 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=10, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #3 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=9, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #4 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=8, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #5 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=7, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #6 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=6, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #7 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=5, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #8 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=4, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #9 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=3, atomState=..., bondState=...); at /usr/src/openbabel/src/kekulize.cpp:438; #10 0xb7c0d744 in OpenBabel::OBMol::expand_kekulize (this=0xbffff484,; bond_idx=2, atomState=..., bondState=...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/967
https://github.com/openbabel/openbabel/issues/971:210,Testability,test,tested,210,"This is a ""master"" bug, to consolidate several otherwise duplicate reports. [*~*]; [c:c]; [Caa(O)aN]; [Ca(aO)aaN]; [*@;!;*]; C2C=CC=CC=2; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O. These are all tested in the ""smartsparse"" test. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/971
https://github.com/openbabel/openbabel/issues/971:238,Testability,test,test,238,"This is a ""master"" bug, to consolidate several otherwise duplicate reports. [*~*]; [c:c]; [Caa(O)aN]; [Ca(aO)aaN]; [*@;!;*]; C2C=CC=CC=2; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O. These are all tested in the ""smartsparse"" test. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/971
https://github.com/openbabel/openbabel/issues/1520:361,Integrability,interface,interface,361,"Andrew Dalke requested a function that returns the version:. ""Is there any way to get the OB version information from Python?; BABEL_VERSION is a compile-time string, and I don't see any code; which makes that visible via SWIG.""; and; ""Daylight used to only support the version via a compile-time; value. It was tricky for me to get the value through the SWIG; interface in PyDaylight. I pointed out that because of shared libraries, a program; might be compiled against one version but run using another; version. They later made it a function to make those cases; easier. I think the same is true here."". Reported by: @baoilleach. Original Ticket: [openbabel/feature-requests/151](https://sourceforge.net/p/openbabel/feature-requests/151)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1520
https://github.com/openbabel/openbabel/issues/974:128,Availability,avail,available,128,"I'm using SVN openbabel through git avogadro. If SO3 (with a double S=O bond for each of the oxygens) is optimized, none of the available forcefields result in a planar shape, though ghemical gets very close, with an O=S=O angle of 118°. In particular, UFF results in a tetrahedral shape, even though SO3 is mentioned in UFF.prm. This leads me to suspect that this is in fact a bug in the UFF implementation, but I am not sure. In any case, it would be good to have at least one forcefield handling this case correctly. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/974
https://github.com/openbabel/openbabel/issues/974:105,Performance,optimiz,optimized,105,"I'm using SVN openbabel through git avogadro. If SO3 (with a double S=O bond for each of the oxygens) is optimized, none of the available forcefields result in a planar shape, though ghemical gets very close, with an O=S=O angle of 118°. In particular, UFF results in a tetrahedral shape, even though SO3 is mentioned in UFF.prm. This leads me to suspect that this is in fact a bug in the UFF implementation, but I am not sure. In any case, it would be good to have at least one forcefield handling this case correctly. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/974
https://github.com/openbabel/openbabel/issues/977:142,Availability,down,download,142,"Open Babel crashes without any messages for the command line: babel -ipdb some.pdb -osdf some.sdf. Details:; PDB used: http://www.pdb.org/pdb/download/downloadFile.do?fileFormat=pdb&compression=NO&structureId=3KL8; Open Babel Version: 2.2.3; OS: Windows Vista. Otherwise is a fantastic product. Thanks,. Will Griffiths / willgriffiths1 at yahoo dot co dot uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/977
https://github.com/openbabel/openbabel/issues/977:151,Availability,down,downloadFile,151,"Open Babel crashes without any messages for the command line: babel -ipdb some.pdb -osdf some.sdf. Details:; PDB used: http://www.pdb.org/pdb/download/downloadFile.do?fileFormat=pdb&compression=NO&structureId=3KL8; Open Babel Version: 2.2.3; OS: Windows Vista. Otherwise is a fantastic product. Thanks,. Will Griffiths / willgriffiths1 at yahoo dot co dot uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/977
https://github.com/openbabel/openbabel/issues/977:31,Integrability,message,messages,31,"Open Babel crashes without any messages for the command line: babel -ipdb some.pdb -osdf some.sdf. Details:; PDB used: http://www.pdb.org/pdb/download/downloadFile.do?fileFormat=pdb&compression=NO&structureId=3KL8; Open Babel Version: 2.2.3; OS: Windows Vista. Otherwise is a fantastic product. Thanks,. Will Griffiths / willgriffiths1 at yahoo dot co dot uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/977
https://github.com/openbabel/openbabel/issues/978:915,Usability,clear,clear,915,"OpenBabel version 2.2.3; CentOS Linux version 4.6 (kernel 2.6.9-67.0.22.ELsmp). Paul Mortenson; p.mortenson@astex-therapeutics.com. Maybe I've misunderstood the purpose of this function, but OBMol::SetCoordinates doesn't do what I expected it to! I expected to supply a coordinate vector as a double*, and have the molecule's current coordinates (for the current conformer) set to these values. However, instead the function copies the molecule's current coordinates into my supplied double*. The problem (if this is indeed incorrect behaviour) is in line 3077 of mol.cpp:. memcpy((char*)c,(char*)_c,sizeof(double)*3*NumAtoms());. should be. memcpy((char*)_c,(char*)c,sizeof(double)*3*NumAtoms());. i.e. copy from the supplied coordinates to the molecule, not the other way around. Apologies if I've got the wrong end of the stick here, though if that is the case I might argue that the documentation isn't crystal clear!. Keep up the good work, guys. Cheers,; Paul. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/978
https://github.com/openbabel/openbabel/issues/979:656,Availability,failure,failure,656,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:929,Availability,error,error,929,"auses carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm6 0000000042799c10 (f: 1115266048.000000, d: 5.510146e-315); xmm7 000000000a175ac0 (f: 169302720.000000, d: 8.364666e-316); xmm8 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 0000000000000000 (f: 0.0000",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:173,Integrability,interface,interface,173,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:239,Performance,concurren,concurrent,239,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:5885,Performance,concurren,concurrent,5885,"ava-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf717a50]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d1c3]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d2b0]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf732aa5]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf7654f1]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf765427]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf76546b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9thr24.so [0x2aaaaae4efd6]; /lib64/libpthread.so.0 [0x3f70006617]; /lib64/libc.so.6(clone+0x6d) [0x3f6f8d3c2d]; ---------------------------------------; JVMDUMP006I Processing dump event ""gpf"", detail """" - please wait.; JVMDUMP010I System dump written to /localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp; JVMDUMP032I JVM requested Snap dump using '/localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc' in response to an event; JVMDUMP010I Snap dump written to /localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc; JVMDUMP032I JVM requested Java dump using '/localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt' in response to an event; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0002.dmp' in response to an event; JVMDUMP010I Java dump written to /localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt; JVMDUMP013I Processed dump event ""abort"", detail """". The following smiles are instances where concurrent execution causes the issue:. [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: O1CCOCC1 From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: OS(=O)O From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: C([C@@H](N)CCCCN)(=O)O From smi to inchi. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:727,Safety,abort,abort,727,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:5825,Safety,abort,abort,5825,"ava-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf717a50]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d1c3]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d2b0]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf732aa5]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf7654f1]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf765427]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf76546b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9thr24.so [0x2aaaaae4efd6]; /lib64/libpthread.so.0 [0x3f70006617]; /lib64/libc.so.6(clone+0x6d) [0x3f6f8d3c2d]; ---------------------------------------; JVMDUMP006I Processing dump event ""gpf"", detail """" - please wait.; JVMDUMP010I System dump written to /localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp; JVMDUMP032I JVM requested Snap dump using '/localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc' in response to an event; JVMDUMP010I Snap dump written to /localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc; JVMDUMP032I JVM requested Java dump using '/localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt' in response to an event; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0002.dmp' in response to an event; JVMDUMP010I Java dump written to /localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt; JVMDUMP013I Processed dump event ""abort"", detail """". The following smiles are instances where concurrent execution causes the issue:. [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: O1CCOCC1 From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: OS(=O)O From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: C([C@@H](N)CCCCN)(=O)O From smi to inchi. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:2705,Testability,log,logical,2705,"2aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm6 0000000042799c10 (f: 1115266048.000000, d: 5.510146e-315); xmm7 000000000a175ac0 (f: 169302720.000000, d: 8.364666e-316); xmm8 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm11 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm12 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm13 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm14 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm15 0000000000000000 (f: 0.000000, d: 0.000000e+00); Module=/lib64/libc.so.6; Module_base_address=0000003F6F800000; Target=2_40_20090519_035743_LHdSMr (Linux 2.6.18-164.11.1.el5); CPU=amd64 (16 logical CPUs) (0xfbb2e1000 RAM); ----------- Stack Backtrace -----------; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab067d33]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7cad]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7b5f]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace728b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7319]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06f891]; /lib64/libc.so.6 [0x3f6f8302d0]; /lib64/libc.so.6 [0x3f6f872b31]; /lib64/libc.so.6(__libc_malloc+0x6e) [0x3f6f874bee]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06488c]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06568e]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaad319ac]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/979:685,Usability,clear,clear,685,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979
https://github.com/openbabel/openbabel/issues/980:352,Deployability,Install,InstallStreamFilter,352,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980
https://github.com/openbabel/openbabel/issues/980:55,Energy Efficiency,allocate,allocated,55,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980
https://github.com/openbabel/openbabel/issues/980:201,Testability,test,test,201,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980
https://github.com/openbabel/openbabel/issues/980:137,Usability,simpl,simple,137,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980
https://github.com/openbabel/openbabel/issues/1522:86,Performance,optimiz,optimization,86,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522
https://github.com/openbabel/openbabel/issues/1522:128,Performance,perform,performed,128,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522
https://github.com/openbabel/openbabel/issues/1522:187,Performance,optimiz,optimization,187,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522
https://github.com/openbabel/openbabel/issues/1522:432,Performance,optimiz,optimization,432,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522
https://github.com/openbabel/openbabel/issues/1522:505,Performance,optimiz,optimization,505,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522
https://github.com/openbabel/openbabel/issues/1522:542,Usability,simpl,simplify,542,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522
https://github.com/openbabel/openbabel/issues/985:0,Availability,echo,echo,0,"echo '[H][H]' | babel -ismi -osmi; produces an empty string. echo '[H][H]' | babel -ismi -oinchi; works fine. echo '[H][H]' | babel -ismi -osdf; works fine. I get the same results using a c or python program; ubuntu 9.10, openbabel 2.2. TJ O'Donnell; tjo@acm.org. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/985
https://github.com/openbabel/openbabel/issues/985:61,Availability,echo,echo,61,"echo '[H][H]' | babel -ismi -osmi; produces an empty string. echo '[H][H]' | babel -ismi -oinchi; works fine. echo '[H][H]' | babel -ismi -osdf; works fine. I get the same results using a c or python program; ubuntu 9.10, openbabel 2.2. TJ O'Donnell; tjo@acm.org. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/985
https://github.com/openbabel/openbabel/issues/985:110,Availability,echo,echo,110,"echo '[H][H]' | babel -ismi -osmi; produces an empty string. echo '[H][H]' | babel -ismi -oinchi; works fine. echo '[H][H]' | babel -ismi -osdf; works fine. I get the same results using a c or python program; ubuntu 9.10, openbabel 2.2. TJ O'Donnell; tjo@acm.org. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/985
https://github.com/openbabel/openbabel/issues/986:63,Availability,echo,echo,63,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:429,Availability,echo,echo,429,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:189,Integrability,message,messages,189,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:211,Integrability,message,messages,211,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:548,Integrability,message,messages,548,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:570,Integrability,message,messages,570,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:201,Security,audit,audit,201,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:560,Security,audit,audit,560,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:207,Testability,log,log,207,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/986:566,Testability,log,log,566,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986
https://github.com/openbabel/openbabel/issues/987:23,Availability,avail,available,23,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. Using latest SVN, I have a segfault with:; babel all-sdf.sdf --filter ""title=1str*"" tmp.sdf. No segfault with:; babel all-sdf.sdf --filter ""title='1str*'"" tmp.sdf. Separate issue: the first command seems to match all ligands, rather than just those starting with 1str. Either the docs or the code is wrong. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/987
https://github.com/openbabel/openbabel/issues/987:0,Testability,Test,Test,0,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. Using latest SVN, I have a segfault with:; babel all-sdf.sdf --filter ""title=1str*"" tmp.sdf. No segfault with:; babel all-sdf.sdf --filter ""title='1str*'"" tmp.sdf. Separate issue: the first command seems to match all ligands, rather than just those starting with 1str. Either the docs or the code is wrong. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/987
https://github.com/openbabel/openbabel/issues/989:23,Availability,avail,available,23,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. The SDF entry with name starting 2c2t_39B comes from the PDB Ligand Expo and represents disorder in the structue using B atoms. This structure appears to be read correctly by OpenBabel (and Avogadro), but when writing to an SDF, OpenBabel segfaults. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/989
https://github.com/openbabel/openbabel/issues/989:0,Testability,Test,Test,0,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. The SDF entry with name starting 2c2t_39B comes from the PDB Ligand Expo and represents disorder in the structue using B atoms. This structure appears to be read correctly by OpenBabel (and Avogadro), but when writing to an SDF, OpenBabel segfaults. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/989
https://github.com/openbabel/openbabel/issues/990:931,Availability,error,error,931,"I am trying to output CML corresponding to the resonance form of carbon monoxide, [C]=O; As it is not necessarily clear whether hydrogen are implicit or explicit I have added hydrogenCount=""0"" to the carbon to say explicitly that the carbon has no hydrogens. OpenBabel however appears to ignore hydrogenCount=""0"" implicitly adding two hydrogens. On a related note OpenBabel's handling of CML's hydrogenCount attribute when explicit hydrogen are present is technically wrong.; If you have an atom with hydrogenCount=""2"" and one explicit hydrogen the number of hydrogens bonded tor the atom should according to the CML spec still actually be 2 , not 3. Taken from http://cml.sourceforge.net/schema/cmlCore/HTMLDOCS/cmlCore.pdf :; ""hydrogenCount[el.atom.hydrogenCount]; The total number of hydrogen atoms bonded to an atom.; The total number of hydrogen atoms bonded to an atom, whether explicitly included; as atoms or not. It is an error to have hydrogen count less than the explicit hydrogen; count. There is no default value and no assumptions about hydrogen Count can be; made if it is not given."". I have attached a zip file with a CML file demonstrating both cases. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/990
https://github.com/openbabel/openbabel/issues/990:114,Usability,clear,clear,114,"I am trying to output CML corresponding to the resonance form of carbon monoxide, [C]=O; As it is not necessarily clear whether hydrogen are implicit or explicit I have added hydrogenCount=""0"" to the carbon to say explicitly that the carbon has no hydrogens. OpenBabel however appears to ignore hydrogenCount=""0"" implicitly adding two hydrogens. On a related note OpenBabel's handling of CML's hydrogenCount attribute when explicit hydrogen are present is technically wrong.; If you have an atom with hydrogenCount=""2"" and one explicit hydrogen the number of hydrogens bonded tor the atom should according to the CML spec still actually be 2 , not 3. Taken from http://cml.sourceforge.net/schema/cmlCore/HTMLDOCS/cmlCore.pdf :; ""hydrogenCount[el.atom.hydrogenCount]; The total number of hydrogen atoms bonded to an atom.; The total number of hydrogen atoms bonded to an atom, whether explicitly included; as atoms or not. It is an error to have hydrogen count less than the explicit hydrogen; count. There is no default value and no assumptions about hydrogen Count can be; made if it is not given."". I have attached a zip file with a CML file demonstrating both cases. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/990
https://github.com/openbabel/openbabel/issues/993:563,Integrability,depend,dependence,563,"The following two molecules are an example of problems that the SSSR algorithm has:; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=141105; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=165896. In the first case only 4 of the 5 rings are reported - the inner 4 membered ring is not, probably due to false detection of its independence of the other 4.; In the second case, one of the rings has 48 atoms which seems to be above some internal limit of the SSSR algorithm.; In both cases the results from openbabel do not correspond to the rule of dependence between the number of components of a graph, vertices, edges and rings.; I would be glad to provide more info if needed.; Beda. Reported by: kosatab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/993
https://github.com/openbabel/openbabel/issues/993:324,Safety,detect,detection,324,"The following two molecules are an example of problems that the SSSR algorithm has:; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=141105; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=165896. In the first case only 4 of the 5 rings are reported - the inner 4 membered ring is not, probably due to false detection of its independence of the other 4.; In the second case, one of the rings has 48 atoms which seems to be above some internal limit of the SSSR algorithm.; In both cases the results from openbabel do not correspond to the rule of dependence between the number of components of a graph, vertices, edges and rings.; I would be glad to provide more info if needed.; Beda. Reported by: kosatab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/993
https://github.com/openbabel/openbabel/issues/994:448,Energy Efficiency,efficient,efficient,448,"Hi,. Just a small efficiency issue when reading very large mol2-files (formats/mol2format.cpp) in . bool MOL2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv). . The assignment of neighbor bond information to atoms is using an unnecessary amount of time and could; be split up into two loops (clearing and assigning). While stepping through the bond list, adding said ; bond directly to the ""Begin"" and ""End"" atom would make the function more efficient instead of always searching ; for the correct atom in the entire bond list (which can take a couple of seconds for very large; molecules). However the order of the neighbor bonds for a particular atom might be different than; before (does this matter?). Hope this helps; Fabian. PS> I didn't check the other file formats if the same applies there too. Original version starting on line 291 :. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; if (patom == pbond->GetBeginAtom() || patom == pbond->GetEndAtom()); {; patom->AddBond(pbond);; }; }; }. New version:. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; }. for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; 	patom = pbond->GetBeginAtom();; 	patom->AddBond(pbond);; 	patom = pbond->GetEndAtom();; 	patom->AddBond(pbond);; }. Reported by: fab5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/994
https://github.com/openbabel/openbabel/issues/994:298,Usability,clear,clearing,298,"Hi,. Just a small efficiency issue when reading very large mol2-files (formats/mol2format.cpp) in . bool MOL2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv). . The assignment of neighbor bond information to atoms is using an unnecessary amount of time and could; be split up into two loops (clearing and assigning). While stepping through the bond list, adding said ; bond directly to the ""Begin"" and ""End"" atom would make the function more efficient instead of always searching ; for the correct atom in the entire bond list (which can take a couple of seconds for very large; molecules). However the order of the neighbor bonds for a particular atom might be different than; before (does this matter?). Hope this helps; Fabian. PS> I didn't check the other file formats if the same applies there too. Original version starting on line 291 :. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; if (patom == pbond->GetBeginAtom() || patom == pbond->GetEndAtom()); {; patom->AddBond(pbond);; }; }; }. New version:. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; }. for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; 	patom = pbond->GetBeginAtom();; 	patom->AddBond(pbond);; 	patom = pbond->GetEndAtom();; 	patom->AddBond(pbond);; }. Reported by: fab5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/994
https://github.com/openbabel/openbabel/issues/994:931,Usability,Clear,ClearBond,931,"Hi,. Just a small efficiency issue when reading very large mol2-files (formats/mol2format.cpp) in . bool MOL2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv). . The assignment of neighbor bond information to atoms is using an unnecessary amount of time and could; be split up into two loops (clearing and assigning). While stepping through the bond list, adding said ; bond directly to the ""Begin"" and ""End"" atom would make the function more efficient instead of always searching ; for the correct atom in the entire bond list (which can take a couple of seconds for very large; molecules). However the order of the neighbor bonds for a particular atom might be different than; before (does this matter?). Hope this helps; Fabian. PS> I didn't check the other file formats if the same applies there too. Original version starting on line 291 :. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; if (patom == pbond->GetBeginAtom() || patom == pbond->GetEndAtom()); {; patom->AddBond(pbond);; }; }; }. New version:. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; }. for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; 	patom = pbond->GetBeginAtom();; 	patom->AddBond(pbond);; 	patom = pbond->GetEndAtom();; 	patom->AddBond(pbond);; }. Reported by: fab5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/994
https://github.com/openbabel/openbabel/issues/994:1217,Usability,Clear,ClearBond,1217,"Hi,. Just a small efficiency issue when reading very large mol2-files (formats/mol2format.cpp) in . bool MOL2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv). . The assignment of neighbor bond information to atoms is using an unnecessary amount of time and could; be split up into two loops (clearing and assigning). While stepping through the bond list, adding said ; bond directly to the ""Begin"" and ""End"" atom would make the function more efficient instead of always searching ; for the correct atom in the entire bond list (which can take a couple of seconds for very large; molecules). However the order of the neighbor bonds for a particular atom might be different than; before (does this matter?). Hope this helps; Fabian. PS> I didn't check the other file formats if the same applies there too. Original version starting on line 291 :. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; if (patom == pbond->GetBeginAtom() || patom == pbond->GetEndAtom()); {; patom->AddBond(pbond);; }; }; }. New version:. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; }. for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; 	patom = pbond->GetBeginAtom();; 	patom->AddBond(pbond);; 	patom = pbond->GetEndAtom();; 	patom->AddBond(pbond);; }. Reported by: fab5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/994
https://github.com/openbabel/openbabel/issues/997:599,Performance,Load,LoadFormatFiles,599,"Dear OpenBabel developers!. I am tracing leaks in my application with valgrind and I think, one report looks like a memory leak in OpenBabel. My investigations:; In obconversion.cpp:329 when pdef->MakeInstance(vec) is called, it returns a new instance of OpenBabel::OBDefine which is never freed. valgrind trace:; ==30507== at 0x48243C5: operator new(unsigned int) (vg_replace_malloc.c:214); ==30507== by 0x49FA633: OpenBabel::OBDefine::MakeInstance(std::vector<std::string, std::allocator<std::string> > const&) (in /usr/lib/libopenbabel.so.3.0.3); ==30507== by 0x495A526: OpenBabel::OBConversion::LoadFormatFiles() (in /usr/lib/libopenbabel.so.3.0.3); ==30507== by 0x495A88F: OpenBabel::OBConversion::OBConversion(std::istream*, std::ostream*) (in /usr/lib/libopenbabel.so.3.0.3). Additional info: Debian [squeeze], libopenbabel3-2.2.3-1+b1. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/997
https://github.com/openbabel/openbabel/issues/999:242,Availability,error,error,242,"I am using OB in my own source code and have trouble compiling with the clang c++ compiler under ubuntu 10:. In file included from /usr/include/openbabel-2.0/openbabel/obconversion.h:37:; /usr/include/openbabel-2.0/openbabel/format.h:103:24: error: no type named 'type_info' in namespace 'std'; virtual const std::type_info& GetType();; ```~^. Other compilers such as g++, intel, llvm-g++ works just fine. Is this a problem with OB or clang?. BEst; Mikael. Reported by: mikaellund",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/999
https://github.com/openbabel/openbabel/issues/1000:86,Availability,fault,fault,86,"Hello All,. I came across an example that causes OBBuilder to produce a; segmentation fault (g++ version is 4.4.3, openbabel-2.2.3). See code; below. Best regards,; Martin. #include <iostream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/builder.h>. using namespace std;; using namespace OpenBabel;. int main(int argc,char **argv); {; OBMol * mol = new OBMol();; OBConversion obconversion;; obconversion.SetInFormat(""smiles"");; //obconversion.ReadString(mol, ""C1(N=C(NC(C)C)N=C(N=1)OC)NC(C)C"");; obconversion.ReadString(mol,; ""OC1=CC3=C([C@@]2([H])CC[C@@]4(C)[C@](CC[C@@H]4O)([H])[C@@]([H])2[C@H](CCCCCCCCCS(CCCC(F)(F)C(F)(F)F)=O)C3)C=C1"");; cout << ""formula ""<< mol->GetFormula() << ""\n"";; cout << ""Has3D: "" << mol->Has3D() << ""\n"";; OBBuilder builder;; builder.Build(*mol);; cout << ""Has3D: "" << mol->Has3D() << ""\n"";; delete(mol);; return 0;; }. Reported by: martinguetlein",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1000
https://github.com/openbabel/openbabel/issues/1001:101,Deployability,install,installed,101,"Pybel doesn't seem to support OBReaction, although the other OBBase subclasses are supported. I have installed openbabel and pybel 2.2.3 via fink (see below). $ /sw/bin/python2.6; Python 2.6.5 (r265:79063, May 24 2010, 17:51:38) ; [GCC 4.2.1 (Apple Inc. build 5659)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> help(openbabel). Help on module openbabel:. NAME; openbabel. FILE; /sw/lib/python2.6/site-packages/openbabel.py. CLASSES; __builtin__.object; CharPtrLess; DoubleType; FastSearch; FastSearchIndexer; FptIndex; FptIndexHeader; LineSearchType; OBAngle; OBBase; OBAtom; OBBond; OBMol; OBResidue; OBBitVec. $ fink list -i openbabel; Information about 9330 packages read in 5 seconds.; i libopenbabel3-dev 2.2.3-11 Chemical data converter/analysis tools; i libopenbabel3-shlibs 2.2.3-11 Chemical data converter/analysis tools; i openbabel 2.2.3-11 Chemical data converter/analysis tools; i openbabel-py26 2.2.3-11 Chemical data converter/analysis tools. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1001
https://github.com/openbabel/openbabel/issues/1002:216,Availability,avail,available,216,"Dear all,. When I use openbabel to convert a molecule with more than 100 atoms to MOL format the output file becomes corrupted. The number of atoms and number of bonds get concatenated because there is only 3 digits available for each. Also the bond information gets corrupted with a similar problem. Version 2.2.3, Ubuntu Linux 10.04 32 bits. Attached follows a sample file in XYZ format which can be used to reproduce the problem:; babel C78H158.xyz C78H158.mol. Then check the 4th line with the number of atoms and bonds as 236235 instead of 236 235. Regards. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1002
https://github.com/openbabel/openbabel/issues/1004:77,Availability,error,error,77,Looks to me like the conditional for the cmake variable PYTHON_PREFIX has an error causing the variable to be always ignored. Patch attached. Reported by: volkmuth,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1004
https://github.com/openbabel/openbabel/issues/1004:126,Deployability,Patch,Patch,126,Looks to me like the conditional for the cmake variable PYTHON_PREFIX has an error causing the variable to be always ignored. Patch attached. Reported by: volkmuth,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1004
https://github.com/openbabel/openbabel/issues/1004:47,Modifiability,variab,variable,47,Looks to me like the conditional for the cmake variable PYTHON_PREFIX has an error causing the variable to be always ignored. Patch attached. Reported by: volkmuth,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1004
https://github.com/openbabel/openbabel/issues/1004:95,Modifiability,variab,variable,95,Looks to me like the conditional for the cmake variable PYTHON_PREFIX has an error causing the variable to be always ignored. Patch attached. Reported by: volkmuth,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1004
https://github.com/openbabel/openbabel/issues/1524:253,Deployability,patch,patch,253,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:665,Deployability,patch,patch,665,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:770,Deployability,patch,patch,770,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:703,Integrability,rout,routines,703,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:98,Modifiability,variab,variable,98,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:187,Modifiability,variab,variables,187,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:403,Modifiability,variab,variables,403,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:487,Performance,perform,perform,487,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:72,Safety,safe,safe,72,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:219,Safety,safe,safe,219,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:282,Safety,safe,safely,282,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:619,Safety,safe,safe,619,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:754,Safety,safe,safe,754,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:802,Safety,safe,safe,802,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:944,Safety,safe,safe,944,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1524:1109,Safety,safe,safe,1109,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524
https://github.com/openbabel/openbabel/issues/1007:1024,Availability,error,error,1024,"0.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); ==4287== by 0x4EF650E: OpenBabel::OBConversion::Conv",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007
https://github.com/openbabel/openbabel/issues/1007:203,Deployability,patch,patch,203,"This problem arose with OpenBabel 2.2.3 on Ubuntu 10.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); =",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007
https://github.com/openbabel/openbabel/issues/1007:822,Deployability,patch,patch,822,"This problem arose with OpenBabel 2.2.3 on Ubuntu 10.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); =",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007
https://github.com/openbabel/openbabel/issues/1007:686,Safety,detect,detect,686,"This problem arose with OpenBabel 2.2.3 on Ubuntu 10.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); =",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007
https://github.com/openbabel/openbabel/issues/1007:1030,Safety,detect,detector,1030,"0.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); ==4287== by 0x4EF650E: OpenBabel::OBConversion::Conv",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007
https://github.com/openbabel/openbabel/issues/1008:593,Availability,error,error,593,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008
https://github.com/openbabel/openbabel/issues/1008:30,Deployability,configurat,configuration,30,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008
https://github.com/openbabel/openbabel/issues/1008:30,Modifiability,config,configuration,30,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008
https://github.com/openbabel/openbabel/issues/1008:327,Testability,log,log,327,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008
https://github.com/openbabel/openbabel/issues/1008:378,Testability,log,log,378,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008
https://github.com/openbabel/openbabel/issues/1008:445,Testability,log,log,445,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008
https://github.com/openbabel/openbabel/issues/1008:278,Usability,simpl,simple,278,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008
https://github.com/openbabel/openbabel/issues/1011:231,Availability,error,error,231,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:254,Availability,Error,Error,254,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:289,Availability,error,error,289,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:403,Availability,error,errors,403,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:36,Deployability,install,installed,36,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:423,Integrability,message,messages,423,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:444,Integrability,message,messages,444,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:413,Security,audit,audit,413,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1011:419,Testability,log,log,419,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011
https://github.com/openbabel/openbabel/issues/1013:133,Energy Efficiency,energy,energy,133,"The ffmmff94 test has always failed on MSVC. It also fails on the Kitware buildbot (not sure if always). Both at the same point, the energy value for bucky ball, test 17. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013
https://github.com/openbabel/openbabel/issues/1013:13,Testability,test,test,13,"The ffmmff94 test has always failed on MSVC. It also fails on the Kitware buildbot (not sure if always). Both at the same point, the energy value for bucky ball, test 17. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013
https://github.com/openbabel/openbabel/issues/1013:162,Testability,test,test,162,"The ffmmff94 test has always failed on MSVC. It also fails on the Kitware buildbot (not sure if always). Both at the same point, the energy value for bucky ball, test 17. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013
https://github.com/openbabel/openbabel/issues/1014:154,Availability,error,error,154,"Dan Kimblering, from openbabel-scripting:. ""Hi,. I just started using OpenBabel with Iron Python. I am new to each so i'm; not sure if this a bug or user error. When I try to get an element name or symbol using:. import clr; clr.AddReference(""OBDotNet.dll""); import OpenBabel as ob. etab = ob.OBElementTable(); name = str(etab.GetName(8)); print(name). I get an error:; Message: Attempted to read or write protected memory. This is often an; indication that other memory is corrupt. When I try to get a numeric value such as mass, everything works fine."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1014
https://github.com/openbabel/openbabel/issues/1014:362,Availability,error,error,362,"Dan Kimblering, from openbabel-scripting:. ""Hi,. I just started using OpenBabel with Iron Python. I am new to each so i'm; not sure if this a bug or user error. When I try to get an element name or symbol using:. import clr; clr.AddReference(""OBDotNet.dll""); import OpenBabel as ob. etab = ob.OBElementTable(); name = str(etab.GetName(8)); print(name). I get an error:; Message: Attempted to read or write protected memory. This is often an; indication that other memory is corrupt. When I try to get a numeric value such as mass, everything works fine."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1014
https://github.com/openbabel/openbabel/issues/1014:370,Integrability,Message,Message,370,"Dan Kimblering, from openbabel-scripting:. ""Hi,. I just started using OpenBabel with Iron Python. I am new to each so i'm; not sure if this a bug or user error. When I try to get an element name or symbol using:. import clr; clr.AddReference(""OBDotNet.dll""); import OpenBabel as ob. etab = ob.OBElementTable(); name = str(etab.GetName(8)); print(name). I get an error:; Message: Attempted to read or write protected memory. This is often an; indication that other memory is corrupt. When I try to get a numeric value such as mass, everything works fine."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1014
https://github.com/openbabel/openbabel/issues/1015:610,Safety,avoid,avoid,610,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015
https://github.com/openbabel/openbabel/issues/1015:14,Testability,test,tester,14,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015
https://github.com/openbabel/openbabel/issues/1015:585,Usability,simpl,simply,585,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015
https://github.com/openbabel/openbabel/issues/1016:115,Availability,error,error,115,"C1C1 is used by Andrew Dalke in http://ctr.wikia.com/wiki/Chemistry_Toolkit_Rosetta_Wiki as an example of a SMILES error which ought to be caught and reported. OB converts it to CC (not even C=C, which would have been logical). His other example Q is not converted, but there is no error message. . Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1016
https://github.com/openbabel/openbabel/issues/1016:282,Availability,error,error,282,"C1C1 is used by Andrew Dalke in http://ctr.wikia.com/wiki/Chemistry_Toolkit_Rosetta_Wiki as an example of a SMILES error which ought to be caught and reported. OB converts it to CC (not even C=C, which would have been logical). His other example Q is not converted, but there is no error message. . Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1016
https://github.com/openbabel/openbabel/issues/1016:288,Integrability,message,message,288,"C1C1 is used by Andrew Dalke in http://ctr.wikia.com/wiki/Chemistry_Toolkit_Rosetta_Wiki as an example of a SMILES error which ought to be caught and reported. OB converts it to CC (not even C=C, which would have been logical). His other example Q is not converted, but there is no error message. . Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1016
https://github.com/openbabel/openbabel/issues/1016:218,Testability,log,logical,218,"C1C1 is used by Andrew Dalke in http://ctr.wikia.com/wiki/Chemistry_Toolkit_Rosetta_Wiki as an example of a SMILES error which ought to be caught and reported. OB converts it to CC (not even C=C, which would have been logical). His other example Q is not converted, but there is no error message. . Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1016
https://github.com/openbabel/openbabel/issues/1017:161,Availability,fault,faults,161,"From Peter Lavin via private email:. I am using the following SMILES file from ZINC...; http://zinc.docking.org/subset1/13/13_t80.smi. I am getting segmentation faults when I attempt to convert all 149K of these SMILES strings using the following command...; babel --gen3d -ismi 13_t80.smi -osdf myOutFile.sdf. I have narrowed the problem down to a pattern which appears in some molecules. The problem pattern appears to be S@ and this appears for example in line 89, 565, 906, 1031, 1049, 1050, 1165, 1175, 1176, 1266, etc. Interestingly, the string at line 1049 converts ok (pasted here). C[S@](=N)(=O)c1ccccc1 ZINC12402895. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1017
https://github.com/openbabel/openbabel/issues/1017:339,Availability,down,down,339,"From Peter Lavin via private email:. I am using the following SMILES file from ZINC...; http://zinc.docking.org/subset1/13/13_t80.smi. I am getting segmentation faults when I attempt to convert all 149K of these SMILES strings using the following command...; babel --gen3d -ismi 13_t80.smi -osdf myOutFile.sdf. I have narrowed the problem down to a pattern which appears in some molecules. The problem pattern appears to be S@ and this appears for example in line 89, 565, 906, 1031, 1049, 1050, 1165, 1175, 1176, 1266, etc. Interestingly, the string at line 1049 converts ok (pasted here). C[S@](=N)(=O)c1ccccc1 ZINC12402895. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1017
https://github.com/openbabel/openbabel/issues/1019:105,Deployability,install,installed,105,"The build process tries to link the Perl module with -lopenbabel and fails, because openbabel is not yet installed and thus not in the standard linker search path. The solution is to add the cmake library output directory to the linker command line (-L option). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1019
https://github.com/openbabel/openbabel/issues/1021:238,Availability,echo,echo,238,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:447,Availability,echo,echo,447,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:566,Availability,Error,Error,566,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:597,Availability,Error,Error,597,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:640,Availability,echo,echo,640,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:857,Availability,echo,echo,857,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:414,Integrability,message,messages,414,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:436,Integrability,message,messages,436,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:812,Integrability,message,messages,812,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:834,Integrability,message,messages,834,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:426,Security,audit,audit,426,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:824,Security,audit,audit,824,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:432,Testability,log,log,432,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1021:830,Testability,log,log,830,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021
https://github.com/openbabel/openbabel/issues/1022:23,Integrability,message,message,23,"I always have one info message when I run obabel:; ""Could not parse line in phmodel table from phmodel.txt"". This arises from the azide transformation:; TRANSFORM [ND2:1]=[ND2:2]=A >> [N:1]=[N+:2]=A				1E+10 # always apply transformation. ...which fails to be initialised as an OBChemTsfm at line 79 of phmodel.cpp. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1022
https://github.com/openbabel/openbabel/issues/1525:299,Deployability,configurat,configuration,299,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:788,Deployability,patch,patch,788,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:183,Energy Efficiency,energy,energy,183,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:287,Energy Efficiency,energy,energy,287,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:1039,Energy Efficiency,Energy,Energy,1039,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:261,Integrability,wrap,wrapper,261,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:465,Integrability,rout,routines,465,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:299,Modifiability,config,configuration,299,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:631,Modifiability,extend,extend,631,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:344,Security,access,access,344,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:662,Security,access,access,662,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1525:995,Security,access,access,995,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525
https://github.com/openbabel/openbabel/issues/1025:601,Security,Audit,Audit,601,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:696,Security,Audit,Audit,696,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:791,Security,Audit,Audit,791,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:912,Security,Audit,Audit,912,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:1020,Security,Audit,Audit,1020,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:607,Testability,Log,Log,607,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:702,Testability,Log,Log,702,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:797,Testability,Log,Log,797,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:918,Testability,Log,Log,918,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1025:1026,Testability,Log,Log,1026,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025
https://github.com/openbabel/openbabel/issues/1526:29,Integrability,interface,interface,29,"I was trying to use the Perl interface to OpenBabel to do some RMSD calculations and found I couldn't since key functionality seemed to be missing. Specifically, the ability to manipulate SWIG C arrays in perl and access to a couple functions. Here are the changes I made to get things to work:. include/openbabel/obutil.h ; 156,164d155; < #ifndef __KCC; < extern ""C"" {; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int);; < }; < #else; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int); ; < #endif; 165a157,159; > OBAPI void rotate_coords(double*,double m[3][3],int);; > OBAPI double calc_rms(double*,double*,unsigned int);; > . scripts/openbabel-perl.i ; 163,188d162; < // Add some helper functions for C arrays; < %inline %{; < double *double_array(int size) {; < return (double *) malloc(sizeof(double)*size);; < }; < void double_destroy(int *a) {; < free(a);; < }; < void double_set(double *a, int i, double val) {; < a[i] = val;; < }; < double double_get(double *a, int i) {; < return a[i];; < }; < ; < double (*rotation_matrix())[3] {; < return (double (*)[3]) malloc(9*sizeof(double));; < }; < ; < void rotation_matrix_free(double (*m)[3]); < {; < free(m);; < }; < ; < %}; < . Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/157](https://sourceforge.net/p/openbabel/feature-requests/157)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1526
https://github.com/openbabel/openbabel/issues/1526:214,Security,access,access,214,"I was trying to use the Perl interface to OpenBabel to do some RMSD calculations and found I couldn't since key functionality seemed to be missing. Specifically, the ability to manipulate SWIG C arrays in perl and access to a couple functions. Here are the changes I made to get things to work:. include/openbabel/obutil.h ; 156,164d155; < #ifndef __KCC; < extern ""C"" {; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int);; < }; < #else; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int); ; < #endif; 165a157,159; > OBAPI void rotate_coords(double*,double m[3][3],int);; > OBAPI double calc_rms(double*,double*,unsigned int);; > . scripts/openbabel-perl.i ; 163,188d162; < // Add some helper functions for C arrays; < %inline %{; < double *double_array(int size) {; < return (double *) malloc(sizeof(double)*size);; < }; < void double_destroy(int *a) {; < free(a);; < }; < void double_set(double *a, int i, double val) {; < a[i] = val;; < }; < double double_get(double *a, int i) {; < return a[i];; < }; < ; < double (*rotation_matrix())[3] {; < return (double (*)[3]) malloc(9*sizeof(double));; < }; < ; < void rotation_matrix_free(double (*m)[3]); < {; < free(m);; < }; < ; < %}; < . Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/157](https://sourceforge.net/p/openbabel/feature-requests/157)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1526
https://github.com/openbabel/openbabel/issues/1026:204,Availability,error,error,204,"I am using the latest development version updated from svn. . gert$ babel -v; No output file or format spec!; Open Babel 2.2.99 -- Sep 28 2010 -- 11:19:51. When I run babel on the attached SD file, a bus error is given. gert$ babel -isdf mol.sdf.gz -osdf; Bus error. I notice that there is a special tag at the end of the molecule in the SD file, which seems to be removed/ignored by other tools like corina.; A 26; CCl3; M END. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1026
https://github.com/openbabel/openbabel/issues/1026:260,Availability,error,error,260,"I am using the latest development version updated from svn. . gert$ babel -v; No output file or format spec!; Open Babel 2.2.99 -- Sep 28 2010 -- 11:19:51. When I run babel on the attached SD file, a bus error is given. gert$ babel -isdf mol.sdf.gz -osdf; Bus error. I notice that there is a special tag at the end of the molecule in the SD file, which seems to be removed/ignored by other tools like corina.; A 26; CCl3; M END. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1026
https://github.com/openbabel/openbabel/issues/1026:42,Deployability,update,updated,42,"I am using the latest development version updated from svn. . gert$ babel -v; No output file or format spec!; Open Babel 2.2.99 -- Sep 28 2010 -- 11:19:51. When I run babel on the attached SD file, a bus error is given. gert$ babel -isdf mol.sdf.gz -osdf; Bus error. I notice that there is a special tag at the end of the molecule in the SD file, which seems to be removed/ignored by other tools like corina.; A 26; CCl3; M END. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1026
https://github.com/openbabel/openbabel/issues/1028:73,Energy Efficiency,allocate,allocates,73,"The function AliasData::Expand(OBMol& mol, const unsigned int atomindex) allocates memory in src/alias.cpp:42:; char* txt = new char[_alias.size()+1];; which is never free()'d. Note: this function has several return points, none of them frees the memory. valgrind report:; ==29705== 64 bytes in 32 blocks are definitely lost in loss record 165 of 209; ==29705== at 0x4824059: operator new[](unsigned int) (vg_replace_malloc.c:258); ==29705== by 0x4894ACA: OpenBabel::AliasData::Expand(OpenBabel::OBMol&, unsigned int) (in /usr/lib/libopenbabel.so.3.0.3). OpenBabel library sources:; http://ftp.de.debian.org/debian/pool/main/o/openbabel/openbabel_2.2.3.orig.tar.gz. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1028
https://github.com/openbabel/openbabel/issues/1029:27,Deployability,Install,InstallStreamFilter,27,"The function OBConversion::InstallStreamFilter() allocates memory in src/obconversion.cpp:722:; pLineEndBuf = new LErdbuf(pInStream->rdbuf());; pInStream->rdbuf(pLineEndBuf);; which is never freed. The comment to destructor of std::basic_ios reads: ""it does not destroy the streambuf held by rdbuf()"", so the application is responsible for destroying the buffer when pInStream is destroyed. . valgrind report:; ==29705== 2,280 bytes in 57 blocks are definitely lost in loss record 190 of 209; ==29705== at 0x48243C5: operator new(unsigned int) (vg_replace_malloc.c:214); ==29705== by 0x48FF702: OpenBabel::OBConversion::InstallStreamFilter() (in /usr/lib/libopenbabel.so.3.0.3); ==29705== by 0x48FFF7F: OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) (in /usr/lib/libopenbabel.so.3.0.3); ==29705== by 0x4900644: OpenBabel::OBConversion::ReadString(OpenBabel::OBBase*, std::string) (in /usr/lib/libopenbabel.so.3.0.3). OpenBabel library sources:; http://ftp.de.debian.org/debian/pool/main/o/openbabel/openbabel_2.2.3.orig.tar.gz. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1029
https://github.com/openbabel/openbabel/issues/1029:620,Deployability,Install,InstallStreamFilter,620,"The function OBConversion::InstallStreamFilter() allocates memory in src/obconversion.cpp:722:; pLineEndBuf = new LErdbuf(pInStream->rdbuf());; pInStream->rdbuf(pLineEndBuf);; which is never freed. The comment to destructor of std::basic_ios reads: ""it does not destroy the streambuf held by rdbuf()"", so the application is responsible for destroying the buffer when pInStream is destroyed. . valgrind report:; ==29705== 2,280 bytes in 57 blocks are definitely lost in loss record 190 of 209; ==29705== at 0x48243C5: operator new(unsigned int) (vg_replace_malloc.c:214); ==29705== by 0x48FF702: OpenBabel::OBConversion::InstallStreamFilter() (in /usr/lib/libopenbabel.so.3.0.3); ==29705== by 0x48FFF7F: OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) (in /usr/lib/libopenbabel.so.3.0.3); ==29705== by 0x4900644: OpenBabel::OBConversion::ReadString(OpenBabel::OBBase*, std::string) (in /usr/lib/libopenbabel.so.3.0.3). OpenBabel library sources:; http://ftp.de.debian.org/debian/pool/main/o/openbabel/openbabel_2.2.3.orig.tar.gz. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1029
https://github.com/openbabel/openbabel/issues/1029:49,Energy Efficiency,allocate,allocates,49,"The function OBConversion::InstallStreamFilter() allocates memory in src/obconversion.cpp:722:; pLineEndBuf = new LErdbuf(pInStream->rdbuf());; pInStream->rdbuf(pLineEndBuf);; which is never freed. The comment to destructor of std::basic_ios reads: ""it does not destroy the streambuf held by rdbuf()"", so the application is responsible for destroying the buffer when pInStream is destroyed. . valgrind report:; ==29705== 2,280 bytes in 57 blocks are definitely lost in loss record 190 of 209; ==29705== at 0x48243C5: operator new(unsigned int) (vg_replace_malloc.c:214); ==29705== by 0x48FF702: OpenBabel::OBConversion::InstallStreamFilter() (in /usr/lib/libopenbabel.so.3.0.3); ==29705== by 0x48FFF7F: OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) (in /usr/lib/libopenbabel.so.3.0.3); ==29705== by 0x4900644: OpenBabel::OBConversion::ReadString(OpenBabel::OBBase*, std::string) (in /usr/lib/libopenbabel.so.3.0.3). OpenBabel library sources:; http://ftp.de.debian.org/debian/pool/main/o/openbabel/openbabel_2.2.3.orig.tar.gz. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1029
https://github.com/openbabel/openbabel/issues/1031:28,Availability,error,error,28,C/C=C1\/NC1 should raise an error (I guess?). Currently it's interpreted as C/C=C1/NC1 (according to comment by Daniel Lowe at http://baoilleach.blogspot.com/2010/09/are-you-on-my-side-or-not-its-ez-part.html. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1031
https://github.com/openbabel/openbabel/issues/1033:112,Availability,error,error,112,Currently obabel continues happily if the input and output files have the same name. It should instead raise an error. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1033
https://github.com/openbabel/openbabel/issues/1034:345,Integrability,Message,Message,345,"Some smarts patterns are no more recognised after calling AddHydrogens(), like acetal, aminal and thioacetal smarts found on http://ligand-expo.rcsb.org/dictionaries/fp_patterns.txt.; Other smarts, like heminal or hemiacetal, are matched before and after calling AddHydrogens().; All smarts work with obgrep.; See attached file for used smarts. Message on openbabel-discuss, 2010-10-08 13:43, subject: ""pybel.Smarts(which expression?)"". Pascal Muller; pascal.jm.muller@gmail.com; Linux 2.6.18-194.11.3.el5 (Scientific Linux 5.5). Reported by: @pascalmuller",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1034
https://github.com/openbabel/openbabel/issues/1035:201,Availability,failure,failures,201,"(This bug is fixed...I just want to record the details here in case it needs to be revisited.). From the mailing list:; ""I went through a large dataset of PubChem 3D structures looking for; implicit H failures (removing, then adding Hs). 1/3 of the failures; are due to the following in atomtyp.txt:. INTHYB [$([#6]([#8D1])[#8D1])] 2 #sp2 carbon. This makes any C attached to two Os turn into sp2...even in geminal; diols , for example, ClC(Cl)(Cl)C(O)O. According to wikipedia, these; don't tend to last long but they are in PubChem (whether errors or; not, I can't say). If it's commented out, then it works fine for these cases. Is there any reason for this rule (it seems to date from the early; days)? Perhaps it's to correct ligand structures from the PDB where; all examples of this indicate COO-? If so, maybe the PDB cases are; better handled in the code using the molecular geometry...?"". The solution is to comment out the offending line in the file. If it turns out that there are subsequent problems with interpreting PDBs, we deal with it as follows:; ""You're suggesting to add a method to pdbformat for ""correctCarboxylateHybridization"" correct? That shouldn't be too hard -- make sure hybridization is assigned already, then go through the SMARTS match and check for a real COO-."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1035
https://github.com/openbabel/openbabel/issues/1035:249,Availability,failure,failures,249,"(This bug is fixed...I just want to record the details here in case it needs to be revisited.). From the mailing list:; ""I went through a large dataset of PubChem 3D structures looking for; implicit H failures (removing, then adding Hs). 1/3 of the failures; are due to the following in atomtyp.txt:. INTHYB [$([#6]([#8D1])[#8D1])] 2 #sp2 carbon. This makes any C attached to two Os turn into sp2...even in geminal; diols , for example, ClC(Cl)(Cl)C(O)O. According to wikipedia, these; don't tend to last long but they are in PubChem (whether errors or; not, I can't say). If it's commented out, then it works fine for these cases. Is there any reason for this rule (it seems to date from the early; days)? Perhaps it's to correct ligand structures from the PDB where; all examples of this indicate COO-? If so, maybe the PDB cases are; better handled in the code using the molecular geometry...?"". The solution is to comment out the offending line in the file. If it turns out that there are subsequent problems with interpreting PDBs, we deal with it as follows:; ""You're suggesting to add a method to pdbformat for ""correctCarboxylateHybridization"" correct? That shouldn't be too hard -- make sure hybridization is assigned already, then go through the SMARTS match and check for a real COO-."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1035
https://github.com/openbabel/openbabel/issues/1035:543,Availability,error,errors,543,"(This bug is fixed...I just want to record the details here in case it needs to be revisited.). From the mailing list:; ""I went through a large dataset of PubChem 3D structures looking for; implicit H failures (removing, then adding Hs). 1/3 of the failures; are due to the following in atomtyp.txt:. INTHYB [$([#6]([#8D1])[#8D1])] 2 #sp2 carbon. This makes any C attached to two Os turn into sp2...even in geminal; diols , for example, ClC(Cl)(Cl)C(O)O. According to wikipedia, these; don't tend to last long but they are in PubChem (whether errors or; not, I can't say). If it's commented out, then it works fine for these cases. Is there any reason for this rule (it seems to date from the early; days)? Perhaps it's to correct ligand structures from the PDB where; all examples of this indicate COO-? If so, maybe the PDB cases are; better handled in the code using the molecular geometry...?"". The solution is to comment out the offending line in the file. If it turns out that there are subsequent problems with interpreting PDBs, we deal with it as follows:; ""You're suggesting to add a method to pdbformat for ""correctCarboxylateHybridization"" correct? That shouldn't be too hard -- make sure hybridization is assigned already, then go through the SMARTS match and check for a real COO-."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1035
https://github.com/openbabel/openbabel/issues/1036:161,Security,hash,hash,161,"This is a continuation of Igor's bug report #2412105. In v2.3.0rc1, the 3rd molecule in this SD file seems to have incorrect SMILES stereochemistry -- the wedge/hash notation in the rings appears to be ignored. As a result, the InChI generated by Open Babel and inichi.exe are different. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1036
https://github.com/openbabel/openbabel/issues/1038:225,Security,Hash,Hash,225,"A follow-on from PR#3089953. For the attached file, Inchi executable gives:; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7-,8?,10-,11?/m1/s1. We get the same if we pass the Wedge/Hash bonds to InChI through OB (the default):. >obabel igor.sdf -oinchi; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7-,8?,10-,11?/m1/s1. but not if we use the generated stereochem:. >obabel igor.sdf -oinchi -xs; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7?,8?,10-,11?/m1/s1; 1 molecule converted. The difference is inchi atom 7, which is 7- versus 7?. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1038
https://github.com/openbabel/openbabel/issues/1040:0,Testability,Test,Test,0,"Test case; >obabel -:""CCCC(=O)(O)"" -omol2 | obabel -imol2 -osmi; CCCC(O)O *****. The problem is that the two 'aromatic' bonds to the oxygens are not interpreted correctly on reading. Given that CCCC(=O)[O-] gives exactly the same MOL2 file (according to Open Babel), it may be incorrect to have the bonds 'ar' in the first place for the COOH case. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1040
https://github.com/openbabel/openbabel/issues/1041:133,Deployability,install,installed,133,"I think the carbonyl C atoms in PDB should be translated to the atomtype 3 for txyz; (for example, ATOM 3 in pdb1jff). I use the GUI installed by OpenBabel2.3.0rc5-20101017-r4218_Windows_Installer.exe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1041
https://github.com/openbabel/openbabel/issues/1042:294,Availability,echo,echo,294,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042
https://github.com/openbabel/openbabel/issues/1042:457,Availability,echo,echo,457,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042
https://github.com/openbabel/openbabel/issues/1042:760,Availability,echo,echo,760,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042
https://github.com/openbabel/openbabel/issues/1042:849,Availability,echo,echo,849,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042
https://github.com/openbabel/openbabel/issues/1042:687,Performance,perform,perform,687,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042
https://github.com/openbabel/openbabel/issues/1042:6,Testability,test,testing,6,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042
https://github.com/openbabel/openbabel/issues/1042:72,Testability,test,test,72,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042
https://github.com/openbabel/openbabel/issues/1044:154,Energy Efficiency,charge,charge-,154,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044
https://github.com/openbabel/openbabel/issues/1044:405,Modifiability,variab,variables,405,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044
https://github.com/openbabel/openbabel/issues/1044:569,Modifiability,variab,variables,569,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044
https://github.com/openbabel/openbabel/issues/1044:688,Modifiability,variab,variables,688,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044
https://github.com/openbabel/openbabel/issues/1044:88,Testability,test,test,88,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044
https://github.com/openbabel/openbabel/issues/1044:367,Testability,test,test,367,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044
https://github.com/openbabel/openbabel/issues/1044:726,Testability,test,tests,726,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044
https://github.com/openbabel/openbabel/issues/1045:575,Deployability,install,install,575,"As far as I can tell, openbabel.py and pybel.py get copied into the build directory during ""setup.py build"". However, there is a POST_BUILD command which adds some lines to a file called ""ob.py"" and then adds the content of openbabel.py to it. Afterwards, this ob.py gets copied to openbabel.py:. COMMAND ${CMAKE_COMMAND} -E copy ob.py ${openbabel_SOURCE_DIR}/scripts/python/openbabel.py. Here, $(openbabel_SOURCE_DIR) is used, and thus the source file is modified. I don't think this is a legit thing the build system should do. In any case, it does not seem like ""setup.py install"" is being called on ""make install"" anyway, is this intentional?. Reported by: @mbanck",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1045
https://github.com/openbabel/openbabel/issues/1045:609,Deployability,install,install,609,"As far as I can tell, openbabel.py and pybel.py get copied into the build directory during ""setup.py build"". However, there is a POST_BUILD command which adds some lines to a file called ""ob.py"" and then adds the content of openbabel.py to it. Afterwards, this ob.py gets copied to openbabel.py:. COMMAND ${CMAKE_COMMAND} -E copy ob.py ${openbabel_SOURCE_DIR}/scripts/python/openbabel.py. Here, $(openbabel_SOURCE_DIR) is used, and thus the source file is modified. I don't think this is a legit thing the build system should do. In any case, it does not seem like ""setup.py install"" is being called on ""make install"" anyway, is this intentional?. Reported by: @mbanck",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1045
https://github.com/openbabel/openbabel/issues/1046:89,Deployability,install,installer,89,"Hi, it looks like the java files within openbabel.jar bundled with v2.3.0 of the windows installer have not been compiled meaning that the jar as it is now cannot be used. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1046
https://github.com/openbabel/openbabel/issues/1049:262,Integrability,message,messages,262,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:341,Integrability,message,messages,341,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:489,Integrability,message,messages,489,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:567,Integrability,message,messages,567,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:252,Security,audit,audit,252,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:331,Security,audit,audit,331,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:479,Security,audit,audit,479,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:557,Security,audit,audit,557,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:258,Testability,log,log,258,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:337,Testability,log,log,337,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:485,Testability,log,log,485,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1049:563,Testability,log,log,563,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049
https://github.com/openbabel/openbabel/issues/1050:109,Availability,echo,echo,109,"For some structures, there is no conversion from smiles (smi) to canonical smiles (can), eg for curcumin:. > echo ""OCC(=CC(=O)/C=C/c1ccc(c(c1)OC)O)/C=C/c1ccc(c(c1)OC)O"" | babel -i smi -o can -; OCC(=CC(=O)/C=C/c1ccc(c(c1)OC)O)/C=C/c1ccc(c(c1)OC)O. so it returns the same value. Otherwise if we convert the input smiles to mol with --gen3D and then to canonical smiles, the result is different:; OC/C(=C\C(=O)/C=C/c1ccc(c(c1)OC)O)/C=C/c1ccc(c(c1)OC)O. I think in all cases the result should be the same. I've checked it in 2.3.0 as well as in 2.2.0. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1050
https://github.com/openbabel/openbabel/issues/1051:148,Integrability,Message,Message,148,"Hi All,. the builder fails on building 3d (example code below) for smiles: N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O; Message is:. terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check; Aborted. Best regards,; Martin. P.S.:; * I am using ob 2.3.0.; * It works if the rotation info (@@) is removed.; * The smiles is from a well known bbb dataset: http://www.cheminformatics.org/datasets/#perm, first in list. #include <iostream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/builder.h>. using namespace std;; using namespace OpenBabel;. int main(int argc,char **argv); {; 	OBMol * mol = new OBMol();; 	OBConversion obconversion;; 	obconversion.SetInFormat(""smiles"");; 	//obconversion.ReadString(mol, ""C1(N=C(NC(C)C)N=C(N=1)OC)NC(C)C"");; 	obconversion.ReadString(mol,; 	""N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O"");; 	cout << ""formula ""<< mol->GetFormula() << ""\n"";; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	OBBuilder builder;; 	builder.Build(*mol);; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	delete(mol);; 	return 0;; }. Reported by: martinguetlein",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051
https://github.com/openbabel/openbabel/issues/1051:261,Safety,Abort,Aborted,261,"Hi All,. the builder fails on building 3d (example code below) for smiles: N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O; Message is:. terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check; Aborted. Best regards,; Martin. P.S.:; * I am using ob 2.3.0.; * It works if the rotation info (@@) is removed.; * The smiles is from a well known bbb dataset: http://www.cheminformatics.org/datasets/#perm, first in list. #include <iostream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/builder.h>. using namespace std;; using namespace OpenBabel;. int main(int argc,char **argv); {; 	OBMol * mol = new OBMol();; 	OBConversion obconversion;; 	obconversion.SetInFormat(""smiles"");; 	//obconversion.ReadString(mol, ""C1(N=C(NC(C)C)N=C(N=1)OC)NC(C)C"");; 	obconversion.ReadString(mol,; 	""N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O"");; 	cout << ""formula ""<< mol->GetFormula() << ""\n"";; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	OBBuilder builder;; 	builder.Build(*mol);; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	delete(mol);; 	return 0;; }. Reported by: martinguetlein",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051
https://github.com/openbabel/openbabel/issues/1052:235,Testability,assert,assertEquals,235,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052
https://github.com/openbabel/openbabel/issues/1052:305,Testability,assert,assertEquals,305,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052
https://github.com/openbabel/openbabel/issues/1052:512,Testability,assert,assertEquals,512,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052
https://github.com/openbabel/openbabel/issues/1052:552,Testability,assert,assertEquals,552,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052
https://github.com/openbabel/openbabel/issues/1052:652,Testability,assert,assertEquals,652,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052
https://github.com/openbabel/openbabel/issues/1052:722,Testability,assert,assertEquals,722,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052
https://github.com/openbabel/openbabel/issues/1052:762,Testability,assert,assertEquals,762,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052
https://github.com/openbabel/openbabel/issues/1053:94,Energy Efficiency,charge,charge,94,"From Andrew Dalke:. (1) Shouldn't the molecular formula for ""[NH4+]"" include the total formal charge?. (2) The formal results for c1ccccc1O.[NH4+] are very strange. Take a look at this test. self.assertEquals(mol.GetSpacedFormula(), ""C 6 H 10 N 1 O 1 ""); self.assertEquals(mol.GetSpacedFormula(1), ""C 6 H 10 N O ""). Why is there a double space in ""N 1"" and ""O 1""? Why is there a; space after the last ""1""? And just how useful is the ""include; implicit hydrogens"" flag to generate. self.assertEquals(mol.GetSpacedFormula(0, ' ', 0), ""C 6 H 4 N 1 O 1 ""). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1053
https://github.com/openbabel/openbabel/issues/1053:185,Testability,test,test,185,"From Andrew Dalke:. (1) Shouldn't the molecular formula for ""[NH4+]"" include the total formal charge?. (2) The formal results for c1ccccc1O.[NH4+] are very strange. Take a look at this test. self.assertEquals(mol.GetSpacedFormula(), ""C 6 H 10 N 1 O 1 ""); self.assertEquals(mol.GetSpacedFormula(1), ""C 6 H 10 N O ""). Why is there a double space in ""N 1"" and ""O 1""? Why is there a; space after the last ""1""? And just how useful is the ""include; implicit hydrogens"" flag to generate. self.assertEquals(mol.GetSpacedFormula(0, ' ', 0), ""C 6 H 4 N 1 O 1 ""). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1053
https://github.com/openbabel/openbabel/issues/1053:196,Testability,assert,assertEquals,196,"From Andrew Dalke:. (1) Shouldn't the molecular formula for ""[NH4+]"" include the total formal charge?. (2) The formal results for c1ccccc1O.[NH4+] are very strange. Take a look at this test. self.assertEquals(mol.GetSpacedFormula(), ""C 6 H 10 N 1 O 1 ""); self.assertEquals(mol.GetSpacedFormula(1), ""C 6 H 10 N O ""). Why is there a double space in ""N 1"" and ""O 1""? Why is there a; space after the last ""1""? And just how useful is the ""include; implicit hydrogens"" flag to generate. self.assertEquals(mol.GetSpacedFormula(0, ' ', 0), ""C 6 H 4 N 1 O 1 ""). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1053
https://github.com/openbabel/openbabel/issues/1053:260,Testability,assert,assertEquals,260,"From Andrew Dalke:. (1) Shouldn't the molecular formula for ""[NH4+]"" include the total formal charge?. (2) The formal results for c1ccccc1O.[NH4+] are very strange. Take a look at this test. self.assertEquals(mol.GetSpacedFormula(), ""C 6 H 10 N 1 O 1 ""); self.assertEquals(mol.GetSpacedFormula(1), ""C 6 H 10 N O ""). Why is there a double space in ""N 1"" and ""O 1""? Why is there a; space after the last ""1""? And just how useful is the ""include; implicit hydrogens"" flag to generate. self.assertEquals(mol.GetSpacedFormula(0, ' ', 0), ""C 6 H 4 N 1 O 1 ""). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1053
https://github.com/openbabel/openbabel/issues/1053:486,Testability,assert,assertEquals,486,"From Andrew Dalke:. (1) Shouldn't the molecular formula for ""[NH4+]"" include the total formal charge?. (2) The formal results for c1ccccc1O.[NH4+] are very strange. Take a look at this test. self.assertEquals(mol.GetSpacedFormula(), ""C 6 H 10 N 1 O 1 ""); self.assertEquals(mol.GetSpacedFormula(1), ""C 6 H 10 N O ""). Why is there a double space in ""N 1"" and ""O 1""? Why is there a; space after the last ""1""? And just how useful is the ""include; implicit hydrogens"" flag to generate. self.assertEquals(mol.GetSpacedFormula(0, ' ', 0), ""C 6 H 4 N 1 O 1 ""). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1053
https://github.com/openbabel/openbabel/issues/1055:322,Availability,down,downstream,322,"From Andrew Dalke:. If you have something like ""CNOS"" then C.IsConnected(C) is; true. I did not expect that. This is because IsConnected checks; to see if the target is any of the atoms of either side of the; bonds that are connected to C. And of course, C is always one; of the atoms connected to a bond of C. This has a downstream consequence in that. C.IsOneFour(C) == True. If I read the code right, the C in ""CN"" will also be in a; 1-4 relationship with itself. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1055
https://github.com/openbabel/openbabel/issues/1056:120,Usability,clear,clearly,120,"From Andrew Dalke:. OBAtom.HtoMethtyl() can dump code to stderr. v3: < -0.28, 0, 0 > v4: < -0.28, 0, 0 >. This is quite clearly a bit of debugging code which; wasn't removed:. cerr << ""v3: "" << v3 << "" v4: "" << v4 << endl;. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1056
https://github.com/openbabel/openbabel/issues/1057:43,Availability,echo,echo,43,"Hi,. the following molecule causes a SEGV; echo 'CC1=CC(=C(C(=C1)C)N2C3CCCCC3N(C2=[Ru](=CC4=CC=CC=C4)(Cl)Cl)C5=C(C=C(C=C5C)C)C)C.C1CCC(CC1)P(C2CCCCC2)C3CCCCC3' | babel -i smi - -o inchi -. This fails in current TRUNK -r4300: Open Babel 2.3.0 -- Nov 12 2010 -- 10:21:05; This works fine in Open Babel 2.2.3 -- Mar 7 2010 -- 04:49:56. Yours,; Steffen. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1057
https://github.com/openbabel/openbabel/issues/1059:50,Deployability,install,installed,50,For some reason libopenbabel.a and libinchi.a are installed in /usr/local/bin on MinGW system when CMAKE_INSTALL_PREFIX is set to /usr/local.; Expected behaviour: libraries installed in /usr/local/lib. Reported by: igor_filippov,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1059
https://github.com/openbabel/openbabel/issues/1059:173,Deployability,install,installed,173,For some reason libopenbabel.a and libinchi.a are installed in /usr/local/bin on MinGW system when CMAKE_INSTALL_PREFIX is set to /usr/local.; Expected behaviour: libraries installed in /usr/local/lib. Reported by: igor_filippov,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1059
https://github.com/openbabel/openbabel/issues/1060:46,Availability,fault,fault,46,"Program received signal SIGSEGV, Segmentation fault.; 0xb55e11c7 in OpenBabel::XMLConversion::ReadStream(void*, char*, int) () from /usr/lib/openbabel/2.2.3/cmlformat.so; (gdb) bt; #0 0xb55e11c7 in OpenBabel::XMLConversion::ReadStream(void*, char*, int) () from /usr/lib/openbabel/2.2.3/cmlformat.so; #1 0xb5e959fc in xmlParserInputBufferGrow () from /usr/lib/libxml2.so.2; #2 0xb5f1b7e0 in xmlTextReaderSetup () from /usr/lib/libxml2.so.2; #3 0xb55e251c in OpenBabel::XMLConversion::GetDerived(OpenBabel::OBConversion*, bool) () from /usr/lib/openbabel/2.2.3/cmlformat.so; #4 0xb55dbd02 in OpenBabel::XMLMoleculeFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) () from /usr/lib/openbabel/2.2.3/cmlformat.so; #5 0xb7e9c011 in OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) () from /usr/lib/libopenbabel.so.3; #6 0xb7e9c37e in OpenBabel::OBConversion::ReadFile(OpenBabel::OBBase*, std::string) () from /usr/lib/libopenbabel.so.3; #7 0x0804d21e in MainWindow::MainWindow(QWidget*) (); #8 0x0804bcf5 in main (argc=1, argv=0xbffff564) at main.cpp:7. You can find my code including the cml-files here:; http://gitorious.org/molecules. Reported by: @cniehaus",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060
https://github.com/openbabel/openbabel/issues/1061:167,Performance,perform,perform,167,"For some reason ""make uninstall"" target is missing in openbabel 2.3.0; build]# make uninstall; make: *** No rule to make target `uninstall'. Stop. Expected behaviour: perform uninstallation as in 2.2.3. Reported by: igor_filippov",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1061
https://github.com/openbabel/openbabel/issues/1062:19,Availability,error,errors,19,"Here are more SEGV errors importing PubChem canonical smiles:. PubChem CID 10876531. echo ""C[C]1[C]([C]([C]([C]1C)C)C)C.C1CCC(CC1)N2C=CN(C2=[Ru](=CC3=CC=CC=C3)(Cl)Cl)C4CCCCC4.Cl[Rh+]Cl"" | /vol/local/bin/babel -i smi - -o inchi -. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1062
https://github.com/openbabel/openbabel/issues/1062:85,Availability,echo,echo,85,"Here are more SEGV errors importing PubChem canonical smiles:. PubChem CID 10876531. echo ""C[C]1[C]([C]([C]([C]1C)C)C)C.C1CCC(CC1)N2C=CN(C2=[Ru](=CC3=CC=CC=C3)(Cl)Cl)C4CCCCC4.Cl[Rh+]Cl"" | /vol/local/bin/babel -i smi - -o inchi -. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1062
https://github.com/openbabel/openbabel/issues/1066:89,Availability,Error,Error,89,"Although existing in my smi and fs prepared with 2.3.0, I cannot search for isonitriles. Error was also in 2.2.x. I get:. 0 candidates from fingerprint search phase; Segmentation fault. A simple database might look like this. [C-]#[N+]CCCC(SC[N+]#[C-])SC[N+]#[C-] 1,1-bis(isocyanomethylthio)-4isocyanobutane; CCC(C)(C)[N+]#[C-] 1,1-Dimethylpropylisonitril; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)ethane; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)_ethane; CCCCCCCCCCCCCCCCC([N+]#[C-])C[N+]#[C-] 1,2-diisocyano-octadecane. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1066
https://github.com/openbabel/openbabel/issues/1066:179,Availability,fault,fault,179,"Although existing in my smi and fs prepared with 2.3.0, I cannot search for isonitriles. Error was also in 2.2.x. I get:. 0 candidates from fingerprint search phase; Segmentation fault. A simple database might look like this. [C-]#[N+]CCCC(SC[N+]#[C-])SC[N+]#[C-] 1,1-bis(isocyanomethylthio)-4isocyanobutane; CCC(C)(C)[N+]#[C-] 1,1-Dimethylpropylisonitril; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)ethane; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)_ethane; CCCCCCCCCCCCCCCCC([N+]#[C-])C[N+]#[C-] 1,2-diisocyano-octadecane. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1066
https://github.com/openbabel/openbabel/issues/1066:188,Usability,simpl,simple,188,"Although existing in my smi and fs prepared with 2.3.0, I cannot search for isonitriles. Error was also in 2.2.x. I get:. 0 candidates from fingerprint search phase; Segmentation fault. A simple database might look like this. [C-]#[N+]CCCC(SC[N+]#[C-])SC[N+]#[C-] 1,1-bis(isocyanomethylthio)-4isocyanobutane; CCC(C)(C)[N+]#[C-] 1,1-Dimethylpropylisonitril; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)ethane; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)_ethane; CCCCCCCCCCCCCCCCC([N+]#[C-])C[N+]#[C-] 1,2-diisocyano-octadecane. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1066
https://github.com/openbabel/openbabel/issues/1068:75,Availability,error,error,75,"The example given on the documentation page for OBMol is not working.; The error is: ‘OBMolAtomIter’ was not declared in this scope. This is because OBMolAtomIter in the FOR_ATOMS_OF_MOL should; really be OpenBabel::OBMolAtomIter. One can of course use ""using namespace OpenBabel"" but I think it's still a bug. #include <openbabel/obiter.h>; #include <openbabel/mol.h>. OBMol mol;; double exactMass = 0.0;; FOR_ATOMS_OF_MOL(a, mol); {; exactMass += a->GetExactMass();; }. Reported by: igor_filippov",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1068
https://github.com/openbabel/openbabel/issues/1069:675,Integrability,MESSAGE,MESSAGE,675,"Building the GUI fails if using wxWidgets 2.6. We need to require 2.8 if for BUILD_GUI to be true. Unfortunately, the FindwxWin macro does not return the CMake version. We'll have to call wx-config ourselves and sort it out. Here's some code from Google code search:. SET(wxWidgets_USE_LIBS base core xrc html xml adv gl net); FIND_PACKAGE(wxWidgets REQUIRED). # hugin requires wxwidgets 2.7.0 or above; IF (UNIX); EXEC_PROGRAM(sh ARGS ""${wxWidgets_CONFIG_EXECUTABLE} --version"" OUTPUT_VARIABLE wxWidgets_VERSION); STRING(REGEX REPLACE ""^([0-9]+\\.[0-9]+)\\..*"" ""\\1"" wxWidgets_VERSION ${wxWidgets_VERSION}); IF(wxWidgets_VERSION STREQUAL ""2.5""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.5.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.5""); IF(wxWidgets_VERSION STREQUAL ""2.6""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.6.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.6""); ENDIF (UNIX). IF(NOT wxWidgets_FOUND); MESSAGE(""wxWidgets was not found, GUI programs (hugin, nona_gui) disabled""); ENDIF(NOT wxWidgets_FOUND). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1069
https://github.com/openbabel/openbabel/issues/1069:824,Integrability,MESSAGE,MESSAGE,824,"Building the GUI fails if using wxWidgets 2.6. We need to require 2.8 if for BUILD_GUI to be true. Unfortunately, the FindwxWin macro does not return the CMake version. We'll have to call wx-config ourselves and sort it out. Here's some code from Google code search:. SET(wxWidgets_USE_LIBS base core xrc html xml adv gl net); FIND_PACKAGE(wxWidgets REQUIRED). # hugin requires wxwidgets 2.7.0 or above; IF (UNIX); EXEC_PROGRAM(sh ARGS ""${wxWidgets_CONFIG_EXECUTABLE} --version"" OUTPUT_VARIABLE wxWidgets_VERSION); STRING(REGEX REPLACE ""^([0-9]+\\.[0-9]+)\\..*"" ""\\1"" wxWidgets_VERSION ${wxWidgets_VERSION}); IF(wxWidgets_VERSION STREQUAL ""2.5""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.5.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.5""); IF(wxWidgets_VERSION STREQUAL ""2.6""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.6.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.6""); ENDIF (UNIX). IF(NOT wxWidgets_FOUND); MESSAGE(""wxWidgets was not found, GUI programs (hugin, nona_gui) disabled""); ENDIF(NOT wxWidgets_FOUND). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1069
https://github.com/openbabel/openbabel/issues/1069:946,Integrability,MESSAGE,MESSAGE,946,"Building the GUI fails if using wxWidgets 2.6. We need to require 2.8 if for BUILD_GUI to be true. Unfortunately, the FindwxWin macro does not return the CMake version. We'll have to call wx-config ourselves and sort it out. Here's some code from Google code search:. SET(wxWidgets_USE_LIBS base core xrc html xml adv gl net); FIND_PACKAGE(wxWidgets REQUIRED). # hugin requires wxwidgets 2.7.0 or above; IF (UNIX); EXEC_PROGRAM(sh ARGS ""${wxWidgets_CONFIG_EXECUTABLE} --version"" OUTPUT_VARIABLE wxWidgets_VERSION); STRING(REGEX REPLACE ""^([0-9]+\\.[0-9]+)\\..*"" ""\\1"" wxWidgets_VERSION ${wxWidgets_VERSION}); IF(wxWidgets_VERSION STREQUAL ""2.5""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.5.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.5""); IF(wxWidgets_VERSION STREQUAL ""2.6""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.6.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.6""); ENDIF (UNIX). IF(NOT wxWidgets_FOUND); MESSAGE(""wxWidgets was not found, GUI programs (hugin, nona_gui) disabled""); ENDIF(NOT wxWidgets_FOUND). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1069
https://github.com/openbabel/openbabel/issues/1069:191,Modifiability,config,config,191,"Building the GUI fails if using wxWidgets 2.6. We need to require 2.8 if for BUILD_GUI to be true. Unfortunately, the FindwxWin macro does not return the CMake version. We'll have to call wx-config ourselves and sort it out. Here's some code from Google code search:. SET(wxWidgets_USE_LIBS base core xrc html xml adv gl net); FIND_PACKAGE(wxWidgets REQUIRED). # hugin requires wxwidgets 2.7.0 or above; IF (UNIX); EXEC_PROGRAM(sh ARGS ""${wxWidgets_CONFIG_EXECUTABLE} --version"" OUTPUT_VARIABLE wxWidgets_VERSION); STRING(REGEX REPLACE ""^([0-9]+\\.[0-9]+)\\..*"" ""\\1"" wxWidgets_VERSION ${wxWidgets_VERSION}); IF(wxWidgets_VERSION STREQUAL ""2.5""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.5.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.5""); IF(wxWidgets_VERSION STREQUAL ""2.6""); SET(wxWidgets_FOUND FALSE); MESSAGE(""wxWidgets 2.6.x not supported""); ENDIF(wxWidgets_VERSION STREQUAL ""2.6""); ENDIF (UNIX). IF(NOT wxWidgets_FOUND); MESSAGE(""wxWidgets was not found, GUI programs (hugin, nona_gui) disabled""); ENDIF(NOT wxWidgets_FOUND). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1069
https://github.com/openbabel/openbabel/issues/1070:28,Security,hash,hash,28,"It seems that all wedge and hash bonds created by OBDepict have the thick and thin end of the wedge swapped. The thin end of the wedge should be on the stereocenter. Here's an example. PubChem CID 10836 at http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=10836&loc=ec_rcs. It's 2D Mol file is at http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=10836&disopt=SaveSDF. If you save this, right click, and choose ""OBDepect"", it draws the molecule with the wedge pointing from the Nitrogen to the Carbon, instead of from the Carbon to the Nitrogen. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1070
https://github.com/openbabel/openbabel/issues/1071:50,Security,access,access,50,The attached molecule causes SEGV (illegal memory access) when converted to SVG. It does not matter which input format is used (can be converted to various formats with no problem). It does not matter if GUI or command line is used. The bug is reproducible both on Linux and Windows. Contact: kaupo.palo[at]osa.pri.ee. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1071
https://github.com/openbabel/openbabel/issues/1072:255,Deployability,release,release,255,"See below (Bash shell). The output, cmake.log is attached. tar -xf openbabel-2.3.0.tar.gz --gunzip; cd openbabel-2.3.0/src; cmake -DCMAKE_INSTALL_PREFIX=../openbabel >cmake.log 2>&1. Operating system: CentOS 5.4; Open babel version: 2.3.0 official stable release; cmake version: 2.8.3 (Identical results obtained with cmake version 2.6.4 as well.). Joel Dockray; bsjpd@leeds.ac.uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1072
https://github.com/openbabel/openbabel/issues/1072:42,Testability,log,log,42,"See below (Bash shell). The output, cmake.log is attached. tar -xf openbabel-2.3.0.tar.gz --gunzip; cd openbabel-2.3.0/src; cmake -DCMAKE_INSTALL_PREFIX=../openbabel >cmake.log 2>&1. Operating system: CentOS 5.4; Open babel version: 2.3.0 official stable release; cmake version: 2.8.3 (Identical results obtained with cmake version 2.6.4 as well.). Joel Dockray; bsjpd@leeds.ac.uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1072
https://github.com/openbabel/openbabel/issues/1072:173,Testability,log,log,173,"See below (Bash shell). The output, cmake.log is attached. tar -xf openbabel-2.3.0.tar.gz --gunzip; cd openbabel-2.3.0/src; cmake -DCMAKE_INSTALL_PREFIX=../openbabel >cmake.log 2>&1. Operating system: CentOS 5.4; Open babel version: 2.3.0 official stable release; cmake version: 2.8.3 (Identical results obtained with cmake version 2.6.4 as well.). Joel Dockray; bsjpd@leeds.ac.uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1072
https://github.com/openbabel/openbabel/issues/1074:96,Availability,error,errors,96,"For C(C)[AsH](c1ccccc1)(c1ccccc1)c1ccccc1 (or the same molecule in other formats) the following errors are output:; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : found 4 reference ids, should be 3.; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : center atom id is invalid. As stereochemistry hasn't been defined for this molecule I assume the errors will not effect the output. Nonetheless it would be nice to fix this as when you are batch converting structures it is not particularly reassuring to see errors indicating something may have gone wrong with the stereochemistry handling. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1074
https://github.com/openbabel/openbabel/issues/1074:163,Availability,Error,Error,163,"For C(C)[AsH](c1ccccc1)(c1ccccc1)c1ccccc1 (or the same molecule in other formats) the following errors are output:; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : found 4 reference ids, should be 3.; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : center atom id is invalid. As stereochemistry hasn't been defined for this molecule I assume the errors will not effect the output. Nonetheless it would be nice to fix this as when you are batch converting structures it is not particularly reassuring to see errors indicating something may have gone wrong with the stereochemistry handling. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1074
https://github.com/openbabel/openbabel/issues/1074:332,Availability,Error,Error,332,"For C(C)[AsH](c1ccccc1)(c1ccccc1)c1ccccc1 (or the same molecule in other formats) the following errors are output:; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : found 4 reference ids, should be 3.; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : center atom id is invalid. As stereochemistry hasn't been defined for this molecule I assume the errors will not effect the output. Nonetheless it would be nice to fix this as when you are batch converting structures it is not particularly reassuring to see errors indicating something may have gone wrong with the stereochemistry handling. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1074
https://github.com/openbabel/openbabel/issues/1074:514,Availability,error,errors,514,"For C(C)[AsH](c1ccccc1)(c1ccccc1)c1ccccc1 (or the same molecule in other formats) the following errors are output:; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : found 4 reference ids, should be 3.; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : center atom id is invalid. As stereochemistry hasn't been defined for this molecule I assume the errors will not effect the output. Nonetheless it would be nice to fix this as when you are batch converting structures it is not particularly reassuring to see errors indicating something may have gone wrong with the stereochemistry handling. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1074
https://github.com/openbabel/openbabel/issues/1074:675,Availability,error,errors,675,"For C(C)[AsH](c1ccccc1)(c1ccccc1)c1ccccc1 (or the same molecule in other formats) the following errors are output:; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : found 4 reference ids, should be 3.; ==============================; *** Open Babel Error in OpenBabel::OBTetrahedralStereo::SetConfig; OBTetrahedralStereo::SetConfig : center atom id is invalid. As stereochemistry hasn't been defined for this molecule I assume the errors will not effect the output. Nonetheless it would be nice to fix this as when you are batch converting structures it is not particularly reassuring to see errors indicating something may have gone wrong with the stereochemistry handling. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1074
https://github.com/openbabel/openbabel/issues/1075:116,Deployability,install,install,116,"On CentOS 5.5 Linux I can successfully build OpenBabel 2.3.0, including the Python bindings. I subsequently want to install to a staging area, so I then perform, for example,. make install DESTDIR=/tmp/openbabel. That correctly installs the OpenBabel binaries, libraries, etc. under /tmp/openbabel, BUT it attempts to install the Python extension directly onto the system (in my case, into /usr/lib64/python2.4/site-packages). It should instead install the Python extension to (in this example) /tmp/openbabel/usr/lib64/python2.4/site-packages. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075
https://github.com/openbabel/openbabel/issues/1075:181,Deployability,install,install,181,"On CentOS 5.5 Linux I can successfully build OpenBabel 2.3.0, including the Python bindings. I subsequently want to install to a staging area, so I then perform, for example,. make install DESTDIR=/tmp/openbabel. That correctly installs the OpenBabel binaries, libraries, etc. under /tmp/openbabel, BUT it attempts to install the Python extension directly onto the system (in my case, into /usr/lib64/python2.4/site-packages). It should instead install the Python extension to (in this example) /tmp/openbabel/usr/lib64/python2.4/site-packages. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075
https://github.com/openbabel/openbabel/issues/1075:228,Deployability,install,installs,228,"On CentOS 5.5 Linux I can successfully build OpenBabel 2.3.0, including the Python bindings. I subsequently want to install to a staging area, so I then perform, for example,. make install DESTDIR=/tmp/openbabel. That correctly installs the OpenBabel binaries, libraries, etc. under /tmp/openbabel, BUT it attempts to install the Python extension directly onto the system (in my case, into /usr/lib64/python2.4/site-packages). It should instead install the Python extension to (in this example) /tmp/openbabel/usr/lib64/python2.4/site-packages. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075
https://github.com/openbabel/openbabel/issues/1075:318,Deployability,install,install,318,"On CentOS 5.5 Linux I can successfully build OpenBabel 2.3.0, including the Python bindings. I subsequently want to install to a staging area, so I then perform, for example,. make install DESTDIR=/tmp/openbabel. That correctly installs the OpenBabel binaries, libraries, etc. under /tmp/openbabel, BUT it attempts to install the Python extension directly onto the system (in my case, into /usr/lib64/python2.4/site-packages). It should instead install the Python extension to (in this example) /tmp/openbabel/usr/lib64/python2.4/site-packages. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075
https://github.com/openbabel/openbabel/issues/1075:445,Deployability,install,install,445,"On CentOS 5.5 Linux I can successfully build OpenBabel 2.3.0, including the Python bindings. I subsequently want to install to a staging area, so I then perform, for example,. make install DESTDIR=/tmp/openbabel. That correctly installs the OpenBabel binaries, libraries, etc. under /tmp/openbabel, BUT it attempts to install the Python extension directly onto the system (in my case, into /usr/lib64/python2.4/site-packages). It should instead install the Python extension to (in this example) /tmp/openbabel/usr/lib64/python2.4/site-packages. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075
https://github.com/openbabel/openbabel/issues/1075:153,Performance,perform,perform,153,"On CentOS 5.5 Linux I can successfully build OpenBabel 2.3.0, including the Python bindings. I subsequently want to install to a staging area, so I then perform, for example,. make install DESTDIR=/tmp/openbabel. That correctly installs the OpenBabel binaries, libraries, etc. under /tmp/openbabel, BUT it attempts to install the Python extension directly onto the system (in my case, into /usr/lib64/python2.4/site-packages). It should instead install the Python extension to (in this example) /tmp/openbabel/usr/lib64/python2.4/site-packages. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075
https://github.com/openbabel/openbabel/issues/1076:86,Deployability,Install,Installation,86,"The instructions for compiling OpenBabel from source (http://openbabel.org/docs/2.3.0/Installation/install.html#compiling-open-babel) suggest using parallel make for increased speed when building on a multi-processor system. If the the Python bindings are being built, however, then parallel make may attempt to link the Python bindings before libopenbabel.so has been built. Needless to say, that fails, halting the build. Serial builds have never failed for me, and even a new parallel build may be able to pick up a run to completion after the first make dies, so there are work-arounds. It would nevertheless be better for the Makefiles to express a proper dependency on libopenbabel.so that prevents any attempt to build the Python extension first. Inasmuch as the Perl and Ruby bindings (at least) seem also to rely on libopenbabel.so, they may also be affected by this issue. I have not tested those yet. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076
https://github.com/openbabel/openbabel/issues/1076:99,Deployability,install,install,99,"The instructions for compiling OpenBabel from source (http://openbabel.org/docs/2.3.0/Installation/install.html#compiling-open-babel) suggest using parallel make for increased speed when building on a multi-processor system. If the the Python bindings are being built, however, then parallel make may attempt to link the Python bindings before libopenbabel.so has been built. Needless to say, that fails, halting the build. Serial builds have never failed for me, and even a new parallel build may be able to pick up a run to completion after the first make dies, so there are work-arounds. It would nevertheless be better for the Makefiles to express a proper dependency on libopenbabel.so that prevents any attempt to build the Python extension first. Inasmuch as the Perl and Ruby bindings (at least) seem also to rely on libopenbabel.so, they may also be affected by this issue. I have not tested those yet. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076
https://github.com/openbabel/openbabel/issues/1076:661,Integrability,depend,dependency,661,"The instructions for compiling OpenBabel from source (http://openbabel.org/docs/2.3.0/Installation/install.html#compiling-open-babel) suggest using parallel make for increased speed when building on a multi-processor system. If the the Python bindings are being built, however, then parallel make may attempt to link the Python bindings before libopenbabel.so has been built. Needless to say, that fails, halting the build. Serial builds have never failed for me, and even a new parallel build may be able to pick up a run to completion after the first make dies, so there are work-arounds. It would nevertheless be better for the Makefiles to express a proper dependency on libopenbabel.so that prevents any attempt to build the Python extension first. Inasmuch as the Perl and Ruby bindings (at least) seem also to rely on libopenbabel.so, they may also be affected by this issue. I have not tested those yet. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076
https://github.com/openbabel/openbabel/issues/1076:894,Testability,test,tested,894,"The instructions for compiling OpenBabel from source (http://openbabel.org/docs/2.3.0/Installation/install.html#compiling-open-babel) suggest using parallel make for increased speed when building on a multi-processor system. If the the Python bindings are being built, however, then parallel make may attempt to link the Python bindings before libopenbabel.so has been built. Needless to say, that fails, halting the build. Serial builds have never failed for me, and even a new parallel build may be able to pick up a run to completion after the first make dies, so there are work-arounds. It would nevertheless be better for the Makefiles to express a proper dependency on libopenbabel.so that prevents any attempt to build the Python extension first. Inasmuch as the Perl and Ruby bindings (at least) seem also to rely on libopenbabel.so, they may also be affected by this issue. I have not tested those yet. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076
https://github.com/openbabel/openbabel/issues/1077:117,Deployability,install,installed,117,"The python binding compile step is not aware of the CMAKE variable EIGEN2_INSTALL_DIR as of r2349. If Eigen2 was not installed in the default include path, the python bindings do not compile successfully. Similarly, any custom CFLAGS set in CMAKE are not passed on to the python binding compilation. The workaround is to export CFLAGS=""${CFLAGS} -I${EIGEN2_INSTALL_DIR}"" into the local environment before compiling, but this is not ideal. Attached is an attempted solution using export to set the environment variables before compiling, but it is not complete since it would not work in shells like csh that use setenv instead of export. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077
https://github.com/openbabel/openbabel/issues/1077:58,Modifiability,variab,variable,58,"The python binding compile step is not aware of the CMAKE variable EIGEN2_INSTALL_DIR as of r2349. If Eigen2 was not installed in the default include path, the python bindings do not compile successfully. Similarly, any custom CFLAGS set in CMAKE are not passed on to the python binding compilation. The workaround is to export CFLAGS=""${CFLAGS} -I${EIGEN2_INSTALL_DIR}"" into the local environment before compiling, but this is not ideal. Attached is an attempted solution using export to set the environment variables before compiling, but it is not complete since it would not work in shells like csh that use setenv instead of export. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077
https://github.com/openbabel/openbabel/issues/1077:509,Modifiability,variab,variables,509,"The python binding compile step is not aware of the CMAKE variable EIGEN2_INSTALL_DIR as of r2349. If Eigen2 was not installed in the default include path, the python bindings do not compile successfully. Similarly, any custom CFLAGS set in CMAKE are not passed on to the python binding compilation. The workaround is to export CFLAGS=""${CFLAGS} -I${EIGEN2_INSTALL_DIR}"" into the local environment before compiling, but this is not ideal. Attached is an attempted solution using export to set the environment variables before compiling, but it is not complete since it would not work in shells like csh that use setenv instead of export. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077
https://github.com/openbabel/openbabel/issues/1078:31,Testability,test,testing,31,When doing some round tripping testing in OpenBabel 2.3.0 I came across the following cases where hydrogen was erroneously added to atoms with explicitly no hydrogen in the conversion from SMILES to InChI. Group 1/2 metals and In/Sn/Sb/Tl/Pb/Bi/Po/At. e.g. [Li] -->InChI=1S/Li.H instead of InChI=1S/Li; [Bi] --> InChI=1S/Bi.3H instead of InChI=1S/Bi. Possibly relatedly [BiH4] gives InChI=1S/Bi.5H instead of InChI=1S/Bi.4H. Reported by: dan2097,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1078
https://github.com/openbabel/openbabel/issues/1079:130,Availability,failure,failure,130,"The Java OBConversion.ReadFile() method reads only one molecule from the supplied file and returns boolean (indicating success or failure), while the Python readfile() method returns an iterator over all the molecules found in the file. The GUI version also supports converting multiple geometries. Would it be possible to add this support also to the Java API, or if the feature is already available, describe it in the documentation?. Reported by: joannakocot",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1079
https://github.com/openbabel/openbabel/issues/1079:391,Availability,avail,available,391,"The Java OBConversion.ReadFile() method reads only one molecule from the supplied file and returns boolean (indicating success or failure), while the Python readfile() method returns an iterator over all the molecules found in the file. The GUI version also supports converting multiple geometries. Would it be possible to add this support also to the Java API, or if the feature is already available, describe it in the documentation?. Reported by: joannakocot",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1079
https://github.com/openbabel/openbabel/issues/1080:482,Usability,clear,clearing,482,"atomic weight information leaks over into the atomic symbol in OBSmilesParser::ParseComplex . Here are two reproducibles. >>> mol = pybel.readstring(""smi"", ""[987U]""); >>> mol.atoms[0].OBAtom.GetType(); 'U87'. >>> pybel.readstring(""smi"", ""[1234z]"").write(""smi""); ==============================; *** Open Babel Warning in ParseComplex; Illegal aromatic element z]34. This is because the 'char symbol[7]' is used for isotope parsing then reused for symbol parsing but without properly clearing the field. The solution is to put a memset(symbol, '\0', 7*sizeof(char)) after; isotope = atoi(symbol);. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1080
https://github.com/openbabel/openbabel/issues/1082:109,Energy Efficiency,charge,charge,109,"Hi, I ran ""~/openbabel_230/build/bin/babel -ipdb eth.pdb -omol eth.mol"", the output mol file doesn't contain charge properties even though charge is specified in the last column of pdb file. Thanks. Reported by: chihongan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1082
https://github.com/openbabel/openbabel/issues/1082:139,Energy Efficiency,charge,charge,139,"Hi, I ran ""~/openbabel_230/build/bin/babel -ipdb eth.pdb -omol eth.mol"", the output mol file doesn't contain charge properties even though charge is specified in the last column of pdb file. Thanks. Reported by: chihongan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1082
https://github.com/openbabel/openbabel/issues/1083:0,Testability,Test,Testfile,0,Testfile: http://pyrx.scripps.edu/SI/2010/2GDZ.pdb. obabel 2GDZ.pdb -o tmp.pdb # takes 1 second; obabel 2GDZ.pdb -o tmp.pdbqt # takes forever (I killed it after a few minutes). ?. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1083
https://github.com/openbabel/openbabel/issues/1085:71,Deployability,install,install,71,"Hi, . Not really a bug in Open Babel I know.... I can't get the iBabel install link to work, incompatible versions it seems. The iBabel installer won't run because I have a newer version of Open Babel installed. Reported by: jpo-mpey",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1085
https://github.com/openbabel/openbabel/issues/1085:136,Deployability,install,installer,136,"Hi, . Not really a bug in Open Babel I know.... I can't get the iBabel install link to work, incompatible versions it seems. The iBabel installer won't run because I have a newer version of Open Babel installed. Reported by: jpo-mpey",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1085
https://github.com/openbabel/openbabel/issues/1085:201,Deployability,install,installed,201,"Hi, . Not really a bug in Open Babel I know.... I can't get the iBabel install link to work, incompatible versions it seems. The iBabel installer won't run because I have a newer version of Open Babel installed. Reported by: jpo-mpey",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1085
https://github.com/openbabel/openbabel/issues/1527:590,Energy Efficiency,energy,energy,590,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/158](https://sourceforge.net/p/openbabel/feature-requests/158)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1527
https://github.com/openbabel/openbabel/issues/1527:636,Energy Efficiency,energy,energy,636,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/158](https://sourceforge.net/p/openbabel/feature-requests/158)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1527
https://github.com/openbabel/openbabel/issues/1527:483,Usability,learn,learn,483,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/158](https://sourceforge.net/p/openbabel/feature-requests/158)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1527
https://github.com/openbabel/openbabel/issues/1528:590,Energy Efficiency,energy,energy,590,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/159](https://sourceforge.net/p/openbabel/feature-requests/159)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1528
https://github.com/openbabel/openbabel/issues/1528:636,Energy Efficiency,energy,energy,636,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/159](https://sourceforge.net/p/openbabel/feature-requests/159)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1528
https://github.com/openbabel/openbabel/issues/1528:483,Usability,learn,learn,483,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/159](https://sourceforge.net/p/openbabel/feature-requests/159)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1528
https://github.com/openbabel/openbabel/issues/1088:11,Availability,error,error,11,"Conversion error for PDBQT output ??. Conversion of files containing ligand SMILES structures --> .mol --> .mol2 --> .pdbqt using Open Babel 2.3.0 or iBabel 3.0(beta) results in PDBQT formatted files that cannot be read by various Vina GUI programs for high throughput screening (various parsing errors). The problem appears to lie in the final PDBQT conversion since mol2 files can be used as inputs in ADT, PyRx or Raccoon to generate the appropriate PDBQT formatting. A comparison of the two types of files shows that:. Babel 2.3.0 produces PDBQT output files which replace lines marked as REMARK with USER (for ligand names etc), ATOM with HETATM and end with TER. Replacing USER with REMARKS and removing TER allows files to be correctly read. Is this updated file syntax being adopted as the standard PDBQT format or is it a platform dependent version produced by InhibOx ?. Reported by: fgrun",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088
https://github.com/openbabel/openbabel/issues/1088:296,Availability,error,errors,296,"Conversion error for PDBQT output ??. Conversion of files containing ligand SMILES structures --> .mol --> .mol2 --> .pdbqt using Open Babel 2.3.0 or iBabel 3.0(beta) results in PDBQT formatted files that cannot be read by various Vina GUI programs for high throughput screening (various parsing errors). The problem appears to lie in the final PDBQT conversion since mol2 files can be used as inputs in ADT, PyRx or Raccoon to generate the appropriate PDBQT formatting. A comparison of the two types of files shows that:. Babel 2.3.0 produces PDBQT output files which replace lines marked as REMARK with USER (for ligand names etc), ATOM with HETATM and end with TER. Replacing USER with REMARKS and removing TER allows files to be correctly read. Is this updated file syntax being adopted as the standard PDBQT format or is it a platform dependent version produced by InhibOx ?. Reported by: fgrun",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088
https://github.com/openbabel/openbabel/issues/1088:757,Deployability,update,updated,757,"Conversion error for PDBQT output ??. Conversion of files containing ligand SMILES structures --> .mol --> .mol2 --> .pdbqt using Open Babel 2.3.0 or iBabel 3.0(beta) results in PDBQT formatted files that cannot be read by various Vina GUI programs for high throughput screening (various parsing errors). The problem appears to lie in the final PDBQT conversion since mol2 files can be used as inputs in ADT, PyRx or Raccoon to generate the appropriate PDBQT formatting. A comparison of the two types of files shows that:. Babel 2.3.0 produces PDBQT output files which replace lines marked as REMARK with USER (for ligand names etc), ATOM with HETATM and end with TER. Replacing USER with REMARKS and removing TER allows files to be correctly read. Is this updated file syntax being adopted as the standard PDBQT format or is it a platform dependent version produced by InhibOx ?. Reported by: fgrun",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088
https://github.com/openbabel/openbabel/issues/1088:840,Integrability,depend,dependent,840,"Conversion error for PDBQT output ??. Conversion of files containing ligand SMILES structures --> .mol --> .mol2 --> .pdbqt using Open Babel 2.3.0 or iBabel 3.0(beta) results in PDBQT formatted files that cannot be read by various Vina GUI programs for high throughput screening (various parsing errors). The problem appears to lie in the final PDBQT conversion since mol2 files can be used as inputs in ADT, PyRx or Raccoon to generate the appropriate PDBQT formatting. A comparison of the two types of files shows that:. Babel 2.3.0 produces PDBQT output files which replace lines marked as REMARK with USER (for ligand names etc), ATOM with HETATM and end with TER. Replacing USER with REMARKS and removing TER allows files to be correctly read. Is this updated file syntax being adopted as the standard PDBQT format or is it a platform dependent version produced by InhibOx ?. Reported by: fgrun",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088
https://github.com/openbabel/openbabel/issues/1088:258,Performance,throughput,throughput,258,"Conversion error for PDBQT output ??. Conversion of files containing ligand SMILES structures --> .mol --> .mol2 --> .pdbqt using Open Babel 2.3.0 or iBabel 3.0(beta) results in PDBQT formatted files that cannot be read by various Vina GUI programs for high throughput screening (various parsing errors). The problem appears to lie in the final PDBQT conversion since mol2 files can be used as inputs in ADT, PyRx or Raccoon to generate the appropriate PDBQT formatting. A comparison of the two types of files shows that:. Babel 2.3.0 produces PDBQT output files which replace lines marked as REMARK with USER (for ligand names etc), ATOM with HETATM and end with TER. Replacing USER with REMARKS and removing TER allows files to be correctly read. Is this updated file syntax being adopted as the standard PDBQT format or is it a platform dependent version produced by InhibOx ?. Reported by: fgrun",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088
https://github.com/openbabel/openbabel/issues/1090:90,Energy Efficiency,charge,charges,90,The attached molecule contains only polar hydrogens (1 hydrogen on a +1 N) and two formal charges set (one positive and one negative).; If converting the attached file to pdb without any operations it keeps the formal charges.; If converting the attached file to pdb with -h to add hydrogens it keeps the formal charges.; If converting the newly created pdb with hydrogens to a pdb without any further operations it loses the negative charge on the carboxylic acid. Reported by: magnuslundborg,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1090
https://github.com/openbabel/openbabel/issues/1090:218,Energy Efficiency,charge,charges,218,The attached molecule contains only polar hydrogens (1 hydrogen on a +1 N) and two formal charges set (one positive and one negative).; If converting the attached file to pdb without any operations it keeps the formal charges.; If converting the attached file to pdb with -h to add hydrogens it keeps the formal charges.; If converting the newly created pdb with hydrogens to a pdb without any further operations it loses the negative charge on the carboxylic acid. Reported by: magnuslundborg,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1090
https://github.com/openbabel/openbabel/issues/1090:312,Energy Efficiency,charge,charges,312,The attached molecule contains only polar hydrogens (1 hydrogen on a +1 N) and two formal charges set (one positive and one negative).; If converting the attached file to pdb without any operations it keeps the formal charges.; If converting the attached file to pdb with -h to add hydrogens it keeps the formal charges.; If converting the newly created pdb with hydrogens to a pdb without any further operations it loses the negative charge on the carboxylic acid. Reported by: magnuslundborg,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1090
https://github.com/openbabel/openbabel/issues/1090:435,Energy Efficiency,charge,charge,435,The attached molecule contains only polar hydrogens (1 hydrogen on a +1 N) and two formal charges set (one positive and one negative).; If converting the attached file to pdb without any operations it keeps the formal charges.; If converting the attached file to pdb with -h to add hydrogens it keeps the formal charges.; If converting the newly created pdb with hydrogens to a pdb without any further operations it loses the negative charge on the carboxylic acid. Reported by: magnuslundborg,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1090
https://github.com/openbabel/openbabel/issues/1091:90,Energy Efficiency,charge,charges,90,"I have observed something curious about variations in the way OpenBabel assigns Gasteiger charges. For example,. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -h. produces a molecule with an overall charge that is essentially 0. However, the command. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -p 7.4. produces a molecule that has an overall charge of -9.0. Both output files have had the same number of hydrogens added. Is this what's supposed to happen?. I have attached the input file for others to test. This seems to happen with both 2.2.3 and 2.3.0,. Reported by: dhouston6",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091
https://github.com/openbabel/openbabel/issues/1091:201,Energy Efficiency,charge,charge,201,"I have observed something curious about variations in the way OpenBabel assigns Gasteiger charges. For example,. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -h. produces a molecule with an overall charge that is essentially 0. However, the command. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -p 7.4. produces a molecule that has an overall charge of -9.0. Both output files have had the same number of hydrogens added. Is this what's supposed to happen?. I have attached the input file for others to test. This seems to happen with both 2.2.3 and 2.3.0,. Reported by: dhouston6",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091
https://github.com/openbabel/openbabel/issues/1091:349,Energy Efficiency,charge,charge,349,"I have observed something curious about variations in the way OpenBabel assigns Gasteiger charges. For example,. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -h. produces a molecule with an overall charge that is essentially 0. However, the command. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -p 7.4. produces a molecule that has an overall charge of -9.0. Both output files have had the same number of hydrogens added. Is this what's supposed to happen?. I have attached the input file for others to test. This seems to happen with both 2.2.3 and 2.3.0,. Reported by: dhouston6",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091
https://github.com/openbabel/openbabel/issues/1091:509,Testability,test,test,509,"I have observed something curious about variations in the way OpenBabel assigns Gasteiger charges. For example,. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -h. produces a molecule with an overall charge that is essentially 0. However, the command. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -p 7.4. produces a molecule that has an overall charge of -9.0. Both output files have had the same number of hydrogens added. Is this what's supposed to happen?. I have attached the input file for others to test. This seems to happen with both 2.2.3 and 2.3.0,. Reported by: dhouston6",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091
https://github.com/openbabel/openbabel/issues/1095:20,Deployability,patch,patch,20,Please ad following patch for sane checking of swig version. Thanks. Reported by: jlec,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1095
https://github.com/openbabel/openbabel/issues/1096:650,Testability,test,tests,650,"Name: Kevin Drew; Email: kdrew@nyu.edu; Version: openbabel-2.3.0; OS: Mac and Linux. I noticed a small change in torsion angle degrees when I input gzmat formatted files (internal coordinates). I only notice it with torsion angles of 0.0 (d5 and d6 in sample) and 180.0 (d9 in sample). The roundtrip conversion returns values of 0.03 (rather than 0.0) and 179.97 (rather than 180.0) respectively. ; --command--; obabel -i ""gzmat"" sample.gzmat -O output.gzmat; --command--. The problem seems to be related to the boundary conditions of an acos call in the vectorAngle function in math/vector3.cpp. I have increased the precision of boundary condition tests at lines 211 and 214 of math/vector3.cpp on my local copy and it seems to produce the desired results.; -snip-; 211 if (dp < -0.99999999999999); 212 return 180.0; 213 ; 214 if (dp > 0.99999999999999); 215 return 0.0; -snip-. I am not sure if this is the best way to fix this and I am not sure if this fixes all cases. Also, it seems like the vectorAngle function is deemed deprecated by comments in the code but is still being called by the CalcTorsionAngle function in math/vector3.cpp. . Please let me know if you need any more information. Thank you for your time,. Kevin Drew. Reported by: ksdrew",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1096
https://github.com/openbabel/openbabel/issues/1098:60,Availability,fault,fault,60,"Parsing an empty Gaussian output file causes a segmentation fault. $ babel -ig03 emptyfile -oreport; Segmentation fault. Running babel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098
https://github.com/openbabel/openbabel/issues/1098:114,Availability,fault,fault,114,"Parsing an empty Gaussian output file causes a segmentation fault. $ babel -ig03 emptyfile -oreport; Segmentation fault. Running babel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098
https://github.com/openbabel/openbabel/issues/1098:344,Availability,fault,fault,344,"Parsing an empty Gaussian output file causes a segmentation fault. $ babel -ig03 emptyfile -oreport; Segmentation fault. Running babel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098
https://github.com/openbabel/openbabel/issues/1098:2044,Integrability,message,messages,2044,"bel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -oreport; 0 molecules converted; 2 audit log messages . This problem occurs as of r4430 on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098
https://github.com/openbabel/openbabel/issues/1098:2034,Security,audit,audit,2034,"bel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -oreport; 0 molecules converted; 2 audit log messages . This problem occurs as of r4430 on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098
https://github.com/openbabel/openbabel/issues/1098:2040,Testability,log,log,2040,"bel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -oreport; 0 molecules converted; 2 audit log messages . This problem occurs as of r4430 on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098
https://github.com/openbabel/openbabel/issues/1093:0,Testability,test,test,0,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093
https://github.com/openbabel/openbabel/issues/1093:94,Testability,test,test,94,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093
https://github.com/openbabel/openbabel/issues/1093:123,Testability,test,test,123,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093
https://github.com/openbabel/openbabel/issues/1093:270,Testability,test,test,270,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093
https://github.com/openbabel/openbabel/issues/1093:331,Testability,test,test,331,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093
https://github.com/openbabel/openbabel/issues/1093:360,Testability,test,test,360,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093
https://github.com/openbabel/openbabel/issues/1099:884,Availability,error,errorlevel,884,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:392,Integrability,message,messages,392,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:732,Integrability,message,messages,732,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:382,Security,audit,audit,382,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:722,Security,audit,audit,722,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:388,Testability,log,log,388,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:466,Testability,test,test,466,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:495,Testability,test,test,495,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:610,Testability,test,test,610,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:638,Testability,test,test,638,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1099:728,Testability,log,log,728,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099
https://github.com/openbabel/openbabel/issues/1100:84,Availability,error,error,84,"When I compiled openbabel (version 2.3.0) without EIGEN2, I get an undefined symbol error when importing openbabel into python (see error message below). As soon as I included EIGEN2 (using -DEIGEN2_INCLUDE_DIR) everything works fine. If I understood correctly, EIGEN2 is optional. In that case, I guess there is a missing #ifdef. Otherwise, cmake should give an error if EIGEN2 is missing.; My system: RedHat Linux, python 2.5.4, openbabel 2.3.0. Python 2.5.4 (r254:67916, Mar 25 2009, 14:31:21) ; [GCC 4.1.2 20071124 (Red Hat 4.1.2-42)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/soft/openbabel/2.3.0/lib/python2.5/site-packages/openbabel.py"", line 87, in <module>; import _openbabel; ImportError: /soft/openbabel/2.3.0/lib/python2.5/site-packages/_openbabel.so: undefined symbol: _ZTVN9OpenBabel22OBEnergyConformerScoreE. Reported by: schtob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1100
https://github.com/openbabel/openbabel/issues/1100:132,Availability,error,error,132,"When I compiled openbabel (version 2.3.0) without EIGEN2, I get an undefined symbol error when importing openbabel into python (see error message below). As soon as I included EIGEN2 (using -DEIGEN2_INCLUDE_DIR) everything works fine. If I understood correctly, EIGEN2 is optional. In that case, I guess there is a missing #ifdef. Otherwise, cmake should give an error if EIGEN2 is missing.; My system: RedHat Linux, python 2.5.4, openbabel 2.3.0. Python 2.5.4 (r254:67916, Mar 25 2009, 14:31:21) ; [GCC 4.1.2 20071124 (Red Hat 4.1.2-42)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/soft/openbabel/2.3.0/lib/python2.5/site-packages/openbabel.py"", line 87, in <module>; import _openbabel; ImportError: /soft/openbabel/2.3.0/lib/python2.5/site-packages/_openbabel.so: undefined symbol: _ZTVN9OpenBabel22OBEnergyConformerScoreE. Reported by: schtob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1100
https://github.com/openbabel/openbabel/issues/1100:363,Availability,error,error,363,"When I compiled openbabel (version 2.3.0) without EIGEN2, I get an undefined symbol error when importing openbabel into python (see error message below). As soon as I included EIGEN2 (using -DEIGEN2_INCLUDE_DIR) everything works fine. If I understood correctly, EIGEN2 is optional. In that case, I guess there is a missing #ifdef. Otherwise, cmake should give an error if EIGEN2 is missing.; My system: RedHat Linux, python 2.5.4, openbabel 2.3.0. Python 2.5.4 (r254:67916, Mar 25 2009, 14:31:21) ; [GCC 4.1.2 20071124 (Red Hat 4.1.2-42)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/soft/openbabel/2.3.0/lib/python2.5/site-packages/openbabel.py"", line 87, in <module>; import _openbabel; ImportError: /soft/openbabel/2.3.0/lib/python2.5/site-packages/_openbabel.so: undefined symbol: _ZTVN9OpenBabel22OBEnergyConformerScoreE. Reported by: schtob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1100
https://github.com/openbabel/openbabel/issues/1100:138,Integrability,message,message,138,"When I compiled openbabel (version 2.3.0) without EIGEN2, I get an undefined symbol error when importing openbabel into python (see error message below). As soon as I included EIGEN2 (using -DEIGEN2_INCLUDE_DIR) everything works fine. If I understood correctly, EIGEN2 is optional. In that case, I guess there is a missing #ifdef. Otherwise, cmake should give an error if EIGEN2 is missing.; My system: RedHat Linux, python 2.5.4, openbabel 2.3.0. Python 2.5.4 (r254:67916, Mar 25 2009, 14:31:21) ; [GCC 4.1.2 20071124 (Red Hat 4.1.2-42)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/soft/openbabel/2.3.0/lib/python2.5/site-packages/openbabel.py"", line 87, in <module>; import _openbabel; ImportError: /soft/openbabel/2.3.0/lib/python2.5/site-packages/_openbabel.so: undefined symbol: _ZTVN9OpenBabel22OBEnergyConformerScoreE. Reported by: schtob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1100
https://github.com/openbabel/openbabel/issues/1094:56,Integrability,depend,depending,56,"Hydrogen addition algorithms yield inconsistent results depending on whether we just use -h to add implicit hydrogen or --gen3d to build a 3D model. The -h option works as expected. In contrast, --gen3d:; - does not add hydrogen on carboxylic acids (as reported in 2005 for a previous version); - adds spurious hydrogens for some amines ; The two files attached provides two exemples of these two artifacts. Reported by: djdjer",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1094
https://github.com/openbabel/openbabel/issues/1101:132,Availability,echo,echo,132,"Babel considers the Oxygen attached to an H in the Carboxylic acid as sp2 while this IMO is an sp3 oxygen. . To reproduce perform:; echo 'CC(=O)O' | babel -h -ismi -omolreport. Both Oxygens are sp2. The rule that is used to do this match is:; INTHYB [o,$(O=*),$(O[#6,#7,#8]=,:*)] 2 #sp2 oxygen; explicitly the: O[#6,#7,#8]=,:* part; I presume this should become [OD1][#6,#7,#8]=,:* but I'm not sure which other changes this induces which are indeed sp2 Oxygens. The problem is OS independent. Anyway, I used OpenBabel 2.3.0 under Linux. Reported by: lorubenet",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1101
https://github.com/openbabel/openbabel/issues/1101:122,Performance,perform,perform,122,"Babel considers the Oxygen attached to an H in the Carboxylic acid as sp2 while this IMO is an sp3 oxygen. . To reproduce perform:; echo 'CC(=O)O' | babel -h -ismi -omolreport. Both Oxygens are sp2. The rule that is used to do this match is:; INTHYB [o,$(O=*),$(O[#6,#7,#8]=,:*)] 2 #sp2 oxygen; explicitly the: O[#6,#7,#8]=,:* part; I presume this should become [OD1][#6,#7,#8]=,:* but I'm not sure which other changes this induces which are indeed sp2 Oxygens. The problem is OS independent. Anyway, I used OpenBabel 2.3.0 under Linux. Reported by: lorubenet",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1101
https://github.com/openbabel/openbabel/issues/1102:1491,Availability,fault,fault-with-Pybel-on-Mac-OS-x-,1491,"There are serious problems with the Java bindings. It took me quite a while to get them working in both Linux and Mac OS. In Windows 7 x64 I had no problems. I just needed openbabel_java.dll from the OpenBabelGUI package to be in java.library.path. Mac OS: I built the Java bindings using the instructions at [1] (including using Eigen2). However, it turns out that it is not sufficient to just place the resulting libopenbabel_java.so file in java.library.path. It needs to be renamed to libopenbabel_java.jnilib and the (advanced) instructions at [2] need to be followed because apparently there is some setup/compile glitch regarding where the compiled .so file will think its required library files are located. Linux: Using ""ld"" I could see that the glitch from above is also present in Linux. I did not find a tool similar to ""install_name_tool"" so instead I found out that I needed to follow the instructions in the Java README [3]. There is a typo (openbabel_java.cpp needs to be openbabel-java.cpp) and there will be complaining about a ""babelconfig.h"" file which I copied from the build directory created using CMake as described in [4]. In the end, the resulting libopenbabel_java.so file needs to be in java.library.path and I needed to do the LD_PRELOAD trick. To sum up, I think that there is room for improvement :) Thanks for your work so far!. [1] http://openbabel.org/docs/2.3.0/Installation/install.html#compile-bindings; [2] http://forums.openbabel.org/help-segmentation-fault-with-Pybel-on-Mac-OS-x-td3327036.html; [3] openbabel-2.3.0/scripts/java/README in openbabel-2.3.0.tar.gz; [4] http://openbabel.org/docs/2.3.0/Installation/install.html#basic-build-procedure. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102
https://github.com/openbabel/openbabel/issues/1102:1397,Deployability,Install,Installation,1397,"There are serious problems with the Java bindings. It took me quite a while to get them working in both Linux and Mac OS. In Windows 7 x64 I had no problems. I just needed openbabel_java.dll from the OpenBabelGUI package to be in java.library.path. Mac OS: I built the Java bindings using the instructions at [1] (including using Eigen2). However, it turns out that it is not sufficient to just place the resulting libopenbabel_java.so file in java.library.path. It needs to be renamed to libopenbabel_java.jnilib and the (advanced) instructions at [2] need to be followed because apparently there is some setup/compile glitch regarding where the compiled .so file will think its required library files are located. Linux: Using ""ld"" I could see that the glitch from above is also present in Linux. I did not find a tool similar to ""install_name_tool"" so instead I found out that I needed to follow the instructions in the Java README [3]. There is a typo (openbabel_java.cpp needs to be openbabel-java.cpp) and there will be complaining about a ""babelconfig.h"" file which I copied from the build directory created using CMake as described in [4]. In the end, the resulting libopenbabel_java.so file needs to be in java.library.path and I needed to do the LD_PRELOAD trick. To sum up, I think that there is room for improvement :) Thanks for your work so far!. [1] http://openbabel.org/docs/2.3.0/Installation/install.html#compile-bindings; [2] http://forums.openbabel.org/help-segmentation-fault-with-Pybel-on-Mac-OS-x-td3327036.html; [3] openbabel-2.3.0/scripts/java/README in openbabel-2.3.0.tar.gz; [4] http://openbabel.org/docs/2.3.0/Installation/install.html#basic-build-procedure. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102
https://github.com/openbabel/openbabel/issues/1102:1410,Deployability,install,install,1410,"There are serious problems with the Java bindings. It took me quite a while to get them working in both Linux and Mac OS. In Windows 7 x64 I had no problems. I just needed openbabel_java.dll from the OpenBabelGUI package to be in java.library.path. Mac OS: I built the Java bindings using the instructions at [1] (including using Eigen2). However, it turns out that it is not sufficient to just place the resulting libopenbabel_java.so file in java.library.path. It needs to be renamed to libopenbabel_java.jnilib and the (advanced) instructions at [2] need to be followed because apparently there is some setup/compile glitch regarding where the compiled .so file will think its required library files are located. Linux: Using ""ld"" I could see that the glitch from above is also present in Linux. I did not find a tool similar to ""install_name_tool"" so instead I found out that I needed to follow the instructions in the Java README [3]. There is a typo (openbabel_java.cpp needs to be openbabel-java.cpp) and there will be complaining about a ""babelconfig.h"" file which I copied from the build directory created using CMake as described in [4]. In the end, the resulting libopenbabel_java.so file needs to be in java.library.path and I needed to do the LD_PRELOAD trick. To sum up, I think that there is room for improvement :) Thanks for your work so far!. [1] http://openbabel.org/docs/2.3.0/Installation/install.html#compile-bindings; [2] http://forums.openbabel.org/help-segmentation-fault-with-Pybel-on-Mac-OS-x-td3327036.html; [3] openbabel-2.3.0/scripts/java/README in openbabel-2.3.0.tar.gz; [4] http://openbabel.org/docs/2.3.0/Installation/install.html#basic-build-procedure. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102
https://github.com/openbabel/openbabel/issues/1102:1639,Deployability,Install,Installation,1639,"There are serious problems with the Java bindings. It took me quite a while to get them working in both Linux and Mac OS. In Windows 7 x64 I had no problems. I just needed openbabel_java.dll from the OpenBabelGUI package to be in java.library.path. Mac OS: I built the Java bindings using the instructions at [1] (including using Eigen2). However, it turns out that it is not sufficient to just place the resulting libopenbabel_java.so file in java.library.path. It needs to be renamed to libopenbabel_java.jnilib and the (advanced) instructions at [2] need to be followed because apparently there is some setup/compile glitch regarding where the compiled .so file will think its required library files are located. Linux: Using ""ld"" I could see that the glitch from above is also present in Linux. I did not find a tool similar to ""install_name_tool"" so instead I found out that I needed to follow the instructions in the Java README [3]. There is a typo (openbabel_java.cpp needs to be openbabel-java.cpp) and there will be complaining about a ""babelconfig.h"" file which I copied from the build directory created using CMake as described in [4]. In the end, the resulting libopenbabel_java.so file needs to be in java.library.path and I needed to do the LD_PRELOAD trick. To sum up, I think that there is room for improvement :) Thanks for your work so far!. [1] http://openbabel.org/docs/2.3.0/Installation/install.html#compile-bindings; [2] http://forums.openbabel.org/help-segmentation-fault-with-Pybel-on-Mac-OS-x-td3327036.html; [3] openbabel-2.3.0/scripts/java/README in openbabel-2.3.0.tar.gz; [4] http://openbabel.org/docs/2.3.0/Installation/install.html#basic-build-procedure. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102
https://github.com/openbabel/openbabel/issues/1102:1652,Deployability,install,install,1652,"There are serious problems with the Java bindings. It took me quite a while to get them working in both Linux and Mac OS. In Windows 7 x64 I had no problems. I just needed openbabel_java.dll from the OpenBabelGUI package to be in java.library.path. Mac OS: I built the Java bindings using the instructions at [1] (including using Eigen2). However, it turns out that it is not sufficient to just place the resulting libopenbabel_java.so file in java.library.path. It needs to be renamed to libopenbabel_java.jnilib and the (advanced) instructions at [2] need to be followed because apparently there is some setup/compile glitch regarding where the compiled .so file will think its required library files are located. Linux: Using ""ld"" I could see that the glitch from above is also present in Linux. I did not find a tool similar to ""install_name_tool"" so instead I found out that I needed to follow the instructions in the Java README [3]. There is a typo (openbabel_java.cpp needs to be openbabel-java.cpp) and there will be complaining about a ""babelconfig.h"" file which I copied from the build directory created using CMake as described in [4]. In the end, the resulting libopenbabel_java.so file needs to be in java.library.path and I needed to do the LD_PRELOAD trick. To sum up, I think that there is room for improvement :) Thanks for your work so far!. [1] http://openbabel.org/docs/2.3.0/Installation/install.html#compile-bindings; [2] http://forums.openbabel.org/help-segmentation-fault-with-Pybel-on-Mac-OS-x-td3327036.html; [3] openbabel-2.3.0/scripts/java/README in openbabel-2.3.0.tar.gz; [4] http://openbabel.org/docs/2.3.0/Installation/install.html#basic-build-procedure. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102
https://github.com/openbabel/openbabel/issues/1104:203,Availability,error,error,203,"Adrià Cereto-Massagué reported on the OpenBabel-scripting mailing list that gzipped files could not be opened with the Python bindings on Windows, although they could under linux. The following gives an error message of some kind:; >>> mols = pybel.readfile(\'sdf\',\'test_file.sdf.gz\'); >>> mols.next().title. This problem seems to be specific to the Python bindings: all the gzipped files I have tried have been read properly with obabel/GUI in Windows. (It is writing compressed files on Windows that does not work properly.). However the file http://dalkescientific.com/writings/benzodiazepine.sdf.gz surprisingly works for me in the above Python test. The attached files ( compressed with 7z) with Windows or UNIX line-endings both fail. OB 2.3.0 Pybel 1.6. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1104
https://github.com/openbabel/openbabel/issues/1104:209,Integrability,message,message,209,"Adrià Cereto-Massagué reported on the OpenBabel-scripting mailing list that gzipped files could not be opened with the Python bindings on Windows, although they could under linux. The following gives an error message of some kind:; >>> mols = pybel.readfile(\'sdf\',\'test_file.sdf.gz\'); >>> mols.next().title. This problem seems to be specific to the Python bindings: all the gzipped files I have tried have been read properly with obabel/GUI in Windows. (It is writing compressed files on Windows that does not work properly.). However the file http://dalkescientific.com/writings/benzodiazepine.sdf.gz surprisingly works for me in the above Python test. The attached files ( compressed with 7z) with Windows or UNIX line-endings both fail. OB 2.3.0 Pybel 1.6. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1104
https://github.com/openbabel/openbabel/issues/1104:652,Testability,test,test,652,"Adrià Cereto-Massagué reported on the OpenBabel-scripting mailing list that gzipped files could not be opened with the Python bindings on Windows, although they could under linux. The following gives an error message of some kind:; >>> mols = pybel.readfile(\'sdf\',\'test_file.sdf.gz\'); >>> mols.next().title. This problem seems to be specific to the Python bindings: all the gzipped files I have tried have been read properly with obabel/GUI in Windows. (It is writing compressed files on Windows that does not work properly.). However the file http://dalkescientific.com/writings/benzodiazepine.sdf.gz surprisingly works for me in the above Python test. The attached files ( compressed with 7z) with Windows or UNIX line-endings both fail. OB 2.3.0 Pybel 1.6. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1104
https://github.com/openbabel/openbabel/issues/1105:157,Performance,optimiz,optimization,157,"Dear Open Babel authors!. ~>babel bsse.log bsse.xyz. While converting Gaussian log file into XYZ format, babel extracts the first geometry. However geometry optimization was requested in Gaussian job so I expected to see the last geometry in XYZ file. I noticed the wrong behavior appears only if counterpoise=2 option in Gaussian job is activated. . Marat Talipov; TalipovM@gmail.com. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105
https://github.com/openbabel/openbabel/issues/1105:39,Testability,log,log,39,"Dear Open Babel authors!. ~>babel bsse.log bsse.xyz. While converting Gaussian log file into XYZ format, babel extracts the first geometry. However geometry optimization was requested in Gaussian job so I expected to see the last geometry in XYZ file. I noticed the wrong behavior appears only if counterpoise=2 option in Gaussian job is activated. . Marat Talipov; TalipovM@gmail.com. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105
https://github.com/openbabel/openbabel/issues/1105:79,Testability,log,log,79,"Dear Open Babel authors!. ~>babel bsse.log bsse.xyz. While converting Gaussian log file into XYZ format, babel extracts the first geometry. However geometry optimization was requested in Gaussian job so I expected to see the last geometry in XYZ file. I noticed the wrong behavior appears only if counterpoise=2 option in Gaussian job is activated. . Marat Talipov; TalipovM@gmail.com. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105
https://github.com/openbabel/openbabel/issues/1106:82,Availability,echo,echo,82,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1106:216,Availability,echo,echo,216,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1106:150,Integrability,message,messages,150,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1106:316,Integrability,message,messages,316,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1106:140,Security,audit,audit,140,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1106:306,Security,audit,audit,306,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1106:146,Testability,log,log,146,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1106:312,Testability,log,log,312,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106
https://github.com/openbabel/openbabel/issues/1107:344,Availability,error,error,344,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1107:446,Availability,error,error,446,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1107:683,Availability,error,error,683,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1107:773,Availability,error,error,773,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1107:1018,Availability,error,error,1018,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1107:1128,Availability,error,error,1128,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1107:1286,Availability,Error,Error,1286,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1107:1353,Availability,Error,Error,1353,"When compiling OpenBabel 2.3.0 or 2.2.3 under win32 using CygWin the following problem occurs:. [ 51%] Building CXX object src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'short unsigned int bswap_16(short unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:28: error: redefinition of 'short unsigned int bswap_16(short unsigned int)'; /usr/include/byteswap.h:19: error: 'short unsigned int bswap_16(short unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'unsigned int bswap_32(unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:32: error: redefinition of 'unsigned int bswap_32(unsigned int)'; /usr/include/byteswap.h:25: error: 'unsigned int bswap_32(unsigned int)' previously defined here; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp: In function 'long long unsigned int bswap_64(long long unsigned int)':; /src/openbabel-2.3.0/src/formats/chemdrawcdx.cpp:36: error: redefinition of 'long long unsigned int bswap_64(long long unsigned int)'; /usr/include/byteswap.h:31: error: 'long long unsigned int bswap_64(long long unsigned int)' previously defined here; make[2]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/chemdrawcdx.o] Error 1; make[1]: *** [src/formats/CMakeFiles/chemdrawcdx.dir/all] Error 2. When the corresponding functions (bswap_16, bswap_32, bswap_64) are commented in chemdrawcdx.cpp, the compilation succeeds. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1107
https://github.com/openbabel/openbabel/issues/1108:110,Testability,test,test,110,"From Andrew Dalke on list:. One of RDKit MACCS key definitions is. [!#6;!#1]~[!#6;!#1;!H0]. I'm working on my test suite for those definitions, as mentioned in my previous email. Here's a test case. >>> mol = pybel.readstring(""smi"", ""[U]S(C)C""); >>> matcher = pybel.Smarts(""[!#6;H0]""); >>> matcher.findall(mol); [(1,), (2,)]; >>> matcher = pybel.Smarts(""[!#6;!#1]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); []; >>>. RDKit, OEChem, and Daylight say that that pattern matches that structure. That's because all three programs say that the ""S"" has an implicit hydrogen on it. Daylight says that sulfur has valence levels of ""S (2,4,6)"". http://www.daylight.com/dayhtml/doc/theory/theory.smiles.html. This looks to be a bug in the code which calculates the implicit hydrogen count. Here's another another case where the implicit h-count is wrong, this time with P. Daylight says the valence levels for P in SMILES are (3,5). Given N=PPCC. The second atom (the first P) has a double bond and a single,; so it's valences are filled. It should have no implicit hydrogens. However, here's first the RDKit.MACCS pattern which passed, unexpectedly, in OpenBabel. >>> mol = pybel.readstring(""smi"", ""N=PPCC""); >>> matcher = pybel.Smarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); [(1, 2), (2, 3)]; >>> Hmatcher = pybel.Smarts(""[!H0]""); >>> Hmatcher.findall(mol); [(1,), (2,), (3,), (4,), (5,)]; >>>. You can see it's because the matcher thinks all of the atoms have at least one implicit hydrogen. Compare this to RDKit, which correctly has the P with no implicit hydrogens. >>> mol = Chem.MolFromSmiles(""N=PPCC""); >>> pat = Chem.MolFromSmarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> mol.GetSubstructMatches(pat); (); >>> Hpat = Chem.MolFromSmarts(""[!H0]""); >>> mol.GetSubstructMatches(Hpat); ((0,), (2,), (3,), (4,)). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1108
https://github.com/openbabel/openbabel/issues/1108:188,Testability,test,test,188,"From Andrew Dalke on list:. One of RDKit MACCS key definitions is. [!#6;!#1]~[!#6;!#1;!H0]. I'm working on my test suite for those definitions, as mentioned in my previous email. Here's a test case. >>> mol = pybel.readstring(""smi"", ""[U]S(C)C""); >>> matcher = pybel.Smarts(""[!#6;H0]""); >>> matcher.findall(mol); [(1,), (2,)]; >>> matcher = pybel.Smarts(""[!#6;!#1]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); []; >>>. RDKit, OEChem, and Daylight say that that pattern matches that structure. That's because all three programs say that the ""S"" has an implicit hydrogen on it. Daylight says that sulfur has valence levels of ""S (2,4,6)"". http://www.daylight.com/dayhtml/doc/theory/theory.smiles.html. This looks to be a bug in the code which calculates the implicit hydrogen count. Here's another another case where the implicit h-count is wrong, this time with P. Daylight says the valence levels for P in SMILES are (3,5). Given N=PPCC. The second atom (the first P) has a double bond and a single,; so it's valences are filled. It should have no implicit hydrogens. However, here's first the RDKit.MACCS pattern which passed, unexpectedly, in OpenBabel. >>> mol = pybel.readstring(""smi"", ""N=PPCC""); >>> matcher = pybel.Smarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); [(1, 2), (2, 3)]; >>> Hmatcher = pybel.Smarts(""[!H0]""); >>> Hmatcher.findall(mol); [(1,), (2,), (3,), (4,), (5,)]; >>>. You can see it's because the matcher thinks all of the atoms have at least one implicit hydrogen. Compare this to RDKit, which correctly has the P with no implicit hydrogens. >>> mol = Chem.MolFromSmiles(""N=PPCC""); >>> pat = Chem.MolFromSmarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> mol.GetSubstructMatches(pat); (); >>> Hpat = Chem.MolFromSmarts(""[!H0]""); >>> mol.GetSubstructMatches(Hpat); ((0,), (2,), (3,), (4,)). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1108
https://github.com/openbabel/openbabel/issues/1109:133,Security,validat,validating,133,"From Andrew Dalke on list:. Perhaps I'm missing something after staring at fingerprint SMARTS definitions for the last few days. I'm validating the MACCS substructure keys from RDKit, which are also used in OpenBabel and CDK. I'm writing a test suite, which will be public when done. (Actually, they are public now, if you know where the version control repository is.). I'm having a very difficult time generating an aromatic ring with a ""P"" in it in OpenBabel. >>> import pybel; >>> pybel.readstring(""smi"", ""c1cccp1"").write(); 'C1CCCP1\t\n'; >>> pybel.readstring(""smi"", ""c1ccccp1"").write(); 'C1=CC=NC=P1\t\n'. Since P is in the same group and has the same valence levels as N, I expected the first of these to return ""c1cccp1"", similar to. >>> pybel.readstring(""smi"", ""c1cccn1"").write(); 'c1ccc[nH]1\t\n'. Both RDKit and OEChem have no problem dealing with ""c1cccp"" and interpreting it as an aromatic ring. I processed about 50K structures from PubChem to find a number with aromatic ""p"" in them. Since PubChem doesn't have aromaticity information, what I did was use another program to perceive the aromaticity. Below I show the RDKit SMILES for a structure and the OpenBabel equivalent for it. You can see that of the 53 structures where RDKit has no problems with a ""p"" in an aromatic ring, 51 of them are converted into aliphatic form by OpenBabel. Is this due to a chemical reason or a design reason for why OpenBabel does this? Perhaps it's something subtle about aromaticity perception (which I sadly admit I still don't have a good grasp on). This is with OEChem OBReleaseVersion() '2.3.0' which I built a couple of days ago. Andrew; dalke@dalkescientific.com. Columns are; column 1: ""p"" in OpenBabel's SMILES; column 2: the SMILES string from RDKit; column 3: the SMILES string from OpenBabel. False 'CCc1c(CC)p(-c2ccccc2)c(-c2ccccc2)c1-c1ccccc1' 'CCC1C(CC)P(C2CCCCC2)C(C2CCCCC2)C1C1CCCCC1\t\n'; True '[W].Cc1np(C([Si](C)(C)C)[Si](C)(C)C)nc1N1CCCCC1.[O+]#[C-].[C-]#[O+].[O+]#[C-].[C-]#[O+].",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1109
https://github.com/openbabel/openbabel/issues/1109:240,Testability,test,test,240,"From Andrew Dalke on list:. Perhaps I'm missing something after staring at fingerprint SMARTS definitions for the last few days. I'm validating the MACCS substructure keys from RDKit, which are also used in OpenBabel and CDK. I'm writing a test suite, which will be public when done. (Actually, they are public now, if you know where the version control repository is.). I'm having a very difficult time generating an aromatic ring with a ""P"" in it in OpenBabel. >>> import pybel; >>> pybel.readstring(""smi"", ""c1cccp1"").write(); 'C1CCCP1\t\n'; >>> pybel.readstring(""smi"", ""c1ccccp1"").write(); 'C1=CC=NC=P1\t\n'. Since P is in the same group and has the same valence levels as N, I expected the first of these to return ""c1cccp1"", similar to. >>> pybel.readstring(""smi"", ""c1cccn1"").write(); 'c1ccc[nH]1\t\n'. Both RDKit and OEChem have no problem dealing with ""c1cccp"" and interpreting it as an aromatic ring. I processed about 50K structures from PubChem to find a number with aromatic ""p"" in them. Since PubChem doesn't have aromaticity information, what I did was use another program to perceive the aromaticity. Below I show the RDKit SMILES for a structure and the OpenBabel equivalent for it. You can see that of the 53 structures where RDKit has no problems with a ""p"" in an aromatic ring, 51 of them are converted into aliphatic form by OpenBabel. Is this due to a chemical reason or a design reason for why OpenBabel does this? Perhaps it's something subtle about aromaticity perception (which I sadly admit I still don't have a good grasp on). This is with OEChem OBReleaseVersion() '2.3.0' which I built a couple of days ago. Andrew; dalke@dalkescientific.com. Columns are; column 1: ""p"" in OpenBabel's SMILES; column 2: the SMILES string from RDKit; column 3: the SMILES string from OpenBabel. False 'CCc1c(CC)p(-c2ccccc2)c(-c2ccccc2)c1-c1ccccc1' 'CCC1C(CC)P(C2CCCCC2)C(C2CCCCC2)C1C1CCCCC1\t\n'; True '[W].Cc1np(C([Si](C)(C)C)[Si](C)(C)C)nc1N1CCCCC1.[O+]#[C-].[C-]#[O+].[O+]#[C-].[C-]#[O+].",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1109
https://github.com/openbabel/openbabel/issues/1110:386,Integrability,rout,routine,386,"Hi,; I use OB 2.2.0 on a linux debian distribution.; I am trying to make OB list me all bonds angles and torsions of any xyz or pdb file. Therefore I decided to convert into a .report file which does include the neccesary information. Torsions and bonds are calculated fine. But some angles are always missing and or listet multiple times.; I need a quick fix or I'll have to write the routine myself to generate a topology file. Reported by: nobody",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1110
https://github.com/openbabel/openbabel/issues/1111:61,Availability,error,error,61,"I tried to build the new 4513 revision but get the following error in CMakeLists.txt. /src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("". subsequently all following steps do not work. Reported by: nobody",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111
https://github.com/openbabel/openbabel/issues/1111:136,Availability,error,error,136,"I tried to build the new 4513 revision but get the following error in CMakeLists.txt. /src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("". subsequently all following steps do not work. Reported by: nobody",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111
https://github.com/openbabel/openbabel/issues/1114:61,Availability,error,error,61,"I tried to build the new 4513 revision but get the following error in CMakeLists.txt. /src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("". subsequently all following steps do not work. Reported by: nobody",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1114
https://github.com/openbabel/openbabel/issues/1114:136,Availability,error,error,136,"I tried to build the new 4513 revision but get the following error in CMakeLists.txt. /src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("". subsequently all following steps do not work. Reported by: nobody",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1114
https://github.com/openbabel/openbabel/issues/1115:76,Availability,error,errors,76,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:183,Availability,error,errors,183,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:204,Availability,error,errors,204,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:264,Availability,error,errors,264,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:30,Testability,log,logP,30,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:48,Testability,log,logp,48,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:235,Testability,log,logp,235,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:1046,Testability,log,logP,1046,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1115:1297,Testability,log,logp,1297,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115
https://github.com/openbabel/openbabel/issues/1116:267,Integrability,message,message,267,"I am trying to convert just the first molecule of a pdb file to .report.; In contrast to an xyz file the pdb includes incformation about the molecule number so the -l 1 option should give me just the first molecule.; Yet even without the -l 1 option the command line message says convertet 1 molecule when used on a pdb-file with ten molecules,; By the way cmake still does not work for me to get the latest revision so I do not know if the previous bug is fixed. Reported by: nobody",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1116
https://github.com/openbabel/openbabel/issues/1118:428,Deployability,install,install,428,"When I produce SVG output [1] from the attached molecule, I get a reasonable picture, along with a number of warnings. When I tell it to use the aliases in the MOL [2] or to generate its own [3], it segfaults. If you're curious, this MOL file came from this patent: http://www.google.com/patents?id=MP0KAAAAEBAJ and uses a pretty common idiom for depiction of molecular analogues in patents. [1] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd. [2] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd -xA . [3] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd --genalias -xA . Reported by: aheifets",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1118
https://github.com/openbabel/openbabel/issues/1118:542,Deployability,install,install,542,"When I produce SVG output [1] from the attached molecule, I get a reasonable picture, along with a number of warnings. When I tell it to use the aliases in the MOL [2] or to generate its own [3], it segfaults. If you're curious, this MOL file came from this patent: http://www.google.com/patents?id=MP0KAAAAEBAJ and uses a pretty common idiom for depiction of molecular analogues in patents. [1] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd. [2] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd -xA . [3] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd --genalias -xA . Reported by: aheifets",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1118
https://github.com/openbabel/openbabel/issues/1118:661,Deployability,install,install,661,"When I produce SVG output [1] from the attached molecule, I get a reasonable picture, along with a number of warnings. When I tell it to use the aliases in the MOL [2] or to generate its own [3], it segfaults. If you're curious, this MOL file came from this patent: http://www.google.com/patents?id=MP0KAAAAEBAJ and uses a pretty common idiom for depiction of molecular analogues in patents. [1] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd. [2] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd -xA . [3] ~/opt/openbabel-2.3.0/openbabel-install/bin/obabel -isdf US06448295-20020910-C00261.MOL -osvg -Ojunk.svg -xd --genalias -xA . Reported by: aheifets",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1118
https://github.com/openbabel/openbabel/issues/1119:2195,Integrability,interface,interface,2195,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119
https://github.com/openbabel/openbabel/issues/1119:2236,Modifiability,variab,variables,2236,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119
https://github.com/openbabel/openbabel/issues/1119:1539,Performance,optimiz,optimized,1539,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119
https://github.com/openbabel/openbabel/issues/1119:1573,Performance,optimiz,optimized,1573,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119
https://github.com/openbabel/openbabel/issues/1119:2210,Usability,clear,clearing,2210,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119
https://github.com/openbabel/openbabel/issues/1120:0,Testability,Test,Test,0,"Test file:; obabel -:CC -osdf --property key value --gen3d -O bug.sdf. obabel bug.sdf --append key -otxt; gives the correct answer:; value. obabel bug.sdf -aP --append key -otxt; just gives a blank with ""0 molecules converted"". If the molecule has a title, then it works. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1120
https://github.com/openbabel/openbabel/issues/1121:394,Testability,log,logs,394,"In converting the attached amorphous silicon cluster 3x3x3 supercell from XYZ to Mol2, obabel appears to hang while calculating the ring topology (the program did not finish in 22 hours). In contrast, the unit cell XYZ to Mol2 is successful and completes in five seconds. Please find attached a tarball, split into two chunks using gnu split, containing the structures and corresponding output logs, and the successful output for the single unit cell. In gdb, the backtrace is identical whenever I stop the execution except for lines #0 and #1. Shown is the backtrace after execution was stopped manually after 22 hrs. This problem occurs with the head revision (r4519) on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1121
https://github.com/openbabel/openbabel/issues/1122:372,Availability,error,error,372,"I have a program which generates python scripts that use open babel to read CIF files, perform energy calculations on them, and then output a new CIF file. It works almost always, but seems to fail on reading a few CIF files that are seemingly properly formatted. I have included a problem CIF file, the python script used to read and operate on it, and a log file of the error that is generated when this python script is run. Using Open Babel version 2.2.3, running on Ubuntu Linux. Reported by: stewenner",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122
https://github.com/openbabel/openbabel/issues/1122:95,Energy Efficiency,energy,energy,95,"I have a program which generates python scripts that use open babel to read CIF files, perform energy calculations on them, and then output a new CIF file. It works almost always, but seems to fail on reading a few CIF files that are seemingly properly formatted. I have included a problem CIF file, the python script used to read and operate on it, and a log file of the error that is generated when this python script is run. Using Open Babel version 2.2.3, running on Ubuntu Linux. Reported by: stewenner",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122
https://github.com/openbabel/openbabel/issues/1122:87,Performance,perform,perform,87,"I have a program which generates python scripts that use open babel to read CIF files, perform energy calculations on them, and then output a new CIF file. It works almost always, but seems to fail on reading a few CIF files that are seemingly properly formatted. I have included a problem CIF file, the python script used to read and operate on it, and a log file of the error that is generated when this python script is run. Using Open Babel version 2.2.3, running on Ubuntu Linux. Reported by: stewenner",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122
https://github.com/openbabel/openbabel/issues/1122:356,Testability,log,log,356,"I have a program which generates python scripts that use open babel to read CIF files, perform energy calculations on them, and then output a new CIF file. It works almost always, but seems to fail on reading a few CIF files that are seemingly properly formatted. I have included a problem CIF file, the python script used to read and operate on it, and a log file of the error that is generated when this python script is run. Using Open Babel version 2.2.3, running on Ubuntu Linux. Reported by: stewenner",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122
https://github.com/openbabel/openbabel/issues/1123:299,Integrability,interface,interface,299,"This function appears to be necessary to work with crystals since we need it to associate OBUnitCells with OBMols, but if there's any other way to make that association, please let me know. It seems like there may have originally been some memory management issues that kept SetData out of the Java interface, but these were worked around in the C++:. http://sourceforge.net/tracker/index.php?func=detail&aid=2004495&group_id=40728&atid=428740. Thanks.,. Will. Reported by: wtipton",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1123
https://github.com/openbabel/openbabel/issues/1124:90,Availability,fault,fault,90,"Trying to generate 3d coordinates for the following SMILES code results in a segmentation fault. C1[C@H]2[C@@H]3C[C@@H]4[C@H]2C5([C@@H]6[C@H]1[C@H]3[C@H]46)OCCO5. Using openbabel 2.3.0 on Linux (Centos) 64bit.; e.g.; obabel -:""C1[C@H]2[C@@H]3C[C@@H]4[C@H]2C5([C@@H]6[C@H]1[C@H]3[C@H]46)OCCO5"" -O temp.sdf --gen3d. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1124
https://github.com/openbabel/openbabel/issues/1125:657,Energy Efficiency,reduce,reduced,657,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125
https://github.com/openbabel/openbabel/issues/1125:5,Performance,load,load,5,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125
https://github.com/openbabel/openbabel/issues/1125:40,Performance,load,load,40,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125
https://github.com/openbabel/openbabel/issues/1125:111,Performance,load,load,111,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125
https://github.com/openbabel/openbabel/issues/1125:665,Testability,test,test,665,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125
https://github.com/openbabel/openbabel/issues/1126:200,Availability,fault,fault,200,"babel crashes on Linux with some structures when an inchi or inchi key is generated. As an example, try:; obabel -:""C[SbH]1(CC2CCCC(C2)C[SbH](CC3CCCC(C3)C1)(C)C)C"" -oinchi. This causes a segmentation fault. This seems to happen mostly with organometalic compounds. Reported by: reiling",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1126
https://github.com/openbabel/openbabel/issues/1128:478,Availability,error,error,478,"Scanning dependencies of target openbabel; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/perception.o; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp: In function ‘bool OpenBabel::TetStereoToWedgeHash(OpenBabel::OBMol&, std::map<OpenBabel::OBBond*, OpenBabel::OBStereo::BondDirection>&, std::map<OpenBabel::OBBond*, long unsigned int>&)’:; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp:2591:66: error: call of overloaded ‘abs(double)’ is ambiguous; /usr/include/stdlib.h:771:12: note: candidates are: int abs(int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:170:3: note: long long int __gnu_cxx::abs(long long int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:139:3: note: long int std::abs(long int); make[2]: *** [src/CMakeFiles/openbabel.dir/stereo/perception.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. Attached patch fixes it by using C++ math header which supports abs(double) by properly overloading function. Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1128
https://github.com/openbabel/openbabel/issues/1128:886,Availability,Error,Error,886,"Scanning dependencies of target openbabel; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/perception.o; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp: In function ‘bool OpenBabel::TetStereoToWedgeHash(OpenBabel::OBMol&, std::map<OpenBabel::OBBond*, OpenBabel::OBStereo::BondDirection>&, std::map<OpenBabel::OBBond*, long unsigned int>&)’:; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp:2591:66: error: call of overloaded ‘abs(double)’ is ambiguous; /usr/include/stdlib.h:771:12: note: candidates are: int abs(int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:170:3: note: long long int __gnu_cxx::abs(long long int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:139:3: note: long int std::abs(long int); make[2]: *** [src/CMakeFiles/openbabel.dir/stereo/perception.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. Attached patch fixes it by using C++ math header which supports abs(double) by properly overloading function. Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1128
https://github.com/openbabel/openbabel/issues/1128:943,Availability,Error,Error,943,"Scanning dependencies of target openbabel; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/perception.o; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp: In function ‘bool OpenBabel::TetStereoToWedgeHash(OpenBabel::OBMol&, std::map<OpenBabel::OBBond*, OpenBabel::OBStereo::BondDirection>&, std::map<OpenBabel::OBBond*, long unsigned int>&)’:; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp:2591:66: error: call of overloaded ‘abs(double)’ is ambiguous; /usr/include/stdlib.h:771:12: note: candidates are: int abs(int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:170:3: note: long long int __gnu_cxx::abs(long long int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:139:3: note: long int std::abs(long int); make[2]: *** [src/CMakeFiles/openbabel.dir/stereo/perception.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. Attached patch fixes it by using C++ math header which supports abs(double) by properly overloading function. Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1128
https://github.com/openbabel/openbabel/issues/1128:968,Availability,Error,Error,968,"Scanning dependencies of target openbabel; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/perception.o; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp: In function ‘bool OpenBabel::TetStereoToWedgeHash(OpenBabel::OBMol&, std::map<OpenBabel::OBBond*, OpenBabel::OBStereo::BondDirection>&, std::map<OpenBabel::OBBond*, long unsigned int>&)’:; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp:2591:66: error: call of overloaded ‘abs(double)’ is ambiguous; /usr/include/stdlib.h:771:12: note: candidates are: int abs(int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:170:3: note: long long int __gnu_cxx::abs(long long int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:139:3: note: long int std::abs(long int); make[2]: *** [src/CMakeFiles/openbabel.dir/stereo/perception.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. Attached patch fixes it by using C++ math header which supports abs(double) by properly overloading function. Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1128
https://github.com/openbabel/openbabel/issues/1128:986,Deployability,patch,patch,986,"Scanning dependencies of target openbabel; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/perception.o; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp: In function ‘bool OpenBabel::TetStereoToWedgeHash(OpenBabel::OBMol&, std::map<OpenBabel::OBBond*, OpenBabel::OBStereo::BondDirection>&, std::map<OpenBabel::OBBond*, long unsigned int>&)’:; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp:2591:66: error: call of overloaded ‘abs(double)’ is ambiguous; /usr/include/stdlib.h:771:12: note: candidates are: int abs(int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:170:3: note: long long int __gnu_cxx::abs(long long int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:139:3: note: long int std::abs(long int); make[2]: *** [src/CMakeFiles/openbabel.dir/stereo/perception.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. Attached patch fixes it by using C++ math header which supports abs(double) by properly overloading function. Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1128
https://github.com/openbabel/openbabel/issues/1128:9,Integrability,depend,dependencies,9,"Scanning dependencies of target openbabel; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/perception.o; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp: In function ‘bool OpenBabel::TetStereoToWedgeHash(OpenBabel::OBMol&, std::map<OpenBabel::OBBond*, OpenBabel::OBStereo::BondDirection>&, std::map<OpenBabel::OBBond*, long unsigned int>&)’:; /home/reinis/Hack/OpenBabel/openbabel/openbabel/trunk/src/stereo/perception.cpp:2591:66: error: call of overloaded ‘abs(double)’ is ambiguous; /usr/include/stdlib.h:771:12: note: candidates are: int abs(int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:170:3: note: long long int __gnu_cxx::abs(long long int); /usr/lib/gcc/x86_64-pc-linux-gnu/4.5.3/include/g++-v4/cstdlib:139:3: note: long int std::abs(long int); make[2]: *** [src/CMakeFiles/openbabel.dir/stereo/perception.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. Attached patch fixes it by using C++ math header which supports abs(double) by properly overloading function. Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1128
https://github.com/openbabel/openbabel/issues/1129:677,Energy Efficiency,charge,charged,677,"This is Open Babel 2.3.0, under Mac OS X 10.6.8.; Try the commandline:; % obabel -:'C=[N+]C Radical Cation' -osdf --gen2d; Radical Cation; OpenBabel09031121052D. 3 2 0 0 0 0 0 0 0 0999 V2000; 1.7321 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 0.5000 0.0000 N 0 3 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 2 0 0 0 0; 2 3 1 0 0 0 0; M CHG 1 2 1; M END; $$$$; 1 molecule converted; Note that no M RAD property is perceived for the nitrogen, though it should be. Now the commandline:; % obabel ATTACHED_FILE.sdf -o can; c1ccc[n+]c1	Pyridinium; C[N+]=C	Iminium; 2 molecules converted; Here the bug runs the other way -- the SD file has positively charged nitrogens (no radicals defined), for which an implicit hydrogen should be perceived, but the SMILES show the radical form, rather than the expected c1ccc[nH+]c1 and C[NH+]=C. -Dave Nunn. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1129
https://github.com/openbabel/openbabel/issues/1130:293,Performance,perform,performing,293,"Ian Scott, iscott@frontier.com, Windows 7, 64-bit. When converting files from smiles, mol, mol2 ,sdf into pdbqt with the generate 3D coordinates active the molecules do not form correctly. Rings are broken and strange bonds form (as viewed in PyRx or Autodock). This problem can be avoided by performing the 3D conversion as an independent step with a different file output file type (e.g. sdf to sdf) and then converting to pdbqt without selecting the generate 3D coordinates option. Therefore, the problem is most likely in the pdbqt 3D coordinate generator. A example problem smiles string: COc1cc(cc(c1OC)OC)C(C(=O)N1CCCCC1C(=O)OC(CCCc1ccccc1)CCCc1cccnc1)(F)F	. Reported by: ianlscott1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1130
https://github.com/openbabel/openbabel/issues/1130:282,Safety,avoid,avoided,282,"Ian Scott, iscott@frontier.com, Windows 7, 64-bit. When converting files from smiles, mol, mol2 ,sdf into pdbqt with the generate 3D coordinates active the molecules do not form correctly. Rings are broken and strange bonds form (as viewed in PyRx or Autodock). This problem can be avoided by performing the 3D conversion as an independent step with a different file output file type (e.g. sdf to sdf) and then converting to pdbqt without selecting the generate 3D coordinates option. Therefore, the problem is most likely in the pdbqt 3D coordinate generator. A example problem smiles string: COc1cc(cc(c1OC)OC)C(C(=O)N1CCCCC1C(=O)OC(CCCc1ccccc1)CCCc1cccnc1)(F)F	. Reported by: ianlscott1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1130
https://github.com/openbabel/openbabel/issues/1133:43,Availability,fault,fault,43,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:181,Availability,error,error,181,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:471,Availability,error,errorlevel,471,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:1016,Availability,fault,fault,1016,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:532,Security,Audit,Audit,532,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:658,Security,Audit,Audit,658,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:756,Security,Audit,Audit,756,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:854,Security,Audit,Audit,854,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:952,Security,Audit,Audit,952,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:538,Testability,Log,Log,538,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:664,Testability,Log,Log,664,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:762,Testability,Log,Log,762,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:860,Testability,Log,Log,860,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:958,Testability,Log,Log,958,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:671,Usability,Clear,Clear,671,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:693,Usability,Clear,Clear,693,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:769,Usability,Clear,Clear,769,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:791,Usability,Clear,Clear,791,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:867,Usability,Clear,Clear,867,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:889,Usability,Clear,Clear,889,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:965,Usability,Clear,Clear,965,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1133:987,Usability,Clear,Clear,987,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133
https://github.com/openbabel/openbabel/issues/1135:1292,Availability,error,error,1292,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1135:144,Testability,test,test,144,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1135:230,Testability,test,test,230,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1135:244,Testability,test,test,244,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1135:358,Testability,test,test,358,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1135:544,Testability,test,test,544,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1135:847,Testability,test,test,847,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1135:951,Testability,test,tests,951,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135
https://github.com/openbabel/openbabel/issues/1136:311,Usability,clear,clearly,311,"Currently the documentation (from bond.cpp) for bond orders says:. ""The bond order (i.e., 1 = single, 2 = double... 5 = aromatic)"". The numbers ""1"", ""2"", ... ""5"" should be defined as constants:. #define SINGLE_BOND 1; #define DOUBLE_BOND 2; ...; #define AROMATIC_BOND 5. Also the documentation does not specify clearly the connection between order=5 and flag=OB_AROMATIC_BOND... That leads to misuse of the API, e.g.:. Incorrect: mol.AddBond(atomX, atomY, 1, OB_AROMATIC_BOND); // will not mark atoms as aromatic; Correct: mol.AddBond(atomX, atomY, 5); // why 5???. Suggestion:. Define additional function AddAromaticBond() with same arguments as AddBond() and eliminate order=5. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1136
https://github.com/openbabel/openbabel/issues/1137:78,Availability,fault,fault,78,"When trying to convert a molecule from inchi to inchikey I get a segmentation fault. For example:. Python 2.7.2+ (default, Oct 4 2011, 20:06:09) ; [GCC 4.6.1] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> conv = openbabel.OBConversion(); >>> conv.SetInAndOutFormats(""inchi"", ""inchikey""); True; >>> mol = openbabel.OBMol(); >>> conv.ReadString(mol, ""InChI=1S/C22H29FO5/c1-12-8-16-15-5-4-13-9-14(25)6-7-19(13,2)21(15,23)17(26)10-20(16,3)22(12,28)18(27)11-24/h6-7,9,12,15-17,24,26,28H,4-5,8,10-11H2,1-3H3/t12-,15+,16+,17+,19+,20+,21+,22+/m1/s1""); True; >>> conv.WriteString(mol); Violació de segment. (Violació de segment = Segmentation fault). The same happens from pybel and the same also happens when using the old conv.SetInAndOutFormats(""inchi"", ""inchi"") and conv.SetOptions(""K"", conv.OUTOPTIONS) approach. I'm running ubuntu 11.10 amd64 and OpenBabel 2.3.1 built from source. Adrià Cereto-Massagué <adrian.cereto@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1137
https://github.com/openbabel/openbabel/issues/1137:697,Availability,fault,fault,697,"When trying to convert a molecule from inchi to inchikey I get a segmentation fault. For example:. Python 2.7.2+ (default, Oct 4 2011, 20:06:09) ; [GCC 4.6.1] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> conv = openbabel.OBConversion(); >>> conv.SetInAndOutFormats(""inchi"", ""inchikey""); True; >>> mol = openbabel.OBMol(); >>> conv.ReadString(mol, ""InChI=1S/C22H29FO5/c1-12-8-16-15-5-4-13-9-14(25)6-7-19(13,2)21(15,23)17(26)10-20(16,3)22(12,28)18(27)11-24/h6-7,9,12,15-17,24,26,28H,4-5,8,10-11H2,1-3H3/t12-,15+,16+,17+,19+,20+,21+,22+/m1/s1""); True; >>> conv.WriteString(mol); Violació de segment. (Violació de segment = Segmentation fault). The same happens from pybel and the same also happens when using the old conv.SetInAndOutFormats(""inchi"", ""inchi"") and conv.SetOptions(""K"", conv.OUTOPTIONS) approach. I'm running ubuntu 11.10 amd64 and OpenBabel 2.3.1 built from source. Adrià Cereto-Massagué <adrian.cereto@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1137
https://github.com/openbabel/openbabel/issues/1139:148,Availability,echo,echo,148,"Converting the following inchi string does not work: InChI=1/C12H7BrN2OS/c13-9-6-15-12(16)8-5-10(17-11(8)9)7-1-3-14-4-2-7/h1-6H,(H,15,16)/f/h15H. $ echo ""InChI=1/C12H7BrN2OS/c13-9-6-15-12(16)8-5-10(17-11(8)9)7-1-3-14-4-2-7/h1-6H,(H,15,16)/f/h15H"" | obabel -iinchi -oinchikey; �Պ��; 1 molecule converted. As can be seen, the result of the conversion is not an inchikey. I'm using OpenBabel 2.3.1 with patched inchikey format from r4646 on Ubuntu 11.10. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1139
https://github.com/openbabel/openbabel/issues/1139:400,Deployability,patch,patched,400,"Converting the following inchi string does not work: InChI=1/C12H7BrN2OS/c13-9-6-15-12(16)8-5-10(17-11(8)9)7-1-3-14-4-2-7/h1-6H,(H,15,16)/f/h15H. $ echo ""InChI=1/C12H7BrN2OS/c13-9-6-15-12(16)8-5-10(17-11(8)9)7-1-3-14-4-2-7/h1-6H,(H,15,16)/f/h15H"" | obabel -iinchi -oinchikey; �Պ��; 1 molecule converted. As can be seen, the result of the conversion is not an inchikey. I'm using OpenBabel 2.3.1 with patched inchikey format from r4646 on Ubuntu 11.10. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1139
https://github.com/openbabel/openbabel/issues/1140:1205,Availability,echo,echo,1205,"I was reviewing the Open Babel SMILES code and noticed that if atom1 and atom2 are joined, and atom1 and atom2 are aromatic, then the bond order is reset to _order=5. This is done in different ways in smilesformat.cpp. On line 1055:; if (_order != 2) _order=5; //Potential aromatic bond -- but flag explicit double bonds; On line 1958:; _order=5; //Potential aromatic bond. I haven't yet figured out if they are supposed to be the same or different, but I strongly suspect that it's supposed to be the same check. It is possible, but rare, to have an explicit '-' bond marked to indicate that a bond between two aromatics is supposed to be a single/non-aromatic bond. For examples:. c12-c3c(cccc3)[IH]c1cccc2; Clc1cc-2c3c(cccc3n1)-c4c2cccc4; [Ni]123n4c5c6ccccc6c4nc-7[n+]2c(-c8ccccc78)nc9n1c(c1ccccc91)nc-1[n+]3c(-c2ccccc12)n5; O=c1nc-2cccccc2s1; c-12n(c3ccccc3n2)Cc4c1cc5ccccc5c4. These are not handled correctly in Open Babel. In RDKit:. >>> from rdkit import Chem; >>> mol = Chem.MolFromSmiles(""c12-c3c(cccc3)[IH]c1cccc2""); >>> Chem.MolToSmiles(mol); 'c1ccc2c(c1)[IH]c1ccccc1-2'. See the ""-2"" at the end? That's the explicit single bond. While Open Babel sees the explicit '-' as being an aromatic:. % echo 'c12-c3c(cccc3)[IH]c1cccc2 blah' | babel -ismi -osmi; c12c3c(cccc3)[IH]c1cccc2	blah; ; As an extreme example, here's a triple-bond joining two; aromatic rings in RDKit:. >>> mol = Chem.MolFromSmiles(""c1ccc[n-2]1#[n-2]1cccc1""); >>> Chem.MolToSmiles(mol); 'c1cc[n-2](#[n-2]2cccc2)c1'. Open Babel totally ignores the triple bond and says the; bond between the two aromatic rings is a single bond. % echo ""c1ccccc1#c1ccccc1 blah"" | babel -ismi -osmi; c1ccccc1c1ccccc1	blah. BTW, I'm using the Open Babel build from today's version control. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1140
https://github.com/openbabel/openbabel/issues/1140:1606,Availability,echo,echo,1606,"I was reviewing the Open Babel SMILES code and noticed that if atom1 and atom2 are joined, and atom1 and atom2 are aromatic, then the bond order is reset to _order=5. This is done in different ways in smilesformat.cpp. On line 1055:; if (_order != 2) _order=5; //Potential aromatic bond -- but flag explicit double bonds; On line 1958:; _order=5; //Potential aromatic bond. I haven't yet figured out if they are supposed to be the same or different, but I strongly suspect that it's supposed to be the same check. It is possible, but rare, to have an explicit '-' bond marked to indicate that a bond between two aromatics is supposed to be a single/non-aromatic bond. For examples:. c12-c3c(cccc3)[IH]c1cccc2; Clc1cc-2c3c(cccc3n1)-c4c2cccc4; [Ni]123n4c5c6ccccc6c4nc-7[n+]2c(-c8ccccc78)nc9n1c(c1ccccc91)nc-1[n+]3c(-c2ccccc12)n5; O=c1nc-2cccccc2s1; c-12n(c3ccccc3n2)Cc4c1cc5ccccc5c4. These are not handled correctly in Open Babel. In RDKit:. >>> from rdkit import Chem; >>> mol = Chem.MolFromSmiles(""c12-c3c(cccc3)[IH]c1cccc2""); >>> Chem.MolToSmiles(mol); 'c1ccc2c(c1)[IH]c1ccccc1-2'. See the ""-2"" at the end? That's the explicit single bond. While Open Babel sees the explicit '-' as being an aromatic:. % echo 'c12-c3c(cccc3)[IH]c1cccc2 blah' | babel -ismi -osmi; c12c3c(cccc3)[IH]c1cccc2	blah; ; As an extreme example, here's a triple-bond joining two; aromatic rings in RDKit:. >>> mol = Chem.MolFromSmiles(""c1ccc[n-2]1#[n-2]1cccc1""); >>> Chem.MolToSmiles(mol); 'c1cc[n-2](#[n-2]2cccc2)c1'. Open Babel totally ignores the triple bond and says the; bond between the two aromatic rings is a single bond. % echo ""c1ccccc1#c1ccccc1 blah"" | babel -ismi -osmi; c1ccccc1c1ccccc1	blah. BTW, I'm using the Open Babel build from today's version control. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1140
https://github.com/openbabel/openbabel/issues/1142:221,Availability,error,error,221,"The current parser checks for the ""@S"" of the ""@SP"" chiral class and assumes the next character will be a ""P"". This means OpenBabel allows the invalid SMILES of ""F[Po@S92](I)(Br)Cl"". This may also trigger a possible read error/segfault on a string like ""[C@S"" because it will skip the NUL terminator and try to process the succeeding characters. Worst case is if that happens to be in unallocated memory, which is unlikely. I regard this as a low-priority task. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1142
https://github.com/openbabel/openbabel/issues/1143:219,Energy Efficiency,allocate,allocates,219,"Consider this lovely, innocent looking SMILES:. C[C@+@-@+@-@H]1CCCCO1. Open Babel kindly processes it to yield the canonical SMILES of ""C[C@H]1CCCCO1"". Unfortunately, it also leaked around 350 bytes of memory. Each ""@"" allocates . _tetrahedralMap[atom] = new OBTetrahedralStereo::Config;. without checking to see if that was already allocated. Once this pointer is re-assigned, there's no way to free the previously allocated memory. This means that if someone has a public facing OpenBabel server, then I can slowly make it leak memory. Mwhahahahah! ... Or something like that. :). Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1143
https://github.com/openbabel/openbabel/issues/1143:333,Energy Efficiency,allocate,allocated,333,"Consider this lovely, innocent looking SMILES:. C[C@+@-@+@-@H]1CCCCO1. Open Babel kindly processes it to yield the canonical SMILES of ""C[C@H]1CCCCO1"". Unfortunately, it also leaked around 350 bytes of memory. Each ""@"" allocates . _tetrahedralMap[atom] = new OBTetrahedralStereo::Config;. without checking to see if that was already allocated. Once this pointer is re-assigned, there's no way to free the previously allocated memory. This means that if someone has a public facing OpenBabel server, then I can slowly make it leak memory. Mwhahahahah! ... Or something like that. :). Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1143
https://github.com/openbabel/openbabel/issues/1143:416,Energy Efficiency,allocate,allocated,416,"Consider this lovely, innocent looking SMILES:. C[C@+@-@+@-@H]1CCCCO1. Open Babel kindly processes it to yield the canonical SMILES of ""C[C@H]1CCCCO1"". Unfortunately, it also leaked around 350 bytes of memory. Each ""@"" allocates . _tetrahedralMap[atom] = new OBTetrahedralStereo::Config;. without checking to see if that was already allocated. Once this pointer is re-assigned, there's no way to free the previously allocated memory. This means that if someone has a public facing OpenBabel server, then I can slowly make it leak memory. Mwhahahahah! ... Or something like that. :). Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1143
https://github.com/openbabel/openbabel/issues/1143:280,Modifiability,Config,Config,280,"Consider this lovely, innocent looking SMILES:. C[C@+@-@+@-@H]1CCCCO1. Open Babel kindly processes it to yield the canonical SMILES of ""C[C@H]1CCCCO1"". Unfortunately, it also leaked around 350 bytes of memory. Each ""@"" allocates . _tetrahedralMap[atom] = new OBTetrahedralStereo::Config;. without checking to see if that was already allocated. Once this pointer is re-assigned, there's no way to free the previously allocated memory. This means that if someone has a public facing OpenBabel server, then I can slowly make it leak memory. Mwhahahahah! ... Or something like that. :). Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1143
https://github.com/openbabel/openbabel/issues/1144:33,Deployability,install,installing,33,"Dear developers,. I had problems installing OB 2.3.1 with the option -DBUILD_GUI=ON following the instructions on. http://openbabel.org/docs/2.3.1/Installation/install.html#compiling-open-babel. There, it is stated that 'wx-common and wx2.8-headers on Ubuntu"" are required. On Ubuntu 10.04, it took me quite a while that I also need to install libwxbase2.8-dev in order to achieve `-- Found wxWidgets: TRUE`. By adding this package to the documentation, you possibly could save the time of some people :). Thanks,. Jan-Philip Gehrcke. Reported by: gurke111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1144
https://github.com/openbabel/openbabel/issues/1144:147,Deployability,Install,Installation,147,"Dear developers,. I had problems installing OB 2.3.1 with the option -DBUILD_GUI=ON following the instructions on. http://openbabel.org/docs/2.3.1/Installation/install.html#compiling-open-babel. There, it is stated that 'wx-common and wx2.8-headers on Ubuntu"" are required. On Ubuntu 10.04, it took me quite a while that I also need to install libwxbase2.8-dev in order to achieve `-- Found wxWidgets: TRUE`. By adding this package to the documentation, you possibly could save the time of some people :). Thanks,. Jan-Philip Gehrcke. Reported by: gurke111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1144
https://github.com/openbabel/openbabel/issues/1144:160,Deployability,install,install,160,"Dear developers,. I had problems installing OB 2.3.1 with the option -DBUILD_GUI=ON following the instructions on. http://openbabel.org/docs/2.3.1/Installation/install.html#compiling-open-babel. There, it is stated that 'wx-common and wx2.8-headers on Ubuntu"" are required. On Ubuntu 10.04, it took me quite a while that I also need to install libwxbase2.8-dev in order to achieve `-- Found wxWidgets: TRUE`. By adding this package to the documentation, you possibly could save the time of some people :). Thanks,. Jan-Philip Gehrcke. Reported by: gurke111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1144
https://github.com/openbabel/openbabel/issues/1144:336,Deployability,install,install,336,"Dear developers,. I had problems installing OB 2.3.1 with the option -DBUILD_GUI=ON following the instructions on. http://openbabel.org/docs/2.3.1/Installation/install.html#compiling-open-babel. There, it is stated that 'wx-common and wx2.8-headers on Ubuntu"" are required. On Ubuntu 10.04, it took me quite a while that I also need to install libwxbase2.8-dev in order to achieve `-- Found wxWidgets: TRUE`. By adding this package to the documentation, you possibly could save the time of some people :). Thanks,. Jan-Philip Gehrcke. Reported by: gurke111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1144
https://github.com/openbabel/openbabel/issues/1145:200,Deployability,install,install,200,"As. https://sourceforge.net/tracker/?func=detail&aid=3429323&group_id=40728&atid=428740. has already been closed (very quick, thanks!), I've to add that for actual compiling, it was also necessary to install libwxgtk2.8-dev. Thanks,. Jan-Philip Gehrcke. Reported by: gurke111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1145
https://github.com/openbabel/openbabel/issues/1146:71,Availability,fault,fault,71,"obabel single.sdf -ofpt -xs -xf FP4 --append ""chembl_id""; Segmentation fault (core dumped). SDF file is an extract from chembl_11.sdf; Exit code seems to be 35584 or 30070 not too sure. Reported by: jantaubert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1146
https://github.com/openbabel/openbabel/issues/1147:121,Availability,Error,Error,121,"Looks like bug #1905826 (https://sourceforge.net/tracker/?func=detail&aid=1905826&group_id=40728&atid=428740) is back. \""Error: operand out of range\"" assembler error occurs while compiling openbabel-2.3.1 on ppc64 running Fedora 16:; ...; g++ -c -I../../include -I/builddir/build/BUILD/openbabel-2.3.1/include -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mminimal-toc -DVERSION=\\\""1.5.0\\\"" -DXS_VERSION=\\\""1.5.0\\\"" -fPIC \""-I/usr/lib64/perl5/CORE\"" openbabel-perl.cpp; In file included from /builddir/build/BUILD/openbabel-2.3.1/scripts/python/openbabel-python.cpp:3353:0:; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryAtom::Matches(const OpenBabel::OBAtom*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:101:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryBond::Matches(const OpenBabel::OBBond*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:179:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; openbabel-perl.cpp: In function \'void boot_Chemistry__OpenBabel(PerlInterpreter*, CV*)\':; openbabel-perl.cpp:44614:3: warning: unused variable \'items\' [-Wunused-variable]; {standard input}: Assembler messages:; {standard input}:1233442: Error: operand out of range (0x0000000000008000 is not between 0xffffffffffff8000 and 0x0000000000007ffc). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147
https://github.com/openbabel/openbabel/issues/1147:161,Availability,error,error,161,"Looks like bug #1905826 (https://sourceforge.net/tracker/?func=detail&aid=1905826&group_id=40728&atid=428740) is back. \""Error: operand out of range\"" assembler error occurs while compiling openbabel-2.3.1 on ppc64 running Fedora 16:; ...; g++ -c -I../../include -I/builddir/build/BUILD/openbabel-2.3.1/include -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mminimal-toc -DVERSION=\\\""1.5.0\\\"" -DXS_VERSION=\\\""1.5.0\\\"" -fPIC \""-I/usr/lib64/perl5/CORE\"" openbabel-perl.cpp; In file included from /builddir/build/BUILD/openbabel-2.3.1/scripts/python/openbabel-python.cpp:3353:0:; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryAtom::Matches(const OpenBabel::OBAtom*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:101:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryBond::Matches(const OpenBabel::OBBond*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:179:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; openbabel-perl.cpp: In function \'void boot_Chemistry__OpenBabel(PerlInterpreter*, CV*)\':; openbabel-perl.cpp:44614:3: warning: unused variable \'items\' [-Wunused-variable]; {standard input}: Assembler messages:; {standard input}:1233442: Error: operand out of range (0x0000000000008000 is not between 0xffffffffffff8000 and 0x0000000000007ffc). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147
https://github.com/openbabel/openbabel/issues/1147:1751,Availability,Error,Error,1751,"Looks like bug #1905826 (https://sourceforge.net/tracker/?func=detail&aid=1905826&group_id=40728&atid=428740) is back. \""Error: operand out of range\"" assembler error occurs while compiling openbabel-2.3.1 on ppc64 running Fedora 16:; ...; g++ -c -I../../include -I/builddir/build/BUILD/openbabel-2.3.1/include -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mminimal-toc -DVERSION=\\\""1.5.0\\\"" -DXS_VERSION=\\\""1.5.0\\\"" -fPIC \""-I/usr/lib64/perl5/CORE\"" openbabel-perl.cpp; In file included from /builddir/build/BUILD/openbabel-2.3.1/scripts/python/openbabel-python.cpp:3353:0:; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryAtom::Matches(const OpenBabel::OBAtom*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:101:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryBond::Matches(const OpenBabel::OBBond*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:179:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; openbabel-perl.cpp: In function \'void boot_Chemistry__OpenBabel(PerlInterpreter*, CV*)\':; openbabel-perl.cpp:44614:3: warning: unused variable \'items\' [-Wunused-variable]; {standard input}: Assembler messages:; {standard input}:1233442: Error: operand out of range (0x0000000000008000 is not between 0xffffffffffff8000 and 0x0000000000007ffc). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147
https://github.com/openbabel/openbabel/issues/1147:1714,Integrability,message,messages,1714,"Looks like bug #1905826 (https://sourceforge.net/tracker/?func=detail&aid=1905826&group_id=40728&atid=428740) is back. \""Error: operand out of range\"" assembler error occurs while compiling openbabel-2.3.1 on ppc64 running Fedora 16:; ...; g++ -c -I../../include -I/builddir/build/BUILD/openbabel-2.3.1/include -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mminimal-toc -DVERSION=\\\""1.5.0\\\"" -DXS_VERSION=\\\""1.5.0\\\"" -fPIC \""-I/usr/lib64/perl5/CORE\"" openbabel-perl.cpp; In file included from /builddir/build/BUILD/openbabel-2.3.1/scripts/python/openbabel-python.cpp:3353:0:; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryAtom::Matches(const OpenBabel::OBAtom*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:101:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryBond::Matches(const OpenBabel::OBBond*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:179:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; openbabel-perl.cpp: In function \'void boot_Chemistry__OpenBabel(PerlInterpreter*, CV*)\':; openbabel-perl.cpp:44614:3: warning: unused variable \'items\' [-Wunused-variable]; {standard input}: Assembler messages:; {standard input}:1233442: Error: operand out of range (0x0000000000008000 is not between 0xffffffffffff8000 and 0x0000000000007ffc). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147
https://github.com/openbabel/openbabel/issues/1147:1646,Modifiability,variab,variable,1646,"Looks like bug #1905826 (https://sourceforge.net/tracker/?func=detail&aid=1905826&group_id=40728&atid=428740) is back. \""Error: operand out of range\"" assembler error occurs while compiling openbabel-2.3.1 on ppc64 running Fedora 16:; ...; g++ -c -I../../include -I/builddir/build/BUILD/openbabel-2.3.1/include -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mminimal-toc -DVERSION=\\\""1.5.0\\\"" -DXS_VERSION=\\\""1.5.0\\\"" -fPIC \""-I/usr/lib64/perl5/CORE\"" openbabel-perl.cpp; In file included from /builddir/build/BUILD/openbabel-2.3.1/scripts/python/openbabel-python.cpp:3353:0:; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryAtom::Matches(const OpenBabel::OBAtom*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:101:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryBond::Matches(const OpenBabel::OBBond*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:179:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; openbabel-perl.cpp: In function \'void boot_Chemistry__OpenBabel(PerlInterpreter*, CV*)\':; openbabel-perl.cpp:44614:3: warning: unused variable \'items\' [-Wunused-variable]; {standard input}: Assembler messages:; {standard input}:1233442: Error: operand out of range (0x0000000000008000 is not between 0xffffffffffff8000 and 0x0000000000007ffc). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147
https://github.com/openbabel/openbabel/issues/1147:1675,Modifiability,variab,variable,1675,"Looks like bug #1905826 (https://sourceforge.net/tracker/?func=detail&aid=1905826&group_id=40728&atid=428740) is back. \""Error: operand out of range\"" assembler error occurs while compiling openbabel-2.3.1 on ppc64 running Fedora 16:; ...; g++ -c -I../../include -I/builddir/build/BUILD/openbabel-2.3.1/include -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mminimal-toc -DVERSION=\\\""1.5.0\\\"" -DXS_VERSION=\\\""1.5.0\\\"" -fPIC \""-I/usr/lib64/perl5/CORE\"" openbabel-perl.cpp; In file included from /builddir/build/BUILD/openbabel-2.3.1/scripts/python/openbabel-python.cpp:3353:0:; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryAtom::Matches(const OpenBabel::OBAtom*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:101:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryBond::Matches(const OpenBabel::OBBond*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:179:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; openbabel-perl.cpp: In function \'void boot_Chemistry__OpenBabel(PerlInterpreter*, CV*)\':; openbabel-perl.cpp:44614:3: warning: unused variable \'items\' [-Wunused-variable]; {standard input}: Assembler messages:; {standard input}:1233442: Error: operand out of range (0x0000000000008000 is not between 0xffffffffffff8000 and 0x0000000000007ffc). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147
https://github.com/openbabel/openbabel/issues/1148:635,Availability,Error,Error,635,"OS: Windows 7, 64 bit, OB 2.3.1. a) Minor, and affect the help file and the extraction of first file. The ChEMBLdb current version (11) is > 2 GB, and the extraction method for Windows in not working anymore (a shortcut might be using the type command, output to file and break immediately, then the output file can be opened by even notepad). b) Major, affect the usage. ; Testing the similarity search, and followed the suggested way in help, I have encountered the following problems:. b.1.) using command babel:. L:\pgm\openbabel>babel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; ==============================; *** Open Babel Error in OpenBabel::VF2Mapper::MapGeneric; time limit exceeded... output file length=0, and babel seems to hang up working, prompt has not been back. b.2) It is recommended to use obabel instead of babel.; typing obabel (recommended) instead of babel I got the following message . L:\pgm\openbabel>obabel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; Missing or unknown output file or format spec or possibly a misplaced option.; Options, other than -i -o -O -m, must come after the input files. Open Babel 2.3.1 -- Oct 9 2011 -- 17:57:01; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]. Try -H option for more information. Reported by: jlaszlo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1148
https://github.com/openbabel/openbabel/issues/1148:906,Integrability,message,message,906,"OS: Windows 7, 64 bit, OB 2.3.1. a) Minor, and affect the help file and the extraction of first file. The ChEMBLdb current version (11) is > 2 GB, and the extraction method for Windows in not working anymore (a shortcut might be using the type command, output to file and break immediately, then the output file can be opened by even notepad). b) Major, affect the usage. ; Testing the similarity search, and followed the suggested way in help, I have encountered the following problems:. b.1.) using command babel:. L:\pgm\openbabel>babel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; ==============================; *** Open Babel Error in OpenBabel::VF2Mapper::MapGeneric; time limit exceeded... output file length=0, and babel seems to hang up working, prompt has not been back. b.2) It is recommended to use obabel instead of babel.; typing obabel (recommended) instead of babel I got the following message . L:\pgm\openbabel>obabel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; Missing or unknown output file or format spec or possibly a misplaced option.; Options, other than -i -o -O -m, must come after the input files. Open Babel 2.3.1 -- Oct 9 2011 -- 17:57:01; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]. Try -H option for more information. Reported by: jlaszlo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1148
https://github.com/openbabel/openbabel/issues/1148:374,Testability,Test,Testing,374,"OS: Windows 7, 64 bit, OB 2.3.1. a) Minor, and affect the help file and the extraction of first file. The ChEMBLdb current version (11) is > 2 GB, and the extraction method for Windows in not working anymore (a shortcut might be using the type command, output to file and break immediately, then the output file can be opened by even notepad). b) Major, affect the usage. ; Testing the similarity search, and followed the suggested way in help, I have encountered the following problems:. b.1.) using command babel:. L:\pgm\openbabel>babel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; ==============================; *** Open Babel Error in OpenBabel::VF2Mapper::MapGeneric; time limit exceeded... output file length=0, and babel seems to hang up working, prompt has not been back. b.2) It is recommended to use obabel instead of babel.; typing obabel (recommended) instead of babel I got the following message . L:\pgm\openbabel>obabel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; Missing or unknown output file or format spec or possibly a misplaced option.; Options, other than -i -o -O -m, must come after the input files. Open Babel 2.3.1 -- Oct 9 2011 -- 17:57:01; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]. Try -H option for more information. Reported by: jlaszlo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1148
https://github.com/openbabel/openbabel/issues/1150:1217,Availability,error,error,1217,"H])(CO)C=O or N[C@@]([H])(CO)C(=O) , you will notice that one of the carboxylate's oxygens is missing, which corresponds to a SERINE residue bound to another residue by its carboxylate carbon.; On the contrary, when the SERINE is the Cterminal residue of the peptide; i.e. its Smiles string is ...N[C@@]([H])(CO)C(=O)O , then OpenBabel will not recongnize the SERINE residue and write it in the PDB file as an unknown residue (""UNK""), and its atoms will be considered as ""HETATM"", which prevents them from being typed (alpha carbon: CA, etc...). Which gives the following for the SERINE residue. HETATM 60 N UNK A 9 4.954 -4.052 8.717 1.00 0.00 N ; HETATM 61 C UNK A 9 4.694 -4.357 10.134 1.00 0.00 C ; HETATM 62 C UNK A 9 3.665 -3.415 10.762 1.00 0.00 C ; HETATM 63 O UNK A 9 4.268 -2.161 11.068 1.00 0.00 O ; HETATM 64 C UNK A 9 4.178 -5.783 10.233 1.00 0.00 C ; HETATM 65 O UNK A 9 3.663 -6.429 9.325 1.00 0.00 O ; HETATM 66 O UNK A 9 4.330 -6.325 11.454 1.00 0.00 O . IMPORTANT: ; The error is specific to the SERINE residue. Any other residue is correctly recognized at any position in the peptide. I enclosed files which provide a full example:; ""0019_QGNVTSIHS_orig.smi"" is a file containing a correct smiles string (the last SERINE has a complete carboxlate function); ""0019_QGNVTSIHS_orig.pdb"" is the file produced by openBabel from the conversion of the previous one using the options: ""-d"" and ""--gen3d""; look at the SERINE at the end of the peptide, you will see the above lines. ""0019_QGNVTSIHS.smi"" is a file where I manually tweaked the Smiles string, taking off one of the oxygens of the carboxylate group of the last SERINE. This is NOT the correct Smiles string. An incomplete carboxylate function is biologically incoherent.; ""0019_QGNVTSIHS.pdb"" is the file produced by OpenBabel from the conversion of the previous one, using the same options as above. Now it works... but the peptide will look - and be - incorrect in any visualization tool, because of the missing oxygen of the",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150
https://github.com/openbabel/openbabel/issues/1150:2274,Deployability,release,release,2274,"HETATM"", which prevents them from being typed (alpha carbon: CA, etc...). Which gives the following for the SERINE residue. HETATM 60 N UNK A 9 4.954 -4.052 8.717 1.00 0.00 N ; HETATM 61 C UNK A 9 4.694 -4.357 10.134 1.00 0.00 C ; HETATM 62 C UNK A 9 3.665 -3.415 10.762 1.00 0.00 C ; HETATM 63 O UNK A 9 4.268 -2.161 11.068 1.00 0.00 O ; HETATM 64 C UNK A 9 4.178 -5.783 10.233 1.00 0.00 C ; HETATM 65 O UNK A 9 3.663 -6.429 9.325 1.00 0.00 O ; HETATM 66 O UNK A 9 4.330 -6.325 11.454 1.00 0.00 O . IMPORTANT: ; The error is specific to the SERINE residue. Any other residue is correctly recognized at any position in the peptide. I enclosed files which provide a full example:; ""0019_QGNVTSIHS_orig.smi"" is a file containing a correct smiles string (the last SERINE has a complete carboxlate function); ""0019_QGNVTSIHS_orig.pdb"" is the file produced by openBabel from the conversion of the previous one using the options: ""-d"" and ""--gen3d""; look at the SERINE at the end of the peptide, you will see the above lines. ""0019_QGNVTSIHS.smi"" is a file where I manually tweaked the Smiles string, taking off one of the oxygens of the carboxylate group of the last SERINE. This is NOT the correct Smiles string. An incomplete carboxylate function is biologically incoherent.; ""0019_QGNVTSIHS.pdb"" is the file produced by OpenBabel from the conversion of the previous one, using the same options as above. Now it works... but the peptide will look - and be - incorrect in any visualization tool, because of the missing oxygen of the carboxylate function. I do need to get a new release, where this bug is fixed, as soon as possible to go on with my PhD project. I have a script looking for the alpha carbon of the different residues, and as long as this bug is not fixed (which should be really fast as soon as someone will get to consider it), I can't go on with my project. Thank you for all the work you put in this nice piece of software, otherwise perfect to me!; All the best. Reported by: kevinrue",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150
https://github.com/openbabel/openbabel/issues/1151:860,Integrability,message,messages,860,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:882,Integrability,message,messages,882,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:872,Security,audit,audit,872,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:29,Testability,test,test,29,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:38,Testability,test,test,38,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:301,Testability,test,test,301,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:812,Testability,test,test,812,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:821,Testability,test,test,821,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:878,Testability,log,log,878,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:899,Testability,test,test,899,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1151:917,Testability,test,test,917,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151
https://github.com/openbabel/openbabel/issues/1154:17,Testability,test,tests,17,"I was doing some tests with a file for a software I'm developing, and when I did certain unrelated changes, the HBA calculation went crazy. I haven't been able to reproduce the normal behaviour, only the buggy one. I'm using OpenBabel 2.3.1 on Debian. This happens using both pybel from OpenBabel and from cinfony 1.0. So i've written a little script which shows what happens:. from cinfony import pybel # or just 'import pybel', the result is the same for me. testfile = 'test/test_ligands.sdf.gz'. print [mol.calcdesc(['HBA1'])['HBA1'] for mol in pybel.readfile('sdf', testfile)]; print [mol.calcdesc(['HBA2'])['HBA2'] for mol in pybel.readfile('sdf', testfile)]. When I run it it prints the following:; [35.0, 43.0, 37.0, 46.0, 37.0, 37.0]; [6.0, 6.0, 6.0, 7.0, 6.0, 6.0]. There can be seen that the HBA1 values are extremely high in comparison. The most annoying part is that I was getting sensible values from HBA1 calculation in my program, but I'm not able to reproduce them (they were values almost identical to the ones of HBA2). Thank you,. Adrià <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1154
https://github.com/openbabel/openbabel/issues/1154:461,Testability,test,testfile,461,"I was doing some tests with a file for a software I'm developing, and when I did certain unrelated changes, the HBA calculation went crazy. I haven't been able to reproduce the normal behaviour, only the buggy one. I'm using OpenBabel 2.3.1 on Debian. This happens using both pybel from OpenBabel and from cinfony 1.0. So i've written a little script which shows what happens:. from cinfony import pybel # or just 'import pybel', the result is the same for me. testfile = 'test/test_ligands.sdf.gz'. print [mol.calcdesc(['HBA1'])['HBA1'] for mol in pybel.readfile('sdf', testfile)]; print [mol.calcdesc(['HBA2'])['HBA2'] for mol in pybel.readfile('sdf', testfile)]. When I run it it prints the following:; [35.0, 43.0, 37.0, 46.0, 37.0, 37.0]; [6.0, 6.0, 6.0, 7.0, 6.0, 6.0]. There can be seen that the HBA1 values are extremely high in comparison. The most annoying part is that I was getting sensible values from HBA1 calculation in my program, but I'm not able to reproduce them (they were values almost identical to the ones of HBA2). Thank you,. Adrià <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1154
https://github.com/openbabel/openbabel/issues/1154:473,Testability,test,test,473,"I was doing some tests with a file for a software I'm developing, and when I did certain unrelated changes, the HBA calculation went crazy. I haven't been able to reproduce the normal behaviour, only the buggy one. I'm using OpenBabel 2.3.1 on Debian. This happens using both pybel from OpenBabel and from cinfony 1.0. So i've written a little script which shows what happens:. from cinfony import pybel # or just 'import pybel', the result is the same for me. testfile = 'test/test_ligands.sdf.gz'. print [mol.calcdesc(['HBA1'])['HBA1'] for mol in pybel.readfile('sdf', testfile)]; print [mol.calcdesc(['HBA2'])['HBA2'] for mol in pybel.readfile('sdf', testfile)]. When I run it it prints the following:; [35.0, 43.0, 37.0, 46.0, 37.0, 37.0]; [6.0, 6.0, 6.0, 7.0, 6.0, 6.0]. There can be seen that the HBA1 values are extremely high in comparison. The most annoying part is that I was getting sensible values from HBA1 calculation in my program, but I'm not able to reproduce them (they were values almost identical to the ones of HBA2). Thank you,. Adrià <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1154
https://github.com/openbabel/openbabel/issues/1154:571,Testability,test,testfile,571,"I was doing some tests with a file for a software I'm developing, and when I did certain unrelated changes, the HBA calculation went crazy. I haven't been able to reproduce the normal behaviour, only the buggy one. I'm using OpenBabel 2.3.1 on Debian. This happens using both pybel from OpenBabel and from cinfony 1.0. So i've written a little script which shows what happens:. from cinfony import pybel # or just 'import pybel', the result is the same for me. testfile = 'test/test_ligands.sdf.gz'. print [mol.calcdesc(['HBA1'])['HBA1'] for mol in pybel.readfile('sdf', testfile)]; print [mol.calcdesc(['HBA2'])['HBA2'] for mol in pybel.readfile('sdf', testfile)]. When I run it it prints the following:; [35.0, 43.0, 37.0, 46.0, 37.0, 37.0]; [6.0, 6.0, 6.0, 7.0, 6.0, 6.0]. There can be seen that the HBA1 values are extremely high in comparison. The most annoying part is that I was getting sensible values from HBA1 calculation in my program, but I'm not able to reproduce them (they were values almost identical to the ones of HBA2). Thank you,. Adrià <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1154
https://github.com/openbabel/openbabel/issues/1154:654,Testability,test,testfile,654,"I was doing some tests with a file for a software I'm developing, and when I did certain unrelated changes, the HBA calculation went crazy. I haven't been able to reproduce the normal behaviour, only the buggy one. I'm using OpenBabel 2.3.1 on Debian. This happens using both pybel from OpenBabel and from cinfony 1.0. So i've written a little script which shows what happens:. from cinfony import pybel # or just 'import pybel', the result is the same for me. testfile = 'test/test_ligands.sdf.gz'. print [mol.calcdesc(['HBA1'])['HBA1'] for mol in pybel.readfile('sdf', testfile)]; print [mol.calcdesc(['HBA2'])['HBA2'] for mol in pybel.readfile('sdf', testfile)]. When I run it it prints the following:; [35.0, 43.0, 37.0, 46.0, 37.0, 37.0]; [6.0, 6.0, 6.0, 7.0, 6.0, 6.0]. There can be seen that the HBA1 values are extremely high in comparison. The most annoying part is that I was getting sensible values from HBA1 calculation in my program, but I'm not able to reproduce them (they were values almost identical to the ones of HBA2). Thank you,. Adrià <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1154
https://github.com/openbabel/openbabel/issues/1155:184,Security,hash,hash,184,"From marcolippi83@gmail.com nopenbabel-discuss:. Hi,. I am encountering a problem when asking OpenBabel to generate an InChI from; a molecule which has an alias bonded through a wedge/hash bond... It seems; to be missing the wedge/bond after expanding the alias... Here is an example of what I mean:. OpenBabel01241222313D. 20 21 0 0 0 0 0 0 0 0999 V2000; -3.2672 1.9552 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -4.4572 0.9403 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.9562 -4.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.7871 -5.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.1816 -0.9104 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -4.4572 -1.0299 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.0564 0.9403 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0125 -1.9254 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.5553 -2.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.7662 -1.0597 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.9562 -2.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.1566 -1.3582 0.0000 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.4342 3.6269 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; -1.0334 1.6269 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 2.5783 0.6418 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 5.0000 -1.3582 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; -3.4342 -2.3433 0.0000 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.0334 -4.3433 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 1.3674 -4.3433 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 5.0000 -5.3284 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 7 2 0 0 0 0; 1 13 1 0 0 0 0; 2 6 2 0 0 0 0; 3 4 1 0 0 0 0; 3 11 1 0 0 0 0; 3 20 1 1 0 0 0; 4 19 1 0 0 0 0; 5 7 1 0 0 0 0; 5 8 1 0 0 0 0; 5 17 2 0 0 0 0; 6 17 1 0 0 0 0; 7 14 1 0 0 0 0; 8 12 1 0 0 0 0; 8 18 2 0 0 0 0; 9 10 1 0 0 0 0; 9 12 1 1 0 0 0; 9 19 1 0 0 0 0; 10 11 1 0 0 0 0; 10 15 1 6 0 0 0; 11 16 1 1 0 0 0; A 13; OMe; A 15; OAc; A 16; OAc; A 20; OAc; M END. The generated InChI is. InChI=1S/C18H22N2O10/c1-8(21)28-12-7-27-18(16(30-10(3)23)15(12)29-9(2)22)20-17(25)13-14(24)11(26-4)5-6-19-13/h5-6,12,15-16,18,24H,7H2,1-4H3,(H,20,25)/t12?,15?,16?,18-/m1/s1. Am I missing something ?. Thanks !. Marco. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1155
https://github.com/openbabel/openbabel/issues/1157:12,Testability,log,log,12,Gaussian 03 log files computed with the nosym keyword can not be processed.; In the attachment there is a log file of water with and without the nosym keyword. Reported by: dwondrousch,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157
https://github.com/openbabel/openbabel/issues/1157:106,Testability,log,log,106,Gaussian 03 log files computed with the nosym keyword can not be processed.; In the attachment there is a log file of water with and without the nosym keyword. Reported by: dwondrousch,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157
https://github.com/openbabel/openbabel/issues/1158:193,Testability,test,tested,193,"Ruby Makefile doesn't generate properly:; The ""-flat_namespace"" is added even on non-darwin platform and causes the build to fail. See [1] for the build output and search for ""flat_namespace"" (tested on Fedora 17 and Rawhide). Openbabel version: 2.3.1; Ruby version: 1.9.3.p0; Fedora 17/Rawhide, both x86_64 and i386; GCC 4.7.0. Regards and thanks for your help!; Bohuslav ""Slavek"" Kabrda. [1] http://koji.fedoraproject.org/koji/getfile?taskID=3837717&name=build.log. Reported by: bkabrda",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1158
https://github.com/openbabel/openbabel/issues/1158:463,Testability,log,log,463,"Ruby Makefile doesn't generate properly:; The ""-flat_namespace"" is added even on non-darwin platform and causes the build to fail. See [1] for the build output and search for ""flat_namespace"" (tested on Fedora 17 and Rawhide). Openbabel version: 2.3.1; Ruby version: 1.9.3.p0; Fedora 17/Rawhide, both x86_64 and i386; GCC 4.7.0. Regards and thanks for your help!; Bohuslav ""Slavek"" Kabrda. [1] http://koji.fedoraproject.org/koji/getfile?taskID=3837717&name=build.log. Reported by: bkabrda",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1158
https://github.com/openbabel/openbabel/issues/1159:2442,Availability,error,error,2442,"iew.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)CC = 1111 + 2*111 + 9*11 instead 1111 + 3*11, reffers to (a) and (b) in this list); d - Quaternary carbons are NOT recognized (or multiplyed by 0?); 		(CC(C)(C)C = 12*11 instead of 11111+4*11). It seems to me that explicit H are somehow bothering the SMILES parser that makes somehow the following multiplication: groupFound*nH. 2 - when a group is NOT present in the database, the program keeps working, while it should probably give me an error message ; (if not all the atoms have been visited at least one, the calculation should somehow FAIL or warn me, that not all atoms have been visited). Using the same files I submitted C=CC (result: 0) and C=CCC (result: 3*11): the first three carbons have never been evaluated but still there is a result!. Thank you for your kind attention, I hope I have been clear enough to help.; You are doing a beatyfull job. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159
https://github.com/openbabel/openbabel/issues/1159:2448,Integrability,message,message,2448,"iew.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)CC = 1111 + 2*111 + 9*11 instead 1111 + 3*11, reffers to (a) and (b) in this list); d - Quaternary carbons are NOT recognized (or multiplyed by 0?); 		(CC(C)(C)C = 12*11 instead of 11111+4*11). It seems to me that explicit H are somehow bothering the SMILES parser that makes somehow the following multiplication: groupFound*nH. 2 - when a group is NOT present in the database, the program keeps working, while it should probably give me an error message ; (if not all the atoms have been visited at least one, the calculation should somehow FAIL or warn me, that not all atoms have been visited). Using the same files I submitted C=CC (result: 0) and C=CCC (result: 3*11): the first three carbons have never been evaluated but still there is a result!. Thank you for your kind attention, I hope I have been clear enough to help.; You are doing a beatyfull job. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159
https://github.com/openbabel/openbabel/issues/1159:151,Modifiability,plugin,plugindefines,151,"I am working on command line using obabel ver 2.3.1 on Win 7 machine.; I'm working on group additivity calculations (enthalpies).; I simply edited the plugindefines.txt adding at the end the definition of my new property (HF_Try) and defined my groups (at the moment: alkanes only) ; I attached a zip file containig:; - plugindefines.txt (last rows are what I edited); - HF_Try.txt (the groups I have added); - HC.txt (input file); There are two main problems: ; 1 - It looks like when more than 1 H atom is present on the group, multiple (= number of H) matches are found.; Using -d or -h combined with --gen2d or --gen3d didn't help. I have inserted in the database only alkanes group, so each attachment will be a saturaded carbon (-[CX4]); I defined the following groups:(HF_Try.txt, attached). First time with SMARTS, to be sure I did it right, I checked them with ; http://smartsview.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159
https://github.com/openbabel/openbabel/issues/1159:320,Modifiability,plugin,plugindefines,320,"I am working on command line using obabel ver 2.3.1 on Win 7 machine.; I'm working on group additivity calculations (enthalpies).; I simply edited the plugindefines.txt adding at the end the definition of my new property (HF_Try) and defined my groups (at the moment: alkanes only) ; I attached a zip file containig:; - plugindefines.txt (last rows are what I edited); - HF_Try.txt (the groups I have added); - HC.txt (input file); There are two main problems: ; 1 - It looks like when more than 1 H atom is present on the group, multiple (= number of H) matches are found.; Using -d or -h combined with --gen2d or --gen3d didn't help. I have inserted in the database only alkanes group, so each attachment will be a saturaded carbon (-[CX4]); I defined the following groups:(HF_Try.txt, attached). First time with SMARTS, to be sure I did it right, I checked them with ; http://smartsview.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159
https://github.com/openbabel/openbabel/issues/1159:133,Usability,simpl,simply,133,"I am working on command line using obabel ver 2.3.1 on Win 7 machine.; I'm working on group additivity calculations (enthalpies).; I simply edited the plugindefines.txt adding at the end the definition of my new property (HF_Try) and defined my groups (at the moment: alkanes only) ; I attached a zip file containig:; - plugindefines.txt (last rows are what I edited); - HF_Try.txt (the groups I have added); - HC.txt (input file); There are two main problems: ; 1 - It looks like when more than 1 H atom is present on the group, multiple (= number of H) matches are found.; Using -d or -h combined with --gen2d or --gen3d didn't help. I have inserted in the database only alkanes group, so each attachment will be a saturaded carbon (-[CX4]); I defined the following groups:(HF_Try.txt, attached). First time with SMARTS, to be sure I did it right, I checked them with ; http://smartsview.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159
https://github.com/openbabel/openbabel/issues/1159:2809,Usability,clear,clear,2809,"iew.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)CC = 1111 + 2*111 + 9*11 instead 1111 + 3*11, reffers to (a) and (b) in this list); d - Quaternary carbons are NOT recognized (or multiplyed by 0?); 		(CC(C)(C)C = 12*11 instead of 11111+4*11). It seems to me that explicit H are somehow bothering the SMILES parser that makes somehow the following multiplication: groupFound*nH. 2 - when a group is NOT present in the database, the program keeps working, while it should probably give me an error message ; (if not all the atoms have been visited at least one, the calculation should somehow FAIL or warn me, that not all atoms have been visited). Using the same files I submitted C=CC (result: 0) and C=CCC (result: 3*11): the first three carbons have never been evaluated but still there is a result!. Thank you for your kind attention, I hope I have been clear enough to help.; You are doing a beatyfull job. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159
https://github.com/openbabel/openbabel/issues/1160:271,Modifiability,plugin,plugindefines,271,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160
https://github.com/openbabel/openbabel/issues/1160:601,Modifiability,plugin,plugindefines,601,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160
https://github.com/openbabel/openbabel/issues/1160:834,Testability,test,testing,834,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160
https://github.com/openbabel/openbabel/issues/1160:1365,Testability,test,tested,1365,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160
https://github.com/openbabel/openbabel/issues/1160:1422,Usability,clear,clear,1422,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160
https://github.com/openbabel/openbabel/issues/1161:12,Testability,test,test,12,"To create a test file use: ; obabel -:C1C(CC)C1 --gen2d -h -O testfile.mol. If we generate the aliases, the ethyl will be replaced. However, none of its hydrogens are, resulting in an incorrect molecular structure (with lots of disconnected hydrogen radicals!):. obabel testfile.mol -omol --genalias -xA. OpenBabel03151210282D. 14 11 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -0.8660 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.8660 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.7566 -0.7566 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.5335 -1.1430 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.4266 -2.4010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -2.9360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -1.8310 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.3660 -3.4360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -2.9010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.2769 1.0335 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 4 1 0 0 0 0; 1 2 1 0 0 0 0; 1 5 1 0 0 0 0; 1 6 1 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 13 1 0 0 0 0; 4 14 1 0 0 0 0; A 3; Et; M END; 1 molecule converted. Note that there is a somewhat related problem with expanding aliases (should the hydrogens be added or not?), but I don't think this really matters that much. The user can always explicitly request new hydrogens. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1161
https://github.com/openbabel/openbabel/issues/1161:62,Testability,test,testfile,62,"To create a test file use: ; obabel -:C1C(CC)C1 --gen2d -h -O testfile.mol. If we generate the aliases, the ethyl will be replaced. However, none of its hydrogens are, resulting in an incorrect molecular structure (with lots of disconnected hydrogen radicals!):. obabel testfile.mol -omol --genalias -xA. OpenBabel03151210282D. 14 11 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -0.8660 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.8660 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.7566 -0.7566 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.5335 -1.1430 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.4266 -2.4010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -2.9360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -1.8310 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.3660 -3.4360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -2.9010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.2769 1.0335 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 4 1 0 0 0 0; 1 2 1 0 0 0 0; 1 5 1 0 0 0 0; 1 6 1 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 13 1 0 0 0 0; 4 14 1 0 0 0 0; A 3; Et; M END; 1 molecule converted. Note that there is a somewhat related problem with expanding aliases (should the hydrogens be added or not?), but I don't think this really matters that much. The user can always explicitly request new hydrogens. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1161
https://github.com/openbabel/openbabel/issues/1161:270,Testability,test,testfile,270,"To create a test file use: ; obabel -:C1C(CC)C1 --gen2d -h -O testfile.mol. If we generate the aliases, the ethyl will be replaced. However, none of its hydrogens are, resulting in an incorrect molecular structure (with lots of disconnected hydrogen radicals!):. obabel testfile.mol -omol --genalias -xA. OpenBabel03151210282D. 14 11 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -0.8660 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.8660 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.7566 -0.7566 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.5335 -1.1430 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.4266 -2.4010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -2.9360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -1.8310 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.3660 -3.4360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -2.9010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.2769 1.0335 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 4 1 0 0 0 0; 1 2 1 0 0 0 0; 1 5 1 0 0 0 0; 1 6 1 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 13 1 0 0 0 0; 4 14 1 0 0 0 0; A 3; Et; M END; 1 molecule converted. Note that there is a somewhat related problem with expanding aliases (should the hydrogens be added or not?), but I don't think this really matters that much. The user can always explicitly request new hydrogens. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1161
https://github.com/openbabel/openbabel/issues/1163:144,Availability,fault,fault,144,I have tried to perform the command ; babel -ac 1bxr.pdb 1bxr.pdb to generate CONECT records in the pdb. ; But every time I have a segmentation fault. Tried on several machines with Debian Linux and OpenBabel 2.3.1 - 2.3.90; The pdb file is obtained from rcsb.org without any modification. Reported by: annndrey,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1163
https://github.com/openbabel/openbabel/issues/1163:16,Performance,perform,perform,16,I have tried to perform the command ; babel -ac 1bxr.pdb 1bxr.pdb to generate CONECT records in the pdb. ; But every time I have a segmentation fault. Tried on several machines with Debian Linux and OpenBabel 2.3.1 - 2.3.90; The pdb file is obtained from rcsb.org without any modification. Reported by: annndrey,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1163
https://github.com/openbabel/openbabel/issues/1531:160,Availability,error,error,160,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531
https://github.com/openbabel/openbabel/issues/1531:382,Availability,error,error,382,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531
https://github.com/openbabel/openbabel/issues/1531:439,Availability,Error,Error,439,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531
https://github.com/openbabel/openbabel/issues/1531:166,Integrability,message,message,166,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531
https://github.com/openbabel/openbabel/issues/1531:388,Integrability,message,message,388,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531
https://github.com/openbabel/openbabel/issues/1531:101,Usability,simpl,simple,101,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531
https://github.com/openbabel/openbabel/issues/1164:843,Availability,error,error,843,"I'm using the r4724 developer version (where radical valence have been corrected). I am intensively using group additivity and I found the following problem:; I defined an ObGroupContrib in plugindefines as follow . OBGroupContrib; LnIntSymm ; LnInternalSymm.txt ; LOWER BOUND: ln internal symmetry number. I defined the following groups in LnInternalSymm.txt (methyl, single substituted c6 aromatic ring, meta substituted c6 aromatic ring); ;heavy; [CH3]-* 1; *-c1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; *-c1:[cH]:[cH]:[c](-*):[cH]:[cH]:1 100. I checked my smiles using http://www.daylight.com/daycgi_tutorials/depictmatch.cgi. I expected 11 for toluene, 202 for para xylene (the ""meta"" substitution will be found twice), 2 for orto and meta xylene.; I got 10 for toluene, 200 for para xylene, 2 for orto and meta xylene. I tried to ""understand"" the error:; 1 - If I leave only the methyl group, it is properly recognized. Toluene gives 1, xylenes 2); 2 - If I swap 1st and 2nd group in LnInternalSymm.txt Toluene will give 1, while para-xylene, mantains 200.; 3 - If I put methyl groups as the last group. Only the number of methyl groups is found. (1 for toluene, 2 for any xylene). It seems to me that if on a bond both conditions match, then only the ""last one"" is considered.; I don't need a fix for this: modifying the smiles as follow (i.e. considering only the atoms on ""one side"" of the bond), I have the correct results:. ;heavy; [CH3v4] 1; [cH0v4]1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; [cH0v4]1:[cH]:[cH]:[cH0v4]:[cH]:[cH]:1 100. Still, I think that is a bug and should be corrected on your next release; Samuele Sommariva. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1164
https://github.com/openbabel/openbabel/issues/1164:1594,Deployability,release,release,1594,"I'm using the r4724 developer version (where radical valence have been corrected). I am intensively using group additivity and I found the following problem:; I defined an ObGroupContrib in plugindefines as follow . OBGroupContrib; LnIntSymm ; LnInternalSymm.txt ; LOWER BOUND: ln internal symmetry number. I defined the following groups in LnInternalSymm.txt (methyl, single substituted c6 aromatic ring, meta substituted c6 aromatic ring); ;heavy; [CH3]-* 1; *-c1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; *-c1:[cH]:[cH]:[c](-*):[cH]:[cH]:1 100. I checked my smiles using http://www.daylight.com/daycgi_tutorials/depictmatch.cgi. I expected 11 for toluene, 202 for para xylene (the ""meta"" substitution will be found twice), 2 for orto and meta xylene.; I got 10 for toluene, 200 for para xylene, 2 for orto and meta xylene. I tried to ""understand"" the error:; 1 - If I leave only the methyl group, it is properly recognized. Toluene gives 1, xylenes 2); 2 - If I swap 1st and 2nd group in LnInternalSymm.txt Toluene will give 1, while para-xylene, mantains 200.; 3 - If I put methyl groups as the last group. Only the number of methyl groups is found. (1 for toluene, 2 for any xylene). It seems to me that if on a bond both conditions match, then only the ""last one"" is considered.; I don't need a fix for this: modifying the smiles as follow (i.e. considering only the atoms on ""one side"" of the bond), I have the correct results:. ;heavy; [CH3v4] 1; [cH0v4]1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; [cH0v4]1:[cH]:[cH]:[cH0v4]:[cH]:[cH]:1 100. Still, I think that is a bug and should be corrected on your next release; Samuele Sommariva. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1164
https://github.com/openbabel/openbabel/issues/1164:190,Modifiability,plugin,plugindefines,190,"I'm using the r4724 developer version (where radical valence have been corrected). I am intensively using group additivity and I found the following problem:; I defined an ObGroupContrib in plugindefines as follow . OBGroupContrib; LnIntSymm ; LnInternalSymm.txt ; LOWER BOUND: ln internal symmetry number. I defined the following groups in LnInternalSymm.txt (methyl, single substituted c6 aromatic ring, meta substituted c6 aromatic ring); ;heavy; [CH3]-* 1; *-c1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; *-c1:[cH]:[cH]:[c](-*):[cH]:[cH]:1 100. I checked my smiles using http://www.daylight.com/daycgi_tutorials/depictmatch.cgi. I expected 11 for toluene, 202 for para xylene (the ""meta"" substitution will be found twice), 2 for orto and meta xylene.; I got 10 for toluene, 200 for para xylene, 2 for orto and meta xylene. I tried to ""understand"" the error:; 1 - If I leave only the methyl group, it is properly recognized. Toluene gives 1, xylenes 2); 2 - If I swap 1st and 2nd group in LnInternalSymm.txt Toluene will give 1, while para-xylene, mantains 200.; 3 - If I put methyl groups as the last group. Only the number of methyl groups is found. (1 for toluene, 2 for any xylene). It seems to me that if on a bond both conditions match, then only the ""last one"" is considered.; I don't need a fix for this: modifying the smiles as follow (i.e. considering only the atoms on ""one side"" of the bond), I have the correct results:. ;heavy; [CH3v4] 1; [cH0v4]1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; [cH0v4]1:[cH]:[cH]:[cH0v4]:[cH]:[cH]:1 100. Still, I think that is a bug and should be corrected on your next release; Samuele Sommariva. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1164
https://github.com/openbabel/openbabel/issues/1165:194,Usability,guid,guidelines,194,The following molecule has unspecificied dbl bond stereo but is rendered as cis:. obabel -:ClC=CCl -O tmp.svg. A twisted dbl bond should be used to indicate unknown stereo (never mind the IUPAC guidelines). Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1165
https://github.com/openbabel/openbabel/issues/1167:93,Energy Efficiency,charge,charge,93,"When converting molecule from attached Molfile to SVG, I get incorrectly large font for ""+."" charge on Cl atom. obabel -V says:; Open Babel 2.3.1 -- Nov 15 2011 -- 04:17:16. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1167
https://github.com/openbabel/openbabel/issues/1168:152,Usability,simpl,simply,152,"My enviroment: Win 7, Obabel 2.3.1, Feb 27 2012 (dev. version); I was playing around, and I have noticed that radicals with a parent aromatic molecule, simply don't work.; If I abstract a H atom from an aromatic structure, the SMILES still rapresent the parent molecule.; I don't know how often that happens; I tried to abstract an H from benzene, pirrole, pyridin, furan: it never worked. See attched examples. This probelm seems to involve only the smile canonization: I tried to convert one of the furan radical into png, gaussian and mol file and it works fine in all the occasions. obabel WorngRadicals.txt -ismi -ocan. Samuele. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1168
https://github.com/openbabel/openbabel/issues/1169:43,Availability,fault,fault,43,"Not sure if this is OpenBabel's or RDkit's fault. I was converting some molecules from mol2 to mol using OpenBabel 2.3.1, then doing some other things on them with RDkit.; But there are some molecules that RDkit won't parse after the conversion. I attach a test case, with a molecule from ZINC. If I download the SDF from ZINC, RDkit parses it happily, but if I convert from mol2 to SDF or mol, the result won't be read by RDkit. So it looks like a conversion problem (I may be wrong). Thank you,. Adrià ; <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1169
https://github.com/openbabel/openbabel/issues/1169:300,Availability,down,download,300,"Not sure if this is OpenBabel's or RDkit's fault. I was converting some molecules from mol2 to mol using OpenBabel 2.3.1, then doing some other things on them with RDkit.; But there are some molecules that RDkit won't parse after the conversion. I attach a test case, with a molecule from ZINC. If I download the SDF from ZINC, RDkit parses it happily, but if I convert from mol2 to SDF or mol, the result won't be read by RDkit. So it looks like a conversion problem (I may be wrong). Thank you,. Adrià ; <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1169
https://github.com/openbabel/openbabel/issues/1169:257,Testability,test,test,257,"Not sure if this is OpenBabel's or RDkit's fault. I was converting some molecules from mol2 to mol using OpenBabel 2.3.1, then doing some other things on them with RDkit.; But there are some molecules that RDkit won't parse after the conversion. I attach a test case, with a molecule from ZINC. If I download the SDF from ZINC, RDkit parses it happily, but if I convert from mol2 to SDF or mol, the result won't be read by RDkit. So it looks like a conversion problem (I may be wrong). Thank you,. Adrià ; <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1169
https://github.com/openbabel/openbabel/issues/1170:177,Security,hash,hashes,177,"OB currently doesn't correctly handle two stereobonds at a tet center, e.g. three bonds at 120 (the fourth an implicit H), where two of the bonds are either both wedges or both hashes. (This situation can be treated the same as if just one of the bonds was a wedge or a hash). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1170
https://github.com/openbabel/openbabel/issues/1170:270,Security,hash,hash,270,"OB currently doesn't correctly handle two stereobonds at a tet center, e.g. three bonds at 120 (the fourth an implicit H), where two of the bonds are either both wedges or both hashes. (This situation can be treated the same as if just one of the bonds was a wedge or a hash). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1170
https://github.com/openbabel/openbabel/issues/1171:117,Deployability,patch,patch,117,"It is deffined in generic.cpp and in ops/fillUC.cpp. It blows up when trying to make static build. Attached proposed patch. There might be better solution, but I just made it compile. Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1171
https://github.com/openbabel/openbabel/issues/1172:81,Deployability,update,updated,81,"Signature for ReadFASTASequence() in fastaformat has changed and it has not been updated in genbankformat. Attached proposed patch. I'm not sure if that doesn't change the behaviour of genbankformat, but I'm leaving that to ghutchis who is to blame for the change ;). Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1172
https://github.com/openbabel/openbabel/issues/1172:125,Deployability,patch,patch,125,"Signature for ReadFASTASequence() in fastaformat has changed and it has not been updated in genbankformat. Attached proposed patch. I'm not sure if that doesn't change the behaviour of genbankformat, but I'm leaving that to ghutchis who is to blame for the change ;). Reported by: th9",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1172
https://github.com/openbabel/openbabel/issues/1173:589,Availability,error,error,589,"File format: SDF/MOL file with V2000 Connection Table. Situation; If both number of atoms and number of bonds are greater than 99 (thus both have 3 digits) the function OBConversion::Read() fails to read properly the molecule. Comment; The standard Counts Line (in CTAB V2000) must have the following format: ; ""aaabbblllfffcccsssxxxrrrpppiiimmmvvvvvv ""; where ""aaa"" is the number of atoms and ""bbb"" is the number of bonds, but if both have 3 digits as in the following example; ""102107 0 0 0 0 0 0 0 0 1 V2000""; the function OBConversion::Read() does not read the molecule and return the error; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Invalid bond specification, atom numbers or bond order are wrong. Example; In the attachment file there is a molecule with 102 atoms and 107 bonds that the function can not read, with two different forms of Counts Line.; In the first the counts line is: ""102 107 0 0 0 0 0 0 0 0 1 V2000"", with the number of atoms and bonds separated by a space; in this case the function reads a molecule with 102 atoms but 10 bonds, and returns the error:; *** Open Babel Warning in ReadMolecule; Either the file contains Atom Lists, which are not currently supported and are ignored; or the atom or bond count is >999, which is not allowed in V2000 MDL files.; In the second the counts line is: ""102107 0 0 0 0 0 0 0 0 1 V2000"" and the molecule is not read, with the error; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Invalid bond specification, atom numbers or bond order are wrong. OpenBabel Version: 2.3.1; System: Linux. Thanks, Giorgio. Reported by: jvoorhees",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1173
https://github.com/openbabel/openbabel/issues/1173:1108,Availability,error,error,1108,"File format: SDF/MOL file with V2000 Connection Table. Situation; If both number of atoms and number of bonds are greater than 99 (thus both have 3 digits) the function OBConversion::Read() fails to read properly the molecule. Comment; The standard Counts Line (in CTAB V2000) must have the following format: ; ""aaabbblllfffcccsssxxxrrrpppiiimmmvvvvvv ""; where ""aaa"" is the number of atoms and ""bbb"" is the number of bonds, but if both have 3 digits as in the following example; ""102107 0 0 0 0 0 0 0 0 1 V2000""; the function OBConversion::Read() does not read the molecule and return the error; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Invalid bond specification, atom numbers or bond order are wrong. Example; In the attachment file there is a molecule with 102 atoms and 107 bonds that the function can not read, with two different forms of Counts Line.; In the first the counts line is: ""102 107 0 0 0 0 0 0 0 0 1 V2000"", with the number of atoms and bonds separated by a space; in this case the function reads a molecule with 102 atoms but 10 bonds, and returns the error:; *** Open Babel Warning in ReadMolecule; Either the file contains Atom Lists, which are not currently supported and are ignored; or the atom or bond count is >999, which is not allowed in V2000 MDL files.; In the second the counts line is: ""102107 0 0 0 0 0 0 0 0 1 V2000"" and the molecule is not read, with the error; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Invalid bond specification, atom numbers or bond order are wrong. OpenBabel Version: 2.3.1; System: Linux. Thanks, Giorgio. Reported by: jvoorhees",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1173
https://github.com/openbabel/openbabel/issues/1173:1427,Availability,error,error,1427,"File format: SDF/MOL file with V2000 Connection Table. Situation; If both number of atoms and number of bonds are greater than 99 (thus both have 3 digits) the function OBConversion::Read() fails to read properly the molecule. Comment; The standard Counts Line (in CTAB V2000) must have the following format: ; ""aaabbblllfffcccsssxxxrrrpppiiimmmvvvvvv ""; where ""aaa"" is the number of atoms and ""bbb"" is the number of bonds, but if both have 3 digits as in the following example; ""102107 0 0 0 0 0 0 0 0 1 V2000""; the function OBConversion::Read() does not read the molecule and return the error; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Invalid bond specification, atom numbers or bond order are wrong. Example; In the attachment file there is a molecule with 102 atoms and 107 bonds that the function can not read, with two different forms of Counts Line.; In the first the counts line is: ""102 107 0 0 0 0 0 0 0 0 1 V2000"", with the number of atoms and bonds separated by a space; in this case the function reads a molecule with 102 atoms but 10 bonds, and returns the error:; *** Open Babel Warning in ReadMolecule; Either the file contains Atom Lists, which are not currently supported and are ignored; or the atom or bond count is >999, which is not allowed in V2000 MDL files.; In the second the counts line is: ""102107 0 0 0 0 0 0 0 0 1 V2000"" and the molecule is not read, with the error; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Invalid bond specification, atom numbers or bond order are wrong. OpenBabel Version: 2.3.1; System: Linux. Thanks, Giorgio. Reported by: jvoorhees",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1173
https://github.com/openbabel/openbabel/issues/1178:363,Availability,echo,echo,363,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178
https://github.com/openbabel/openbabel/issues/1178:442,Availability,error,error,442,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178
https://github.com/openbabel/openbabel/issues/1178:711,Integrability,depend,depends,711,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178
https://github.com/openbabel/openbabel/issues/1178:2150,Integrability,depend,depends,2150,", std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::string, std::allocator<std::string> >&) (obconversion.cpp:1359); ==7281== by 0x4043CE: main (babel.cpp:347); ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA27D: OpenBabel::TEditedMolecule::removeHydrogen(std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> >*) (mcdlutil.cpp:4687); ==7281== by 0x52AAAE1: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4546); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, Op",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178
https://github.com/openbabel/openbabel/issues/1178:217,Modifiability,variab,variables,217,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178
https://github.com/openbabel/openbabel/issues/1178:448,Safety,detect,detector,448,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178
https://github.com/openbabel/openbabel/issues/1180:36,Availability,error,error,36,"Hi all,; OpenBabel is giving me the error ""Invalid SMILES string: 1 unmatched ring bonds."" when it tries to parse the attached SMILES file (that is perfectly valid as far as I can tell). The command I'm using is:; $ babel -ismi snap_10000-1.smi -opdb snap_10000.pdb; And the version I'm using is: 2.3.1. Hope this helps. Cheers,; Ricardo. PS I'm generating the SMILES using this program: https://github.com/rhz/thermokappa/blob/master/Smiles.hs. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1180
https://github.com/openbabel/openbabel/issues/1181:120,Availability,error,error,120,"SMILES longer than 32,767 characters are silently truncated rather than being rejected. This causes either a misleading error messages (unmatched ring bond, unbalanced parentheses, etc.) or if the SMILES happens to parse, causes the wrong molecule to be created. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1181
https://github.com/openbabel/openbabel/issues/1181:126,Integrability,message,messages,126,"SMILES longer than 32,767 characters are silently truncated rather than being rejected. This causes either a misleading error messages (unmatched ring bond, unbalanced parentheses, etc.) or if the SMILES happens to parse, causes the wrong molecule to be created. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1181
https://github.com/openbabel/openbabel/issues/1532:103,Availability,error,error,103,"If the command-line options aren't recognized properly, the options are sometimes ignored. Instead, an error / help message should be generated, ideally with spelling corrections. Reported by: @ghutchis. Original Ticket: [openbabel/feature-requests/163](https://sourceforge.net/p/openbabel/feature-requests/163)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1532
https://github.com/openbabel/openbabel/issues/1532:116,Integrability,message,message,116,"If the command-line options aren't recognized properly, the options are sometimes ignored. Instead, an error / help message should be generated, ideally with spelling corrections. Reported by: @ghutchis. Original Ticket: [openbabel/feature-requests/163](https://sourceforge.net/p/openbabel/feature-requests/163)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1532
https://github.com/openbabel/openbabel/issues/1185:192,Availability,down,download,192,"In folder ""scripts"" from the llinux openbabel 2.3.1 version, there is an old version of the openbabel jar file. So make command fail.; For the moment, to solve this problem, it's necessary to download the windows version and to get the jar file from this one. Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1185
https://github.com/openbabel/openbabel/issues/1187:480,Testability,test,test,480,"I'm using the 2.3.1 GUI. I want to use ""Display in Firefox"" to look at the effect of changing the SVG depiction options. When I convert two molecules from SMI to SMI, and click ""Display in Firefox"" it works correctly and I see two molecules. When I convert the same molecules to SVG, and click ""Display in Firefox"" I can use the SVG depiction options to change the depiction. However, I only see a single molecule (the second molecule), even when I write to a file. . Here are my test molecules:; CC(=O)Cl; CCCBr. - Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1187
https://github.com/openbabel/openbabel/issues/1190:71,Deployability,update,updates,71,"When you click an input file format, the options section in the centre updates with the format-specific options, even where the ""Use this format for all input files"" box is unticked. At the same time, when you type a new extension for the input file (or open a new file), the options do not update even if the file extension has changed. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1190
https://github.com/openbabel/openbabel/issues/1190:291,Deployability,update,update,291,"When you click an input file format, the options section in the centre updates with the format-specific options, even where the ""Use this format for all input files"" box is unticked. At the same time, when you type a new extension for the input file (or open a new file), the options do not update even if the file extension has changed. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1190
https://github.com/openbabel/openbabel/issues/1191:153,Availability,echo,echo,153,"If you try to generate 2D coordinates for the SMILES below, it fails and produces no output. The exact same command works correctly for OpenBabel 2.2.x. echo ""CCCCCCC(C)(C)c1cc(OC)c(c(OC)c1)[C@H]1C=C(CO)[C@@H]2C[C@H]1C2(C)C HU 308"" | babel -i smi -o sdf --gen2d. If you leave off the --gen2D option, it produces a correct SDF. This is fairly ordinary molecule, HU-308, a DEA Scheduled drug (see http://en.wikipedia.org/wiki/HU-308). Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1191
https://github.com/openbabel/openbabel/issues/1191:375,Energy Efficiency,Schedul,Scheduled,375,"If you try to generate 2D coordinates for the SMILES below, it fails and produces no output. The exact same command works correctly for OpenBabel 2.2.x. echo ""CCCCCCC(C)(C)c1cc(OC)c(c(OC)c1)[C@H]1C=C(CO)[C@@H]2C[C@H]1C2(C)C HU 308"" | babel -i smi -o sdf --gen2d. If you leave off the --gen2D option, it produces a correct SDF. This is fairly ordinary molecule, HU-308, a DEA Scheduled drug (see http://en.wikipedia.org/wiki/HU-308). Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1191
https://github.com/openbabel/openbabel/issues/1194:160,Availability,echo,echo,160,"An explicit H in a SMILES produces an explicit H when exported as an SDF. If this same SDF is then parsed and printed as a SMILES, the wrong SMILES is printed. echo ""[H]NC"" | babel -i smi -o smi; NC. echo ""[H]NC"" | babel -i smi -o sdf | babel -i sdf -o can; C[NH]. The problem seems to be that the explicit H in the SMILES is converted into an explicit H in the OBMol object. This yields an OBAtom with some explicit and some implicit H neighbors. The SMILES writer handles this correctly. But for this same OBMol object, the SDF writer assumes that you want these hydrogens written out, but then when it reads them back in, the SDF parser makes a different assumption about the atom's valence. In other words, the OBMol object that the SDF writer generates is different than the OBMol object that it reads back in. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1194
https://github.com/openbabel/openbabel/issues/1194:200,Availability,echo,echo,200,"An explicit H in a SMILES produces an explicit H when exported as an SDF. If this same SDF is then parsed and printed as a SMILES, the wrong SMILES is printed. echo ""[H]NC"" | babel -i smi -o smi; NC. echo ""[H]NC"" | babel -i smi -o sdf | babel -i sdf -o can; C[NH]. The problem seems to be that the explicit H in the SMILES is converted into an explicit H in the OBMol object. This yields an OBAtom with some explicit and some implicit H neighbors. The SMILES writer handles this correctly. But for this same OBMol object, the SDF writer assumes that you want these hydrogens written out, but then when it reads them back in, the SDF parser makes a different assumption about the atom's valence. In other words, the OBMol object that the SDF writer generates is different than the OBMol object that it reads back in. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1194
https://github.com/openbabel/openbabel/issues/1195:33,Availability,fault,fault,33,Babel 2.3.1 gives a segmentation fault converting a certain mol file version 2.3.0 is able to convert.; Used:; babel -imol bug.mol -ofpt foo.FP3 -xhfFP3 (seg-fault); babel -imol bug.mol -ofpt foo.FP4 -xhfFP4 (seg-fault); babel -imol bug.mol -ofpt foo.FPMACCS -xhfMACCS (works fine); (Comments: v3000 mol I got from a large datebase. I created 50k other fingerprints from an sdf-file without any problems. Same command with -isdf) . Reported by: gatesnightmare,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1195
https://github.com/openbabel/openbabel/issues/1195:158,Availability,fault,fault,158,Babel 2.3.1 gives a segmentation fault converting a certain mol file version 2.3.0 is able to convert.; Used:; babel -imol bug.mol -ofpt foo.FP3 -xhfFP3 (seg-fault); babel -imol bug.mol -ofpt foo.FP4 -xhfFP4 (seg-fault); babel -imol bug.mol -ofpt foo.FPMACCS -xhfMACCS (works fine); (Comments: v3000 mol I got from a large datebase. I created 50k other fingerprints from an sdf-file without any problems. Same command with -isdf) . Reported by: gatesnightmare,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1195
https://github.com/openbabel/openbabel/issues/1195:213,Availability,fault,fault,213,Babel 2.3.1 gives a segmentation fault converting a certain mol file version 2.3.0 is able to convert.; Used:; babel -imol bug.mol -ofpt foo.FP3 -xhfFP3 (seg-fault); babel -imol bug.mol -ofpt foo.FP4 -xhfFP4 (seg-fault); babel -imol bug.mol -ofpt foo.FPMACCS -xhfMACCS (works fine); (Comments: v3000 mol I got from a large datebase. I created 50k other fingerprints from an sdf-file without any problems. Same command with -isdf) . Reported by: gatesnightmare,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1195
https://github.com/openbabel/openbabel/issues/1196:193,Availability,error,error,193,"When I try to create SVG files with big molecules (with implicit hydrogens), the out not contains all the links.; When I try again with explicit hydrogens, obabel exit with a memory allocation error. Line code : $ obabel enduracin.smi -O enduracin.svg. Yoann Dufresne; Student in Bonzaï search team (INRIA, France). Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1196
https://github.com/openbabel/openbabel/issues/1197:152,Availability,error,error,152,"In revision 4759 (the svn trunk as of now) this line in scripts/openbabel-perl.i is problematic:; 216 	# %include <openbabel/fingerprint.h> # Causes an error (I don't know why) ; everything after this line in the .i file does not get processed resulting in a substantial loss of functionality. The solution is to use a C style comment instead of # (which isn't actually a comment deliminator in swig apparently - it's treated by the preprocessor). While we're in this file, I'm curious as to the rational for ignoring almost all std::vector functionality (lines 56 through 103). This only leaves the get method with no way to determine the size of the vector or iterate over it as far as I can tell. For functions that pass a vector by reference, e.g. ContigFragList, I could not figure out how to unwrap the vector pointer into a native perl array and so could not make use of the function. Reported by: @dkoes",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1197
https://github.com/openbabel/openbabel/issues/1198:152,Availability,error,error,152,"In revision 4759 (the svn trunk as of now) this line in scripts/openbabel-perl.i is problematic:; 216 	# %include <openbabel/fingerprint.h> # Causes an error (I don't know why) ; everything after this line in the .i file does not get processed resulting in a substantial loss of functionality. The solution is to use a C style comment instead of # (which isn't actually a comment deliminator in swig apparently - it's treated by the preprocessor). While we're in this file, I'm curious as to the rational for ignoring almost all std::vector functionality (lines 56 through 103). This only leaves the get method with no way to determine the size of the vector or iterate over it as far as I can tell. For functions that pass a vector by reference, e.g. ContigFragList, I could not figure out how to unwrap the vector pointer into a native perl array and so could not make use of the function. Reported by: @dkoes",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1198
https://github.com/openbabel/openbabel/issues/1199:1168,Testability,test,test,1168,"=N2)N)NC(=O)CNC(=O)C(c2cc(Cl)c(O)c(Cl)c2)NC(=O)C(CO)NC(=O)C(c2ccc(O)cc2)NC(=O)C(CC2N=C(N)NC2)NC(=O)C(CCCNC(=O)N)NC(=O)C(C(C)O)NC(=O)C(c2ccc(O)cc2)NC(=O)C(c2ccc(O)cc2)NC(=O)C(C(C)O)NC(=O)C(CCCN)NC(=O)C(c2ccc(O)cc2)NC1=O. See for example the molecule output with :; obabel enducardin2.smi -xh -xa -O enducardin2.svg. We are morking on Mac OS X on the svn trunk version of openbabel (last week version). Sincerely,. Y.D. ----. 193-49-212-82:src laurent$ diff mcdlutil.mod.cpp mcdlutil.cpp; 41,42c41,42; < #define NATOMSMAX 511; < #define NBONDSMAX 2047; ---; > #define NATOMSMAX 255; > #define NBONDSMAX 255; 3931,3932c3931,3932; < vector< vector<bool> > aEQ;//[NATOMSMAX][NATOMSMAX];; < vector< vector<bool> > bEQ;//[NBONDSMAX][NBONDSMAX];; ---; > bool aEQ[NATOMSMAX][NATOMSMAX];; > bool bEQ[NBONDSMAX][NBONDSMAX];; 3936,3939c3936,3937; < void directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,; 3957,3962c3955,3958; < fIOPT10=false;; < fIOPT11=false;; < fIOPT13=true;; < fIOPT12=1;; < aEQ = vector< vector<bool> >(NATOMSMAX,vector<bool>(NATOMSMAX,false));; < bEQ = vector< vector<bool> >(NBONDSMAX,vector<bool>(NBONDSMAX,false));; ---; > fIOPT10=false;; > fIOPT11=false;; > fIOPT13=true;; > fIOPT12=1;; 4787,4790c4783,4784; < void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,. Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1199
https://github.com/openbabel/openbabel/issues/1199:1365,Testability,test,test,1365,"=N2)N)NC(=O)CNC(=O)C(c2cc(Cl)c(O)c(Cl)c2)NC(=O)C(CO)NC(=O)C(c2ccc(O)cc2)NC(=O)C(CC2N=C(N)NC2)NC(=O)C(CCCNC(=O)N)NC(=O)C(C(C)O)NC(=O)C(c2ccc(O)cc2)NC(=O)C(c2ccc(O)cc2)NC(=O)C(C(C)O)NC(=O)C(CCCN)NC(=O)C(c2ccc(O)cc2)NC1=O. See for example the molecule output with :; obabel enducardin2.smi -xh -xa -O enducardin2.svg. We are morking on Mac OS X on the svn trunk version of openbabel (last week version). Sincerely,. Y.D. ----. 193-49-212-82:src laurent$ diff mcdlutil.mod.cpp mcdlutil.cpp; 41,42c41,42; < #define NATOMSMAX 511; < #define NBONDSMAX 2047; ---; > #define NATOMSMAX 255; > #define NBONDSMAX 255; 3931,3932c3931,3932; < vector< vector<bool> > aEQ;//[NATOMSMAX][NATOMSMAX];; < vector< vector<bool> > bEQ;//[NBONDSMAX][NBONDSMAX];; ---; > bool aEQ[NATOMSMAX][NATOMSMAX];; > bool bEQ[NBONDSMAX][NBONDSMAX];; 3936,3939c3936,3937; < void directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,; 3957,3962c3955,3958; < fIOPT10=false;; < fIOPT11=false;; < fIOPT13=true;; < fIOPT12=1;; < aEQ = vector< vector<bool> >(NATOMSMAX,vector<bool>(NATOMSMAX,false));; < bEQ = vector< vector<bool> >(NBONDSMAX,vector<bool>(NBONDSMAX,false));; ---; > fIOPT10=false;; > fIOPT11=false;; > fIOPT13=true;; > fIOPT12=1;; 4787,4790c4783,4784; < void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,. Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1199
https://github.com/openbabel/openbabel/issues/1199:1904,Testability,test,test,1904,"=N2)N)NC(=O)CNC(=O)C(c2cc(Cl)c(O)c(Cl)c2)NC(=O)C(CO)NC(=O)C(c2ccc(O)cc2)NC(=O)C(CC2N=C(N)NC2)NC(=O)C(CCCNC(=O)N)NC(=O)C(C(C)O)NC(=O)C(c2ccc(O)cc2)NC(=O)C(c2ccc(O)cc2)NC(=O)C(C(C)O)NC(=O)C(CCCN)NC(=O)C(c2ccc(O)cc2)NC1=O. See for example the molecule output with :; obabel enducardin2.smi -xh -xa -O enducardin2.svg. We are morking on Mac OS X on the svn trunk version of openbabel (last week version). Sincerely,. Y.D. ----. 193-49-212-82:src laurent$ diff mcdlutil.mod.cpp mcdlutil.cpp; 41,42c41,42; < #define NATOMSMAX 511; < #define NBONDSMAX 2047; ---; > #define NATOMSMAX 255; > #define NBONDSMAX 255; 3931,3932c3931,3932; < vector< vector<bool> > aEQ;//[NATOMSMAX][NATOMSMAX];; < vector< vector<bool> > bEQ;//[NBONDSMAX][NBONDSMAX];; ---; > bool aEQ[NATOMSMAX][NATOMSMAX];; > bool bEQ[NBONDSMAX][NBONDSMAX];; 3936,3939c3936,3937; < void directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,; 3957,3962c3955,3958; < fIOPT10=false;; < fIOPT11=false;; < fIOPT13=true;; < fIOPT12=1;; < aEQ = vector< vector<bool> >(NATOMSMAX,vector<bool>(NATOMSMAX,false));; < bEQ = vector< vector<bool> >(NBONDSMAX,vector<bool>(NBONDSMAX,false));; ---; > fIOPT10=false;; > fIOPT11=false;; > fIOPT13=true;; > fIOPT12=1;; 4787,4790c4783,4784; < void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,. Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1199
https://github.com/openbabel/openbabel/issues/1199:2118,Testability,test,test,2118,"=N2)N)NC(=O)CNC(=O)C(c2cc(Cl)c(O)c(Cl)c2)NC(=O)C(CO)NC(=O)C(c2ccc(O)cc2)NC(=O)C(CC2N=C(N)NC2)NC(=O)C(CCCNC(=O)N)NC(=O)C(C(C)O)NC(=O)C(c2ccc(O)cc2)NC(=O)C(c2ccc(O)cc2)NC(=O)C(C(C)O)NC(=O)C(CCCN)NC(=O)C(c2ccc(O)cc2)NC1=O. See for example the molecule output with :; obabel enducardin2.smi -xh -xa -O enducardin2.svg. We are morking on Mac OS X on the svn trunk version of openbabel (last week version). Sincerely,. Y.D. ----. 193-49-212-82:src laurent$ diff mcdlutil.mod.cpp mcdlutil.cpp; 41,42c41,42; < #define NATOMSMAX 511; < #define NBONDSMAX 2047; ---; > #define NATOMSMAX 255; > #define NBONDSMAX 255; 3931,3932c3931,3932; < vector< vector<bool> > aEQ;//[NATOMSMAX][NATOMSMAX];; < vector< vector<bool> > bEQ;//[NBONDSMAX][NBONDSMAX];; ---; > bool aEQ[NATOMSMAX][NATOMSMAX];; > bool bEQ[NBONDSMAX][NBONDSMAX];; 3936,3939c3936,3937; < void directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,; 3957,3962c3955,3958; < fIOPT10=false;; < fIOPT11=false;; < fIOPT13=true;; < fIOPT12=1;; < aEQ = vector< vector<bool> >(NATOMSMAX,vector<bool>(NATOMSMAX,false));; < bEQ = vector< vector<bool> >(NBONDSMAX,vector<bool>(NBONDSMAX,false));; ---; > fIOPT10=false;; > fIOPT11=false;; > fIOPT13=true;; > fIOPT12=1;; 4787,4790c4783,4784; < void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,. Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1199
https://github.com/openbabel/openbabel/issues/1201:878,Availability,error,error,878,"RE: sdf to smi conversion - aromaticity of rings fails. After conversion the aromaticity of the ring system is not valid.; Does this go beyond what OpenBabel is intended to do,; or is this a bug?. This is an one example of a compound listed at DrugBank: www.drugbank.ca; Compound ID: DB02920; SMILES from DrugBank:; CC1=C(C=C)C2=CC3=[N-]4C(=CC5=C(CCC(O)=O)C(C)=C6N5[Zn++]44N2C1=CC1=[N-]4C(C(C)=C1C=C)=C6O)C(CCC(O)=O)=C3C. This was converted to the absolute SMILES at:; http://cdb.ics.uci.edu/cgibin/BabelWeb.py; ChemDB / Babel: Molecule Format Converter; SMILES:; Cc1c(c2=CC3=[N-]4C(=Cc5c(c(c6n5[Zn+2]47n2c1=CC8=[N-]7C(=C6O)C(=C8C=C)C)C)CCC(=O)O)C(=C3C)CCC(=O)O)C=C; This SMILES was converted to sdf and back to SMI with OpenBabel GUI.; Resulting SMILES:; Cc1c(c2=Cc3[n-]4c(=Cc5c(c(c6n5[Zn+2]54n2c1=Cc1[n-]5c(=C6O)c(c1C=C)C)C)CCC(=O)O)c(c3C)CCC(=O)O)C=C	. This SMILES gives and error instead of structure at:; ChemDB / Smi2Depict: Generate 2D Images from Molecule Files:; http://cdb.ics.uci.edu/cgibin/Smi2DepictWeb.py. The connections of the structure are valid but it apparently does not conform to aromaticity rules and so the ChemDB viewer will not display it. John Gerlits; jg_erlit_s@hotmail.com; WindowsXP; OpenBabel version 2.3.1. Reported by: jgerlits",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1201
https://github.com/openbabel/openbabel/issues/1202:5,Deployability,upgrade,upgraded,5,"Just upgraded to MacOSX 10.8, and am trying to recompile OpenBabel with Perl Bindings.; XCode cmdline tools, cmake, perl 5.12.4, eigen, swig, swig-perl, etc are all up to date. %svn co https://openbabel.svn.sourceforge.net/svnrootopenbabel/openbabel openbabel; %cd ../build/openbabel; %/opt/local/bin/cmake \; -DRUN_SWIG=ON \; -DPYTHON_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib \; -DPERL_INCLUDE_PATH=/System//Library/Perl/5.12/darwin-thread-multi-2level/CORE \; -DJAVA_BINDINGS=ON \; -DEIGEN3_INCLUDE_DIR=/opt/local/include/eigen3 \; ../../src/openbabel/openbabel/trunk/; % make; % make test; % sudo make install; % setenv PERL5LIB ""/usr/local/lib:~/lib""; % perl -de 1; <1> use OpenBabel;; Can't find 'boot_Chemistry__OpenBabel' symbol in /usr/local/lib/libOpenBabel.dylib; at /usr/local/lib/OpenBabel.pm line 11; Compilation failed in require at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2.; at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2. The terminal stream from the commands is attached. cmake complained about wxWidgets (macports for this is broken, but I don't care about the GUI), conio.h and xdr.h, though the latter is present in the source tree, and SCANDIR_NEEDS_CONST test failed (not sure what that is). ; make proceeded with just warnings.; make test passed all except pybindtest_bindings and pybindtest_example, but OpenBabel.pm fails when used in perl. I don't quite understand what went wrong. Anyone else have success building on MacOSX 10.8 ? Any help greatly appreciated. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202
https://github.com/openbabel/openbabel/issues/1202:688,Deployability,install,install,688,"Just upgraded to MacOSX 10.8, and am trying to recompile OpenBabel with Perl Bindings.; XCode cmdline tools, cmake, perl 5.12.4, eigen, swig, swig-perl, etc are all up to date. %svn co https://openbabel.svn.sourceforge.net/svnrootopenbabel/openbabel openbabel; %cd ../build/openbabel; %/opt/local/bin/cmake \; -DRUN_SWIG=ON \; -DPYTHON_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib \; -DPERL_INCLUDE_PATH=/System//Library/Perl/5.12/darwin-thread-multi-2level/CORE \; -DJAVA_BINDINGS=ON \; -DEIGEN3_INCLUDE_DIR=/opt/local/include/eigen3 \; ../../src/openbabel/openbabel/trunk/; % make; % make test; % sudo make install; % setenv PERL5LIB ""/usr/local/lib:~/lib""; % perl -de 1; <1> use OpenBabel;; Can't find 'boot_Chemistry__OpenBabel' symbol in /usr/local/lib/libOpenBabel.dylib; at /usr/local/lib/OpenBabel.pm line 11; Compilation failed in require at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2.; at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2. The terminal stream from the commands is attached. cmake complained about wxWidgets (macports for this is broken, but I don't care about the GUI), conio.h and xdr.h, though the latter is present in the source tree, and SCANDIR_NEEDS_CONST test failed (not sure what that is). ; make proceeded with just warnings.; make test passed all except pybindtest_bindings and pybindtest_example, but OpenBabel.pm fails when used in perl. I don't quite understand what went wrong. Anyone else have success building on MacOSX 10.8 ? Any help greatly appreciated. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202
https://github.com/openbabel/openbabel/issues/1202:670,Testability,test,test,670,"Just upgraded to MacOSX 10.8, and am trying to recompile OpenBabel with Perl Bindings.; XCode cmdline tools, cmake, perl 5.12.4, eigen, swig, swig-perl, etc are all up to date. %svn co https://openbabel.svn.sourceforge.net/svnrootopenbabel/openbabel openbabel; %cd ../build/openbabel; %/opt/local/bin/cmake \; -DRUN_SWIG=ON \; -DPYTHON_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib \; -DPERL_INCLUDE_PATH=/System//Library/Perl/5.12/darwin-thread-multi-2level/CORE \; -DJAVA_BINDINGS=ON \; -DEIGEN3_INCLUDE_DIR=/opt/local/include/eigen3 \; ../../src/openbabel/openbabel/trunk/; % make; % make test; % sudo make install; % setenv PERL5LIB ""/usr/local/lib:~/lib""; % perl -de 1; <1> use OpenBabel;; Can't find 'boot_Chemistry__OpenBabel' symbol in /usr/local/lib/libOpenBabel.dylib; at /usr/local/lib/OpenBabel.pm line 11; Compilation failed in require at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2.; at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2. The terminal stream from the commands is attached. cmake complained about wxWidgets (macports for this is broken, but I don't care about the GUI), conio.h and xdr.h, though the latter is present in the source tree, and SCANDIR_NEEDS_CONST test failed (not sure what that is). ; make proceeded with just warnings.; make test passed all except pybindtest_bindings and pybindtest_example, but OpenBabel.pm fails when used in perl. I don't quite understand what went wrong. Anyone else have success building on MacOSX 10.8 ? Any help greatly appreciated. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202
https://github.com/openbabel/openbabel/issues/1202:1291,Testability,test,test,1291,"Just upgraded to MacOSX 10.8, and am trying to recompile OpenBabel with Perl Bindings.; XCode cmdline tools, cmake, perl 5.12.4, eigen, swig, swig-perl, etc are all up to date. %svn co https://openbabel.svn.sourceforge.net/svnrootopenbabel/openbabel openbabel; %cd ../build/openbabel; %/opt/local/bin/cmake \; -DRUN_SWIG=ON \; -DPYTHON_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib \; -DPERL_INCLUDE_PATH=/System//Library/Perl/5.12/darwin-thread-multi-2level/CORE \; -DJAVA_BINDINGS=ON \; -DEIGEN3_INCLUDE_DIR=/opt/local/include/eigen3 \; ../../src/openbabel/openbabel/trunk/; % make; % make test; % sudo make install; % setenv PERL5LIB ""/usr/local/lib:~/lib""; % perl -de 1; <1> use OpenBabel;; Can't find 'boot_Chemistry__OpenBabel' symbol in /usr/local/lib/libOpenBabel.dylib; at /usr/local/lib/OpenBabel.pm line 11; Compilation failed in require at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2.; at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2. The terminal stream from the commands is attached. cmake complained about wxWidgets (macports for this is broken, but I don't care about the GUI), conio.h and xdr.h, though the latter is present in the source tree, and SCANDIR_NEEDS_CONST test failed (not sure what that is). ; make proceeded with just warnings.; make test passed all except pybindtest_bindings and pybindtest_example, but OpenBabel.pm fails when used in perl. I don't quite understand what went wrong. Anyone else have success building on MacOSX 10.8 ? Any help greatly appreciated. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202
https://github.com/openbabel/openbabel/issues/1202:1371,Testability,test,test,1371,"Just upgraded to MacOSX 10.8, and am trying to recompile OpenBabel with Perl Bindings.; XCode cmdline tools, cmake, perl 5.12.4, eigen, swig, swig-perl, etc are all up to date. %svn co https://openbabel.svn.sourceforge.net/svnrootopenbabel/openbabel openbabel; %cd ../build/openbabel; %/opt/local/bin/cmake \; -DRUN_SWIG=ON \; -DPYTHON_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib \; -DPERL_INCLUDE_PATH=/System//Library/Perl/5.12/darwin-thread-multi-2level/CORE \; -DJAVA_BINDINGS=ON \; -DEIGEN3_INCLUDE_DIR=/opt/local/include/eigen3 \; ../../src/openbabel/openbabel/trunk/; % make; % make test; % sudo make install; % setenv PERL5LIB ""/usr/local/lib:~/lib""; % perl -de 1; <1> use OpenBabel;; Can't find 'boot_Chemistry__OpenBabel' symbol in /usr/local/lib/libOpenBabel.dylib; at /usr/local/lib/OpenBabel.pm line 11; Compilation failed in require at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2.; at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2. The terminal stream from the commands is attached. cmake complained about wxWidgets (macports for this is broken, but I don't care about the GUI), conio.h and xdr.h, though the latter is present in the source tree, and SCANDIR_NEEDS_CONST test failed (not sure what that is). ; make proceeded with just warnings.; make test passed all except pybindtest_bindings and pybindtest_example, but OpenBabel.pm fails when used in perl. I don't quite understand what went wrong. Anyone else have success building on MacOSX 10.8 ? Any help greatly appreciated. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202
https://github.com/openbabel/openbabel/issues/1203:0,Availability,error,error,0,"error with building trunk on slackware 14rc1 (eigen2 2.0.10); [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.o; cd /tmp/SBo/trunk/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:919,Availability,error,error,919,"error with building trunk on slackware 14rc1 (eigen2 2.0.10); [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.o; cd /tmp/SBo/trunk/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:432,Deployability,release,release-,432,"error with building trunk on slackware 14rc1 (eigen2 2.0.10); [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.o; cd /tmp/SBo/trunk/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:1389,Deployability,release,release-,1389,"WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/include/eigen2/Eigen/src/SVD/SVD.h:331:42: required from «void Eigen::SVD<MatrixType>::compute(const MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]»; /usr/include/eigen2/Eigen/src/SVD/SVD.h:71:7: required from «Eigen::SVD<MatrixType>::SVD(const Mat",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:901,Integrability,message,message,901,"error with building trunk on slackware 14rc1 (eigen2 2.0.10); [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.o; cd /tmp/SBo/trunk/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:2544,Integrability,depend,dependent,2544,"ULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/include/eigen2/Eigen/src/SVD/SVD.h:331:42: required from «void Eigen::SVD<MatrixType>::compute(const MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]»; /usr/include/eigen2/Eigen/src/SVD/SVD.h:71:7: required from «Eigen::SVD<MatrixType>::SVD(const MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]»; /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:149:38: required from here; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:40:18: ошибка: «ei_abs» was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:264:20: замечание: «long double Eigen::ei_abs(long double)» declared here, later in the translation unit; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:41:18: ошибка: «ei_abs» was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:3274,Integrability,depend,dependent,3274,"Matrix<double, 3, 3>]»; /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:149:38: required from here; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:40:18: ошибка: «ei_abs» was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:264:20: замечание: «long double Eigen::ei_abs(long double)» declared here, later in the translation unit; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:41:18: ошибка: «ei_abs» was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:264:20: замечание: «long double Eigen::ei_abs(long double)» declared here, later in the translation unit; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:45:34: ошибка: «ei_sqrt» was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:4005,Integrability,depend,dependent,4005,"nclude/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:264:20: замечание: «long double Eigen::ei_abs(long double)» declared here, later in the translation unit; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:41:18: ошибка: «ei_abs» was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:264:20: замечание: «long double Eigen::ei_abs(long double)» declared here, later in the translation unit; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:45:34: ошибка: «ei_sqrt» was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h:266:20: замечание: «long double Eigen::ei_sqrt(long double)» declared here, later in the translation unit; make[2]: *** [src/CMakeFiles/openbabel.dir/math/align.o] Ошибка 1; make[2]: Выход из каталога `/tmp/SBo/openbabel-2.3.1/build'; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Ошибка 2; make[1]: Выход из каталога `/tmp/SBo/openbabel-2.3.1/build'; make: *** [all] Ошибка 2. Reported by: dn2010",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1203:977,Safety,abort,aborted,977,"error with building trunk on slackware 14rc1 (eigen2 2.0.10); [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.o; cd /tmp/SBo/trunk/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203
https://github.com/openbabel/openbabel/issues/1204:81,Energy Efficiency,charge,charge,81,"The following script reads the attached mol2 file but wrongly outputs 0; for the charge. Openbabel is version 2.3. import pybel; mol = pybel.readfile('mol2', 'amm.mol2').next(); print mol.charge. I think it should be obvious from the N.4 Sybyl atom type that there; must be a charge. The sum of charges in the mol2 file also adds up to; +1. Reported by: psxjp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1204
https://github.com/openbabel/openbabel/issues/1204:188,Energy Efficiency,charge,charge,188,"The following script reads the attached mol2 file but wrongly outputs 0; for the charge. Openbabel is version 2.3. import pybel; mol = pybel.readfile('mol2', 'amm.mol2').next(); print mol.charge. I think it should be obvious from the N.4 Sybyl atom type that there; must be a charge. The sum of charges in the mol2 file also adds up to; +1. Reported by: psxjp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1204
https://github.com/openbabel/openbabel/issues/1204:276,Energy Efficiency,charge,charge,276,"The following script reads the attached mol2 file but wrongly outputs 0; for the charge. Openbabel is version 2.3. import pybel; mol = pybel.readfile('mol2', 'amm.mol2').next(); print mol.charge. I think it should be obvious from the N.4 Sybyl atom type that there; must be a charge. The sum of charges in the mol2 file also adds up to; +1. Reported by: psxjp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1204
https://github.com/openbabel/openbabel/issues/1204:295,Energy Efficiency,charge,charges,295,"The following script reads the attached mol2 file but wrongly outputs 0; for the charge. Openbabel is version 2.3. import pybel; mol = pybel.readfile('mol2', 'amm.mol2').next(); print mol.charge. I think it should be obvious from the N.4 Sybyl atom type that there; must be a charge. The sum of charges in the mol2 file also adds up to; +1. Reported by: psxjp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1204
https://github.com/openbabel/openbabel/issues/1205:1502,Integrability,rout,route,1502,"------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -0.477749 1.577049 -1.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -2.682077 -0.519929 1.073098; ---------------------------------------------------------------------; Standard orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -10.477749 11.577049 -11.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -12.682077 -0.519929 1.073098. For both version, it is the standard orientation geometry that is output. This is all perfectly fine. I have notice that since version 2.3.1 (and i guess also 2.3.0), two elements are needed for the file to be correctly read:; 1) The second line with: "" # "" indicating the route section in gaussian; 2) Both the Input and standard orientation; These two facts were not needed in version 2.2.3. For instance, the following file was read without problem in 2.2.3 but not in 2.3.1:; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -0.477749 1.577049 -1.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -2.682077 -0.519929 1.073098; ---------------------------------------------------------------------. THIS IS A PROBLEM since when using the option NoSymm (noymmetry) in Gaussian, the standard orientation does not exist and we should therefore read the input orientation. Is there a reason why you changed the behavior of the parser from 2.2.3 to 2.3.1?; Is it possible to fi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205
https://github.com/openbabel/openbabel/issues/1205:89,Testability,log,log,89,"Hi; I have found that i have some problem converting gaussian file using: babel -ig09 ok.log -oxyz test.xyz.; Sometimes, it does not work with openbabel 2.3.1 (and i also think with 2.3.0) while it was working perfectly well with 2.2.3. I was able to isolate the smallest piece of gaussian log file that works with open babel 2.3.1 (as well as with 2.2.3):; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -0.477749 1.577049 -1.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -2.682077 -0.519929 1.073098; ---------------------------------------------------------------------; Standard orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -10.477749 11.577049 -11.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -12.682077 -0.519929 1.073098. For both version, it is the standard orientation geometry that is output. This is all perfectly fine. I have notice that since version 2.3.1 (and i guess also 2.3.0), two elements are needed for the file to be correctly read:; 1) The second line with: "" # "" indicating the route section in gaussian; 2) Both the Input and standard orientation; These two facts were not needed in version 2.2.3. For instance, the following file was read without problem in 2.2.3 but not in 2.3.1:; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; -----------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205
https://github.com/openbabel/openbabel/issues/1205:99,Testability,test,test,99,"Hi; I have found that i have some problem converting gaussian file using: babel -ig09 ok.log -oxyz test.xyz.; Sometimes, it does not work with openbabel 2.3.1 (and i also think with 2.3.0) while it was working perfectly well with 2.2.3. I was able to isolate the smallest piece of gaussian log file that works with open babel 2.3.1 (as well as with 2.2.3):; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -0.477749 1.577049 -1.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -2.682077 -0.519929 1.073098; ---------------------------------------------------------------------; Standard orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -10.477749 11.577049 -11.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -12.682077 -0.519929 1.073098. For both version, it is the standard orientation geometry that is output. This is all perfectly fine. I have notice that since version 2.3.1 (and i guess also 2.3.0), two elements are needed for the file to be correctly read:; 1) The second line with: "" # "" indicating the route section in gaussian; 2) Both the Input and standard orientation; These two facts were not needed in version 2.2.3. For instance, the following file was read without problem in 2.2.3 but not in 2.3.1:; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; -----------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205
https://github.com/openbabel/openbabel/issues/1205:290,Testability,log,log,290,"Hi; I have found that i have some problem converting gaussian file using: babel -ig09 ok.log -oxyz test.xyz.; Sometimes, it does not work with openbabel 2.3.1 (and i also think with 2.3.0) while it was working perfectly well with 2.2.3. I was able to isolate the smallest piece of gaussian log file that works with open babel 2.3.1 (as well as with 2.2.3):; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -0.477749 1.577049 -1.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -2.682077 -0.519929 1.073098; ---------------------------------------------------------------------; Standard orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -10.477749 11.577049 -11.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -12.682077 -0.519929 1.073098. For both version, it is the standard orientation geometry that is output. This is all perfectly fine. I have notice that since version 2.3.1 (and i guess also 2.3.0), two elements are needed for the file to be correctly read:; 1) The second line with: "" # "" indicating the route section in gaussian; 2) Both the Input and standard orientation; These two facts were not needed in version 2.2.3. For instance, the following file was read without problem in 2.2.3 but not in 2.3.1:; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; -----------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205
https://github.com/openbabel/openbabel/issues/1209:516,Availability,error,error,516,"I don't seem to be able to use OBPairTemplate or its typedef (OBPairInteger), from within OB. It causes a linking problem:. For example, adding the following to MDLFormat.cpp gives:. // Store the Chiral Flag; unsigned int chiralFlagVal = ReadUIntField((line.substr(12, 3)).c_str());; OBPairInteger *chiralFlag = new OBPairInteger();; chiralFlag->SetAttribute(""MOL Chiral Flag"");; chiralFlag->SetValue(chiralFlagVal); // 1 (""Absolute Chirality""), 0 (""Relative Chirality""); mol.SetData(chiralFlag);. 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: void __thiscall OpenBabel::OBPairTemplate<int>::SetValue(int)"" (__imp_?SetValue@?$OBPairTemplate@H@OpenBabel@@QAEXH@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __thiscall OpenBabel::OBPairTemplate<int>::OBPairTemplate<int>(void)"" (__imp_??0?$OBPairTemplate@H@OpenBabel@@QAE@XZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2001: unresolved external symbol ""public: virtual int const & __thiscall OpenBabel::OBPairTemplate<int>::GetGenericValue(void)const "" (?GetGenericValue@?$OBPairTemplate@H@OpenBabel@@UBEABHXZ); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: virtual __thiscall OpenBabel::OBPairTemplate<int>::~OBPairTemplate<int>(void)"" (__imp_??1?$OBPairTemplate@H@OpenBabel@@UAE@XZ) referenced in function ""public: virtual void * __thiscall OpenBabel::OBPairTemplate<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$OBPairTemplate@H@OpenBabel@@UAEPAXI@Z); 1>C:\Tools\",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1209
https://github.com/openbabel/openbabel/issues/1209:953,Availability,error,error,953,"ormat.cpp gives:. // Store the Chiral Flag; unsigned int chiralFlagVal = ReadUIntField((line.substr(12, 3)).c_str());; OBPairInteger *chiralFlag = new OBPairInteger();; chiralFlag->SetAttribute(""MOL Chiral Flag"");; chiralFlag->SetValue(chiralFlagVal); // 1 (""Absolute Chirality""), 0 (""Relative Chirality""); mol.SetData(chiralFlag);. 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: void __thiscall OpenBabel::OBPairTemplate<int>::SetValue(int)"" (__imp_?SetValue@?$OBPairTemplate@H@OpenBabel@@QAEXH@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __thiscall OpenBabel::OBPairTemplate<int>::OBPairTemplate<int>(void)"" (__imp_??0?$OBPairTemplate@H@OpenBabel@@QAE@XZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2001: unresolved external symbol ""public: virtual int const & __thiscall OpenBabel::OBPairTemplate<int>::GetGenericValue(void)const "" (?GetGenericValue@?$OBPairTemplate@H@OpenBabel@@UBEABHXZ); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: virtual __thiscall OpenBabel::OBPairTemplate<int>::~OBPairTemplate<int>(void)"" (__imp_??1?$OBPairTemplate@H@OpenBabel@@UAE@XZ) referenced in function ""public: virtual void * __thiscall OpenBabel::OBPairTemplate<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$OBPairTemplate@H@OpenBabel@@UAEPAXI@Z); 1>C:\Tools\openbabel\current\windows-vc2008\build\bin\Debug\formats_common.obf : fatal error LNK1120: 4 unresolved externals. However, using OBPairData instead is fine:; // St",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1209
https://github.com/openbabel/openbabel/issues/1209:1389,Availability,error,error,1389,"g);. 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: void __thiscall OpenBabel::OBPairTemplate<int>::SetValue(int)"" (__imp_?SetValue@?$OBPairTemplate@H@OpenBabel@@QAEXH@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __thiscall OpenBabel::OBPairTemplate<int>::OBPairTemplate<int>(void)"" (__imp_??0?$OBPairTemplate@H@OpenBabel@@QAE@XZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2001: unresolved external symbol ""public: virtual int const & __thiscall OpenBabel::OBPairTemplate<int>::GetGenericValue(void)const "" (?GetGenericValue@?$OBPairTemplate@H@OpenBabel@@UBEABHXZ); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: virtual __thiscall OpenBabel::OBPairTemplate<int>::~OBPairTemplate<int>(void)"" (__imp_??1?$OBPairTemplate@H@OpenBabel@@UAE@XZ) referenced in function ""public: virtual void * __thiscall OpenBabel::OBPairTemplate<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$OBPairTemplate@H@OpenBabel@@UAEPAXI@Z); 1>C:\Tools\openbabel\current\windows-vc2008\build\bin\Debug\formats_common.obf : fatal error LNK1120: 4 unresolved externals. However, using OBPairData instead is fine:; // Store the Chiral Flag; unsigned int chiralFlagVal = ReadUIntField((line.substr(12, 3)).c_str());; OBPairData *chiralFlag = new OBPairData();; chiralFlag->SetAttribute(""MOL Chiral Flag"");; chiralFlag->SetValue(""1""); // 1 (""Absolute Chirality""), 0 (""Relative Chirality""); mol.SetData(chiralFlag);. Reported by: @baoilleach. Original",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1209
https://github.com/openbabel/openbabel/issues/1209:1609,Availability,error,error,1609,"c(dllimport) public: void __thiscall OpenBabel::OBPairTemplate<int>::SetValue(int)"" (__imp_?SetValue@?$OBPairTemplate@H@OpenBabel@@QAEXH@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __thiscall OpenBabel::OBPairTemplate<int>::OBPairTemplate<int>(void)"" (__imp_??0?$OBPairTemplate@H@OpenBabel@@QAE@XZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2001: unresolved external symbol ""public: virtual int const & __thiscall OpenBabel::OBPairTemplate<int>::GetGenericValue(void)const "" (?GetGenericValue@?$OBPairTemplate@H@OpenBabel@@UBEABHXZ); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: virtual __thiscall OpenBabel::OBPairTemplate<int>::~OBPairTemplate<int>(void)"" (__imp_??1?$OBPairTemplate@H@OpenBabel@@UAE@XZ) referenced in function ""public: virtual void * __thiscall OpenBabel::OBPairTemplate<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$OBPairTemplate@H@OpenBabel@@UAEPAXI@Z); 1>C:\Tools\openbabel\current\windows-vc2008\build\bin\Debug\formats_common.obf : fatal error LNK1120: 4 unresolved externals. However, using OBPairData instead is fine:; // Store the Chiral Flag; unsigned int chiralFlagVal = ReadUIntField((line.substr(12, 3)).c_str());; OBPairData *chiralFlag = new OBPairData();; chiralFlag->SetAttribute(""MOL Chiral Flag"");; chiralFlag->SetValue(""1""); // 1 (""Absolute Chirality""), 0 (""Relative Chirality""); mol.SetData(chiralFlag);. Reported by: @baoilleach. Original Ticket: [openbabel/bugs/829](https://sourceforge.net/p/openbabel/bugs/829)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1209
https://github.com/openbabel/openbabel/issues/1209:2077,Availability,error,error,2077,"c(dllimport) public: void __thiscall OpenBabel::OBPairTemplate<int>::SetValue(int)"" (__imp_?SetValue@?$OBPairTemplate@H@OpenBabel@@QAEXH@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __thiscall OpenBabel::OBPairTemplate<int>::OBPairTemplate<int>(void)"" (__imp_??0?$OBPairTemplate@H@OpenBabel@@QAE@XZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); 1>mdlformat.obj : error LNK2001: unresolved external symbol ""public: virtual int const & __thiscall OpenBabel::OBPairTemplate<int>::GetGenericValue(void)const "" (?GetGenericValue@?$OBPairTemplate@H@OpenBabel@@UBEABHXZ); 1>mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: virtual __thiscall OpenBabel::OBPairTemplate<int>::~OBPairTemplate<int>(void)"" (__imp_??1?$OBPairTemplate@H@OpenBabel@@UAE@XZ) referenced in function ""public: virtual void * __thiscall OpenBabel::OBPairTemplate<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$OBPairTemplate@H@OpenBabel@@UAEPAXI@Z); 1>C:\Tools\openbabel\current\windows-vc2008\build\bin\Debug\formats_common.obf : fatal error LNK1120: 4 unresolved externals. However, using OBPairData instead is fine:; // Store the Chiral Flag; unsigned int chiralFlagVal = ReadUIntField((line.substr(12, 3)).c_str());; OBPairData *chiralFlag = new OBPairData();; chiralFlag->SetAttribute(""MOL Chiral Flag"");; chiralFlag->SetValue(""1""); // 1 (""Absolute Chirality""), 0 (""Relative Chirality""); mol.SetData(chiralFlag);. Reported by: @baoilleach. Original Ticket: [openbabel/bugs/829](https://sourceforge.net/p/openbabel/bugs/829)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1209
https://github.com/openbabel/openbabel/issues/1210:256,Deployability,patch,patched,256,"I tried gen2D in python and from command line (on ubuntu) and it's ok. In java it fails almost always, while gen3D works correctly. I need the gen2D feature in java. It seems java bindings contain a lot of bugs: I found some wrong method signatures that I patched by hand in openbabel-java.cpp, but this time I can do anything. thanks. Reported by: fglab. Original Ticket: [openbabel/bugs/830](https://sourceforge.net/p/openbabel/bugs/830)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1210
https://github.com/openbabel/openbabel/issues/1212:15,Availability,fault,fault,15,"A segmentation fault appears when calling OBConversion.Read() from OpenBabel java API on a specific xyz file. The file is available here: http://virolab.cyfronet.pl/~asia/e3-dprot.xyz (I didn't manage to submit it here - maybe because it's quite large).; The code below works fine for other files, but for this one I get a segmentation fault when Read() is called.; ; OBMol mol = new OBMol();; OBConversion c = new OBConversion();; c.SetInFormat(""xyz"");; c.SetOutFormat(""pdb""); // same with c.SetOutFormat(""xyz"");; boolean readResult = c.ReadFile(mol, filePath);. The same file is properly converted if command-line openbabel is used (however I managed to observe an infinite loop once, but didn't manage to reporoduce it later). Appeared on version 2.3.1 with java 1.7.0_05 on Scientific Linux 5. Reported by: joannakocot. Original Ticket: [openbabel/bugs/832](https://sourceforge.net/p/openbabel/bugs/832)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1212
https://github.com/openbabel/openbabel/issues/1212:122,Availability,avail,available,122,"A segmentation fault appears when calling OBConversion.Read() from OpenBabel java API on a specific xyz file. The file is available here: http://virolab.cyfronet.pl/~asia/e3-dprot.xyz (I didn't manage to submit it here - maybe because it's quite large).; The code below works fine for other files, but for this one I get a segmentation fault when Read() is called.; ; OBMol mol = new OBMol();; OBConversion c = new OBConversion();; c.SetInFormat(""xyz"");; c.SetOutFormat(""pdb""); // same with c.SetOutFormat(""xyz"");; boolean readResult = c.ReadFile(mol, filePath);. The same file is properly converted if command-line openbabel is used (however I managed to observe an infinite loop once, but didn't manage to reporoduce it later). Appeared on version 2.3.1 with java 1.7.0_05 on Scientific Linux 5. Reported by: joannakocot. Original Ticket: [openbabel/bugs/832](https://sourceforge.net/p/openbabel/bugs/832)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1212
https://github.com/openbabel/openbabel/issues/1212:336,Availability,fault,fault,336,"A segmentation fault appears when calling OBConversion.Read() from OpenBabel java API on a specific xyz file. The file is available here: http://virolab.cyfronet.pl/~asia/e3-dprot.xyz (I didn't manage to submit it here - maybe because it's quite large).; The code below works fine for other files, but for this one I get a segmentation fault when Read() is called.; ; OBMol mol = new OBMol();; OBConversion c = new OBConversion();; c.SetInFormat(""xyz"");; c.SetOutFormat(""pdb""); // same with c.SetOutFormat(""xyz"");; boolean readResult = c.ReadFile(mol, filePath);. The same file is properly converted if command-line openbabel is used (however I managed to observe an infinite loop once, but didn't manage to reporoduce it later). Appeared on version 2.3.1 with java 1.7.0_05 on Scientific Linux 5. Reported by: joannakocot. Original Ticket: [openbabel/bugs/832](https://sourceforge.net/p/openbabel/bugs/832)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1212
https://github.com/openbabel/openbabel/issues/1214:136,Availability,fault,fault,136,Using the -i option with output type SVG results in a segfault. Without -i works perfectly. babel -ixyz test.xyz -osvg -i; Segmentation fault: 11. Affects current production release and nightly build. Reported by: *anonymous. Original Ticket: [openbabel/bugs/834](https://sourceforge.net/p/openbabel/bugs/834),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1214
https://github.com/openbabel/openbabel/issues/1214:174,Deployability,release,release,174,Using the -i option with output type SVG results in a segfault. Without -i works perfectly. babel -ixyz test.xyz -osvg -i; Segmentation fault: 11. Affects current production release and nightly build. Reported by: *anonymous. Original Ticket: [openbabel/bugs/834](https://sourceforge.net/p/openbabel/bugs/834),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1214
https://github.com/openbabel/openbabel/issues/1214:104,Testability,test,test,104,Using the -i option with output type SVG results in a segfault. Without -i works perfectly. babel -ixyz test.xyz -osvg -i; Segmentation fault: 11. Affects current production release and nightly build. Reported by: *anonymous. Original Ticket: [openbabel/bugs/834](https://sourceforge.net/p/openbabel/bugs/834),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1214
https://github.com/openbabel/openbabel/issues/1219:242,Availability,Error,Error,242,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219
https://github.com/openbabel/openbabel/issues/1219:593,Deployability,patch,patch,593,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219
https://github.com/openbabel/openbabel/issues/1219:642,Deployability,configurat,configuration,642,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219
https://github.com/openbabel/openbabel/issues/1219:707,Deployability,patch,patch,707,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219
https://github.com/openbabel/openbabel/issues/1219:44,Modifiability,config,configure,44,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219
https://github.com/openbabel/openbabel/issues/1219:642,Modifiability,config,configuration,642,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219
https://github.com/openbabel/openbabel/issues/1219:713,Testability,test,tested,713,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219
https://github.com/openbabel/openbabel/issues/1220:605,Energy Efficiency,charge,charged,605,I indexed several hundred structures from a file containing smiles with fastsearch-index using OpenBabel 2.3.1 built from source in Slackware Linux. . Some of the structures contained pyridine oxides in the form of: Clc1cccc[n+]1[O-] and isonitriles: [C-]#[N+]...; When Im trying to search them the fast search index seems to not work properly. I can`t find them by structure. This seems to be similar to my bug reported on azides. ; https://sourceforge.net/p/openbabel/bugs/838/. When I search them without fast-search-index against the file containing smiles then the search works as expected. Probably charged atoms don`t get indexed. . Reported by: witekmo. Original Ticket: [openbabel/bugs/840](https://sourceforge.net/p/openbabel/bugs/840),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1220
https://github.com/openbabel/openbabel/issues/1221:66,Availability,error,error,66,When converting .g94 format OpenBabel ends its work with terminal error.; Input is attached. Did anyone tackled the same problem?. Reported by: meg311. Original Ticket: [openbabel/bugs/841](https://sourceforge.net/p/openbabel/bugs/841),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1221
https://github.com/openbabel/openbabel/issues/1222:324,Deployability,install,install,324,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:335,Deployability,install,installed,335,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:383,Deployability,Install,Installed-Size,383,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:870,Deployability,install,install,870,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:881,Deployability,install,installed,881,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:926,Deployability,Install,Installed-Size,926,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:577,Integrability,Depend,Depends,577,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:1099,Integrability,Depend,Depends,1099,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1222:56,Testability,test,tested,56,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222
https://github.com/openbabel/openbabel/issues/1223:127,Availability,error,errors,127,"In 2.3.2 version of Openbabel (both invocation from python bindings and obabel binary) process enters in the infinite loop (no errors, process running & consuming CPU) with some molecules, like the attached one, if trying to add hydrogens to the molecule from which they were removed previously. In 2.3.1 version it worked correctly; Test scenario:; obabel 1.sdf -d -O 2.sdf # Done correctly; obabel 2.sdf -h -O 3.sdf # Never ends. Reported by: remezn. Original Ticket: [openbabel/bugs/843](https://sourceforge.net/p/openbabel/bugs/843)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1223
https://github.com/openbabel/openbabel/issues/1223:334,Testability,Test,Test,334,"In 2.3.2 version of Openbabel (both invocation from python bindings and obabel binary) process enters in the infinite loop (no errors, process running & consuming CPU) with some molecules, like the attached one, if trying to add hydrogens to the molecule from which they were removed previously. In 2.3.1 version it worked correctly; Test scenario:; obabel 1.sdf -d -O 2.sdf # Done correctly; obabel 2.sdf -h -O 3.sdf # Never ends. Reported by: remezn. Original Ticket: [openbabel/bugs/843](https://sourceforge.net/p/openbabel/bugs/843)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1223
https://github.com/openbabel/openbabel/issues/1224:164,Availability,Error,Error,164,"If the build directory isn't writeable by root (for example, on an NFS mounted disk without no-root-squash in the mount options), then ""make install"" fails:. CMake Error at cmake_install.cmake:88 (FILE):; file Internal CMake error when trying to open file:; /home/emi/openbabel-2.3.2/build/install_manifest.txt for writing. Reported by: @cjames53. Original Ticket: [openbabel/bugs/844](https://sourceforge.net/p/openbabel/bugs/844)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1224
https://github.com/openbabel/openbabel/issues/1224:225,Availability,error,error,225,"If the build directory isn't writeable by root (for example, on an NFS mounted disk without no-root-squash in the mount options), then ""make install"" fails:. CMake Error at cmake_install.cmake:88 (FILE):; file Internal CMake error when trying to open file:; /home/emi/openbabel-2.3.2/build/install_manifest.txt for writing. Reported by: @cjames53. Original Ticket: [openbabel/bugs/844](https://sourceforge.net/p/openbabel/bugs/844)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1224
https://github.com/openbabel/openbabel/issues/1224:141,Deployability,install,install,141,"If the build directory isn't writeable by root (for example, on an NFS mounted disk without no-root-squash in the mount options), then ""make install"" fails:. CMake Error at cmake_install.cmake:88 (FILE):; file Internal CMake error when trying to open file:; /home/emi/openbabel-2.3.2/build/install_manifest.txt for writing. Reported by: @cjames53. Original Ticket: [openbabel/bugs/844](https://sourceforge.net/p/openbabel/bugs/844)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1224
https://github.com/openbabel/openbabel/issues/1226:32,Availability,error,error,32,"""make"" fails with the following error (I switched on both Python and Perl bindings). Same error also when compiling latest svn version. <...>; Scanning dependencies of target bindings_perl; [ 99%] Building CXX object scripts/CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o; Linking CXX shared module ../lib/OpenBabel.so; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_delete_OBFreeGridPoint':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10585: undefined reference to `OpenBabel::OBFreeGridPoint::~OBFreeGridPoint()'; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_new_OBFreeGridPoint__SWIG_0':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10542: undefined reference to `OpenBabel::OBFreeGridPoint::OBFreeGridPoint()'; collect2: ld returned 1 exit status; make[2]: *** [lib/OpenBabel.so] Error 1; make[1]: *** [scripts/CMakeFiles/bindings_perl.dir/all] Error 2. Reported by: visvaldaskairys. Original Ticket: [openbabel/bugs/846](https://sourceforge.net/p/openbabel/bugs/846)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1226
https://github.com/openbabel/openbabel/issues/1226:90,Availability,error,error,90,"""make"" fails with the following error (I switched on both Python and Perl bindings). Same error also when compiling latest svn version. <...>; Scanning dependencies of target bindings_perl; [ 99%] Building CXX object scripts/CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o; Linking CXX shared module ../lib/OpenBabel.so; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_delete_OBFreeGridPoint':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10585: undefined reference to `OpenBabel::OBFreeGridPoint::~OBFreeGridPoint()'; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_new_OBFreeGridPoint__SWIG_0':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10542: undefined reference to `OpenBabel::OBFreeGridPoint::OBFreeGridPoint()'; collect2: ld returned 1 exit status; make[2]: *** [lib/OpenBabel.so] Error 1; make[1]: *** [scripts/CMakeFiles/bindings_perl.dir/all] Error 2. Reported by: visvaldaskairys. Original Ticket: [openbabel/bugs/846](https://sourceforge.net/p/openbabel/bugs/846)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1226
https://github.com/openbabel/openbabel/issues/1226:905,Availability,Error,Error,905,"""make"" fails with the following error (I switched on both Python and Perl bindings). Same error also when compiling latest svn version. <...>; Scanning dependencies of target bindings_perl; [ 99%] Building CXX object scripts/CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o; Linking CXX shared module ../lib/OpenBabel.so; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_delete_OBFreeGridPoint':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10585: undefined reference to `OpenBabel::OBFreeGridPoint::~OBFreeGridPoint()'; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_new_OBFreeGridPoint__SWIG_0':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10542: undefined reference to `OpenBabel::OBFreeGridPoint::OBFreeGridPoint()'; collect2: ld returned 1 exit status; make[2]: *** [lib/OpenBabel.so] Error 1; make[1]: *** [scripts/CMakeFiles/bindings_perl.dir/all] Error 2. Reported by: visvaldaskairys. Original Ticket: [openbabel/bugs/846](https://sourceforge.net/p/openbabel/bugs/846)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1226
https://github.com/openbabel/openbabel/issues/1226:970,Availability,Error,Error,970,"""make"" fails with the following error (I switched on both Python and Perl bindings). Same error also when compiling latest svn version. <...>; Scanning dependencies of target bindings_perl; [ 99%] Building CXX object scripts/CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o; Linking CXX shared module ../lib/OpenBabel.so; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_delete_OBFreeGridPoint':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10585: undefined reference to `OpenBabel::OBFreeGridPoint::~OBFreeGridPoint()'; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_new_OBFreeGridPoint__SWIG_0':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10542: undefined reference to `OpenBabel::OBFreeGridPoint::OBFreeGridPoint()'; collect2: ld returned 1 exit status; make[2]: *** [lib/OpenBabel.so] Error 1; make[1]: *** [scripts/CMakeFiles/bindings_perl.dir/all] Error 2. Reported by: visvaldaskairys. Original Ticket: [openbabel/bugs/846](https://sourceforge.net/p/openbabel/bugs/846)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1226
https://github.com/openbabel/openbabel/issues/1226:152,Integrability,depend,dependencies,152,"""make"" fails with the following error (I switched on both Python and Perl bindings). Same error also when compiling latest svn version. <...>; Scanning dependencies of target bindings_perl; [ 99%] Building CXX object scripts/CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o; Linking CXX shared module ../lib/OpenBabel.so; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_delete_OBFreeGridPoint':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10585: undefined reference to `OpenBabel::OBFreeGridPoint::~OBFreeGridPoint()'; CMakeFiles/bindings_perl.dir/perl/openbabel-perl.cpp.o: In function `_wrap_new_OBFreeGridPoint__SWIG_0':; /home/visvaldas/software/src/openbabel/scripts/perl/openbabel-perl.cpp:10542: undefined reference to `OpenBabel::OBFreeGridPoint::OBFreeGridPoint()'; collect2: ld returned 1 exit status; make[2]: *** [lib/OpenBabel.so] Error 1; make[1]: *** [scripts/CMakeFiles/bindings_perl.dir/all] Error 2. Reported by: visvaldaskairys. Original Ticket: [openbabel/bugs/846](https://sourceforge.net/p/openbabel/bugs/846)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1226
https://github.com/openbabel/openbabel/issues/1533:262,Deployability,release,release,262,The most up to date documentation for openbabel seems to be here:; http://open-babel.readthedocs.org/en/latest/. Why this is not linked anywhere in the http://openbabel.org website ???. The website seems outdated anyway as the News page says nothing about 2.3.2 release. . Also the wiki says nothing about Rubabel http://rubygems.org/gems/rubabel which seems the most recent bindings for Ruby. Reported by: witekmo. Original Ticket: [openbabel/feature-requests/165](https://sourceforge.net/p/openbabel/feature-requests/165),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1533
https://github.com/openbabel/openbabel/issues/1229:2,Deployability,install,installed,2,"I installed cairo via homebrew, which be stored to /usr/local/lib/libcairo.dylib; When I typed cmake, it shows:; -- checking for module 'cairo'; -- package 'cairo' not found. If set ""set(CAIRO_FOUND TRUE)"" in FindCairo.cmake,; obabel can export png images without problem. Reported by: axot. Original Ticket: [openbabel/bugs/849](https://sourceforge.net/p/openbabel/bugs/849)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1229
https://github.com/openbabel/openbabel/issues/1230:1175,Availability,error,error,1175,"erl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https://sourceforge.net/p/openbabel/bugs/850)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1230:1356,Availability,error,error,1356,"erl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https://sourceforge.net/p/openbabel/bugs/850)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1230:1890,Availability,error,error,1890,"erl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https://sourceforge.net/p/openbabel/bugs/850)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1230:26,Deployability,install,install,26,"(Python and Java bindings install ok). Perl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1230:81,Deployability,patch,patch,81,"(Python and Java bindings install ok). Perl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1230:1145,Deployability,install,install,1145,"erl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https://sourceforge.net/p/openbabel/bugs/850)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1230:1860,Deployability,install,install,1860,"erl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https://sourceforge.net/p/openbabel/bugs/850)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1230:182,Modifiability,config,configure,182,"(Python and Java bindings install ok). Perl bindings; ----------. After applying patch 08_perl_cmakelists.diff, which solves one build issue identified in #839 perl bindings fail to configure in 2.3.2. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DPERL_BINDINGS=ON -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib -DPERL_INCLUDE_PATH=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE. gives:. [100%] Built target pre_bindings_perl; Writing Makefile for Chemistry::OpenBabel; Skip blib/lib/Chemistry/OpenBabel.pm (unchanged); Running Mkbootstrap for Chemistry::OpenBabel (); ld: warning: ignoring file /usr/local/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /usr/local/lib/libopenbabel.dylib; [100%] Built target bindings_perl. This architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected then make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Ruby bindings; -----------. $ cmake ../openbabel-2.3.2 -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel-2.3.2 -DRUVY_BINDINGS=ON. gives the same error as above:. ld: warning: ignoring file /Users/apadua/src/build/lib/libopenbabel.dylib, file was built for unsupported file format ( 0xcf 0xfa 0xed 0xfe 0x 7 0x 0 0x 0 0x 1 0x 3 0x 0 0x 0 0x 0 0x 6 0x 0 0x 0 0x 0 ) which is not the architecture being linked (i386): /Users/apadua/src/build/lib/libopenbabel.dylib. Again, this architecture incompatility is solved if ""-arch i386"" is removed from scripts/perl/Makefile; But even if this is corrected a make regenerates the Makefile (even during a make install) and the ""-arch i386"" error creeps in again and linking fails. Reported by: agiliopadua. Original Ticket: [openbabel/bugs/850](https:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1230
https://github.com/openbabel/openbabel/issues/1232:41,Energy Efficiency,charge,charges,41,"In obabel 2.3.x but also trunk:; partial charges are read correctly, e.g. from gamout but then; for anions:; reported net charge 0, e.g. in smiles; molecular multiplicit correct in report; atomic multiplicit wrong in e.g. cml, does not agree with molecular multiplicity; in report.; Bond assignment is affected, see the smile.; Fulvio. Reported by: fulviociriaco. Original Ticket: [openbabel/bugs/852](https://sourceforge.net/p/openbabel/bugs/852)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1232
https://github.com/openbabel/openbabel/issues/1232:122,Energy Efficiency,charge,charge,122,"In obabel 2.3.x but also trunk:; partial charges are read correctly, e.g. from gamout but then; for anions:; reported net charge 0, e.g. in smiles; molecular multiplicit correct in report; atomic multiplicit wrong in e.g. cml, does not agree with molecular multiplicity; in report.; Bond assignment is affected, see the smile.; Fulvio. Reported by: fulviociriaco. Original Ticket: [openbabel/bugs/852](https://sourceforge.net/p/openbabel/bugs/852)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1232
https://github.com/openbabel/openbabel/issues/1233:46,Availability,fault,fault,46,"The following command produces a segmentation fault:. obabel -:""[2H]c1cc(c(cc1[2H])[2H])[2H]"" -o sdf -O temp.sdf --gen3D. I have an sdf file with 3D coordinates for this molecule, and the segmentation fault also occurs when I try to compute the UFF energy. Reported by: mtrsky. Original Ticket: [openbabel/bugs/853](https://sourceforge.net/p/openbabel/bugs/853)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1233
https://github.com/openbabel/openbabel/issues/1233:201,Availability,fault,fault,201,"The following command produces a segmentation fault:. obabel -:""[2H]c1cc(c(cc1[2H])[2H])[2H]"" -o sdf -O temp.sdf --gen3D. I have an sdf file with 3D coordinates for this molecule, and the segmentation fault also occurs when I try to compute the UFF energy. Reported by: mtrsky. Original Ticket: [openbabel/bugs/853](https://sourceforge.net/p/openbabel/bugs/853)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1233
https://github.com/openbabel/openbabel/issues/1233:249,Energy Efficiency,energy,energy,249,"The following command produces a segmentation fault:. obabel -:""[2H]c1cc(c(cc1[2H])[2H])[2H]"" -o sdf -O temp.sdf --gen3D. I have an sdf file with 3D coordinates for this molecule, and the segmentation fault also occurs when I try to compute the UFF energy. Reported by: mtrsky. Original Ticket: [openbabel/bugs/853](https://sourceforge.net/p/openbabel/bugs/853)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1233
https://github.com/openbabel/openbabel/issues/1234:13,Availability,fault,fault,13,"Segmentation fault when calling:. obabel -:""[Br-][Al](C)(C)C"" -o sdf -O temp.sdf --gen3D. Openbabel 2.3.2. Reported by: mtrsky. Original Ticket: [openbabel/bugs/854](https://sourceforge.net/p/openbabel/bugs/854)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1234
https://github.com/openbabel/openbabel/issues/1235:504,Performance,perform,performs,504,"There is a general problem with substructure matching with azoles (pyrazoles, triazoles, tetrazoles, etc.) bearing a hydrogen on one of nitrogens, ie. 1,2,3-triazole (picture attached). When MOL is converted into smiles then you get c1cnn[nH]1. When you search this pattern against indexed smiles then you won`t obtain any structures bearing a substituent on the nitrogen. A workaround is to search for c1cnnn1 but this require intentional string substitution in smiles from [nH] to n by the script that performs the search. . Reported by: witekmo. Original Ticket: [openbabel/bugs/855](https://sourceforge.net/p/openbabel/bugs/855)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1235
https://github.com/openbabel/openbabel/issues/1237:21,Availability,fault,fault,21,"I get a segmentation fault when computing SMILES after deleting an atom from a simple molecule. I am using openbabel 2.3.2, python 2.7. import openbabel; obc = openbabel.OBConversion(); obc.SetInAndOutFormats('smi', 'smi'); mol = openbabel.OBMol(); obc.ReadString(mol, 'CC1=C(C)C(C(=C(N1)C)C)C'); mol.DeleteAtom(mol.GetAtom(1)); obc.WriteString(mol); ---Segmentation fault-------. My current workaround is to delete the bonds to the atom I want to delete, then split the components. . Reported by: mtrsky. Original Ticket: [openbabel/bugs/857](https://sourceforge.net/p/openbabel/bugs/857)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1237
https://github.com/openbabel/openbabel/issues/1237:367,Availability,fault,fault,367,"I get a segmentation fault when computing SMILES after deleting an atom from a simple molecule. I am using openbabel 2.3.2, python 2.7. import openbabel; obc = openbabel.OBConversion(); obc.SetInAndOutFormats('smi', 'smi'); mol = openbabel.OBMol(); obc.ReadString(mol, 'CC1=C(C)C(C(=C(N1)C)C)C'); mol.DeleteAtom(mol.GetAtom(1)); obc.WriteString(mol); ---Segmentation fault-------. My current workaround is to delete the bonds to the atom I want to delete, then split the components. . Reported by: mtrsky. Original Ticket: [openbabel/bugs/857](https://sourceforge.net/p/openbabel/bugs/857)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1237
https://github.com/openbabel/openbabel/issues/1237:79,Usability,simpl,simple,79,"I get a segmentation fault when computing SMILES after deleting an atom from a simple molecule. I am using openbabel 2.3.2, python 2.7. import openbabel; obc = openbabel.OBConversion(); obc.SetInAndOutFormats('smi', 'smi'); mol = openbabel.OBMol(); obc.ReadString(mol, 'CC1=C(C)C(C(=C(N1)C)C)C'); mol.DeleteAtom(mol.GetAtom(1)); obc.WriteString(mol); ---Segmentation fault-------. My current workaround is to delete the bonds to the atom I want to delete, then split the components. . Reported by: mtrsky. Original Ticket: [openbabel/bugs/857](https://sourceforge.net/p/openbabel/bugs/857)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1237
https://github.com/openbabel/openbabel/issues/1238:68,Availability,error,error,68,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:640,Availability,error,error,640,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:672,Availability,error,error,672,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:775,Availability,error,error,775,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:214,Deployability,install,installed,214,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:727,Deployability,update,updated,727,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:76,Security,Access,AccessInit,76,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:88,Security,hash,hash,88,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:485,Security,Access,AccessInit,485,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1238:497,Security,hash,hash,497,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238
https://github.com/openbabel/openbabel/issues/1240:352,Deployability,install,install,352,"Parsing molden files on Linux seems to fail: benzonitrile on Debian Wheezy (using openbabel 2.3.1+dfsg-4, but Ubuntu has the same package). % obabel -imolden benzonitrile.molf -osmi; C.C.C.C.[H].[H]	. I get the same result on Windows XP if I use the GUI (v2.3.1 or v2.3.2) but using openbabel from python (still on WinXP, same computer, same openbabel install and an up-to-date pythonxy distro), the files are parsed correctly (bindings v1.7/GUI v2.3.1). On OS X, with openbabel v2.3.0 I obtain the correct result:. % obabel benzonitrile.molf -osmi; c1(ccccc1)C#N. I attach the benzonitrile file I have used for testing but can assure you that I tested other files: always OK on OS X or from python on windows; always wrong with obabel GUI on windows and under linux. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/860](https://sourceforge.net/p/openbabel/bugs/860)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1240
https://github.com/openbabel/openbabel/issues/1240:612,Testability,test,testing,612,"Parsing molden files on Linux seems to fail: benzonitrile on Debian Wheezy (using openbabel 2.3.1+dfsg-4, but Ubuntu has the same package). % obabel -imolden benzonitrile.molf -osmi; C.C.C.C.[H].[H]	. I get the same result on Windows XP if I use the GUI (v2.3.1 or v2.3.2) but using openbabel from python (still on WinXP, same computer, same openbabel install and an up-to-date pythonxy distro), the files are parsed correctly (bindings v1.7/GUI v2.3.1). On OS X, with openbabel v2.3.0 I obtain the correct result:. % obabel benzonitrile.molf -osmi; c1(ccccc1)C#N. I attach the benzonitrile file I have used for testing but can assure you that I tested other files: always OK on OS X or from python on windows; always wrong with obabel GUI on windows and under linux. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/860](https://sourceforge.net/p/openbabel/bugs/860)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1240
https://github.com/openbabel/openbabel/issues/1240:646,Testability,test,tested,646,"Parsing molden files on Linux seems to fail: benzonitrile on Debian Wheezy (using openbabel 2.3.1+dfsg-4, but Ubuntu has the same package). % obabel -imolden benzonitrile.molf -osmi; C.C.C.C.[H].[H]	. I get the same result on Windows XP if I use the GUI (v2.3.1 or v2.3.2) but using openbabel from python (still on WinXP, same computer, same openbabel install and an up-to-date pythonxy distro), the files are parsed correctly (bindings v1.7/GUI v2.3.1). On OS X, with openbabel v2.3.0 I obtain the correct result:. % obabel benzonitrile.molf -osmi; c1(ccccc1)C#N. I attach the benzonitrile file I have used for testing but can assure you that I tested other files: always OK on OS X or from python on windows; always wrong with obabel GUI on windows and under linux. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/860](https://sourceforge.net/p/openbabel/bugs/860)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1240
https://github.com/openbabel/openbabel/issues/1241:0,Performance,Load,Loading,0,"Loading the attached file generated with aoforce2g98; http://www.turbomole-gmbh.com/manuals/version_6_4/Documentation_html/node9.html; produces good results with obabel 2.3.0 under OS X (molecule is benzonitrile):. % obabel -V; Open Babel 2.3.0 -- Oct 26 2010 -- 13:39:03; % obabel -o smi tmp/benzonitrile.g98; c1(ccccc1)C#N	tmp/benzonitrile.g98; 1 molecule converted. but crashes openbabel with 2.3.1 on Windows XP, and segfaults Linux (up-to-date Debian Wheezy—openbabel-2.3.1-dfsg-4). This may be related to bug #860. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/861](https://sourceforge.net/p/openbabel/bugs/861)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1241
https://github.com/openbabel/openbabel/issues/1245:458,Availability,fault,fault,458,"Hi guys---. I am in the process of incorporating some 'automatic' 3D-pharmacophore perception code into one of my programs. Nearly all works---except for the perception of ring atoms ---in the manner illustrated in the sample code below ---which mimics your example in the OBRing class description. So I am puzzled --because this 'used to work for me'. Indeed it did back at OpenBabel 2.3.0 or so. At this point when I compile and debug I wind up with a seg fault that traces to one of the OpenBabel ring iterators:. Specifically:; __normal_iterator(const _Iterator& __i) : _M_current(__i) { }. The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in __gnu_cxx::__normal_iterator<OpenBabel::OBRing**, std::vector<OpenBabel::OBRing*, std::allocator<OpenBabel::OBRing*> > >::__normal_iterator (this=0x7fffffffc580, __i=@0x0) at /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686; (gdb) . Trouble shooting I went back to the simplest example mimicking the snippet of example code in your OBRing class description ---. This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2. Thank you for the gift of OpenBabel ---saves me time and effort each an every day. Danni; ________________________SAMPLE___CODE____________________. #include <iostream>; #include <fstream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/ring.h>; using namespace std;; using namespace OpenBabel;. // Include Open Babel classes for OBMol and OBConversion; int main(int argc,char **argv); {; // Read from STDIN (cin) and Write to STDOUT (cout); ifstream fin;; fin.open(""c6h6.smi"",ios::in);; OpenBabel::OBConversion conv(&fin,&cout);; if(conv.SetInAndOutFormats(""SMI"",""CAN"")); {; OBMol mol;; if(conv.Read(&mol)); {; conv.Write(&mol);; //cout << ""WE AR",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245
https://github.com/openbabel/openbabel/issues/1245:603,Availability,FAULT,FAULT,603,"Hi guys---. I am in the process of incorporating some 'automatic' 3D-pharmacophore perception code into one of my programs. Nearly all works---except for the perception of ring atoms ---in the manner illustrated in the sample code below ---which mimics your example in the OBRing class description. So I am puzzled --because this 'used to work for me'. Indeed it did back at OpenBabel 2.3.0 or so. At this point when I compile and debug I wind up with a seg fault that traces to one of the OpenBabel ring iterators:. Specifically:; __normal_iterator(const _Iterator& __i) : _M_current(__i) { }. The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in __gnu_cxx::__normal_iterator<OpenBabel::OBRing**, std::vector<OpenBabel::OBRing*, std::allocator<OpenBabel::OBRing*> > >::__normal_iterator (this=0x7fffffffc580, __i=@0x0) at /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686; (gdb) . Trouble shooting I went back to the simplest example mimicking the snippet of example code in your OBRing class description ---. This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2. Thank you for the gift of OpenBabel ---saves me time and effort each an every day. Danni; ________________________SAMPLE___CODE____________________. #include <iostream>; #include <fstream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/ring.h>; using namespace std;; using namespace OpenBabel;. // Include Open Babel classes for OBMol and OBConversion; int main(int argc,char **argv); {; // Read from STDIN (cin) and Write to STDOUT (cout); ifstream fin;; fin.open(""c6h6.smi"",ios::in);; OpenBabel::OBConversion conv(&fin,&cout);; if(conv.SetInAndOutFormats(""SMI"",""CAN"")); {; OBMol mol;; if(conv.Read(&mol)); {; conv.Write(&mol);; //cout << ""WE AR",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245
https://github.com/openbabel/openbabel/issues/1245:660,Availability,fault,fault,660,"Hi guys---. I am in the process of incorporating some 'automatic' 3D-pharmacophore perception code into one of my programs. Nearly all works---except for the perception of ring atoms ---in the manner illustrated in the sample code below ---which mimics your example in the OBRing class description. So I am puzzled --because this 'used to work for me'. Indeed it did back at OpenBabel 2.3.0 or so. At this point when I compile and debug I wind up with a seg fault that traces to one of the OpenBabel ring iterators:. Specifically:; __normal_iterator(const _Iterator& __i) : _M_current(__i) { }. The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in __gnu_cxx::__normal_iterator<OpenBabel::OBRing**, std::vector<OpenBabel::OBRing*, std::allocator<OpenBabel::OBRing*> > >::__normal_iterator (this=0x7fffffffc580, __i=@0x0) at /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686; (gdb) . Trouble shooting I went back to the simplest example mimicking the snippet of example code in your OBRing class description ---. This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2. Thank you for the gift of OpenBabel ---saves me time and effort each an every day. Danni; ________________________SAMPLE___CODE____________________. #include <iostream>; #include <fstream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/ring.h>; using namespace std;; using namespace OpenBabel;. // Include Open Babel classes for OBMol and OBConversion; int main(int argc,char **argv); {; // Read from STDIN (cin) and Write to STDOUT (cout); ifstream fin;; fin.open(""c6h6.smi"",ios::in);; OpenBabel::OBConversion conv(&fin,&cout);; if(conv.SetInAndOutFormats(""SMI"",""CAN"")); {; OBMol mol;; if(conv.Read(&mol)); {; conv.Write(&mol);; //cout << ""WE AR",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245
https://github.com/openbabel/openbabel/issues/1245:1164,Availability,error,error,1164," manner illustrated in the sample code below ---which mimics your example in the OBRing class description. So I am puzzled --because this 'used to work for me'. Indeed it did back at OpenBabel 2.3.0 or so. At this point when I compile and debug I wind up with a seg fault that traces to one of the OpenBabel ring iterators:. Specifically:; __normal_iterator(const _Iterator& __i) : _M_current(__i) { }. The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in __gnu_cxx::__normal_iterator<OpenBabel::OBRing**, std::vector<OpenBabel::OBRing*, std::allocator<OpenBabel::OBRing*> > >::__normal_iterator (this=0x7fffffffc580, __i=@0x0) at /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686; (gdb) . Trouble shooting I went back to the simplest example mimicking the snippet of example code in your OBRing class description ---. This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2. Thank you for the gift of OpenBabel ---saves me time and effort each an every day. Danni; ________________________SAMPLE___CODE____________________. #include <iostream>; #include <fstream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/ring.h>; using namespace std;; using namespace OpenBabel;. // Include Open Babel classes for OBMol and OBConversion; int main(int argc,char **argv); {; // Read from STDIN (cin) and Write to STDOUT (cout); ifstream fin;; fin.open(""c6h6.smi"",ios::in);; OpenBabel::OBConversion conv(&fin,&cout);; if(conv.SetInAndOutFormats(""SMI"",""CAN"")); {; OBMol mol;; if(conv.Read(&mol)); {; conv.Write(&mol);; //cout << ""WE ARE ABOVE "" << endl;; vector<OBRing*> vr;; vr = mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j;; vector<OBRing*> *rlist = (vector<OBRing*>*)mol.GetData(""RingList"");; for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245
https://github.com/openbabel/openbabel/issues/1245:1005,Usability,simpl,simplest,1005,"of incorporating some 'automatic' 3D-pharmacophore perception code into one of my programs. Nearly all works---except for the perception of ring atoms ---in the manner illustrated in the sample code below ---which mimics your example in the OBRing class description. So I am puzzled --because this 'used to work for me'. Indeed it did back at OpenBabel 2.3.0 or so. At this point when I compile and debug I wind up with a seg fault that traces to one of the OpenBabel ring iterators:. Specifically:; __normal_iterator(const _Iterator& __i) : _M_current(__i) { }. The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in __gnu_cxx::__normal_iterator<OpenBabel::OBRing**, std::vector<OpenBabel::OBRing*, std::allocator<OpenBabel::OBRing*> > >::__normal_iterator (this=0x7fffffffc580, __i=@0x0) at /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686; (gdb) . Trouble shooting I went back to the simplest example mimicking the snippet of example code in your OBRing class description ---. This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2. Thank you for the gift of OpenBabel ---saves me time and effort each an every day. Danni; ________________________SAMPLE___CODE____________________. #include <iostream>; #include <fstream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/ring.h>; using namespace std;; using namespace OpenBabel;. // Include Open Babel classes for OBMol and OBConversion; int main(int argc,char **argv); {; // Read from STDIN (cin) and Write to STDOUT (cout); ifstream fin;; fin.open(""c6h6.smi"",ios::in);; OpenBabel::OBConversion conv(&fin,&cout);; if(conv.SetInAndOutFormats(""SMI"",""CAN"")); {; OBMol mol;; if(conv.Read(&mol)); {; conv.Write(&mol);; //cout << ""WE ARE ABOVE "" << endl;; vector<OBRin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245
https://github.com/openbabel/openbabel/issues/1246:36,Availability,fault,fault,36,Follow up on the last post---on seg-fault associated with OBRing code----Attaching the RING2.cc file --pasted on the last post. Danni. Reported by: dannil54. Original Ticket: [openbabel/bugs/866](https://sourceforge.net/p/openbabel/bugs/866),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1246
https://github.com/openbabel/openbabel/issues/1247:158,Availability,error,error,158,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1247:277,Availability,error,error,277,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1247:1273,Availability,error,error,1273,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1247:1439,Availability,error,error,1439,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1247:1472,Availability,error,error,1472,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1247:1564,Availability,error,error,1564,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1247:1533,Energy Efficiency,allocate,allocated,1533,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1247:295,Safety,detect,detected,295,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247
https://github.com/openbabel/openbabel/issues/1248:196,Availability,fault,faults,196,This post is in reference to the bug posts 865/866 and just documents a 'workaround'. While for some strange reason indirect access to the begin() and end() member functions leads to segmentation faults as illustrated:; http://openbabel.org/dev-api/classOpenBabel_1_1OBRing.shtml. for (i =rlist->begin();i != rlist->end();++i). Accessing the member functions begin() and end() for the 'ring loop'; using vr.begin() and vr.end() sidesteps the segmentation violation issue and the ring atom perception code works fine with that replacement. Both approaches should work --but I may be missing something (the indirect access should work). vector<OBRing*> vr;; vr = mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j;. for (i =vr.begin();i != vr.end();++i); { ; for(j = (*i)->_path.begin(); j != (*i)->_path.end(); ++j); cout << *j << ' ';; cout << endl;; }. Reported by: dannil54. Original Ticket: [openbabel/bugs/868](https://sourceforge.net/p/openbabel/bugs/868),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1248
https://github.com/openbabel/openbabel/issues/1248:125,Security,access,access,125,This post is in reference to the bug posts 865/866 and just documents a 'workaround'. While for some strange reason indirect access to the begin() and end() member functions leads to segmentation faults as illustrated:; http://openbabel.org/dev-api/classOpenBabel_1_1OBRing.shtml. for (i =rlist->begin();i != rlist->end();++i). Accessing the member functions begin() and end() for the 'ring loop'; using vr.begin() and vr.end() sidesteps the segmentation violation issue and the ring atom perception code works fine with that replacement. Both approaches should work --but I may be missing something (the indirect access should work). vector<OBRing*> vr;; vr = mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j;. for (i =vr.begin();i != vr.end();++i); { ; for(j = (*i)->_path.begin(); j != (*i)->_path.end(); ++j); cout << *j << ' ';; cout << endl;; }. Reported by: dannil54. Original Ticket: [openbabel/bugs/868](https://sourceforge.net/p/openbabel/bugs/868),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1248
https://github.com/openbabel/openbabel/issues/1248:328,Security,Access,Accessing,328,This post is in reference to the bug posts 865/866 and just documents a 'workaround'. While for some strange reason indirect access to the begin() and end() member functions leads to segmentation faults as illustrated:; http://openbabel.org/dev-api/classOpenBabel_1_1OBRing.shtml. for (i =rlist->begin();i != rlist->end();++i). Accessing the member functions begin() and end() for the 'ring loop'; using vr.begin() and vr.end() sidesteps the segmentation violation issue and the ring atom perception code works fine with that replacement. Both approaches should work --but I may be missing something (the indirect access should work). vector<OBRing*> vr;; vr = mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j;. for (i =vr.begin();i != vr.end();++i); { ; for(j = (*i)->_path.begin(); j != (*i)->_path.end(); ++j); cout << *j << ' ';; cout << endl;; }. Reported by: dannil54. Original Ticket: [openbabel/bugs/868](https://sourceforge.net/p/openbabel/bugs/868),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1248
https://github.com/openbabel/openbabel/issues/1248:614,Security,access,access,614,This post is in reference to the bug posts 865/866 and just documents a 'workaround'. While for some strange reason indirect access to the begin() and end() member functions leads to segmentation faults as illustrated:; http://openbabel.org/dev-api/classOpenBabel_1_1OBRing.shtml. for (i =rlist->begin();i != rlist->end();++i). Accessing the member functions begin() and end() for the 'ring loop'; using vr.begin() and vr.end() sidesteps the segmentation violation issue and the ring atom perception code works fine with that replacement. Both approaches should work --but I may be missing something (the indirect access should work). vector<OBRing*> vr;; vr = mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j;. for (i =vr.begin();i != vr.end();++i); { ; for(j = (*i)->_path.begin(); j != (*i)->_path.end(); ++j); cout << *j << ' ';; cout << endl;; }. Reported by: dannil54. Original Ticket: [openbabel/bugs/868](https://sourceforge.net/p/openbabel/bugs/868),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1248
https://github.com/openbabel/openbabel/issues/1249:694,Availability,error,error,694,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249
https://github.com/openbabel/openbabel/issues/1249:892,Availability,error,error,892,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249
https://github.com/openbabel/openbabel/issues/1249:80,Modifiability,config,configured,80,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249
https://github.com/openbabel/openbabel/issues/1249:603,Testability,test,test,603,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249
https://github.com/openbabel/openbabel/issues/1249:660,Testability,test,test,660,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249
https://github.com/openbabel/openbabel/issues/1249:669,Testability,test,test,669,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249
https://github.com/openbabel/openbabel/issues/1250:126,Availability,Error,Error,126,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250
https://github.com/openbabel/openbabel/issues/1250:222,Availability,Error,Error,222,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250
https://github.com/openbabel/openbabel/issues/1250:318,Availability,Error,Error,318,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250
https://github.com/openbabel/openbabel/issues/1250:592,Integrability,message,messages,592,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250
https://github.com/openbabel/openbabel/issues/1250:582,Security,audit,audit,582,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250
https://github.com/openbabel/openbabel/issues/1250:588,Testability,log,log,588,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250
https://github.com/openbabel/openbabel/issues/1250:357,Usability,simpl,simple,357,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250
https://github.com/openbabel/openbabel/pull/2:28,Testability,test,testing,28,Small addition to pybel and testing of the new gitted openbabel!,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2
https://github.com/openbabel/openbabel/pull/3:144,Availability,error,errors,144,"when lpmdformat.cpp was committed, all the plus symbols had been deleted from the file. Some of this was corrected when Geoff fixed the compile errors, this fixes the rest by going back to the patch on sourceforge and using the file from that patch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/3
https://github.com/openbabel/openbabel/pull/3:193,Deployability,patch,patch,193,"when lpmdformat.cpp was committed, all the plus symbols had been deleted from the file. Some of this was corrected when Geoff fixed the compile errors, this fixes the rest by going back to the patch on sourceforge and using the file from that patch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/3
https://github.com/openbabel/openbabel/pull/3:243,Deployability,patch,patch,243,"when lpmdformat.cpp was committed, all the plus symbols had been deleted from the file. Some of this was corrected when Geoff fixed the compile errors, this fixes the rest by going back to the patch on sourceforge and using the file from that patch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/3
https://github.com/openbabel/openbabel/issues/1251:26,Energy Efficiency,charge,charge,26,"Bug: In version 2.3.2 EEM charge scheme stopped working. When you try to calculate EEM charges obabel crashes with segfault. Reason:; In file **src/charges/eem.cpp** line **302**. unsigned int i, k;. file **src/charges/eem.cpp** line **316**. for (i = dim - 1; i >= 0; --i). As can be seen **unsigned** variable is used as **signed** which results in underflow and as consequence a segfault when **i** is used as array subscript. . Reported by: titovsmail. Original Ticket: [openbabel/bugs/871](https://sourceforge.net/p/openbabel/bugs/871)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1251
https://github.com/openbabel/openbabel/issues/1251:87,Energy Efficiency,charge,charges,87,"Bug: In version 2.3.2 EEM charge scheme stopped working. When you try to calculate EEM charges obabel crashes with segfault. Reason:; In file **src/charges/eem.cpp** line **302**. unsigned int i, k;. file **src/charges/eem.cpp** line **316**. for (i = dim - 1; i >= 0; --i). As can be seen **unsigned** variable is used as **signed** which results in underflow and as consequence a segfault when **i** is used as array subscript. . Reported by: titovsmail. Original Ticket: [openbabel/bugs/871](https://sourceforge.net/p/openbabel/bugs/871)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1251
https://github.com/openbabel/openbabel/issues/1251:148,Energy Efficiency,charge,charges,148,"Bug: In version 2.3.2 EEM charge scheme stopped working. When you try to calculate EEM charges obabel crashes with segfault. Reason:; In file **src/charges/eem.cpp** line **302**. unsigned int i, k;. file **src/charges/eem.cpp** line **316**. for (i = dim - 1; i >= 0; --i). As can be seen **unsigned** variable is used as **signed** which results in underflow and as consequence a segfault when **i** is used as array subscript. . Reported by: titovsmail. Original Ticket: [openbabel/bugs/871](https://sourceforge.net/p/openbabel/bugs/871)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1251
https://github.com/openbabel/openbabel/issues/1251:211,Energy Efficiency,charge,charges,211,"Bug: In version 2.3.2 EEM charge scheme stopped working. When you try to calculate EEM charges obabel crashes with segfault. Reason:; In file **src/charges/eem.cpp** line **302**. unsigned int i, k;. file **src/charges/eem.cpp** line **316**. for (i = dim - 1; i >= 0; --i). As can be seen **unsigned** variable is used as **signed** which results in underflow and as consequence a segfault when **i** is used as array subscript. . Reported by: titovsmail. Original Ticket: [openbabel/bugs/871](https://sourceforge.net/p/openbabel/bugs/871)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1251
https://github.com/openbabel/openbabel/issues/1251:303,Modifiability,variab,variable,303,"Bug: In version 2.3.2 EEM charge scheme stopped working. When you try to calculate EEM charges obabel crashes with segfault. Reason:; In file **src/charges/eem.cpp** line **302**. unsigned int i, k;. file **src/charges/eem.cpp** line **316**. for (i = dim - 1; i >= 0; --i). As can be seen **unsigned** variable is used as **signed** which results in underflow and as consequence a segfault when **i** is used as array subscript. . Reported by: titovsmail. Original Ticket: [openbabel/bugs/871](https://sourceforge.net/p/openbabel/bugs/871)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1251
https://github.com/openbabel/openbabel/issues/1252:124,Availability,echo,echo,124,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252
https://github.com/openbabel/openbabel/issues/1252:212,Availability,error,error,212,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252
https://github.com/openbabel/openbabel/issues/1252:481,Integrability,depend,depends,481,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252
https://github.com/openbabel/openbabel/issues/1252:48,Modifiability,variab,variable,48,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252
https://github.com/openbabel/openbabel/issues/1252:218,Safety,detect,detector,218,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252
https://github.com/openbabel/openbabel/pull/6:20,Availability,avail,available,20,"If PkgConfig is not available then we cannot find Cairo, but this should; fail gracefully so that systems without Cario can simply disbale options.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/6
https://github.com/openbabel/openbabel/pull/6:124,Usability,simpl,simply,124,"If PkgConfig is not available then we cannot find Cairo, but this should; fail gracefully so that systems without Cario can simply disbale options.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/6
https://github.com/openbabel/openbabel/pull/7:120,Availability,avail,available,120,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7
https://github.com/openbabel/openbabel/pull/7:528,Deployability,install,installs,528,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7
https://github.com/openbabel/openbabel/pull/7:349,Modifiability,config,config,349,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7
https://github.com/openbabel/openbabel/pull/7:435,Modifiability,config,config,435,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7
https://github.com/openbabel/openbabel/pull/7:478,Testability,test,testing,478,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7
https://github.com/openbabel/openbabel/pull/7:571,Testability,test,testing,571,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7
https://github.com/openbabel/openbabel/issues/1254:158,Availability,echo,echo,158,"If you have a cyclobutenedione drawn in the aromatic form, openbabel 2.3.2 will canonicalize it to cyclobutadione, hydrogenating the double bond in the ring. echo 'CCOc1c(NCC)c(=O)c1=O'| obabel -ismi -ocan; CCNC1C(=O)C(=O)C1OCC. I don't know if cyclobutenedione is really aromatic or not, but if it is drawn as aromatic, then it can't have two sp3 carbons in the ring the way the canonicalization has it. Reported by: jeff-janes. Original Ticket: [openbabel/bugs/874](https://sourceforge.net/p/openbabel/bugs/874)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1254
https://github.com/openbabel/openbabel/issues/1255:457,Availability,echo,echo,457,"(Discussed on openbabel-discuss mailing list, under same subject). I'm using Open Babel 2.3.2 to canonicalize some SMILES strings. I thought that each fragment of a disconnected SMILES would be canonicalized separately (which I believe agrees what what is explained in http://openbabel.org/dev-api/canonical_code_algorithm.shtml). However, that is not the case in the below example, adding a fragment causes the first fragment to canonicalize differently:. echo 'OC(=O)[C@@H]([C@H](C(=O)O)O)O.CNC[C@@H](c1ccc(c(c1)O)O)O' | obabel -ismi -ocan; OC(=O)[C@@H]([C@H](C(=O)O)O)O.CNC[C@@H](c1ccc(c(c1)O)O)O; 1 molecule converted. echo 'OC(=O)[C@@H]([C@H](C(=O)O)O)O' | obabel -ismi -ocan; O[C@H]([C@H](C(=O)O)O)C(=O)O; 1 molecule converted. Reported by: jeff-janes. Original Ticket: [openbabel/bugs/875](https://sourceforge.net/p/openbabel/bugs/875)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1255
https://github.com/openbabel/openbabel/issues/1255:623,Availability,echo,echo,623,"(Discussed on openbabel-discuss mailing list, under same subject). I'm using Open Babel 2.3.2 to canonicalize some SMILES strings. I thought that each fragment of a disconnected SMILES would be canonicalized separately (which I believe agrees what what is explained in http://openbabel.org/dev-api/canonical_code_algorithm.shtml). However, that is not the case in the below example, adding a fragment causes the first fragment to canonicalize differently:. echo 'OC(=O)[C@@H]([C@H](C(=O)O)O)O.CNC[C@@H](c1ccc(c(c1)O)O)O' | obabel -ismi -ocan; OC(=O)[C@@H]([C@H](C(=O)O)O)O.CNC[C@@H](c1ccc(c(c1)O)O)O; 1 molecule converted. echo 'OC(=O)[C@@H]([C@H](C(=O)O)O)O' | obabel -ismi -ocan; O[C@H]([C@H](C(=O)O)O)C(=O)O; 1 molecule converted. Reported by: jeff-janes. Original Ticket: [openbabel/bugs/875](https://sourceforge.net/p/openbabel/bugs/875)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1255
https://github.com/openbabel/openbabel/pull/10:200,Availability,error,error,200,"Fixed abinitformat.cpp so that it properly reads abinit (6.15.2) output with multiple lines of typat, and corrects reading of lattice and atomic coordinates. Also fixed src/GUI/OBGUI.cpp . Was giving error on compile. Work now with version 6 and 7 of abinit. Changed cifformat.cpp to output in fractional coordinates.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/10
https://github.com/openbabel/openbabel/issues/1256:64,Modifiability,plugin,plugin,64,"In some MDL files, I found the R# symbols can not handle by MDL plugin. for example:; 51.0955 -14.3670 0.0000 R# 0 0 0 0 0 0 0 0 0 0 0 0. And in bool MDLFormat::TestForAlias() it does not support this format. if(symbol.size()==1 || isdigit(symbol[1]) || symbol[1]=='\'' || symbol[1]=='¢'). Thank you. Reported by: axot. Original Ticket: [openbabel/bugs/876](https://sourceforge.net/p/openbabel/bugs/876)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1256
https://github.com/openbabel/openbabel/issues/1256:161,Testability,Test,TestForAlias,161,"In some MDL files, I found the R# symbols can not handle by MDL plugin. for example:; 51.0955 -14.3670 0.0000 R# 0 0 0 0 0 0 0 0 0 0 0 0. And in bool MDLFormat::TestForAlias() it does not support this format. if(symbol.size()==1 || isdigit(symbol[1]) || symbol[1]=='\'' || symbol[1]=='¢'). Thank you. Reported by: axot. Original Ticket: [openbabel/bugs/876](https://sourceforge.net/p/openbabel/bugs/876)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1256
https://github.com/openbabel/openbabel/issues/1257:317,Deployability,release,release,317,"The obabel command line executable has a bug on the Mac OS X operating system. If both the input and output format is CML then the conversion fails. This functions as expected on Windows and Linux, and does not appear to pose a problem for other formats, such as SDF and XYZ, on Mac OS X. This affected both the last release (2.3.2) and the tip of master using the latest Snow Leopard patched release and build with GCC 4.2 that comes as default. Reported by: @cryos. Original Ticket: [openbabel/bugs/877](https://sourceforge.net/p/openbabel/bugs/877)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1257
https://github.com/openbabel/openbabel/issues/1257:385,Deployability,patch,patched,385,"The obabel command line executable has a bug on the Mac OS X operating system. If both the input and output format is CML then the conversion fails. This functions as expected on Windows and Linux, and does not appear to pose a problem for other formats, such as SDF and XYZ, on Mac OS X. This affected both the last release (2.3.2) and the tip of master using the latest Snow Leopard patched release and build with GCC 4.2 that comes as default. Reported by: @cryos. Original Ticket: [openbabel/bugs/877](https://sourceforge.net/p/openbabel/bugs/877)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1257
https://github.com/openbabel/openbabel/issues/1257:393,Deployability,release,release,393,"The obabel command line executable has a bug on the Mac OS X operating system. If both the input and output format is CML then the conversion fails. This functions as expected on Windows and Linux, and does not appear to pose a problem for other formats, such as SDF and XYZ, on Mac OS X. This affected both the last release (2.3.2) and the tip of master using the latest Snow Leopard patched release and build with GCC 4.2 that comes as default. Reported by: @cryos. Original Ticket: [openbabel/bugs/877](https://sourceforge.net/p/openbabel/bugs/877)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1257
https://github.com/openbabel/openbabel/issues/1259:118,Availability,echo,echo,118,"Hi,. if you specify any resolution to PNG export via -xp,; the resulting PNG file has 0 bytes. To reproduce:. Works:; echo ""CC"" | ./bin/babel -i smi -o png test.png. Doesn't work:; echo ""CC"" | ./bin/babel -i smi -o png -xp 300 test.png. This is reproducible on Ubuntu 12.04, both with ; binary packages 2.3.1+dfsg-4 and and a local build of today's SVN r5063. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/879](https://sourceforge.net/p/openbabel/bugs/879)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259
https://github.com/openbabel/openbabel/issues/1259:181,Availability,echo,echo,181,"Hi,. if you specify any resolution to PNG export via -xp,; the resulting PNG file has 0 bytes. To reproduce:. Works:; echo ""CC"" | ./bin/babel -i smi -o png test.png. Doesn't work:; echo ""CC"" | ./bin/babel -i smi -o png -xp 300 test.png. This is reproducible on Ubuntu 12.04, both with ; binary packages 2.3.1+dfsg-4 and and a local build of today's SVN r5063. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/879](https://sourceforge.net/p/openbabel/bugs/879)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259
https://github.com/openbabel/openbabel/issues/1259:156,Testability,test,test,156,"Hi,. if you specify any resolution to PNG export via -xp,; the resulting PNG file has 0 bytes. To reproduce:. Works:; echo ""CC"" | ./bin/babel -i smi -o png test.png. Doesn't work:; echo ""CC"" | ./bin/babel -i smi -o png -xp 300 test.png. This is reproducible on Ubuntu 12.04, both with ; binary packages 2.3.1+dfsg-4 and and a local build of today's SVN r5063. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/879](https://sourceforge.net/p/openbabel/bugs/879)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259
https://github.com/openbabel/openbabel/issues/1259:227,Testability,test,test,227,"Hi,. if you specify any resolution to PNG export via -xp,; the resulting PNG file has 0 bytes. To reproduce:. Works:; echo ""CC"" | ./bin/babel -i smi -o png test.png. Doesn't work:; echo ""CC"" | ./bin/babel -i smi -o png -xp 300 test.png. This is reproducible on Ubuntu 12.04, both with ; binary packages 2.3.1+dfsg-4 and and a local build of today's SVN r5063. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/879](https://sourceforge.net/p/openbabel/bugs/879)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259
https://github.com/openbabel/openbabel/issues/1261:182,Integrability,message,messages,182,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261
https://github.com/openbabel/openbabel/issues/1261:283,Integrability,message,messages,283,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261
https://github.com/openbabel/openbabel/issues/1261:172,Security,audit,audit,172,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261
https://github.com/openbabel/openbabel/issues/1261:273,Security,audit,audit,273,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261
https://github.com/openbabel/openbabel/issues/1261:178,Testability,log,log,178,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261
https://github.com/openbabel/openbabel/issues/1261:279,Testability,log,log,279,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261
https://github.com/openbabel/openbabel/issues/1262:117,Deployability,release,release,117,"This bug was previously submitted and the ticket closed. However, this bug is still present in both the stable 2.3.2 release and the latest svn version (5063). An example of the problem:. obabel -:""C(=O)C=CO"" -omol2 -p 7.4 exhibits several problems: the atom types are wrong, there are the wrong number of hydrogens, and the charges add to -5. Reported by: dhouston6. Original Ticket: [openbabel/bugs/882](https://sourceforge.net/p/openbabel/bugs/882)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1262
https://github.com/openbabel/openbabel/issues/1262:325,Energy Efficiency,charge,charges,325,"This bug was previously submitted and the ticket closed. However, this bug is still present in both the stable 2.3.2 release and the latest svn version (5063). An example of the problem:. obabel -:""C(=O)C=CO"" -omol2 -p 7.4 exhibits several problems: the atom types are wrong, there are the wrong number of hydrogens, and the charges add to -5. Reported by: dhouston6. Original Ticket: [openbabel/bugs/882](https://sourceforge.net/p/openbabel/bugs/882)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1262
https://github.com/openbabel/openbabel/pull/11:21,Deployability,update,updated,21,This branch contains updated versions of the tests that are all contained in a single executable.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/11
https://github.com/openbabel/openbabel/pull/11:45,Testability,test,tests,45,This branch contains updated versions of the tests that are all contained in a single executable.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/11
https://github.com/openbabel/openbabel/issues/1263:673,Availability,avail,available,673,"I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3. However, it seems that eigen3 is not detected at all. When I do . import openbabel as ob; ob.OBAlign. I get an AttributeError. Switching back to eigen2 did not work either. . Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere. SP. Reported by: shyuep. Original Ticket: [openbabel/bugs/883](https://sourceforge.net/p/openbabel/bugs/883)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263
https://github.com/openbabel/openbabel/issues/1263:242,Deployability,install,installation,242,"I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3. However, it seems that eigen3 is not detected at all. When I do . import openbabel as ob; ob.OBAlign. I get an AttributeError. Switching back to eigen2 did not work either. . Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere. SP. Reported by: shyuep. Original Ticket: [openbabel/bugs/883](https://sourceforge.net/p/openbabel/bugs/883)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263
https://github.com/openbabel/openbabel/issues/1263:260,Deployability,install,installation-tips-for-optional-libraries,260,"I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3. However, it seems that eigen3 is not detected at all. When I do . import openbabel as ob; ob.OBAlign. I get an AttributeError. Switching back to eigen2 did not work either. . Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere. SP. Reported by: shyuep. Original Ticket: [openbabel/bugs/883](https://sourceforge.net/p/openbabel/bugs/883)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263
https://github.com/openbabel/openbabel/issues/1263:329,Deployability,upgrade,upgraded,329,"I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3. However, it seems that eigen3 is not detected at all. When I do . import openbabel as ob; ob.OBAlign. I get an AttributeError. Switching back to eigen2 did not work either. . Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere. SP. Reported by: shyuep. Original Ticket: [openbabel/bugs/883](https://sourceforge.net/p/openbabel/bugs/883)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263
https://github.com/openbabel/openbabel/issues/1263:406,Safety,detect,detected,406,"I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3. However, it seems that eigen3 is not detected at all. When I do . import openbabel as ob; ob.OBAlign. I get an AttributeError. Switching back to eigen2 did not work either. . Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere. SP. Reported by: shyuep. Original Ticket: [openbabel/bugs/883](https://sourceforge.net/p/openbabel/bugs/883)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263
https://github.com/openbabel/openbabel/pull/12:0,Safety,Avoid,Avoids,0,Avoids an extra function call on every iteration.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/12
https://github.com/openbabel/openbabel/pull/13:347,Deployability,install,installed,347,"Under certain circumstances, pkgconfig won't successfully return the include and library paths for Cairo, however cmake will still manage to find them with find_path and find_library. This change just ensures find_path and find_library are still run, even if pkgconfig doesn't return any path hints. Specifically, this can be an issue if Cairo is installed using Homebrew on Mac OS X, which just relies on X11/XQuartz for some of its dependencies. This is a problem because /opt/X11/lib/pkgconfig/ is not visible to pkgconfig by default, so instead of returning the include and library paths for Cairo, pkgconfig just complains that dependencies are missing (even though they aren't). Even without the hints from pkgconfig, cmake will still manage to find the correct paths in most cases, especially if they are sensible like the Homebrew defaults of /usr/local/lib/libcairo.dylib and /usr/local/include/cairo. Related bug report: http://sourceforge.net/p/openbabel/bugs/849/; Related homebrew issue: https://github.com/mxcl/homebrew/issues/14123",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/13
https://github.com/openbabel/openbabel/pull/13:434,Integrability,depend,dependencies,434,"Under certain circumstances, pkgconfig won't successfully return the include and library paths for Cairo, however cmake will still manage to find them with find_path and find_library. This change just ensures find_path and find_library are still run, even if pkgconfig doesn't return any path hints. Specifically, this can be an issue if Cairo is installed using Homebrew on Mac OS X, which just relies on X11/XQuartz for some of its dependencies. This is a problem because /opt/X11/lib/pkgconfig/ is not visible to pkgconfig by default, so instead of returning the include and library paths for Cairo, pkgconfig just complains that dependencies are missing (even though they aren't). Even without the hints from pkgconfig, cmake will still manage to find the correct paths in most cases, especially if they are sensible like the Homebrew defaults of /usr/local/lib/libcairo.dylib and /usr/local/include/cairo. Related bug report: http://sourceforge.net/p/openbabel/bugs/849/; Related homebrew issue: https://github.com/mxcl/homebrew/issues/14123",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/13
https://github.com/openbabel/openbabel/pull/13:633,Integrability,depend,dependencies,633,"Under certain circumstances, pkgconfig won't successfully return the include and library paths for Cairo, however cmake will still manage to find them with find_path and find_library. This change just ensures find_path and find_library are still run, even if pkgconfig doesn't return any path hints. Specifically, this can be an issue if Cairo is installed using Homebrew on Mac OS X, which just relies on X11/XQuartz for some of its dependencies. This is a problem because /opt/X11/lib/pkgconfig/ is not visible to pkgconfig by default, so instead of returning the include and library paths for Cairo, pkgconfig just complains that dependencies are missing (even though they aren't). Even without the hints from pkgconfig, cmake will still manage to find the correct paths in most cases, especially if they are sensible like the Homebrew defaults of /usr/local/lib/libcairo.dylib and /usr/local/include/cairo. Related bug report: http://sourceforge.net/p/openbabel/bugs/849/; Related homebrew issue: https://github.com/mxcl/homebrew/issues/14123",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/13
https://github.com/openbabel/openbabel/pull/14:197,Integrability,depend,depend,197,"These changes add two new formats: [ChemDoodle JSON](http://web.chemdoodle.com/docs/chemdoodle-json-format) and [PubChem JSON](http://pubchem.ncbi.nlm.nih.gov/pug_rest/PUG_REST.html). Both formats depend on [JsonCpp](http://jsoncpp.sourceforge.net), a public domain JSON reader and writer library for C++. This has been added as a single amalgamated file to the project, so it is not required as an external dependency. I'm not sure how to provide unit tests and/or example files, but I can do so if needed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/14
https://github.com/openbabel/openbabel/pull/14:408,Integrability,depend,dependency,408,"These changes add two new formats: [ChemDoodle JSON](http://web.chemdoodle.com/docs/chemdoodle-json-format) and [PubChem JSON](http://pubchem.ncbi.nlm.nih.gov/pug_rest/PUG_REST.html). Both formats depend on [JsonCpp](http://jsoncpp.sourceforge.net), a public domain JSON reader and writer library for C++. This has been added as a single amalgamated file to the project, so it is not required as an external dependency. I'm not sure how to provide unit tests and/or example files, but I can do so if needed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/14
https://github.com/openbabel/openbabel/pull/14:453,Testability,test,tests,453,"These changes add two new formats: [ChemDoodle JSON](http://web.chemdoodle.com/docs/chemdoodle-json-format) and [PubChem JSON](http://pubchem.ncbi.nlm.nih.gov/pug_rest/PUG_REST.html). Both formats depend on [JsonCpp](http://jsoncpp.sourceforge.net), a public domain JSON reader and writer library for C++. This has been added as a single amalgamated file to the project, so it is not required as an external dependency. I'm not sure how to provide unit tests and/or example files, but I can do so if needed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/14
https://github.com/openbabel/openbabel/issues/1264:86,Energy Efficiency,Charge,Charge,86,"use this command ""obabel -:""[Hg](C)C"" -ogjf 1.gjf --gen3d""; #Put Keywords Here, check Charge and Multiplicity.; 0 1; Hg 0.99531 -0.06213 0.07822; C -nan -nan -nan; C 3.07531 -0.06213 0.07822; H 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 3.69299 -0.75247 -0.45731; H 4.00317 0.34562 0.42133. HIER; Not a valid input format1 molecule converted; with the ""-nan"",I can't use this gjf to Gaussian09. Reported by: sch891018. Original Ticket: [openbabel/bugs/884](https://sourceforge.net/p/openbabel/bugs/884)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1264
https://github.com/openbabel/openbabel/issues/1265:321,Security,access,access,321,"When repeatedly recanonicalizing a partial molecule (i.e. using an OBBitMap to select different parts of the molecule), I get the following report from valgrind(1). The stereo code seems to holding a reference to data that's been deallocated. > canon.cpp line 1722 deallocates it; > canon.cpp line 1739 causes an invalid access; > (via OpenBabel::OBTetrahedralStereo::IsValid() const (tetrahedral.cpp:128). Here is the valgrind output. This code is embedded in a FastCGI framework, so the malloc/dealloc are from that package, but I don't think that contributes. ```~~; ==30812== Invalid read of size 8; ==30812== at 0x4FD8BB5: OpenBabel::OBTetrahedralStereo::IsValid() const (tetrahedral.cpp:128); ==30812== by 0x4FD9C6B: OpenBabel::OBTetrahedralStereo::GetConfig(OpenBabel::OBStereo::Winding, OpenBabel::OBStereo::View) const (tetrahedral.cpp:166); ==30812== by 0x4EBA294: OpenBabel::CanonicalLabelsImpl::CalcCanonicalLabels(OpenBabel::OBMol*, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::v\; ector<OpenBabel::OBStereoUnit, std::allocator<OpenBabel::OBStereoUnit> > const&, OpenBabel::OBBitVec const&, OpenBabel::OBStereoFacade*, int, bool) (canon.cpp:1506); ==30812== by 0x4EADFBB: OpenBabel::CanonicalLabels(OpenBabel::OBMol*, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<unsigned int, std::allocator<unsigned int> >&, OpenBabel::OBBitVec const&, int\; , bool) (canon.cpp:1739); ==30812== by 0xB7841A7: OpenBabel::OBMol2Cansmi::CreateFragCansmiString(OpenBabel::OBMol&, OpenBabel::OBBitVec&, bool, char*) (smilesformat.cpp:3989); ==30812== by 0xB785C6E: OpenBabel::CreateCansmiString(OpenBabel::OBMol&, char*, OpenBabel::OBBitVec&, bool, OpenBabel::OBConversion*) (smilesformat.cpp:4186); ==30812== by 0xB789CA7: OpenBabel::SMIBaseFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:4292); ==30812== by 0x4F627A4: OpenBabel::OBConversion::Write(Op",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1265
https://github.com/openbabel/openbabel/issues/1266:190,Deployability,install,install,190,"Babel 1.0 depends on pytz without specifying a minimum version. Pytz uses date-based versioning with letters. Pip 1.4 sees all version strings containing letters as prereleases and will not install them without being asked to do so. The ushot of this is that installing latest Babel with latest pip fails unless a version of pytz is manually installed first. One common way to work around this issue is to have the pytz dependency specified with a minimum version which contains a letter, for example ""pytz>=0a"". Reported by: thefungi. Original Ticket: [openbabel/bugs/886](https://sourceforge.net/p/openbabel/bugs/886)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1266
https://github.com/openbabel/openbabel/issues/1266:259,Deployability,install,installing,259,"Babel 1.0 depends on pytz without specifying a minimum version. Pytz uses date-based versioning with letters. Pip 1.4 sees all version strings containing letters as prereleases and will not install them without being asked to do so. The ushot of this is that installing latest Babel with latest pip fails unless a version of pytz is manually installed first. One common way to work around this issue is to have the pytz dependency specified with a minimum version which contains a letter, for example ""pytz>=0a"". Reported by: thefungi. Original Ticket: [openbabel/bugs/886](https://sourceforge.net/p/openbabel/bugs/886)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1266
https://github.com/openbabel/openbabel/issues/1266:342,Deployability,install,installed,342,"Babel 1.0 depends on pytz without specifying a minimum version. Pytz uses date-based versioning with letters. Pip 1.4 sees all version strings containing letters as prereleases and will not install them without being asked to do so. The ushot of this is that installing latest Babel with latest pip fails unless a version of pytz is manually installed first. One common way to work around this issue is to have the pytz dependency specified with a minimum version which contains a letter, for example ""pytz>=0a"". Reported by: thefungi. Original Ticket: [openbabel/bugs/886](https://sourceforge.net/p/openbabel/bugs/886)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1266
https://github.com/openbabel/openbabel/issues/1266:10,Integrability,depend,depends,10,"Babel 1.0 depends on pytz without specifying a minimum version. Pytz uses date-based versioning with letters. Pip 1.4 sees all version strings containing letters as prereleases and will not install them without being asked to do so. The ushot of this is that installing latest Babel with latest pip fails unless a version of pytz is manually installed first. One common way to work around this issue is to have the pytz dependency specified with a minimum version which contains a letter, for example ""pytz>=0a"". Reported by: thefungi. Original Ticket: [openbabel/bugs/886](https://sourceforge.net/p/openbabel/bugs/886)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1266
https://github.com/openbabel/openbabel/issues/1266:420,Integrability,depend,dependency,420,"Babel 1.0 depends on pytz without specifying a minimum version. Pytz uses date-based versioning with letters. Pip 1.4 sees all version strings containing letters as prereleases and will not install them without being asked to do so. The ushot of this is that installing latest Babel with latest pip fails unless a version of pytz is manually installed first. One common way to work around this issue is to have the pytz dependency specified with a minimum version which contains a letter, for example ""pytz>=0a"". Reported by: thefungi. Original Ticket: [openbabel/bugs/886](https://sourceforge.net/p/openbabel/bugs/886)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1266
https://github.com/openbabel/openbabel/pull/17:55,Energy Efficiency,charge,charges,55,1) Fix compatibility with old GLIBC libraries. 2) Read charges from cif file and add it to special OBPair. 3) New Function in OBPairTemplate GetGenericValueDef(const ValueT &def_val).; Return specified default value if the data is not exist.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/17
https://github.com/openbabel/openbabel/issues/1535:622,Energy Efficiency,Energy,Energy,622,"I'd like to see more output options with Obgen. It's a really handy tool for me but I feel I am limited by the formatting of the output... ; - Whenever I use obgen to convert SMILES strings --> .sdf files; I notice that the the automatically generated ID for the smiles string is not completely unique. I run a script directing obgen to process 100 files at a time in 200 parallel sessions - as a result if all sessions start at the same time I see block repeats of the same ID e.g. 'OpenBabel08061310513D' ; I would love to see a simple implementation of a unique ID generator - or perhaps even a way to read in names. . Energy minimization steps and other forcefield parameters would also be nice to specify asides from default settings. The sdf output file is not correctly formatted, the molecule data sections contain a space at the start of the file, which makes it uninterpretable for consistent conversion to other file formats. I spend most of my time editing dodgy output files with lengthy and inelegant sed/awk/perl commands. Reported by: mattycoze. Original Ticket: [openbabel/feature-requests/167](https://sourceforge.net/p/openbabel/feature-requests/167)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1535
https://github.com/openbabel/openbabel/issues/1535:531,Usability,simpl,simple,531,"I'd like to see more output options with Obgen. It's a really handy tool for me but I feel I am limited by the formatting of the output... ; - Whenever I use obgen to convert SMILES strings --> .sdf files; I notice that the the automatically generated ID for the smiles string is not completely unique. I run a script directing obgen to process 100 files at a time in 200 parallel sessions - as a result if all sessions start at the same time I see block repeats of the same ID e.g. 'OpenBabel08061310513D' ; I would love to see a simple implementation of a unique ID generator - or perhaps even a way to read in names. . Energy minimization steps and other forcefield parameters would also be nice to specify asides from default settings. The sdf output file is not correctly formatted, the molecule data sections contain a space at the start of the file, which makes it uninterpretable for consistent conversion to other file formats. I spend most of my time editing dodgy output files with lengthy and inelegant sed/awk/perl commands. Reported by: mattycoze. Original Ticket: [openbabel/feature-requests/167](https://sourceforge.net/p/openbabel/feature-requests/167)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1535
https://github.com/openbabel/openbabel/pull/19:746,Availability,down,download,746,"Hi,. I made a bunch of changes to the png depiction to fit my needs and I thought I would share them... I'm not very experienced with pull requests, so maybe I haven't done everything optimally, for example if you would like me to split the commits into different requests, please let me know.; The -xm option added in a509587 was difficult to properly explain in a few words but basically now you always get a png with the set height and widths, regardless of the compound. With this change, single molecule depictions can be made dependent on the shape of the compound, so that there won't be a lot of empty space around. I'll try to attach two example images to make it easier to understand... (The margins aren't that easy to see, but if you download the images it's more apparent).; ![without_xm](https://f.cloud.github.com/assets/86855/1001311/1b1a82a6-0a67-11e3-8fa2-18b76fc79cb5.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xd -O ~/Desktop/without_xm.png`; ![with_xm](https://f.cloud.github.com/assets/86855/1001312/2146d9fe-0a67-11e3-82f1-96998a5097ce.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xm -O ~/Desktop/with_xm.png`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/19
https://github.com/openbabel/openbabel/pull/19:532,Integrability,depend,dependent,532,"Hi,. I made a bunch of changes to the png depiction to fit my needs and I thought I would share them... I'm not very experienced with pull requests, so maybe I haven't done everything optimally, for example if you would like me to split the commits into different requests, please let me know.; The -xm option added in a509587 was difficult to properly explain in a few words but basically now you always get a png with the set height and widths, regardless of the compound. With this change, single molecule depictions can be made dependent on the shape of the compound, so that there won't be a lot of empty space around. I'll try to attach two example images to make it easier to understand... (The margins aren't that easy to see, but if you download the images it's more apparent).; ![without_xm](https://f.cloud.github.com/assets/86855/1001311/1b1a82a6-0a67-11e3-8fa2-18b76fc79cb5.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xd -O ~/Desktop/without_xm.png`; ![with_xm](https://f.cloud.github.com/assets/86855/1001312/2146d9fe-0a67-11e3-82f1-96998a5097ce.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xm -O ~/Desktop/with_xm.png`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/19
https://github.com/openbabel/openbabel/pull/19:963,Testability,test,test,963,"Hi,. I made a bunch of changes to the png depiction to fit my needs and I thought I would share them... I'm not very experienced with pull requests, so maybe I haven't done everything optimally, for example if you would like me to split the commits into different requests, please let me know.; The -xm option added in a509587 was difficult to properly explain in a few words but basically now you always get a png with the set height and widths, regardless of the compound. With this change, single molecule depictions can be made dependent on the shape of the compound, so that there won't be a lot of empty space around. I'll try to attach two example images to make it easier to understand... (The margins aren't that easy to see, but if you download the images it's more apparent).; ![without_xm](https://f.cloud.github.com/assets/86855/1001311/1b1a82a6-0a67-11e3-8fa2-18b76fc79cb5.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xd -O ~/Desktop/without_xm.png`; ![with_xm](https://f.cloud.github.com/assets/86855/1001312/2146d9fe-0a67-11e3-82f1-96998a5097ce.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xm -O ~/Desktop/with_xm.png`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/19
https://github.com/openbabel/openbabel/pull/19:1175,Testability,test,test,1175,"Hi,. I made a bunch of changes to the png depiction to fit my needs and I thought I would share them... I'm not very experienced with pull requests, so maybe I haven't done everything optimally, for example if you would like me to split the commits into different requests, please let me know.; The -xm option added in a509587 was difficult to properly explain in a few words but basically now you always get a png with the set height and widths, regardless of the compound. With this change, single molecule depictions can be made dependent on the shape of the compound, so that there won't be a lot of empty space around. I'll try to attach two example images to make it easier to understand... (The margins aren't that easy to see, but if you download the images it's more apparent).; ![without_xm](https://f.cloud.github.com/assets/86855/1001311/1b1a82a6-0a67-11e3-8fa2-18b76fc79cb5.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xd -O ~/Desktop/without_xm.png`; ![with_xm](https://f.cloud.github.com/assets/86855/1001312/2146d9fe-0a67-11e3-82f1-96998a5097ce.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xm -O ~/Desktop/with_xm.png`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/19
https://github.com/openbabel/openbabel/pull/22:292,Integrability,depend,dependencies,292,"The C99 support headers do not need any library, and should work with; any version of MSVC, whereas the xdr and cairo headers are tied to a; particular version of some libraries that are paired with binary; prebuild libraries. It should now be possible to build on any MSVC toolchain if all; dependencies are built correctly.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/22
https://github.com/openbabel/openbabel/issues/1270:188,Testability,test,test,188,"Converting a SMILES code to a svg file produces broken SVGs for certain SMILES codes e.g.:. ```~~; obabel -:""C16=C2C(=C(O)C=C1)OC3C7(OC)C(C(C)(O)C(C)C)CC5(C23CCN(CC4CC4)C5C6)CC7"" -osvg -O test.svg; ```~~. The created SVG file ""test.svg"" contains invalid SVG line tags such as:. ```~~; <line x1=""-nan"" y1=""-nan"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; ```~~. Reported by: jerut. Original Ticket: [openbabel/bugs/890](https://sourceforge.net/p/openbabel/bugs/890)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1270
https://github.com/openbabel/openbabel/issues/1270:227,Testability,test,test,227,"Converting a SMILES code to a svg file produces broken SVGs for certain SMILES codes e.g.:. ```~~; obabel -:""C16=C2C(=C(O)C=C1)OC3C7(OC)C(C(C)(O)C(C)C)CC5(C23CCN(CC4CC4)C5C6)CC7"" -osvg -O test.svg; ```~~. The created SVG file ""test.svg"" contains invalid SVG line tags such as:. ```~~; <line x1=""-nan"" y1=""-nan"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; ```~~. Reported by: jerut. Original Ticket: [openbabel/bugs/890](https://sourceforge.net/p/openbabel/bugs/890)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1270
https://github.com/openbabel/openbabel/pull/23:767,Availability,error,error,767,"I've been trying to move all my crystallography file i/o to openbabel, and, in its use, have discovered a few bugs. This pull request aims to fix some of them:. **Issue 1:** Density calculations overestimate real value. To replicate, use [CoMOF74](https://gist.github.com/patrickfuller/6419438):. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Density in g/cm^3. Should be ~1.2; print sum(atom.atomicmass for atom in mol.atoms) / (mol.unitcell.GetCellVolume() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/23:2580,Deployability,update,updated,2580,"nds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't getting updated when `FillUnitCell` is called, but I couldn't figure out what it was. I'll look into this one again, but I'd appreciate any pointers in the mean time! **EDIT** Fixed this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/23:2086,Integrability,Wrap,WrapFractionalCoordinate,2086,"nds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't getting updated when `FillUnitCell` is called, but I couldn't figure out what it was. I'll look into this one again, but I'd appreciate any pointers in the mean time! **EDIT** Fixed this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/23:2532,Modifiability,variab,variables,2532,"nds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't getting updated when `FillUnitCell` is called, but I couldn't figure out what it was. I'll look into this one again, but I'd appreciate any pointers in the mean time! **EDIT** Fixed this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/23:1100,Security,hash,hash,1100,"few bugs. This pull request aims to fix some of them:. **Issue 1:** Density calculations overestimate real value. To replicate, use [CoMOF74](https://gist.github.com/patrickfuller/6419438):. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Density in g/cm^3. Should be ~1.2; print sum(atom.atomicmass for atom in mol.atoms) / (mol.unitcell.GetCellVolume() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/23:1296,Security,hash,hash,1296,"8):. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Density in g/cm^3. Should be ~1.2; print sum(atom.atomicmass for atom in mol.atoms) / (mol.unitcell.GetCellVolume() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/23:1876,Security,hash,hash,1876,"nds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't getting updated when `FillUnitCell` is called, but I couldn't figure out what it was. I'll look into this one again, but I'd appreciate any pointers in the mean time! **EDIT** Fixed this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/23:1615,Testability,log,logical,1615,"() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't g",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23
https://github.com/openbabel/openbabel/pull/24:12,Deployability,install,install,12,a script to install the software,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/24
https://github.com/openbabel/openbabel/pull/25:928,Testability,test,tests,928,"- Support Hermann-Mauguin notation space groups with spaces and also; the unspecified default space group.; - HM space group is enclosed within parentheses and can contain space; between them as per the given format details in -; http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/formats980/ClassicFiles.html.; ; The previous code didn't recognize such a spacegroup as it strictly; looked for 8 fields after tokenizing them using default delimiters as; space, tab, newline.; - It is legal to have .car files with PBC=ON and no space group defined; in the fifth line and just have PBC and a,b,c,alpha,beta,gamma; parameters. Such structure is considered to have lowest symmetry; space-group as P1. This means there are no symmetry operations in play; and all atoms are explicit within the unit cell. The .car files for; H2O and polymers fall under this category since they are amorphous but; are periodic.; - Added tests to ensure this is working.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/25
https://github.com/openbabel/openbabel/issues/1271:244,Energy Efficiency,energy,energy,244,"Because MOPAC does not unambiguously announce the optimized structure, Open Babel 2.3.2 extracts the initial structure from its cartesian translation. The actual structure appears ~50 lines below a ""GEOMETRY OPTIMISED"" statement which precedes energy results. The optimized structure may be in either MOPAC cartesian or MOPAC Z-matrix format. The MOPACFormat::ReadMolecule(...) method needs a rewrite to handle this. Reported by: salvarsan. Original Ticket: [openbabel/bugs/891](https://sourceforge.net/p/openbabel/bugs/891)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1271
https://github.com/openbabel/openbabel/issues/1271:393,Modifiability,rewrite,rewrite,393,"Because MOPAC does not unambiguously announce the optimized structure, Open Babel 2.3.2 extracts the initial structure from its cartesian translation. The actual structure appears ~50 lines below a ""GEOMETRY OPTIMISED"" statement which precedes energy results. The optimized structure may be in either MOPAC cartesian or MOPAC Z-matrix format. The MOPACFormat::ReadMolecule(...) method needs a rewrite to handle this. Reported by: salvarsan. Original Ticket: [openbabel/bugs/891](https://sourceforge.net/p/openbabel/bugs/891)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1271
https://github.com/openbabel/openbabel/issues/1271:50,Performance,optimiz,optimized,50,"Because MOPAC does not unambiguously announce the optimized structure, Open Babel 2.3.2 extracts the initial structure from its cartesian translation. The actual structure appears ~50 lines below a ""GEOMETRY OPTIMISED"" statement which precedes energy results. The optimized structure may be in either MOPAC cartesian or MOPAC Z-matrix format. The MOPACFormat::ReadMolecule(...) method needs a rewrite to handle this. Reported by: salvarsan. Original Ticket: [openbabel/bugs/891](https://sourceforge.net/p/openbabel/bugs/891)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1271
https://github.com/openbabel/openbabel/issues/1271:264,Performance,optimiz,optimized,264,"Because MOPAC does not unambiguously announce the optimized structure, Open Babel 2.3.2 extracts the initial structure from its cartesian translation. The actual structure appears ~50 lines below a ""GEOMETRY OPTIMISED"" statement which precedes energy results. The optimized structure may be in either MOPAC cartesian or MOPAC Z-matrix format. The MOPACFormat::ReadMolecule(...) method needs a rewrite to handle this. Reported by: salvarsan. Original Ticket: [openbabel/bugs/891](https://sourceforge.net/p/openbabel/bugs/891)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1271
https://github.com/openbabel/openbabel/pull/26:928,Testability,test,tests,928,"- Support Hermann-Mauguin notation space groups with spaces and also; the unspecified default space group.; - HM space group is enclosed within parentheses and can contain space; between them as per the given format details in -; http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/formats980/ClassicFiles.html.; ; The previous code didn't recognize such a spacegroup as it strictly; looked for 8 fields after tokenizing them using default delimiters as; space, tab, newline.; - It is legal to have .car files with PBC=ON and no space group defined; in the fifth line and just have PBC and a,b,c,alpha,beta,gamma; parameters. Such structure is considered to have lowest symmetry; space-group as P1. This means there are no symmetry operations in play; and all atoms are explicit within the unit cell. The .car files for; H2O and polymers fall under this category since they are amorphous but; are periodic.; - Added tests in new format to ensure this is working.; - I found following tests in openbabel:master already fail. So this has nothing to do with this change when you address my request.; ; ```; 11 - test_builder_1 (Failed); 12 - test_builder_2 (Failed); 96 - test_charge_mmff94_1 (Failed); 100 - test_ffgaff_1 (Failed); 101 - test_ffghemical_1 (Failed); 104 - test_ffuff_1 (Failed); 112 - test_logp_psa_1 (Failed); 126 - inchiSamples.sdf_Test (Failed); 127 - inchiSamplesTechMan.sdf_Test (Failed); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/26
https://github.com/openbabel/openbabel/pull/26:996,Testability,test,tests,996,"- Support Hermann-Mauguin notation space groups with spaces and also; the unspecified default space group.; - HM space group is enclosed within parentheses and can contain space; between them as per the given format details in -; http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/formats980/ClassicFiles.html.; ; The previous code didn't recognize such a spacegroup as it strictly; looked for 8 fields after tokenizing them using default delimiters as; space, tab, newline.; - It is legal to have .car files with PBC=ON and no space group defined; in the fifth line and just have PBC and a,b,c,alpha,beta,gamma; parameters. Such structure is considered to have lowest symmetry; space-group as P1. This means there are no symmetry operations in play; and all atoms are explicit within the unit cell. The .car files for; H2O and polymers fall under this category since they are amorphous but; are periodic.; - Added tests in new format to ensure this is working.; - I found following tests in openbabel:master already fail. So this has nothing to do with this change when you address my request.; ; ```; 11 - test_builder_1 (Failed); 12 - test_builder_2 (Failed); 96 - test_charge_mmff94_1 (Failed); 100 - test_ffgaff_1 (Failed); 101 - test_ffghemical_1 (Failed); 104 - test_ffuff_1 (Failed); 112 - test_logp_psa_1 (Failed); 126 - inchiSamples.sdf_Test (Failed); 127 - inchiSamplesTechMan.sdf_Test (Failed); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/26
https://github.com/openbabel/openbabel/pull/28:203,Testability,test,test,203,"Support compiling only bindings against system libopenbabel. So far I have implemented it for Python, Perl and Ruby bindings. The rest of them can receive analogous treatment, but I will need someone to test them.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28
https://github.com/openbabel/openbabel/issues/1272:401,Deployability,patch,patch,401,"Hello,. Cppcheck returns this:; [src/formats/crystal09format.cpp:190]: (warning) Return value of std::remove() ignored. Elements remain in container.; [src/formats/crystal09format.cpp:191]: (warning) Return value of std::remove() ignored. Elements remain in container. Indeed:; 190: std::remove(line.begin(), line.end(), '(');; 191: std::remove(line.begin(), line.end(), ')');. I attached a suggested patch. Julien. Reported by: serval2412. Original Ticket: [openbabel/bugs/892](https://sourceforge.net/p/openbabel/bugs/892)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1272
https://github.com/openbabel/openbabel/pull/29:36,Testability,test,testing,36,"Just an example program I used when testing Java bindings. We already have similar thing in Java so it is of limited utility. But it works and I find Scala nicer, might as well preserve for posterity.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/29
https://github.com/openbabel/openbabel/issues/1273:127,Deployability,patch,patch,127,"Hello,. Cppcheck reported several times (about 100) this:; Prefer prefix ++/-- operators for non-primitive types. I attached a patch to fix them + some 2 or 3 assert. Julien. Reported by: serval2412. Original Ticket: [openbabel/bugs/893](https://sourceforge.net/p/openbabel/bugs/893)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1273
https://github.com/openbabel/openbabel/issues/1273:159,Testability,assert,assert,159,"Hello,. Cppcheck reported several times (about 100) this:; Prefer prefix ++/-- operators for non-primitive types. I attached a patch to fix them + some 2 or 3 assert. Julien. Reported by: serval2412. Original Ticket: [openbabel/bugs/893](https://sourceforge.net/p/openbabel/bugs/893)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1273
https://github.com/openbabel/openbabel/issues/1276:49,Availability,down,download,49,"Using PDB 2MAL as input (http://www.rcsb.org/pdb/download/downloadFile.do?fileFormat=pdb&compression=NO&structureId=2MAL) -- 1290 atoms. Both obabel and obgui just sit there at 100% CPU when trying to convert to PNG or SVG. As I understand it they're limited to 1000 atoms and should report ""Molecule too large"" and quit right away. Reported by: dmaziuk. Original Ticket: [openbabel/bugs/896](https://sourceforge.net/p/openbabel/bugs/896)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1276
https://github.com/openbabel/openbabel/issues/1276:58,Availability,down,downloadFile,58,"Using PDB 2MAL as input (http://www.rcsb.org/pdb/download/downloadFile.do?fileFormat=pdb&compression=NO&structureId=2MAL) -- 1290 atoms. Both obabel and obgui just sit there at 100% CPU when trying to convert to PNG or SVG. As I understand it they're limited to 1000 atoms and should report ""Molecule too large"" and quit right away. Reported by: dmaziuk. Original Ticket: [openbabel/bugs/896](https://sourceforge.net/p/openbabel/bugs/896)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1276
https://github.com/openbabel/openbabel/issues/1277:752,Deployability,patch,patch,752,"$ ./bin/obabel -:""O=C1CCCc2c1cc[nH]2"" -O test_can.mol2; $ ./bin/obabel test_can.mol2 -ocan; O=C1CCC[C@H]2[C@@H]1CC[NH2+]2	*****. Expected result is that canonical smiles should be the same as the input canonical smiles. I've attached the intermediate mol2 file to the bug. This works with sdf:; $ ./bin/obabel -:""O=C1CCCc2c1cc[nH]2"" -O test_can.sdf; $ ./bin/obabel test_can.sdf -ocan; O=C1CCCc2c1cc[nH]2	. Note, the nitrogens and carbons that have been ""de-aromatized"" in the mol2 example are labeled as aromatic in test_can.mol2 , and all bonds in the 5-membered ring have been marked as aromatic in the mol2 file. This problem did not exist in openbabel 2.3.1 , but it is present in 2.3.2 and bleeding edge master. Doing git bisect reveals that this patch introduced the problem:. https://github.com/openbabel/openbabel/commit/097636fd7cdba1c842d27a80ccab809c558d0b98#diff-d6e9941b72192e2ba1a2d244948450ae. Note, this patch does indeed fix pyridinium ions (they do not work before the patch and work after), it just happens to break my molecule :(. Reported by: @cowsandmilk. Original Ticket: [openbabel/bugs/897](https://sourceforge.net/p/openbabel/bugs/897)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1277
https://github.com/openbabel/openbabel/issues/1277:920,Deployability,patch,patch,920,"$ ./bin/obabel -:""O=C1CCCc2c1cc[nH]2"" -O test_can.mol2; $ ./bin/obabel test_can.mol2 -ocan; O=C1CCC[C@H]2[C@@H]1CC[NH2+]2	*****. Expected result is that canonical smiles should be the same as the input canonical smiles. I've attached the intermediate mol2 file to the bug. This works with sdf:; $ ./bin/obabel -:""O=C1CCCc2c1cc[nH]2"" -O test_can.sdf; $ ./bin/obabel test_can.sdf -ocan; O=C1CCCc2c1cc[nH]2	. Note, the nitrogens and carbons that have been ""de-aromatized"" in the mol2 example are labeled as aromatic in test_can.mol2 , and all bonds in the 5-membered ring have been marked as aromatic in the mol2 file. This problem did not exist in openbabel 2.3.1 , but it is present in 2.3.2 and bleeding edge master. Doing git bisect reveals that this patch introduced the problem:. https://github.com/openbabel/openbabel/commit/097636fd7cdba1c842d27a80ccab809c558d0b98#diff-d6e9941b72192e2ba1a2d244948450ae. Note, this patch does indeed fix pyridinium ions (they do not work before the patch and work after), it just happens to break my molecule :(. Reported by: @cowsandmilk. Original Ticket: [openbabel/bugs/897](https://sourceforge.net/p/openbabel/bugs/897)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1277
https://github.com/openbabel/openbabel/issues/1277:987,Deployability,patch,patch,987,"$ ./bin/obabel -:""O=C1CCCc2c1cc[nH]2"" -O test_can.mol2; $ ./bin/obabel test_can.mol2 -ocan; O=C1CCC[C@H]2[C@@H]1CC[NH2+]2	*****. Expected result is that canonical smiles should be the same as the input canonical smiles. I've attached the intermediate mol2 file to the bug. This works with sdf:; $ ./bin/obabel -:""O=C1CCCc2c1cc[nH]2"" -O test_can.sdf; $ ./bin/obabel test_can.sdf -ocan; O=C1CCCc2c1cc[nH]2	. Note, the nitrogens and carbons that have been ""de-aromatized"" in the mol2 example are labeled as aromatic in test_can.mol2 , and all bonds in the 5-membered ring have been marked as aromatic in the mol2 file. This problem did not exist in openbabel 2.3.1 , but it is present in 2.3.2 and bleeding edge master. Doing git bisect reveals that this patch introduced the problem:. https://github.com/openbabel/openbabel/commit/097636fd7cdba1c842d27a80ccab809c558d0b98#diff-d6e9941b72192e2ba1a2d244948450ae. Note, this patch does indeed fix pyridinium ions (they do not work before the patch and work after), it just happens to break my molecule :(. Reported by: @cowsandmilk. Original Ticket: [openbabel/bugs/897](https://sourceforge.net/p/openbabel/bugs/897)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1277
https://github.com/openbabel/openbabel/pull/32:45,Usability,simpl,simple,45,"varible was being used uninitialized, pretty simple fix.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/32
https://github.com/openbabel/openbabel/issues/1279:257,Testability,test,test,257,"pybel reports it can output copyformat, but it seemingly cannot. In [1]: import pybel. In [2]: pybel.outformats['copy']; Out[2]: 'Copy raw text'. In [3]: mol = pybel.readfile(""sdf"", ""Components-pub_less_than_300MW.sdf.gz"").next(). In [4]: mol.write('copy','test.sdf'); Not a valid output format. Reported by: @cowsandmilk. Original Ticket: [openbabel/bugs/899](https://sourceforge.net/p/openbabel/bugs/899)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1279
https://github.com/openbabel/openbabel/pull/33:36,Deployability,install,install,36,"This involves two commits that:; 1. install the python files into site-packages corresponding to the python used, rather than next to the libraries. eg /usr/lib64/python2.7/site-packages instead of /usr/lib64; 2. CMake's PythonLibs and PythonInterp can find different versions of python. In my case, I had python3.2 and python2.7 installed. the PythonInterp found python2.7 since it was /usr/bin/python , but PythonLibs found the devel files for Python3 . This clearly did not work very well. Now, I search for the python first, then restrict the libraries found based on the version of the python interpreter.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/33
https://github.com/openbabel/openbabel/pull/33:330,Deployability,install,installed,330,"This involves two commits that:; 1. install the python files into site-packages corresponding to the python used, rather than next to the libraries. eg /usr/lib64/python2.7/site-packages instead of /usr/lib64; 2. CMake's PythonLibs and PythonInterp can find different versions of python. In my case, I had python3.2 and python2.7 installed. the PythonInterp found python2.7 since it was /usr/bin/python , but PythonLibs found the devel files for Python3 . This clearly did not work very well. Now, I search for the python first, then restrict the libraries found based on the version of the python interpreter.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/33
https://github.com/openbabel/openbabel/pull/33:461,Usability,clear,clearly,461,"This involves two commits that:; 1. install the python files into site-packages corresponding to the python used, rather than next to the libraries. eg /usr/lib64/python2.7/site-packages instead of /usr/lib64; 2. CMake's PythonLibs and PythonInterp can find different versions of python. In my case, I had python3.2 and python2.7 installed. the PythonInterp found python2.7 since it was /usr/bin/python , but PythonLibs found the devel files for Python3 . This clearly did not work very well. Now, I search for the python first, then restrict the libraries found based on the version of the python interpreter.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/33
https://github.com/openbabel/openbabel/issues/1280:105,Availability,echo,echo,105,"Hi,. the following command will crash obabel 2.3.2.; Please note if you omit the -p 7.0 option it works. echo 'N=[N+]=NC1=C(C(=O)C)C(=O)c2c3c1cccc3ccc2' | obabel -i smi - -o smi -e -b -p 7.0. Thanks!; Bjoern. Reported by: bgruening. Original Ticket: [openbabel/bugs/900](https://sourceforge.net/p/openbabel/bugs/900)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1280
https://github.com/openbabel/openbabel/pull/34:405,Availability,fault,faults,405,"Mac OS X 10.9 Mavericks changes the default C++ library from libstdc++ to libc++, which provides C++11 library meaning things need to be moved out of the `tr1` namespace. In these changes, `#ifdef _LIBCPP_VERSION` is used to detect whether libc++ is being used, and if so, alternative includes are provided. Additionally, a recent change to `parsmart.cpp` has been reverted due to it causing segmentation faults. I'm not sure if this is a widespread issue, or just a problem when using libc++. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/34
https://github.com/openbabel/openbabel/pull/34:225,Safety,detect,detect,225,"Mac OS X 10.9 Mavericks changes the default C++ library from libstdc++ to libc++, which provides C++11 library meaning things need to be moved out of the `tr1` namespace. In these changes, `#ifdef _LIBCPP_VERSION` is used to detect whether libc++ is being used, and if so, alternative includes are provided. Additionally, a recent change to `parsmart.cpp` has been reverted due to it causing segmentation faults. I'm not sure if this is a widespread issue, or just a problem when using libc++. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/34
https://github.com/openbabel/openbabel/pull/35:306,Availability,error,error,306,"UsePythonTest.cmake contains a template that is used to create a series of cmake files that execute tests for the python language bindings. Quotes within this template need to be escaped, otherwise they fail to appear in the resulting cmake files. In this context, the unescaped quotes were optional so no error was actually caused. However, as of cmake 2.8.12, the unescaped quotes cause a warning when running cmake: ""Argument not separated from preceding token by whitespace."". This change simply removes the unescaped quotes, causing no changes to the resulting cmake files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/35
https://github.com/openbabel/openbabel/pull/35:100,Testability,test,tests,100,"UsePythonTest.cmake contains a template that is used to create a series of cmake files that execute tests for the python language bindings. Quotes within this template need to be escaped, otherwise they fail to appear in the resulting cmake files. In this context, the unescaped quotes were optional so no error was actually caused. However, as of cmake 2.8.12, the unescaped quotes cause a warning when running cmake: ""Argument not separated from preceding token by whitespace."". This change simply removes the unescaped quotes, causing no changes to the resulting cmake files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/35
https://github.com/openbabel/openbabel/pull/35:493,Usability,simpl,simply,493,"UsePythonTest.cmake contains a template that is used to create a series of cmake files that execute tests for the python language bindings. Quotes within this template need to be escaped, otherwise they fail to appear in the resulting cmake files. In this context, the unescaped quotes were optional so no error was actually caused. However, as of cmake 2.8.12, the unescaped quotes cause a warning when running cmake: ""Argument not separated from preceding token by whitespace."". This change simply removes the unescaped quotes, causing no changes to the resulting cmake files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/35
https://github.com/openbabel/openbabel/issues/1281:172,Availability,Error,Error,172,"Steps to reproduce:. <pre>; # obabel -:""c1(c(c2c(s1)CCC2)C#N)NC(=O)Cn1c(=O)c2c3CC[C@@H](C)Cc3sc2nc1"" -O out.svg -xb -xC -xe; ==============================; *** Open Babel Error in FullConvert; Conversion failed with an exception.; 0 molecules converted; </pre>. Reported by: sarkiss. Original Ticket: [openbabel/bugs/901](https://sourceforge.net/p/openbabel/bugs/901)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1281
https://github.com/openbabel/openbabel/issues/1536:220,Deployability,patch,patches,220,It would be great if OB could deal with structures and bond perception over periodic boundaries. This has already been implemented by G. Garberoglio in http://software-lisc.fbk.eu/obgmx/ but it would be great to get his patches merged into the standard version. Reported by: tdaff. Original Ticket: [openbabel/feature-requests/168](https://sourceforge.net/p/openbabel/feature-requests/168),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1536
https://github.com/openbabel/openbabel/pull/37:39,Availability,error,error,39,"Code currently creates a pretty useful error message that tells you the name of the file it could not initialize, then prints a less useful error message. I think we should use the useful error message.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/37
https://github.com/openbabel/openbabel/pull/37:140,Availability,error,error,140,"Code currently creates a pretty useful error message that tells you the name of the file it could not initialize, then prints a less useful error message. I think we should use the useful error message.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/37
https://github.com/openbabel/openbabel/pull/37:188,Availability,error,error,188,"Code currently creates a pretty useful error message that tells you the name of the file it could not initialize, then prints a less useful error message. I think we should use the useful error message.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/37
https://github.com/openbabel/openbabel/pull/37:45,Integrability,message,message,45,"Code currently creates a pretty useful error message that tells you the name of the file it could not initialize, then prints a less useful error message. I think we should use the useful error message.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/37
https://github.com/openbabel/openbabel/pull/37:146,Integrability,message,message,146,"Code currently creates a pretty useful error message that tells you the name of the file it could not initialize, then prints a less useful error message. I think we should use the useful error message.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/37
https://github.com/openbabel/openbabel/pull/37:194,Integrability,message,message,194,"Code currently creates a pretty useful error message that tells you the name of the file it could not initialize, then prints a less useful error message. I think we should use the useful error message.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/37
https://github.com/openbabel/openbabel/pull/38:4,Integrability,message,message,4,See message here: http://sourceforge.net/mailarchive/message.php?msg_id=31653309,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/38
https://github.com/openbabel/openbabel/pull/38:53,Integrability,message,message,53,See message here: http://sourceforge.net/mailarchive/message.php?msg_id=31653309,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/38
https://github.com/openbabel/openbabel/issues/1282:285,Security,access,accessing,285,"The simple command ""obabel -i"" causes a segfault. The problem is several cases like this:. for (arg = 1; arg < argc; ++arg); {; ...; case 'i':; iext = argv[arg] + 2;; if(!*iext); iext = argv[++arg];. Note that arg is incremented without checking to see whether it's past argc, so it's accessing past the end of the argv array. By luck, it's getting a NULL pointer, but iext could point to anything. There are a number of instances of this in the command-line parsing section. Reported by: @cjames53. Original Ticket: [openbabel/bugs/902](https://sourceforge.net/p/openbabel/bugs/902)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1282
https://github.com/openbabel/openbabel/issues/1282:4,Usability,simpl,simple,4,"The simple command ""obabel -i"" causes a segfault. The problem is several cases like this:. for (arg = 1; arg < argc; ++arg); {; ...; case 'i':; iext = argv[arg] + 2;; if(!*iext); iext = argv[++arg];. Note that arg is incremented without checking to see whether it's past argc, so it's accessing past the end of the argv array. By luck, it's getting a NULL pointer, but iext could point to anything. There are a number of instances of this in the command-line parsing section. Reported by: @cjames53. Original Ticket: [openbabel/bugs/902](https://sourceforge.net/p/openbabel/bugs/902)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1282
https://github.com/openbabel/openbabel/issues/1283:299,Testability,test,test,299,"The following Python code renames the first residue in a PDB; file. The renaming works except that OpenBabel appends a '1',; obviously the residue number, to the new name in the mol2 output. Openbabel should not arbitrarily change a user's naming choices. import pybel. mol = pybel.readfile('pdb', 'test.pdb').next(). obmol = mol.OBMol; res1 = obmol.GetResidue(0); res1.SetName('FOOBAR') # appends '1' to 'FOOBAR'. mol.write('mol2', 'test.mol2', overwrite = True). Reported by: psxjp. Original Ticket: [openbabel/bugs/903](https://sourceforge.net/p/openbabel/bugs/903)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1283
https://github.com/openbabel/openbabel/issues/1283:434,Testability,test,test,434,"The following Python code renames the first residue in a PDB; file. The renaming works except that OpenBabel appends a '1',; obviously the residue number, to the new name in the mol2 output. Openbabel should not arbitrarily change a user's naming choices. import pybel. mol = pybel.readfile('pdb', 'test.pdb').next(). obmol = mol.OBMol; res1 = obmol.GetResidue(0); res1.SetName('FOOBAR') # appends '1' to 'FOOBAR'. mol.write('mol2', 'test.mol2', overwrite = True). Reported by: psxjp. Original Ticket: [openbabel/bugs/903](https://sourceforge.net/p/openbabel/bugs/903)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1283
https://github.com/openbabel/openbabel/issues/1284:814,Energy Efficiency,charge,charge,814,"The following MOL2. @<TRIPOS>MOLECULE; *****; 7 6 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -2.1429 -0.6767 0.0535 C.2 1 LIG1 0.3530; 2 O -0.9980 -1.0170 -0.3558 O.co2 1 LIG1 -0.7467; 3 O -3.0085 0.0671 -0.4866 O.co2 1 LIG1 -0.7467; 4 C -2.5397 -1.2501 1.4028 C.3 1 LIG1 0.0375; 5 H -2.0729 -2.2270 1.5616 H 1 LIG1 0.0343; 6 H -3.6248 -1.3762 1.4674 H 1 LIG1 0.0343; 7 H -2.2155 -0.5708 2.1965 H 1 LIG1 0.0343; @<TRIPOS>BOND; 1 1 2 ar; 2 1 3 ar; 3 1 4 1; 4 4 5 1; 5 4 6 1; 6 4 7 1. in a code like. ###############################; import openbabel as ob. conv = ob.OBConversion(); conv.SetInAndOutFormats('mol2', 'mol2'). mol = ob.OBMol(). conv.ReadFile(mol, 'mols/aa.mol2'). print mol.GetTotalCharge(). conv.WriteFile(mol, 'test.mol2'); ################################. will print 0 instead of the expected -1 charge. Reported by: psxjp. Original Ticket: [openbabel/bugs/904](https://sourceforge.net/p/openbabel/bugs/904)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1284
https://github.com/openbabel/openbabel/issues/1284:727,Testability,test,test,727,"The following MOL2. @<TRIPOS>MOLECULE; *****; 7 6 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -2.1429 -0.6767 0.0535 C.2 1 LIG1 0.3530; 2 O -0.9980 -1.0170 -0.3558 O.co2 1 LIG1 -0.7467; 3 O -3.0085 0.0671 -0.4866 O.co2 1 LIG1 -0.7467; 4 C -2.5397 -1.2501 1.4028 C.3 1 LIG1 0.0375; 5 H -2.0729 -2.2270 1.5616 H 1 LIG1 0.0343; 6 H -3.6248 -1.3762 1.4674 H 1 LIG1 0.0343; 7 H -2.2155 -0.5708 2.1965 H 1 LIG1 0.0343; @<TRIPOS>BOND; 1 1 2 ar; 2 1 3 ar; 3 1 4 1; 4 4 5 1; 5 4 6 1; 6 4 7 1. in a code like. ###############################; import openbabel as ob. conv = ob.OBConversion(); conv.SetInAndOutFormats('mol2', 'mol2'). mol = ob.OBMol(). conv.ReadFile(mol, 'mols/aa.mol2'). print mol.GetTotalCharge(). conv.WriteFile(mol, 'test.mol2'); ################################. will print 0 instead of the expected -1 charge. Reported by: psxjp. Original Ticket: [openbabel/bugs/904](https://sourceforge.net/p/openbabel/bugs/904)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1284
https://github.com/openbabel/openbabel/pull/42:235,Deployability,install,installing,235,"Major enhancement of PHP bindings. BaPHPel basically replicates Pybel API, which makes it very easy to transfer code from python with little effort. Also some minor enhancements are made, such as: exposing size() method on vectors, or installing the PHP extension in PHP configured directory.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42
https://github.com/openbabel/openbabel/pull/42:6,Modifiability,enhance,enhancement,6,"Major enhancement of PHP bindings. BaPHPel basically replicates Pybel API, which makes it very easy to transfer code from python with little effort. Also some minor enhancements are made, such as: exposing size() method on vectors, or installing the PHP extension in PHP configured directory.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42
https://github.com/openbabel/openbabel/pull/42:165,Modifiability,enhance,enhancements,165,"Major enhancement of PHP bindings. BaPHPel basically replicates Pybel API, which makes it very easy to transfer code from python with little effort. Also some minor enhancements are made, such as: exposing size() method on vectors, or installing the PHP extension in PHP configured directory.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42
https://github.com/openbabel/openbabel/pull/42:271,Modifiability,config,configured,271,"Major enhancement of PHP bindings. BaPHPel basically replicates Pybel API, which makes it very easy to transfer code from python with little effort. Also some minor enhancements are made, such as: exposing size() method on vectors, or installing the PHP extension in PHP configured directory.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42
https://github.com/openbabel/openbabel/pull/47:369,Security,access,access,369,"On my linux machines, building the csharp bindings did not complete because they were build in the BINARY_DIR, but later steps looked for them in SOURCE_DIR . It seems the standard for openbabel bindings is to build in the SOURCE_DIR , so I modified so they build there and the build now completes on my linux machines using mcs as the CSHARP_EXECUTABLE . I don't have access to a windows machine, so someone should make sure this doesn't break windows, where I think it is much more important to have working csharp bindings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/47
https://github.com/openbabel/openbabel/issues/1286:644,Availability,error,error,644,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:30,Energy Efficiency,charge,charge,30,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:289,Energy Efficiency,charge,charge,289,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:363,Energy Efficiency,charge,charge,363,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:454,Performance,optimiz,optimization,454,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:926,Testability,log,log,926,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:1082,Testability,log,log,1082,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:1178,Testability,log,log,1178,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/issues/1286:1448,Testability,log,logP,1448,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286
https://github.com/openbabel/openbabel/pull/48:365,Availability,error,errors,365,"There were numerical instability in the way dihedral angles were calculated. The formula used relied on acos(x), which is ill-posed for several values of x. The old implementation also needed a workaround for a possible division by zero. ; As a result it was for instance not possible to set a dihedral angle to 180, but only 179.974376548 at best. This means that errors can accumulate when setting and getting torsion angles multiple times. This update uses atan2 instead of acos and thus does not need any checks or thresholds since there are no divisions and relevant issues regarding numerical stability are resolved in <math.h>. See for instance this discussion of torsion angles on stackexchange:; http://math.stackexchange.com/questions/47059/how-do-i-calculate-a-dihedral-angle-given-cartesian-coordinates.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/48
https://github.com/openbabel/openbabel/pull/48:448,Deployability,update,update,448,"There were numerical instability in the way dihedral angles were calculated. The formula used relied on acos(x), which is ill-posed for several values of x. The old implementation also needed a workaround for a possible division by zero. ; As a result it was for instance not possible to set a dihedral angle to 180, but only 179.974376548 at best. This means that errors can accumulate when setting and getting torsion angles multiple times. This update uses atan2 instead of acos and thus does not need any checks or thresholds since there are no divisions and relevant issues regarding numerical stability are resolved in <math.h>. See for instance this discussion of torsion angles on stackexchange:; http://math.stackexchange.com/questions/47059/how-do-i-calculate-a-dihedral-angle-given-cartesian-coordinates.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/48
https://github.com/openbabel/openbabel/pull/49:473,Availability,error,errors,473,"Note: This is the same pull-request as my previous pull-req (which I closed). Just squashed into one commit. There were numerical instability in the way dihedral angles were calculated. The formula used relied on acos(x), which is ill-posed for several values of x. The old implementation also needed a workaround for a possible division by zero.; As a result it was for instance not possible to set a dihedral angle to 180, but only 179.974376548 at best. This means that errors can accumulate when setting and getting torsion angles multiple times. This update uses atan2 instead of acos and thus does not need any checks or thresholds since there are no divisions and relevant issues regarding numerical stability are resolved in . See for instance this discussion of torsion angles on stackexchange:; http://math.stackexchange.com/questions/47059/how-do-i-calculate-a-dihedral-angle-given-cartesian-coordinates.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49
https://github.com/openbabel/openbabel/pull/49:556,Deployability,update,update,556,"Note: This is the same pull-request as my previous pull-req (which I closed). Just squashed into one commit. There were numerical instability in the way dihedral angles were calculated. The formula used relied on acos(x), which is ill-posed for several values of x. The old implementation also needed a workaround for a possible division by zero.; As a result it was for instance not possible to set a dihedral angle to 180, but only 179.974376548 at best. This means that errors can accumulate when setting and getting torsion angles multiple times. This update uses atan2 instead of acos and thus does not need any checks or thresholds since there are no divisions and relevant issues regarding numerical stability are resolved in . See for instance this discussion of torsion angles on stackexchange:; http://math.stackexchange.com/questions/47059/how-do-i-calculate-a-dihedral-angle-given-cartesian-coordinates.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49
https://github.com/openbabel/openbabel/pull/51:411,Deployability,continuous,continuous,411,"In order for the travis CI to be activated on the main openbabel repo, steps one and two on http://about.travis-ci.org/docs/user/getting-started/ must be done as well by someone with permissions for the openbabel organization. For step two, there will be a list of accounts on the left side of the page, where you can choose the openbabel organization, rather than your personal account, and then switch on the continuous integration for the openbabel official repo. You can see example results at https://travis-ci.org/Acpharis/openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/51
https://github.com/openbabel/openbabel/pull/51:422,Deployability,integrat,integration,422,"In order for the travis CI to be activated on the main openbabel repo, steps one and two on http://about.travis-ci.org/docs/user/getting-started/ must be done as well by someone with permissions for the openbabel organization. For step two, there will be a list of accounts on the left side of the page, where you can choose the openbabel organization, rather than your personal account, and then switch on the continuous integration for the openbabel official repo. You can see example results at https://travis-ci.org/Acpharis/openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/51
https://github.com/openbabel/openbabel/pull/51:422,Integrability,integrat,integration,422,"In order for the travis CI to be activated on the main openbabel repo, steps one and two on http://about.travis-ci.org/docs/user/getting-started/ must be done as well by someone with permissions for the openbabel organization. For step two, there will be a list of accounts on the left side of the page, where you can choose the openbabel organization, rather than your personal account, and then switch on the continuous integration for the openbabel official repo. You can see example results at https://travis-ci.org/Acpharis/openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/51
https://github.com/openbabel/openbabel/pull/53:88,Integrability,depend,depend,88,Move OBForceField::FastRotorSearch from confsearch.cpp to forcefield.cpp as it does not depend on Eigen (unlike the other contents of confsearch.cpp). This should fix the compile problem (see the CDashboard).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/53
https://github.com/openbabel/openbabel/pull/54:72,Energy Efficiency,charge,charge,72,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:361,Energy Efficiency,energy,energy,361,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:387,Energy Efficiency,charge,charges,387,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:958,Energy Efficiency,charge,charges,958,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:1144,Energy Efficiency,charge,charges,1144,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:46,Performance,optimiz,optimized,46,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:284,Testability,test,tested,284,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:664,Testability,test,test,664,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/54:806,Testability,Test,Test,806,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54
https://github.com/openbabel/openbabel/pull/55:82,Availability,down,down,82,"Moved the loading of 3d js rendering into `_repr_javascript_`, so it doesn't slow down or error on `import pybel`. Also implemented Noel's previous suggestion to just use URLs. I think it's a better way to go, especially while this feature is in its experimental phase (people may want to play with other molecule renderers and such).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/55
https://github.com/openbabel/openbabel/pull/55:90,Availability,error,error,90,"Moved the loading of 3d js rendering into `_repr_javascript_`, so it doesn't slow down or error on `import pybel`. Also implemented Noel's previous suggestion to just use URLs. I think it's a better way to go, especially while this feature is in its experimental phase (people may want to play with other molecule renderers and such).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/55
https://github.com/openbabel/openbabel/pull/55:10,Performance,load,loading,10,"Moved the loading of 3d js rendering into `_repr_javascript_`, so it doesn't slow down or error on `import pybel`. Also implemented Noel's previous suggestion to just use URLs. I think it's a better way to go, especially while this feature is in its experimental phase (people may want to play with other molecule renderers and such).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/55
https://github.com/openbabel/openbabel/issues/1537:331,Safety,detect,detected,331,"SVG output with atom labelling (option ""i"") currently only supports numeric atom indices. These indices change, when explicit hydrogens are excluded (a typical use case when dealing with organic molecules). I have input from CML or CIF files and want to use atom labelling in SVG output for identification of torsions, rings, etc. detected by OB. Desired output will print (non-numeric) atom labels given in input (generic data ""label"" or ""_atom_site_label""). Any chance to get that functionality? A simple alternative/workaround without changing the library would be a XSLT style sheet generating the desired output from SVG with embedded CML (option ""e""). Reported by: shabermehl. Original Ticket: [openbabel/feature-requests/169](https://sourceforge.net/p/openbabel/feature-requests/169)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1537
https://github.com/openbabel/openbabel/issues/1537:500,Usability,simpl,simple,500,"SVG output with atom labelling (option ""i"") currently only supports numeric atom indices. These indices change, when explicit hydrogens are excluded (a typical use case when dealing with organic molecules). I have input from CML or CIF files and want to use atom labelling in SVG output for identification of torsions, rings, etc. detected by OB. Desired output will print (non-numeric) atom labels given in input (generic data ""label"" or ""_atom_site_label""). Any chance to get that functionality? A simple alternative/workaround without changing the library would be a XSLT style sheet generating the desired output from SVG with embedded CML (option ""e""). Reported by: shabermehl. Original Ticket: [openbabel/feature-requests/169](https://sourceforge.net/p/openbabel/feature-requests/169)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1537
https://github.com/openbabel/openbabel/pull/56:253,Deployability,patch,patch,253,Test case:; obabel -:CS(=O)(=O)C -opdb; Before:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 2 ***_Bug or almost bug**_*; CONECT 3 2; CONECT 4 2; CONECT 5 2; After:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 3 2; CONECT 4 2; CONECT 5 2. Note to self: Where is that patch (from Astex) for multiple bonds in CONECT records that I applied years ago? Something's up.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/56
https://github.com/openbabel/openbabel/pull/56:0,Testability,Test,Test,0,Test case:; obabel -:CS(=O)(=O)C -opdb; Before:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 2 ***_Bug or almost bug**_*; CONECT 3 2; CONECT 4 2; CONECT 5 2; After:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 3 2; CONECT 4 2; CONECT 5 2. Note to self: Where is that patch (from Astex) for multiple bonds in CONECT records that I applied years ago? Something's up.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/56
https://github.com/openbabel/openbabel/pull/57:10,Deployability,patch,patch,10,"With this patch, MOL files now read in atom class information (3rd from final column in atom block) by default, and write it out if the ""-xa"" option is specified. This is the same as with the SMILES format. Test case roundtripping SMI->MOL->SMI:; obabel -:[CH4:1] -omol -xa | obabel -imol -osmi -xa; [CH4:1]",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/57
https://github.com/openbabel/openbabel/pull/57:207,Testability,Test,Test,207,"With this patch, MOL files now read in atom class information (3rd from final column in atom block) by default, and write it out if the ""-xa"" option is specified. This is the same as with the SMILES format. Test case roundtripping SMI->MOL->SMI:; obabel -:[CH4:1] -omol -xa | obabel -imol -osmi -xa; [CH4:1]",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/57
https://github.com/openbabel/openbabel/issues/1288:87,Performance,optimiz,optimization,87,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288
https://github.com/openbabel/openbabel/issues/1288:137,Performance,optimiz,optimization,137,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288
https://github.com/openbabel/openbabel/issues/1288:229,Testability,log,log,229,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288
https://github.com/openbabel/openbabel/issues/1288:276,Testability,log,log,276,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288
https://github.com/openbabel/openbabel/issues/1288:323,Testability,Log,Log,323,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288
https://github.com/openbabel/openbabel/pull/61:8,Energy Efficiency,charge,charge,8,"Added a charge wrapper for Python. I called it `calccharges`, but I'm open to any naming scheme. Thoughts?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61
https://github.com/openbabel/openbabel/pull/61:15,Integrability,wrap,wrapper,15,"Added a charge wrapper for Python. I called it `calccharges`, but I'm open to any naming scheme. Thoughts?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61
https://github.com/openbabel/openbabel/pull/62:53,Modifiability,plugin,plugindefines,53,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/62:92,Modifiability,plugin,plugin,92,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/62:155,Modifiability,plugin,plugins,155,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/62:330,Modifiability,plugin,plugindefines,330,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/62:586,Modifiability,plugin,plugindefines,586,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/62:624,Modifiability,plugin,plugin,624,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/62:703,Modifiability,plugin,plugin,703,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/62:31,Performance,load,load,31,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62
https://github.com/openbabel/openbabel/pull/63:164,Modifiability,plugin,plugin,164,"Fixes defect reported by Coverity Scan (forwarded to me by Noel), caused by my earlier changes to OBDefine. The value of `pdef` is no longer required here now that plugin instances are made later.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/63
https://github.com/openbabel/openbabel/issues/1289:429,Availability,down,downloading,429,"Loading a pubchem XML document with an XML extension will give a segfault. I am using ""Open Babel 2.3.2"" from [this debian package](http://packages.debian.org/jessie/openbabel). Steps to reproduce:; 1. run `obprop CID_2519.xml`. It segfaults with a null pointer dereference. The attached file `CID_2519.xml` comes from the [pubchem page for caffeine](https://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=2519&loc=ec_rcs#) by downloading the ""2D XML: Save"" option. If you rename the file to "".pc"" as openbabel expects, then the file will be parsed correctly and there will be no segfault. This issue is moderately inconvenient, because it means that avogadro cannot directly open the .xml files downloaded from pubchem. Stack Trace:. # 0 OpenBabel::XMLFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) at 0x7fffd09bbf3a in /usr/lib/openbabel/2.3.2/xmlformat.so; # 1 OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) at 0x7ffff7727f6a in /usr/lib/libopenbabel.so.4.0.2; # 2 None at 0x7ffff5cc3303 in /usr/lib/libavogadro.so.1.0.3; # 3 None at 0x7ffff61f42ef in /usr/lib/x86_64-linux-gnu/libQtCore.so.4.8.6; # 4 start_thread at 0x7ffff48ebe0e in /lib/x86_64-linux-gnu/libpthread-2.17.so; # 5 clone at 0x7ffff7b180fd in /lib/x86_64-linux-gnu/libc-2.17.so (BL). Reported by: wirtha. Original Ticket: [openbabel/bugs/909](https://sourceforge.net/p/openbabel/bugs/909)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289
https://github.com/openbabel/openbabel/issues/1289:698,Availability,down,downloaded,698,"Loading a pubchem XML document with an XML extension will give a segfault. I am using ""Open Babel 2.3.2"" from [this debian package](http://packages.debian.org/jessie/openbabel). Steps to reproduce:; 1. run `obprop CID_2519.xml`. It segfaults with a null pointer dereference. The attached file `CID_2519.xml` comes from the [pubchem page for caffeine](https://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=2519&loc=ec_rcs#) by downloading the ""2D XML: Save"" option. If you rename the file to "".pc"" as openbabel expects, then the file will be parsed correctly and there will be no segfault. This issue is moderately inconvenient, because it means that avogadro cannot directly open the .xml files downloaded from pubchem. Stack Trace:. # 0 OpenBabel::XMLFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) at 0x7fffd09bbf3a in /usr/lib/openbabel/2.3.2/xmlformat.so; # 1 OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) at 0x7ffff7727f6a in /usr/lib/libopenbabel.so.4.0.2; # 2 None at 0x7ffff5cc3303 in /usr/lib/libavogadro.so.1.0.3; # 3 None at 0x7ffff61f42ef in /usr/lib/x86_64-linux-gnu/libQtCore.so.4.8.6; # 4 start_thread at 0x7ffff48ebe0e in /lib/x86_64-linux-gnu/libpthread-2.17.so; # 5 clone at 0x7ffff7b180fd in /lib/x86_64-linux-gnu/libc-2.17.so (BL). Reported by: wirtha. Original Ticket: [openbabel/bugs/909](https://sourceforge.net/p/openbabel/bugs/909)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289
https://github.com/openbabel/openbabel/issues/1289:0,Performance,Load,Loading,0,"Loading a pubchem XML document with an XML extension will give a segfault. I am using ""Open Babel 2.3.2"" from [this debian package](http://packages.debian.org/jessie/openbabel). Steps to reproduce:; 1. run `obprop CID_2519.xml`. It segfaults with a null pointer dereference. The attached file `CID_2519.xml` comes from the [pubchem page for caffeine](https://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=2519&loc=ec_rcs#) by downloading the ""2D XML: Save"" option. If you rename the file to "".pc"" as openbabel expects, then the file will be parsed correctly and there will be no segfault. This issue is moderately inconvenient, because it means that avogadro cannot directly open the .xml files downloaded from pubchem. Stack Trace:. # 0 OpenBabel::XMLFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) at 0x7fffd09bbf3a in /usr/lib/openbabel/2.3.2/xmlformat.so; # 1 OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) at 0x7ffff7727f6a in /usr/lib/libopenbabel.so.4.0.2; # 2 None at 0x7ffff5cc3303 in /usr/lib/libavogadro.so.1.0.3; # 3 None at 0x7ffff61f42ef in /usr/lib/x86_64-linux-gnu/libQtCore.so.4.8.6; # 4 start_thread at 0x7ffff48ebe0e in /lib/x86_64-linux-gnu/libpthread-2.17.so; # 5 clone at 0x7ffff7b180fd in /lib/x86_64-linux-gnu/libc-2.17.so (BL). Reported by: wirtha. Original Ticket: [openbabel/bugs/909](https://sourceforge.net/p/openbabel/bugs/909)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289
https://github.com/openbabel/openbabel/pull/65:482,Availability,error,error,482,"These commits provide some improvements to the python bindings.; - Converted the python README to [rst](http://docutils.sourceforge.net/rst.html) so it displays nicely formatted on [PyPI](https://pypi.python.org/pypi/openbabel).; - Changed the order of subcommands so `build_ext` comes before `build_py` when running the `build` or `install` commands. This ensures SWIG is run to generate `openbabel.py` before `build_py` attempts to copy it into the build directory.; - Added some error checking and fallback for if `pkg-config` fails.; - Allows the Open Babel library and include directories to be specified manually using command line options, i.e. `python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib`.; - Warn if the Open Babel version is less than 2.3.0, as it isn't supported.; - Added better error message if SWIG fails to find Open Babel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65
https://github.com/openbabel/openbabel/pull/65:826,Availability,error,error,826,"These commits provide some improvements to the python bindings.; - Converted the python README to [rst](http://docutils.sourceforge.net/rst.html) so it displays nicely formatted on [PyPI](https://pypi.python.org/pypi/openbabel).; - Changed the order of subcommands so `build_ext` comes before `build_py` when running the `build` or `install` commands. This ensures SWIG is run to generate `openbabel.py` before `build_py` attempts to copy it into the build directory.; - Added some error checking and fallback for if `pkg-config` fails.; - Allows the Open Babel library and include directories to be specified manually using command line options, i.e. `python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib`.; - Warn if the Open Babel version is less than 2.3.0, as it isn't supported.; - Added better error message if SWIG fails to find Open Babel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65
https://github.com/openbabel/openbabel/pull/65:333,Deployability,install,install,333,"These commits provide some improvements to the python bindings.; - Converted the python README to [rst](http://docutils.sourceforge.net/rst.html) so it displays nicely formatted on [PyPI](https://pypi.python.org/pypi/openbabel).; - Changed the order of subcommands so `build_ext` comes before `build_py` when running the `build` or `install` commands. This ensures SWIG is run to generate `openbabel.py` before `build_py` attempts to copy it into the build directory.; - Added some error checking and fallback for if `pkg-config` fails.; - Allows the Open Babel library and include directories to be specified manually using command line options, i.e. `python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib`.; - Warn if the Open Babel version is less than 2.3.0, as it isn't supported.; - Added better error message if SWIG fails to find Open Babel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65
https://github.com/openbabel/openbabel/pull/65:832,Integrability,message,message,832,"These commits provide some improvements to the python bindings.; - Converted the python README to [rst](http://docutils.sourceforge.net/rst.html) so it displays nicely formatted on [PyPI](https://pypi.python.org/pypi/openbabel).; - Changed the order of subcommands so `build_ext` comes before `build_py` when running the `build` or `install` commands. This ensures SWIG is run to generate `openbabel.py` before `build_py` attempts to copy it into the build directory.; - Added some error checking and fallback for if `pkg-config` fails.; - Allows the Open Babel library and include directories to be specified manually using command line options, i.e. `python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib`.; - Warn if the Open Babel version is less than 2.3.0, as it isn't supported.; - Added better error message if SWIG fails to find Open Babel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65
https://github.com/openbabel/openbabel/pull/65:522,Modifiability,config,config,522,"These commits provide some improvements to the python bindings.; - Converted the python README to [rst](http://docutils.sourceforge.net/rst.html) so it displays nicely formatted on [PyPI](https://pypi.python.org/pypi/openbabel).; - Changed the order of subcommands so `build_ext` comes before `build_py` when running the `build` or `install` commands. This ensures SWIG is run to generate `openbabel.py` before `build_py` attempts to copy it into the build directory.; - Added some error checking and fallback for if `pkg-config` fails.; - Allows the Open Babel library and include directories to be specified manually using command line options, i.e. `python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib`.; - Warn if the Open Babel version is less than 2.3.0, as it isn't supported.; - Added better error message if SWIG fails to find Open Babel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65
https://github.com/openbabel/openbabel/issues/1290:242,Availability,down,downloads,242,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:1536,Deployability,update,update,1536,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:586,Modifiability,config,config,586,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:638,Modifiability,Config,Config,638,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:656,Modifiability,config,config,656,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:669,Modifiability,config,config,669,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:691,Modifiability,config,config,691,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:706,Modifiability,config,config,706,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:719,Modifiability,config,config,719,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:749,Modifiability,config,config,749,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:785,Modifiability,Config,Config,785,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:838,Modifiability,Config,Config,838,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:891,Modifiability,Config,Config,891,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:944,Modifiability,Config,Config,944,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:1031,Modifiability,config,config,1031,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:1274,Modifiability,config,config,1274,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:1373,Modifiability,config,config,1373,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1290:1351,Performance,load,load,1351,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290
https://github.com/openbabel/openbabel/issues/1291:61,Deployability,install,install,61,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:75,Deployability,deploy,deployment,75,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:174,Deployability,install,installer,174,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:245,Deployability,install,install,245,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:291,Deployability,install,installer,291,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:519,Deployability,install,install,519,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:683,Deployability,install,install,683,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:737,Deployability,Configurat,Configuration,737,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:786,Deployability,deploy,deployment,786,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:823,Deployability,install,installers,823,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:876,Deployability,install,installation,876,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:982,Deployability,install,installer,982,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:1061,Deployability,deploy,deployment,1061,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:737,Modifiability,Config,Configuration,737,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1291:1017,Modifiability,flexible,flexible,1017,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291
https://github.com/openbabel/openbabel/issues/1292:48,Availability,fault,faults,48,"The space-groups.txt database has the following faults:. 1. Comparing spacegroup 210 to International Tables for Crystallography, it is wrong at a glance, containing only translations by +-1/2, while it should also contain translations by 1/4 and 3/4. + Both settings of spacegroup 222 contain the same symmetry operations, which they shouldn't. + Hexagonal setting of spacegroup 160 has some of the symmetry operations negated. + Spacegroup B -2bc has two incorrect operations. I fixed the latter two manually since they are small enough, and imported the first two from spglib. Patch follows. --- space-groups.orig	2012-10-03 21:08:56.000000000 +0200; +++ space-groups.txt	2014-02-12 15:37:18.604296364 +0100; @@ -397,9 +397,9 @@; B -2bc; B 1 1 n; x,y,z; -x,1/2+y,-z; +x,1/2+y,1/2-z; 1/2+x,y,1/2+z; -1/2+x,1/2+y,1/2-z; +1/2+x,1/2+y,-z; ; 9; I -2b; @@ -5790,21 +5790,21 @@; x,y,z; -y,x-y,z; y-x,-x,z; -y,x,-z; -x-y,-y,-z; --x,y-x,-z; +-y,-x,z; +y-x,y,z; +x,x-y,z; 2/3+x,1/3+y,1/3+z; 2/3-y,1/3+x-y,1/3+z; 2/3+y-x,1/3-x,1/3+z; -2/3+y,1/3+x,1/3-z; -2/3+x-y,1/3-y,1/3-z; -2/3-x,1/3+y-x,1/3-z; +2/3-y,1/3-x,1/3+z; +2/3+y-x,1/3+y,1/3+z; +2/3+x,1/3+x-y,1/3+z; 1/3+x,2/3+y,2/3+z; 1/3-y,2/3+x-y,2/3+z; 1/3+y-x,2/3-x,2/3+z; -1/3+y,2/3+x,2/3-z; -1/3+x-y,2/3-y,2/3-z; -1/3-x,2/3+y-x,2/3-z; +1/3-y,2/3-x,2/3+z; +1/3+y-x,2/3+y,2/3+z; +1/3+x,2/3+x-y,2/3+z; ; 160; P 3* -2; @@ -7277,102 +7277,102 @@; 210; F 4d 2 3; F 41 3 2; -x,y,z; --x,-y,z; --x,y,-z; -x,-y,-z; -z,x,y; -z,-x,-y; --z,-x,y; --z,x,-y; -y,z,x; --y,z,-x; -y,-z,-x; --y,-z,x; -1/2+y,1/2+x,1/2+z; -1/2-y,1/2-x,1/2+z; -1/2+y,1/2-x,1/2-z; -1/2-y,1/2+x,1/2-z; -1/2+x,1/2+z,1/2+y; -1/2-x,1/2+z,1/2-y; -1/2-x,1/2-z,1/2+y; -1/2+x,1/2-z,1/2-y; -1/2+z,1/2+y,1/2+x; -1/2+z,1/2-y,1/2-x; -1/2-z,1/2+y,1/2-x; -1/2-z,1/2-y,1/2+x; -x,1/2+y,1/2+z; --x,1/2-y,1/2+z; --x,1/2+y,1/2-z; -x,1/2-y,1/2-z; -z,1/2+x,1/2+y; -z,1/2-x,1/2-y; --z,1/2-x,1/2+y; --z,1/2+x,1/2-y; -y,1/2+z,1/2+x; --y,1/2+z,1/2-x; -y,1/2-z,1/2-x; --y,1/2-z,1/2+x; -1/2+y,x,z; -1/2-y,-x,z; -1/2+y,-x,-z;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292
https://github.com/openbabel/openbabel/issues/1292:580,Deployability,Patch,Patch,580,"The space-groups.txt database has the following faults:. 1. Comparing spacegroup 210 to International Tables for Crystallography, it is wrong at a glance, containing only translations by +-1/2, while it should also contain translations by 1/4 and 3/4. + Both settings of spacegroup 222 contain the same symmetry operations, which they shouldn't. + Hexagonal setting of spacegroup 160 has some of the symmetry operations negated. + Spacegroup B -2bc has two incorrect operations. I fixed the latter two manually since they are small enough, and imported the first two from spglib. Patch follows. --- space-groups.orig	2012-10-03 21:08:56.000000000 +0200; +++ space-groups.txt	2014-02-12 15:37:18.604296364 +0100; @@ -397,9 +397,9 @@; B -2bc; B 1 1 n; x,y,z; -x,1/2+y,-z; +x,1/2+y,1/2-z; 1/2+x,y,1/2+z; -1/2+x,1/2+y,1/2-z; +1/2+x,1/2+y,-z; ; 9; I -2b; @@ -5790,21 +5790,21 @@; x,y,z; -y,x-y,z; y-x,-x,z; -y,x,-z; -x-y,-y,-z; --x,y-x,-z; +-y,-x,z; +y-x,y,z; +x,x-y,z; 2/3+x,1/3+y,1/3+z; 2/3-y,1/3+x-y,1/3+z; 2/3+y-x,1/3-x,1/3+z; -2/3+y,1/3+x,1/3-z; -2/3+x-y,1/3-y,1/3-z; -2/3-x,1/3+y-x,1/3-z; +2/3-y,1/3-x,1/3+z; +2/3+y-x,1/3+y,1/3+z; +2/3+x,1/3+x-y,1/3+z; 1/3+x,2/3+y,2/3+z; 1/3-y,2/3+x-y,2/3+z; 1/3+y-x,2/3-x,2/3+z; -1/3+y,2/3+x,2/3-z; -1/3+x-y,2/3-y,2/3-z; -1/3-x,2/3+y-x,2/3-z; +1/3-y,2/3-x,2/3+z; +1/3+y-x,2/3+y,2/3+z; +1/3+x,2/3+x-y,2/3+z; ; 160; P 3* -2; @@ -7277,102 +7277,102 @@; 210; F 4d 2 3; F 41 3 2; -x,y,z; --x,-y,z; --x,y,-z; -x,-y,-z; -z,x,y; -z,-x,-y; --z,-x,y; --z,x,-y; -y,z,x; --y,z,-x; -y,-z,-x; --y,-z,x; -1/2+y,1/2+x,1/2+z; -1/2-y,1/2-x,1/2+z; -1/2+y,1/2-x,1/2-z; -1/2-y,1/2+x,1/2-z; -1/2+x,1/2+z,1/2+y; -1/2-x,1/2+z,1/2-y; -1/2-x,1/2-z,1/2+y; -1/2+x,1/2-z,1/2-y; -1/2+z,1/2+y,1/2+x; -1/2+z,1/2-y,1/2-x; -1/2-z,1/2+y,1/2-x; -1/2-z,1/2-y,1/2+x; -x,1/2+y,1/2+z; --x,1/2-y,1/2+z; --x,1/2+y,1/2-z; -x,1/2-y,1/2-z; -z,1/2+x,1/2+y; -z,1/2-x,1/2-y; --z,1/2-x,1/2+y; --z,1/2+x,1/2-y; -y,1/2+z,1/2+x; --y,1/2+z,1/2-x; -y,1/2-z,1/2-x; --y,1/2-z,1/2+x; -1/2+y,x,z; -1/2-y,-x,z; -1/2+y,-x,-z;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292
https://github.com/openbabel/openbabel/pull/68:49,Deployability,patch,patch,49,Mostly clean-up to improve readability. The last patch ensures that keyword lines don't exceed 80 character (GAMESS truncates it silently).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/68
https://github.com/openbabel/openbabel/pull/72:60,Performance,optimiz,optimized,60,Translation vector line should be skipped while reading the optimized structure from a mopac output file.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/72
https://github.com/openbabel/openbabel/pull/73:5,Deployability,patch,patch,5,This patch prevents obabel from being killed by SIGSEGV ; while converting a document with unit cell but without space group information.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/73
https://github.com/openbabel/openbabel/pull/74:24,Deployability,integrat,integrate,24,Would there be a way to integrate this cleanly into Open Babel?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74
https://github.com/openbabel/openbabel/pull/74:24,Integrability,integrat,integrate,24,Would there be a way to integrate this cleanly into Open Babel?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74
https://github.com/openbabel/openbabel/issues/1296:923,Availability,error,error,923,"I tried to compile openbabel from github (5f0837...) on OSX 10.9 Mavericks with python extensions, using anaconda python. By default, cmake picks Apple's libpython2.7.dylib to compile the python extension against. This can be overridden by editing the CMakeCache.txt file and setting the variables PYTHON_INCLUDE_DIR and PYTHON_LIBRARY to point to the respective anaconda python files, e.g. ```~; PYTHON_EXECUTABLE:FILEPATH=/Users/ms/anaconda/bin/python <-- cmake finds this by itself if in PATH; PYTHON_INCLUDE_DIR:PATH=/Users/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely se",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296
https://github.com/openbabel/openbabel/issues/1296:2223,Availability,error,error,2223,"ers/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely set the full path to the python lib:. ```~~~; install_name_tool -change libpython2.7.dylib /Users/ms/anaconda/lib/libpython2.7.dylib _openbabel.so; ```~~~. With this treatment, the import in anaconda python succeeds without error. I don't know enough about linker directives to really figure out what's going wrong during the build. Is it possible to supply the linker with the full path to the specified python lib?. Reported by: mschmuker. Original Ticket: [openbabel/bugs/916](https://sourceforge.net/p/openbabel/bugs/916)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296
https://github.com/openbabel/openbabel/issues/1296:1241,Deployability,install,installation,1241,"ting the CMakeCache.txt file and setting the variables PYTHON_INCLUDE_DIR and PYTHON_LIBRARY to point to the respective anaconda python files, e.g. ```~; PYTHON_EXECUTABLE:FILEPATH=/Users/ms/anaconda/bin/python <-- cmake finds this by itself if in PATH; PYTHON_INCLUDE_DIR:PATH=/Users/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely set the full path to the python lib:. ```~~~; install_name_tool -change libpython2.7.dylib /Users/ms/anaconda/lib/libpython2.7.dylib _openbabel.so; ```~~~. With this treatment, the import in anaconda python succeeds without error. I don't know ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296
https://github.com/openbabel/openbabel/issues/1296:288,Modifiability,variab,variables,288,"I tried to compile openbabel from github (5f0837...) on OSX 10.9 Mavericks with python extensions, using anaconda python. By default, cmake picks Apple's libpython2.7.dylib to compile the python extension against. This can be overridden by editing the CMakeCache.txt file and setting the variables PYTHON_INCLUDE_DIR and PYTHON_LIBRARY to point to the respective anaconda python files, e.g. ```~; PYTHON_EXECUTABLE:FILEPATH=/Users/ms/anaconda/bin/python <-- cmake finds this by itself if in PATH; PYTHON_INCLUDE_DIR:PATH=/Users/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely se",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296
https://github.com/openbabel/openbabel/issues/1296:968,Safety,Abort,Abort,968,"I tried to compile openbabel from github (5f0837...) on OSX 10.9 Mavericks with python extensions, using anaconda python. By default, cmake picks Apple's libpython2.7.dylib to compile the python extension against. This can be overridden by editing the CMakeCache.txt file and setting the variables PYTHON_INCLUDE_DIR and PYTHON_LIBRARY to point to the respective anaconda python files, e.g. ```~; PYTHON_EXECUTABLE:FILEPATH=/Users/ms/anaconda/bin/python <-- cmake finds this by itself if in PATH; PYTHON_INCLUDE_DIR:PATH=/Users/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely se",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296
https://github.com/openbabel/openbabel/issues/1296:1698,Usability,simpl,simple,1698,"ers/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely set the full path to the python lib:. ```~~~; install_name_tool -change libpython2.7.dylib /Users/ms/anaconda/lib/libpython2.7.dylib _openbabel.so; ```~~~. With this treatment, the import in anaconda python succeeds without error. I don't know enough about linker directives to really figure out what's going wrong during the build. Is it possible to supply the linker with the full path to the specified python lib?. Reported by: mschmuker. Original Ticket: [openbabel/bugs/916](https://sourceforge.net/p/openbabel/bugs/916)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296
https://github.com/openbabel/openbabel/issues/1297:255,Availability,Error,Error,255,"Hi everyone, . I have used OpenBabel for 2 yeas and I found it as a very usefull tool in my research. Unfortunatelly I faced the following problem: When I wanted to convert pdb file to sdf format the software is converting it but I got the message: Obgui Error File couldn't be loaded. As a result I obtained wrong converted file. Anyone have any ideas what may caused the problem?. Reported by: radoslaw28. Original Ticket: [openbabel/bugs/917](https://sourceforge.net/p/openbabel/bugs/917)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1297
https://github.com/openbabel/openbabel/issues/1297:240,Integrability,message,message,240,"Hi everyone, . I have used OpenBabel for 2 yeas and I found it as a very usefull tool in my research. Unfortunatelly I faced the following problem: When I wanted to convert pdb file to sdf format the software is converting it but I got the message: Obgui Error File couldn't be loaded. As a result I obtained wrong converted file. Anyone have any ideas what may caused the problem?. Reported by: radoslaw28. Original Ticket: [openbabel/bugs/917](https://sourceforge.net/p/openbabel/bugs/917)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1297
https://github.com/openbabel/openbabel/issues/1297:278,Performance,load,loaded,278,"Hi everyone, . I have used OpenBabel for 2 yeas and I found it as a very usefull tool in my research. Unfortunatelly I faced the following problem: When I wanted to convert pdb file to sdf format the software is converting it but I got the message: Obgui Error File couldn't be loaded. As a result I obtained wrong converted file. Anyone have any ideas what may caused the problem?. Reported by: radoslaw28. Original Ticket: [openbabel/bugs/917](https://sourceforge.net/p/openbabel/bugs/917)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1297
https://github.com/openbabel/openbabel/issues/1298:27,Availability,fault,fault,27,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1298:595,Availability,fault,fault,595,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1298:236,Energy Efficiency,charge,charges,236,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1298:38,Performance,load,loading,38,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1298:146,Performance,optimiz,optimization,146,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1298:111,Testability,log,log,111,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1298:254,Testability,log,log,254,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1298:554,Testability,log,log,554,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298
https://github.com/openbabel/openbabel/issues/1299:82,Security,access,access,82,openbabel-2.3.2/src/fingerprint.cpp:161:48: warning: unsequenced modification and access to 'ppat' [-Wunsequenced]. Source code is. if ( (a=((*ppat) & (*p++)) ^ (*ppat++)) ) break;. Suggest code rework. Reported by: dcb314. Original Ticket: [openbabel/bugs/919](https://sourceforge.net/p/openbabel/bugs/919),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1299
https://github.com/openbabel/openbabel/pull/75:10,Modifiability,plugin,plugin,10,The first plugin reads ORCA output files or writes an ORCA input file as a template.; The other plugin reads and write an extended xyz format file ( we called exyz) which will be used by a feature of the ORCA program in the near future.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/75
https://github.com/openbabel/openbabel/pull/75:96,Modifiability,plugin,plugin,96,The first plugin reads ORCA output files or writes an ORCA input file as a template.; The other plugin reads and write an extended xyz format file ( we called exyz) which will be used by a feature of the ORCA program in the near future.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/75
https://github.com/openbabel/openbabel/pull/75:122,Modifiability,extend,extended,122,The first plugin reads ORCA output files or writes an ORCA input file as a template.; The other plugin reads and write an extended xyz format file ( we called exyz) which will be used by a feature of the ORCA program in the near future.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/75
https://github.com/openbabel/openbabel/pull/76:9,Testability,log,logging,9,"A `cout` logging statement in cifformat.cpp was polluting stdout, which is an issue when writing the output molecule to stdout. Also: Should all the `cout` statements in cifformat.cpp be changed to `obErrorLog`?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/76
https://github.com/openbabel/openbabel/pull/78:67,Availability,error,errors,67,"... (As there is no definition present, and this will cause linker errors when linking bindings against the library.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/78
https://github.com/openbabel/openbabel/issues/1302:126,Availability,error,error,126,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:224,Availability,error,error,224,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:132,Integrability,message,message,132,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:23,Modifiability,CONFIG,CONFIG,23,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:198,Modifiability,CONFIG,CONFIG,198,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:748,Modifiability,CONFIG,CONFIG,748,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:1017,Modifiability,CONFIG,CONFIG,1017,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:1027,Modifiability,CONFIG,CONFIG,1027,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:1067,Modifiability,CONFIG,CONFIG,1067,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1302:80,Usability,usab,usable,80,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302
https://github.com/openbabel/openbabel/issues/1304:83,Testability,Test,Tested,83,"When rendering molecules in obabel, Pt is so light colored is is almost invisible. Tested on 2.3.2 and 2.3.3dev. N\[Pt\](N)(Cl)Cl. Reported by: jeff-janes. Original Ticket: [openbabel/bugs/924](https://sourceforge.net/p/openbabel/bugs/924)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1304
https://github.com/openbabel/openbabel/issues/1305:299,Safety,detect,detected,299,"XLC is rather strict about syntax:. [ 18%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll.o; [ 18%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll_a.o; ""/home/jhammond/OPENBABEL/openbabel/src/formats/libinchi/ikey_dll.c"", line 265.10: 1506-342 (W) ""/*"" detected in comment. Merge in the following to fix this issue. https://github.com/jeffhammond/openbabel/commit/16fa16a1199927712c9bdc4133ada50087e84f5d. Thanks,. Jeff. Reported by: @jeffhammond. Original Ticket: [openbabel/bugs/925](https://sourceforge.net/p/openbabel/bugs/925)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1305
https://github.com/openbabel/openbabel/issues/1306:84,Availability,fault,faults,84,"I use Open Babel 2.3.2 from the ubuntu package manager. I get a lot of segmentation faults if I want to convert an InChi to a MDL or sdf file. Example:; example.inchi; InChI=1S/C5H9NO4/c6-3(5(9)10)1-2-4(7)8/h3H,1-2,6H2,(H,7,8)(H,9,10)/t3-/m0/s1. I execute; obabel -iinchi inchi/mpos19.inchi -osdf; and get a Segmentation fault. Same happens if I provide --gen2d. If I provide --gen3D I get a lot of warnings but a reasonable output without segfaults. Reported by: kaibioinfo. Original Ticket: [openbabel/bugs/926](https://sourceforge.net/p/openbabel/bugs/926)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1306
https://github.com/openbabel/openbabel/issues/1306:321,Availability,fault,fault,321,"I use Open Babel 2.3.2 from the ubuntu package manager. I get a lot of segmentation faults if I want to convert an InChi to a MDL or sdf file. Example:; example.inchi; InChI=1S/C5H9NO4/c6-3(5(9)10)1-2-4(7)8/h3H,1-2,6H2,(H,7,8)(H,9,10)/t3-/m0/s1. I execute; obabel -iinchi inchi/mpos19.inchi -osdf; and get a Segmentation fault. Same happens if I provide --gen2d. If I provide --gen3D I get a lot of warnings but a reasonable output without segfaults. Reported by: kaibioinfo. Original Ticket: [openbabel/bugs/926](https://sourceforge.net/p/openbabel/bugs/926)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1306
https://github.com/openbabel/openbabel/issues/1307:191,Safety,Timeout,Timeout,191,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307
https://github.com/openbabel/openbabel/issues/1307:220,Safety,Timeout,Timeout,220,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307
https://github.com/openbabel/openbabel/issues/1307:16,Testability,test,testsuite,16,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307
https://github.com/openbabel/openbabel/issues/1307:110,Testability,test,tests,110,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307
https://github.com/openbabel/openbabel/issues/1307:250,Testability,test,test,250,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307
https://github.com/openbabel/openbabel/issues/1307:1517,Testability,test,tests,1517,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307
https://github.com/openbabel/openbabel/issues/1308:84,Integrability,bridg,bridges,84,"Sometimes the bicyclic system of DABCO derivatives renders with two of the 2-carbon bridges superimposed, so that it looks like a piperazine instead. This occurs with both 2.3.2 and with the development head. Small changes in the structure far from the DABCO moiety will cause it to change the rendering of that system in an unpredictable way, so not all DABCO structures have the problem. obabel -:'CCCCC1(CCCC)CS(=O)(=O)c2c(C(C1O)c1ccc(cc1)OCc1ccc(cc1)C[N+]13CCN(CC1)CC3)cc(cc2)N(C)C.[Cl-]' -opng > foo.png. Reported by: jeff-janes. Original Ticket: [openbabel/bugs/928](https://sourceforge.net/p/openbabel/bugs/928)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1308
https://github.com/openbabel/openbabel/issues/1309:253,Availability,error,error,253,"Hi,; I am using Open Babel 2.3.2 on Windows 7 x64, Windows XP x32, and Lubuntu 14 x64. In the three systems, there is something wrong with the interpretation of InChI's stereochemical layer. If I try to convert an InChI into an standard InChI, I get an error message and the stereochemical layer is dropped. For example:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. Also, conversion of an InChI string into an ASCII drawing fails when the molecule has stereochemical centers. Conversion of InChI to SMILES works fine, though. Lubuntu 12 x32 uses an older version of Open Babel; 2.3.1. In this case the previous example works:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. However, the next command causes a segmentation fault:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi. Thanks for Open Babel. Reported by: luismsanchez. Original Ticket: [openbabel/bugs/929](https://sourceforge.net/p/openbabel/bugs/929)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1309
https://github.com/openbabel/openbabel/issues/1309:322,Availability,Echo,Echo,322,"Hi,; I am using Open Babel 2.3.2 on Windows 7 x64, Windows XP x32, and Lubuntu 14 x64. In the three systems, there is something wrong with the interpretation of InChI's stereochemical layer. If I try to convert an InChI into an standard InChI, I get an error message and the stereochemical layer is dropped. For example:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. Also, conversion of an InChI string into an ASCII drawing fails when the molecule has stereochemical centers. Conversion of InChI to SMILES works fine, though. Lubuntu 12 x32 uses an older version of Open Babel; 2.3.1. In this case the previous example works:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. However, the next command causes a segmentation fault:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi. Thanks for Open Babel. Reported by: luismsanchez. Original Ticket: [openbabel/bugs/929](https://sourceforge.net/p/openbabel/bugs/929)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1309
https://github.com/openbabel/openbabel/issues/1309:704,Availability,Echo,Echo,704,"Hi,; I am using Open Babel 2.3.2 on Windows 7 x64, Windows XP x32, and Lubuntu 14 x64. In the three systems, there is something wrong with the interpretation of InChI's stereochemical layer. If I try to convert an InChI into an standard InChI, I get an error message and the stereochemical layer is dropped. For example:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. Also, conversion of an InChI string into an ASCII drawing fails when the molecule has stereochemical centers. Conversion of InChI to SMILES works fine, though. Lubuntu 12 x32 uses an older version of Open Babel; 2.3.1. In this case the previous example works:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. However, the next command causes a segmentation fault:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi. Thanks for Open Babel. Reported by: luismsanchez. Original Ticket: [openbabel/bugs/929](https://sourceforge.net/p/openbabel/bugs/929)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1309
https://github.com/openbabel/openbabel/issues/1309:873,Availability,fault,fault,873,"Hi,; I am using Open Babel 2.3.2 on Windows 7 x64, Windows XP x32, and Lubuntu 14 x64. In the three systems, there is something wrong with the interpretation of InChI's stereochemical layer. If I try to convert an InChI into an standard InChI, I get an error message and the stereochemical layer is dropped. For example:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. Also, conversion of an InChI string into an ASCII drawing fails when the molecule has stereochemical centers. Conversion of InChI to SMILES works fine, though. Lubuntu 12 x32 uses an older version of Open Babel; 2.3.1. In this case the previous example works:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. However, the next command causes a segmentation fault:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi. Thanks for Open Babel. Reported by: luismsanchez. Original Ticket: [openbabel/bugs/929](https://sourceforge.net/p/openbabel/bugs/929)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1309
https://github.com/openbabel/openbabel/issues/1309:881,Availability,Echo,Echo,881,"Hi,; I am using Open Babel 2.3.2 on Windows 7 x64, Windows XP x32, and Lubuntu 14 x64. In the three systems, there is something wrong with the interpretation of InChI's stereochemical layer. If I try to convert an InChI into an standard InChI, I get an error message and the stereochemical layer is dropped. For example:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. Also, conversion of an InChI string into an ASCII drawing fails when the molecule has stereochemical centers. Conversion of InChI to SMILES works fine, though. Lubuntu 12 x32 uses an older version of Open Babel; 2.3.1. In this case the previous example works:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. However, the next command causes a segmentation fault:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi. Thanks for Open Babel. Reported by: luismsanchez. Original Ticket: [openbabel/bugs/929](https://sourceforge.net/p/openbabel/bugs/929)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1309
https://github.com/openbabel/openbabel/issues/1309:259,Integrability,message,message,259,"Hi,; I am using Open Babel 2.3.2 on Windows 7 x64, Windows XP x32, and Lubuntu 14 x64. In the three systems, there is something wrong with the interpretation of InChI's stereochemical layer. If I try to convert an InChI into an standard InChI, I get an error message and the stereochemical layer is dropped. For example:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. Also, conversion of an InChI string into an ASCII drawing fails when the molecule has stereochemical centers. Conversion of InChI to SMILES works fine, though. Lubuntu 12 x32 uses an older version of Open Babel; 2.3.1. In this case the previous example works:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi -xr. However, the next command causes a segmentation fault:; Echo ""InChI=1/C4H8N2O3/c5-2(4(8)9)1-3(6)7/h2H,1,5H2,(H2,6,7)(H,8,9)/t2-/m0/s1/f/h8H,6H2"" | obabel -i inchi -o inchi. Thanks for Open Babel. Reported by: luismsanchez. Original Ticket: [openbabel/bugs/929](https://sourceforge.net/p/openbabel/bugs/929)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1309
https://github.com/openbabel/openbabel/pull/80:480,Deployability,install,install,480,"I added the webGL viewer to RDKit about a month back (rdkit/rdkit#257), and used it as an opportunity to use IPython v2.0's new [install_nbextension](http://ipython.org/ipython-doc/stable/api/generated/IPython.html.nbextensions.html) feature. This commit is basically a port of the improvements made in the RDKit pull request. This should reduce memory overhead, especially in cases where multiple webGL molecules are drawn. The logic here copies `imolecule.min.js` to the python install directory (a little awkward to put a js file in a python directory, but I couldn't think of a better alternative). When a user requests a webGL drawing, the code checks to see if it's installed, and installs if needed. Note that this breaks webGL for IPython <2.0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80
https://github.com/openbabel/openbabel/pull/80:672,Deployability,install,installed,672,"I added the webGL viewer to RDKit about a month back (rdkit/rdkit#257), and used it as an opportunity to use IPython v2.0's new [install_nbextension](http://ipython.org/ipython-doc/stable/api/generated/IPython.html.nbextensions.html) feature. This commit is basically a port of the improvements made in the RDKit pull request. This should reduce memory overhead, especially in cases where multiple webGL molecules are drawn. The logic here copies `imolecule.min.js` to the python install directory (a little awkward to put a js file in a python directory, but I couldn't think of a better alternative). When a user requests a webGL drawing, the code checks to see if it's installed, and installs if needed. Note that this breaks webGL for IPython <2.0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80
https://github.com/openbabel/openbabel/pull/80:687,Deployability,install,installs,687,"I added the webGL viewer to RDKit about a month back (rdkit/rdkit#257), and used it as an opportunity to use IPython v2.0's new [install_nbextension](http://ipython.org/ipython-doc/stable/api/generated/IPython.html.nbextensions.html) feature. This commit is basically a port of the improvements made in the RDKit pull request. This should reduce memory overhead, especially in cases where multiple webGL molecules are drawn. The logic here copies `imolecule.min.js` to the python install directory (a little awkward to put a js file in a python directory, but I couldn't think of a better alternative). When a user requests a webGL drawing, the code checks to see if it's installed, and installs if needed. Note that this breaks webGL for IPython <2.0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80
https://github.com/openbabel/openbabel/pull/80:339,Energy Efficiency,reduce,reduce,339,"I added the webGL viewer to RDKit about a month back (rdkit/rdkit#257), and used it as an opportunity to use IPython v2.0's new [install_nbextension](http://ipython.org/ipython-doc/stable/api/generated/IPython.html.nbextensions.html) feature. This commit is basically a port of the improvements made in the RDKit pull request. This should reduce memory overhead, especially in cases where multiple webGL molecules are drawn. The logic here copies `imolecule.min.js` to the python install directory (a little awkward to put a js file in a python directory, but I couldn't think of a better alternative). When a user requests a webGL drawing, the code checks to see if it's installed, and installs if needed. Note that this breaks webGL for IPython <2.0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80
https://github.com/openbabel/openbabel/pull/80:429,Testability,log,logic,429,"I added the webGL viewer to RDKit about a month back (rdkit/rdkit#257), and used it as an opportunity to use IPython v2.0's new [install_nbextension](http://ipython.org/ipython-doc/stable/api/generated/IPython.html.nbextensions.html) feature. This commit is basically a port of the improvements made in the RDKit pull request. This should reduce memory overhead, especially in cases where multiple webGL molecules are drawn. The logic here copies `imolecule.min.js` to the python install directory (a little awkward to put a js file in a python directory, but I couldn't think of a better alternative). When a user requests a webGL drawing, the code checks to see if it's installed, and installs if needed. Note that this breaks webGL for IPython <2.0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80
https://github.com/openbabel/openbabel/issues/1310:152,Availability,error,error,152,mopout to mdl converions failing with valid input file. This happens in the GUI (which crashes) or via OBdotNet which gives a memory corruption related error. Reported by: jamesj74. Original Ticket: [openbabel/bugs/930](https://sourceforge.net/p/openbabel/bugs/930),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1310
https://github.com/openbabel/openbabel/issues/1311:650,Testability,test,tested,650,"Trying to strip properties from an SDF, we've come across a change in behaviour between Open Babel 2.3.0 and 2.3.1/2.3.2 where Babel >2.3.1 seems not to read or output the valences correctly and results in output SDFs with many radical atoms defined. Deleting or adding Hs has no effect, if we output SMILES then the SMILES also contain atoms with non-standard valences, e.g. converting babel -isdf my_sdf.sdf -osdf my_new_sdf.sdf returns an SDF with ; M RAD 8 7 3 8 2 9 2 10 2 11 2 12 2 13 2 14 2; The corresponding SMILES:; O=C1N(C=NC=NC1)C2=CC=CC=C2 (from the SDF properties); O=C1N(c2[c][c][c][c][c]2)[C]=N[C]=N[C]1 (from Babel GUI); So, we have tested this on:; Linux, Mac 2.3.0 - we obtain a SDF / SMILES with the molecule we expect; Windows GUI or command line 2.3.1, 2.3.2, Mac - we obtain the radical representation, i.e. SDF with M RAD lines for each molecules and smiles with [c] and similar as above. The SMILES via Windows GUI did change slightly between 2.3.1 (O=C1N(c2ccccc2)[C]=N[C]=N[C]1) and 2.3.2 (O=C1N(c2[c][c][c][c][c]2)[C]=N[C]=N[C]1), but the M RAD line in the SDF was the same.; The input SDF (attached) was generated via MetFrag command line using the CDK to output structures retrieved from ChemSpider. A difference in the SDF is that the 6th column after the atom letter in the input SDF contains the valences, this is not in the output SDF from Babel - for 2.3.0 or >=2.3.1.; I am not 100 % sure if this a problem with our SDF, or a bug? If the former, please let us know! . Reported by: schymane. Original Ticket: [openbabel/bugs/931](https://sourceforge.net/p/openbabel/bugs/931)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1311
https://github.com/openbabel/openbabel/pull/81:96,Availability,error,error,96,"fix can't compile on mac OSX 10.9.3, add set(CMAKE_CXX_FLAGS ""-std=c++11 -stdlib=libstdc++ -Wno-error=c++11-narrowing"") in CMakeLists.txt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/81
https://github.com/openbabel/openbabel/pull/82:249,Deployability,patch,patch,249,"In the man page of `obgen` tool, it is described that it should be called as bellow.; `obgen [OPTIONS] filename`. On the other hand, `obgen` says it should be called as bellow and it actually should be.; `obgen <filename> [options]`. I've wrote the patch that makes `obgen` accept both forms.; Please take a look at it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/82
https://github.com/openbabel/openbabel/issues/1312:15,Performance,perform,performed,15,"Hello!; I have performed a conversion of a CIF file (http://www.crystallography.net/cif/1/01/05/1010587.cif) to MOPAC input, but it seems that I get an output that contains only part of the information of the crystal. I tried modifying the input/output parameters, but it does not seem to get it right.; Has anyone encountered the same issue or found a way to get a more precise output?. Reported by: filipposd. Original Ticket: [openbabel/bugs/932](https://sourceforge.net/p/openbabel/bugs/932)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1312
https://github.com/openbabel/openbabel/issues/1313:108,Deployability,install,installing,108,"Hi, my name is Richard Hughes and I work at Red Hat. I'm trying to build a distro-neutral framework to make installing applications easier. At the moment I'm trying to contact various upstream authors asking them to do things to make their software show up. I've got support from a number of distros, KDE, XFCE and GNOME, but I also need some degree of maintainer buy-in. Already there are over 1000 applications listed in the metadata, and over 25% of them supply the nice-to-have AppData file with screenshots. OpenBabel does have a couple of small issues. It currently ships a very small application icon, which is too small to be padded to 64x64. Would you perhaps consider shipping a larger icon? To be included your application needs to ship an icon of at least 48x48px, and ideally 64x64px with an alpha channel. Additionally, please consider writing and installing an AppData file with the application description and some screenshots, otherwise your application will look kinda bare in the GNOME and KDE Software Centers. We'd also love to showcase more applications, but without the extra data file we can't. See http://people.freedesktop.org/~hughsient/appdata/ for details about AppData and AppStream, or if you have any other questions please don't hesitate to ask; thanks!. Richard. Reported by: hughsie. Original Ticket: [openbabel/bugs/933](https://sourceforge.net/p/openbabel/bugs/933)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1313
https://github.com/openbabel/openbabel/issues/1313:862,Deployability,install,installing,862,"Hi, my name is Richard Hughes and I work at Red Hat. I'm trying to build a distro-neutral framework to make installing applications easier. At the moment I'm trying to contact various upstream authors asking them to do things to make their software show up. I've got support from a number of distros, KDE, XFCE and GNOME, but I also need some degree of maintainer buy-in. Already there are over 1000 applications listed in the metadata, and over 25% of them supply the nice-to-have AppData file with screenshots. OpenBabel does have a couple of small issues. It currently ships a very small application icon, which is too small to be padded to 64x64. Would you perhaps consider shipping a larger icon? To be included your application needs to ship an icon of at least 48x48px, and ideally 64x64px with an alpha channel. Additionally, please consider writing and installing an AppData file with the application description and some screenshots, otherwise your application will look kinda bare in the GNOME and KDE Software Centers. We'd also love to showcase more applications, but without the extra data file we can't. See http://people.freedesktop.org/~hughsient/appdata/ for details about AppData and AppStream, or if you have any other questions please don't hesitate to ask; thanks!. Richard. Reported by: hughsie. Original Ticket: [openbabel/bugs/933](https://sourceforge.net/p/openbabel/bugs/933)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1313
https://github.com/openbabel/openbabel/issues/1316:189,Availability,fault,fault,189,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:332,Availability,error,error,332,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:360,Availability,echo,echo,360,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:439,Availability,fault,fault,439,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:663,Availability,fault,fault,663,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:2119,Availability,error,error,2119,"s the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402eba in main (argc=7, argv=0x7fffffffe318) at ../temp/openbabel-2.3.2/tools/babel.cpp:347. The following line gives an error:. openbabel-2.3.2/src/formats/smilesformat.cpp:2265; 2265 patom->SetSpinMultiplicity(0);. patom is zero, and it is being dereferenced:. (gdb) p patom; $14 = (OpenBabel::OBAtom *) 0x0. I am not acquainted with the internals of Openbabel, but it seems that the function tries to form a bond between an atom and nothing. Think this is not a major problem and not a vulnerability at all, but this can probably break some projects which depend on openbabel - just like my one :). Reported by: austinov. Original Ticket: [openbabel/bugs/936](https://sourceforge.net/p/openbabel/bugs/936)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:2557,Integrability,depend,depend,2557,"s the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402eba in main (argc=7, argv=0x7fffffffe318) at ../temp/openbabel-2.3.2/tools/babel.cpp:347. The following line gives an error:. openbabel-2.3.2/src/formats/smilesformat.cpp:2265; 2265 patom->SetSpinMultiplicity(0);. patom is zero, and it is being dereferenced:. (gdb) p patom; $14 = (OpenBabel::OBAtom *) 0x0. I am not acquainted with the internals of Openbabel, but it seems that the function tries to form a bond between an atom and nothing. Think this is not a major problem and not a vulnerability at all, but this can probably break some projects which depend on openbabel - just like my one :). Reported by: austinov. Original Ticket: [openbabel/bugs/936](https://sourceforge.net/p/openbabel/bugs/936)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:1130,Performance,optimiz,optimized,1130,"I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402eba in main (argc=7, argv=0x7fffffffe318) at ../temp/openbabel-2.3.2/tools/babel.cpp:347. The following line gives an err",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:1151,Performance,optimiz,optimized,1151,"I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402eba in main (argc=7, argv=0x7fffffffe318) at ../temp/openbabel-2.3.2/tools/babel.cpp:347. The following line gives an err",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:375,Testability,test,test,375,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:400,Testability,test,test,400,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:416,Testability,test,test,416,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1316:234,Usability,simpl,simplest,234,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316
https://github.com/openbabel/openbabel/issues/1317:176,Availability,error,error,176,"OpenBabel cannot render to SVG any SMILES strings of a similar form to ""C.Cl"" -- consisting of two atoms in the organic subset separated by a dot. This is how to reproduce the error:. >>> import openbabel; >>> smiles = ""C.Cl""; >>> ob = openbabel.OBConversion(); >>> ob.SetInAndOutFormats(""smi"", ""svg""); True; >>> out = openbabel.OBMol(); >>> ob.ReadString(out, smiles); True; >>> ans = ob.WriteString(out); ==============================; *** Open Babel Error in SVGFormat; Molecule needs 2D coordinates to display in SVGformat. Some examples of strings that don't work:; C.Cl; C.C; Cl.Br. Some examples of strings that work, in contrast:; C.CC; C.[H][Cl]; CBr.C. Note: I don't know which Milestone to place this under.; I am using the Python bindings for OpenBabel (pip install python-openbabel). ; $ pip freeze | grep openbabel; openbabel==1.6. Reported by: csvoss. Original Ticket: [openbabel/bugs/937](https://sourceforge.net/p/openbabel/bugs/937)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1317
https://github.com/openbabel/openbabel/issues/1317:454,Availability,Error,Error,454,"OpenBabel cannot render to SVG any SMILES strings of a similar form to ""C.Cl"" -- consisting of two atoms in the organic subset separated by a dot. This is how to reproduce the error:. >>> import openbabel; >>> smiles = ""C.Cl""; >>> ob = openbabel.OBConversion(); >>> ob.SetInAndOutFormats(""smi"", ""svg""); True; >>> out = openbabel.OBMol(); >>> ob.ReadString(out, smiles); True; >>> ans = ob.WriteString(out); ==============================; *** Open Babel Error in SVGFormat; Molecule needs 2D coordinates to display in SVGformat. Some examples of strings that don't work:; C.Cl; C.C; Cl.Br. Some examples of strings that work, in contrast:; C.CC; C.[H][Cl]; CBr.C. Note: I don't know which Milestone to place this under.; I am using the Python bindings for OpenBabel (pip install python-openbabel). ; $ pip freeze | grep openbabel; openbabel==1.6. Reported by: csvoss. Original Ticket: [openbabel/bugs/937](https://sourceforge.net/p/openbabel/bugs/937)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1317
https://github.com/openbabel/openbabel/issues/1317:771,Deployability,install,install,771,"OpenBabel cannot render to SVG any SMILES strings of a similar form to ""C.Cl"" -- consisting of two atoms in the organic subset separated by a dot. This is how to reproduce the error:. >>> import openbabel; >>> smiles = ""C.Cl""; >>> ob = openbabel.OBConversion(); >>> ob.SetInAndOutFormats(""smi"", ""svg""); True; >>> out = openbabel.OBMol(); >>> ob.ReadString(out, smiles); True; >>> ans = ob.WriteString(out); ==============================; *** Open Babel Error in SVGFormat; Molecule needs 2D coordinates to display in SVGformat. Some examples of strings that don't work:; C.Cl; C.C; Cl.Br. Some examples of strings that work, in contrast:; C.CC; C.[H][Cl]; CBr.C. Note: I don't know which Milestone to place this under.; I am using the Python bindings for OpenBabel (pip install python-openbabel). ; $ pip freeze | grep openbabel; openbabel==1.6. Reported by: csvoss. Original Ticket: [openbabel/bugs/937](https://sourceforge.net/p/openbabel/bugs/937)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1317
https://github.com/openbabel/openbabel/pull/85:475,Usability,simpl,simply,475,"Cmake 3.0.0 gives the following warning when compiling Open Babel on OS X:. ```; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. openbabel; ```. To suppress the warning, policy CMP0042 needs to be set to `OLD` or `NEW` in CMakeLists.txt. This commit simply sets CMP0042 to `OLD`, to continue the pre-3.0 behaviour. From reading the cmake documentation, it looks like setting the policy to `NEW` _should_ be fine, because CMakeLists.txt defines `CMAKE_INSTALL_NAME_DIR`, which acts as a manual override to any of the changes in default behaviour caused by the new policy. However, I think sticking with `OLD` for now would be best to maintain backwards compatibility with older versions of Cmake (just like what is already done with CMP0005). More details here:. http://www.cmake.org/cmake/help/v3.0/policy/CMP0042.html; http://www.cmake.org/Wiki/CMake_RPATH_handling; http://www.cmake.org/Wiki/CMake/Policies; http://www.cmake.org/cmake/help/v3.0/prop_tgt/INSTALL_NAME_DIR.html; http://www.cmake.org/cmake/help/v3.0/prop_tgt/MACOSX_RPATH.html",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/85
https://github.com/openbabel/openbabel/pull/86:111,Availability,error,errorlevel,111,"Instead of a specific `v` option for the CIF format to show verbose debug messages, instead use the global `---errorlevel 4` option.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/86
https://github.com/openbabel/openbabel/pull/86:74,Integrability,message,messages,74,"Instead of a specific `v` option for the CIF format to show verbose debug messages, instead use the global `---errorlevel 4` option.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/86
https://github.com/openbabel/openbabel/issues/1319:601,Deployability,install,install,601,"This is all referring to the OpenSMILES spec:; http://www.opensmiles.org/opensmiles.html. The SMILES string ""[C]([H])([H])([H])([H])([H])([H])([H])([H])([H])([H])"" canonicalizes to ""[CH10]"", which according to the OpenSMILES spec is not valid --. hcount ::= 'H' | 'H' DIGIT. To reproduce this issue:. $ python; >>> import openbabel; >>> obc = openbabel.OBConversion(); >>> obc.SetInAndOutFormats(""smi"", ""can""); True; >>> outMol = openbabel.OBMol(); >>> obc.ReadString(outMol, ""[C]([H])([H])([H])([H])([H])([H])([H])([H])([H])([H])""); True; >>> print obc.WriteString(outMol); [CH10]. I'm using apt-get install python-openbabel. $ apt-show-versions python-openbabel; python-openbabel/precise uptodate 2.3.0+dfsg-3ubuntu3. Reported by: csvoss. Original Ticket: [openbabel/bugs/939](https://sourceforge.net/p/openbabel/bugs/939)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1319
https://github.com/openbabel/openbabel/issues/1320:557,Deployability,install,install,557,"This is all referring to the OpenSMILES spec:; http://www.opensmiles.org/opensmiles.html. The SMILES string ""c1ccc1"" canonicalizes to ""C1CCC1"", which according to the OpenSMILES spec is not valid -- it should be identical to ""C1=CC=C1"", both being equivalent to cyclobutadiene. To reproduce this issue:. $ python; >>> import openbabel; >>> obc = openbabel.OBConversion(); >>> obc.SetInAndOutFormats(""smi"", ""can""); True; >>> outMol = openbabel.OBMol(); >>> obc.ReadString(outMol, ""c1ccc1""); True; >>> print obc.WriteString(outMol); C1CCC1. I'm using apt-get install python-openbabel. $ apt-show-versions python-openbabel; python-openbabel/precise uptodate 2.3.0+dfsg-3ubuntu3. Reported by: csvoss. Original Ticket: [openbabel/bugs/940](https://sourceforge.net/p/openbabel/bugs/940)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1320
https://github.com/openbabel/openbabel/issues/1321:21,Availability,error,error,21,There seems to be an error in the EQeq charges algorithm. The original code:; ```; unitcell = obuc->GetCellMatrix();; fourier = (2 * PI * unitcell.inverse()).transpose();; ```. should be changed to:; ```; unitcell = obuc->GetCellMatrix().transpose();; fourier = (2 * PI * unitcell.inverse());; ```. Reported by: vargaslo. Original Ticket: [openbabel/bugs/941](https://sourceforge.net/p/openbabel/bugs/941),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1321
https://github.com/openbabel/openbabel/issues/1321:39,Energy Efficiency,charge,charges,39,There seems to be an error in the EQeq charges algorithm. The original code:; ```; unitcell = obuc->GetCellMatrix();; fourier = (2 * PI * unitcell.inverse()).transpose();; ```. should be changed to:; ```; unitcell = obuc->GetCellMatrix().transpose();; fourier = (2 * PI * unitcell.inverse());; ```. Reported by: vargaslo. Original Ticket: [openbabel/bugs/941](https://sourceforge.net/p/openbabel/bugs/941),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1321
https://github.com/openbabel/openbabel/issues/1322:69,Availability,error,error,69,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322
https://github.com/openbabel/openbabel/issues/1322:230,Availability,fault,fault,230,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322
https://github.com/openbabel/openbabel/issues/1322:13,Deployability,install,installing,13,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322
https://github.com/openbabel/openbabel/issues/1322:341,Security,access,access,341,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322
https://github.com/openbabel/openbabel/issues/1322:195,Testability,test,test,195,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322
https://github.com/openbabel/openbabel/issues/1322:207,Testability,test,test,207,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322
https://github.com/openbabel/openbabel/pull/88:200,Testability,log,logic,200,"Replaced:. ```; atom->SetVector(atom->GetX() * cell_a, atom->GetY() * cell_b, atom->GetZ() * cell_c);; ```. with:. ```; atom->SetVector(pCell->FractionalToCartesian(atom->GetVector()));; ```. The old logic fails on non-cubic unit cells. Before on left, after on right. ![output](https://cloud.githubusercontent.com/assets/1449833/3989685/fd6c2f54-28bd-11e4-8755-15c5e208b800.png). The other edits are whitespace - just my vim autoremoving tabs.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/88
https://github.com/openbabel/openbabel/pull/90:249,Deployability,install,install,249,"Replaces #80. Decided on a new pull request to clean up the commit history. Changes:; - `imolecule.min.js` uses version in openbabel/contributed - no build changes to openbabel.; - On first run, attempts to grab `imolecule.min.js` from internet and install in `~/.ipython/nbextensions`. Enables subsequent local usage if successful, falls back to remote library otherwise.; - Notebooks now statically render in e.g. nbviewer ([example](http://nbviewer.ipython.org/github/patrickfuller/nbviewer-test/blob/master/openbabel_test.ipynb)).; - Uses IPython's require.js to significantly lower memory usage for multiple molecules in one notebook.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/90
https://github.com/openbabel/openbabel/pull/90:494,Testability,test,test,494,"Replaces #80. Decided on a new pull request to clean up the commit history. Changes:; - `imolecule.min.js` uses version in openbabel/contributed - no build changes to openbabel.; - On first run, attempts to grab `imolecule.min.js` from internet and install in `~/.ipython/nbextensions`. Enables subsequent local usage if successful, falls back to remote library otherwise.; - Notebooks now statically render in e.g. nbviewer ([example](http://nbviewer.ipython.org/github/patrickfuller/nbviewer-test/blob/master/openbabel_test.ipynb)).; - Uses IPython's require.js to significantly lower memory usage for multiple molecules in one notebook.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/90
https://github.com/openbabel/openbabel/issues/1324:335,Availability,fault,fault,335,"Given two OBMol objects, we combine them together into a new molecule using the overloaded += operator as well as adding an individual bond (with addBond). Eventually, when attempting to write to a string converting the OBMol object to SMI format with an OBConversion object, we receive the following stack trace due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, mol",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324
https://github.com/openbabel/openbabel/issues/1324:693,Availability,fault,fault,693,"Given two OBMol objects, we combine them together into a new molecule using the overloaded += operator as well as adding an individual bond (with addBond). Eventually, when attempting to write to a string converting the OBMol object to SMI format with an OBConversion object, we receive the following stack trace due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, mol",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324
https://github.com/openbabel/openbabel/issues/1324:1353,Performance,optimiz,optimized,1353,"due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:73; 8 0x000000000041f33b in OBWriter::write (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:121; 9 0x00000000004160a2 in main (argc=3, argv=0x7fffffffec38) at Main.cpp:251. Reported by: wlafield. Original Ticket: [openbabel/bugs/944](https://sourceforge.net/p/openbabel/bugs/944)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324
https://github.com/openbabel/openbabel/issues/1324:1483,Performance,optimiz,optimized,1483,"due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:73; 8 0x000000000041f33b in OBWriter::write (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:121; 9 0x00000000004160a2 in main (argc=3, argv=0x7fffffffec38) at Main.cpp:251. Reported by: wlafield. Original Ticket: [openbabel/bugs/944](https://sourceforge.net/p/openbabel/bugs/944)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324
https://github.com/openbabel/openbabel/issues/1324:1506,Performance,optimiz,optimized,1506,"due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:73; 8 0x000000000041f33b in OBWriter::write (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:121; 9 0x00000000004160a2 in main (argc=3, argv=0x7fffffffec38) at Main.cpp:251. Reported by: wlafield. Original Ticket: [openbabel/bugs/944](https://sourceforge.net/p/openbabel/bugs/944)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324
https://github.com/openbabel/openbabel/issues/1324:1665,Performance,optimiz,optimized,1665,"due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:73; 8 0x000000000041f33b in OBWriter::write (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:121; 9 0x00000000004160a2 in main (argc=3, argv=0x7fffffffec38) at Main.cpp:251. Reported by: wlafield. Original Ticket: [openbabel/bugs/944](https://sourceforge.net/p/openbabel/bugs/944)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324
https://github.com/openbabel/openbabel/issues/1324:1856,Performance,optimiz,optimized,1856,"due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:73; 8 0x000000000041f33b in OBWriter::write (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:121; 9 0x00000000004160a2 in main (argc=3, argv=0x7fffffffec38) at Main.cpp:251. Reported by: wlafield. Original Ticket: [openbabel/bugs/944](https://sourceforge.net/p/openbabel/bugs/944)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324
https://github.com/openbabel/openbabel/issues/1325:130,Deployability,patch,patch,130,"Rotor tests fail on ppc architecture, because the checks for the expected value don't take into account the modulus. The attached patch should fix the issue. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/945](https://sourceforge.net/p/openbabel/bugs/945)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325
https://github.com/openbabel/openbabel/issues/1325:6,Testability,test,tests,6,"Rotor tests fail on ppc architecture, because the checks for the expected value don't take into account the modulus. The attached patch should fix the issue. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/945](https://sourceforge.net/p/openbabel/bugs/945)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325
https://github.com/openbabel/openbabel/pull/94:515,Availability,Ping,Ping,515,"This fixes the issue described in my email:. Hi there,. When I use the following one-liner to convert in.xyz to out.svg, the CO2 molecule is incorrectly represented as three overlapping letters (so it looks like a single atom). In the svg file, the coordinates are exactly the same. I wonder what could be causing this? I have tried to set all the coordinates to zero, and it gives the same result. On the other hand, if the source is canonical SMILES then the depiction of the molecules is correct. Thanks,; - Lee-Ping. ```; python -c ""import pybel ; p = pybel.readfile('xyz', 'in.xyz').next() ; p.title = 'Bottom left is supposed to be CO2' ; p.write('svg', 'out.svg', opt={'a':True})""; ```. ```; 10; Cycle 0 Energy -433.7149076007; C -0.902916 -1.988988 -0.274821; O -0.722523 -2.463347 -1.324352; O -1.096398 -1.529671 0.786427; N 1.281844 2.670488 0.052687; C 0.707412 1.551601 0.193659; O 0.621429 0.502822 -0.701410; O 0.063991 1.238386 1.324166; H 1.086408 0.727905 -1.518566; H 1.728584 2.775041 -0.855281; H -0.305730 0.342851 1.262261; ```. Original:; ![image](https://cloud.githubusercontent.com/assets/1441560/4435612/f9b12960-474d-11e4-8d2f-867237b52841.png). Fixed:; ![image](https://cloud.githubusercontent.com/assets/1441560/4435616/208e4176-474e-11e4-9b07-0c5fef07a763.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/94
https://github.com/openbabel/openbabel/pull/94:711,Energy Efficiency,Energy,Energy,711,"This fixes the issue described in my email:. Hi there,. When I use the following one-liner to convert in.xyz to out.svg, the CO2 molecule is incorrectly represented as three overlapping letters (so it looks like a single atom). In the svg file, the coordinates are exactly the same. I wonder what could be causing this? I have tried to set all the coordinates to zero, and it gives the same result. On the other hand, if the source is canonical SMILES then the depiction of the molecules is correct. Thanks,; - Lee-Ping. ```; python -c ""import pybel ; p = pybel.readfile('xyz', 'in.xyz').next() ; p.title = 'Bottom left is supposed to be CO2' ; p.write('svg', 'out.svg', opt={'a':True})""; ```. ```; 10; Cycle 0 Energy -433.7149076007; C -0.902916 -1.988988 -0.274821; O -0.722523 -2.463347 -1.324352; O -1.096398 -1.529671 0.786427; N 1.281844 2.670488 0.052687; C 0.707412 1.551601 0.193659; O 0.621429 0.502822 -0.701410; O 0.063991 1.238386 1.324166; H 1.086408 0.727905 -1.518566; H 1.728584 2.775041 -0.855281; H -0.305730 0.342851 1.262261; ```. Original:; ![image](https://cloud.githubusercontent.com/assets/1441560/4435612/f9b12960-474d-11e4-8d2f-867237b52841.png). Fixed:; ![image](https://cloud.githubusercontent.com/assets/1441560/4435616/208e4176-474e-11e4-9b07-0c5fef07a763.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/94
https://github.com/openbabel/openbabel/pull/99:81,Deployability,install,install,81,"Python 3 returns a bytestring with `subprocess.Popen`, crashing `python setup.py install`. The recommended fix is to specify `universal_newlines=True`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/99
https://github.com/openbabel/openbabel/pull/101:260,Usability,simpl,simple,260,"In the VASP format, frequency parsing was done until tokenization; returned less than two elements. However, the list of displacements may; be closed with a section such as the following:. ```; Finite differences POTIM= 2.000000000000000E-002; LATTYP: Found a simple tetragonal cell.; ALAT = 12.7378929000; C/A-ratio = 2.5701183985. Lattice vectors:; ```. that would not break from the frequency-parsing loop and keep parsing; nonexisting data, eventually leading to a crash. Instead of breaking the loop on 'less than two tokens', we check whether; the header contains one of `f/i=` or `f`, if it does not, we break; the loop.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/101
https://github.com/openbabel/openbabel/pull/104:253,Deployability,patch,patch,253,The vibration intensities are not explicitely present in VASP output but; can be computed from the changes of dipole moments and the normal; coordinates. Christian Neiss (FAU Erlangen Nürnberg) wrote the Python script that; served as the basis for this patch.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/104
https://github.com/openbabel/openbabel/pull/105:83,Availability,error,error,83,"Fix all Prefer prefix ++/-- operators for non-primitive type. [src/data.cpp:107]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/105
https://github.com/openbabel/openbabel/pull/106:353,Energy Efficiency,reduce,reduces,353,"fragments in them. Since the fragments overlap, ConnectTheDots adds a; ton of bonds, most of which then need to be deleted (really shouldn't add any; considering there are connect records..). The problem is that each; call to DeleteBond triggered a re-perception since it calls EndModify. The fix is just to wrap the whole code in Being/EndModify.; The reduces the time to parse the PDB file from minutes/hours to less than a second.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/106
https://github.com/openbabel/openbabel/pull/106:308,Integrability,wrap,wrap,308,"fragments in them. Since the fragments overlap, ConnectTheDots adds a; ton of bonds, most of which then need to be deleted (really shouldn't add any; considering there are connect records..). The problem is that each; call to DeleteBond triggered a re-perception since it calls EndModify. The fix is just to wrap the whole code in Being/EndModify.; The reduces the time to parse the PDB file from minutes/hours to less than a second.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/106
https://github.com/openbabel/openbabel/pull/112:785,Security,hash,hashed,785,"An option to parse comments provided by UCSF Dock and Chimera. Mol2 writer is also capable to write properties from other sources, like SDF. Example of such comments:. ```; ########## Name: ZINC04087362; ########## HA_RMSDs: 10.5487; ########## HA_RMSDh: 10.5466; ########## HA_RMSDm: 5.8751; ########## Cluster Size: 19; ########## Grid Score: -45.986282; ########## Grid_vdw: -38.770088; ########## Grid_es: -7.216196; ########## Int_energy: 9.837175. @<TRIPOS>MOLECULE; ZINC04087362; ....; ```. Note:; There is a bug, although I'm not proficient enough in C to fix that - if N molecules are skipped using ""-l"" option, then comments for first molecule are lost. I guess MOL2Format::SkipObjects needs to check if line ""m-2"" has # at the beginning, and then skip few lines back (until hashed lines finish).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/112
https://github.com/openbabel/openbabel/issues/1330:120,Availability,down,downloads,120,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:9,Deployability,install,installations,9,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:61,Deployability,Install,Installed,61,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:105,Deployability,install,installer,105,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:140,Deployability,Install,Installed,140,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:214,Deployability,Install,Installed,214,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:3262,Deployability,configurat,configuration,3262,"rmer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. ```~~; obabel r.xyz -O a.xyz --conformer --nconf 30 --score rmsd --writeconformers; ```~~. (1) Mac, 2.3.1, Works as expected. ```~~; Initial conformer count: 3; 0 ; 2 ; 1 ; Generation #1 0; Generation #2 0.000189885; Generation #3 0.000189885; Generation #4 0.000189885; Generation #5 0.000189885; Generation #6 0.000189885; Generation #7 0.000189885; Generation #8 0.000189885; Generation #9 0.000189885; Generation #10 0.000189885; Generation #11 0.000189885; Generation #12 0.000189885; Generation #13 0.000189885; Generation #14 0.000189885; Generation #15 0.000189885; Generation #16 0.000189885; Generation #17 0.000189885; Generation #18 0.000189885; Generation #19 0.000189885; Generation #20 0.000189885; Generation #21 0.000189885; Generation #22 0.000189885; Generation #23 0.000189885; Generation #24 0.000189885; Generation #25 0.000189885; Generation #26 0.000189885; Generation #27 0.000189885; 0 ; 2 ; 1 ; GetConformers:; 0 ; 2 ; 1 ; 1 molecule converted; ```~~. (2) Mac 2.3.90, conformer not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (3) Ubuntu, 2.3.90, conformer not recognized, so it just converts xyz to xyz, same as (2). ```~~; 1 molecule converted; ```~~. As a side note, if anyone has a working build configuration or input options to get the confab algorithm working, please let me know. Reported by: benalbrecht. Original Ticket: [openbabel/bugs/950](https://sourceforge.net/p/openbabel/bugs/950)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:1432,Energy Efficiency,Energy,Energy,1432," conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. ```~~; obabel r.xyz -O a.xyz --conformer --nconf 30 --score rmsd --writeconformers; ```~~. (1) Mac, 2.3.1, Works as expected. ```~~; Initial conformer count: 3; 0 ; 2 ; 1 ; Generation #1 0; Generation #2 0.000189885; Generation #3 0.000189885; Generation #4 0.000189885; Generation #5 0.000189885; Generation #6 0.000189885; Generation #7 0.000189885; Generation #8 0.000189885; Generation #9 0.000189885; Generation #10 0.000189885; Generatio",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:3262,Modifiability,config,configuration,3262,"rmer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. ```~~; obabel r.xyz -O a.xyz --conformer --nconf 30 --score rmsd --writeconformers; ```~~. (1) Mac, 2.3.1, Works as expected. ```~~; Initial conformer count: 3; 0 ; 2 ; 1 ; Generation #1 0; Generation #2 0.000189885; Generation #3 0.000189885; Generation #4 0.000189885; Generation #5 0.000189885; Generation #6 0.000189885; Generation #7 0.000189885; Generation #8 0.000189885; Generation #9 0.000189885; Generation #10 0.000189885; Generation #11 0.000189885; Generation #12 0.000189885; Generation #13 0.000189885; Generation #14 0.000189885; Generation #15 0.000189885; Generation #16 0.000189885; Generation #17 0.000189885; Generation #18 0.000189885; Generation #19 0.000189885; Generation #20 0.000189885; Generation #21 0.000189885; Generation #22 0.000189885; Generation #23 0.000189885; Generation #24 0.000189885; Generation #25 0.000189885; Generation #26 0.000189885; Generation #27 0.000189885; 0 ; 2 ; 1 ; GetConformers:; 0 ; 2 ; 1 ; 1 molecule converted; ```~~. (2) Mac 2.3.90, conformer not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (3) Ubuntu, 2.3.90, conformer not recognized, so it just converts xyz to xyz, same as (2). ```~~; 1 molecule converted; ```~~. As a side note, if anyone has a working build configuration or input options to get the confab algorithm working, please let me know. Reported by: benalbrecht. Original Ticket: [openbabel/bugs/950](https://sourceforge.net/p/openbabel/bugs/950)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:42,Testability,test,testing,42,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1330:737,Usability,clear,cleared,737,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330
https://github.com/openbabel/openbabel/issues/1331:152,Usability,simpl,simpler,152,"`QChemOutputFormat::ReadMolecule` cannot handle Q-Chem output files that contain fragments. I've included a sample output, though I could also create a simpler one. Reported by: @berquist. Original Ticket: [openbabel/bugs/951](https://sourceforge.net/p/openbabel/bugs/951)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1331
https://github.com/openbabel/openbabel/issues/1333:226,Availability,error,error,226,"I'm running OpenBabel v2.3.0 on a xubuntu system v12.04.5 LTS; When I try to convert the given SDF file into a vectorial SVG file, running the following command:; >$ babel mol.sdf -osvg pic.svg. babel crash with the following error:; >\*\*\* glibc detected \*\*\* babel: munmap_chunk(): invalid pointer: 0x0000000000c52480 \*\*\*; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x7e846)[0x7fb00e48f846]; /usr/lib/libopenbabel.so.4(+0xc1b2d)[0x7fb00e0d1b2d]; /usr/lib/libopenbabel.so.4(+0xc462d)[0x7fb00e0d462d]; /usr/lib/libopenbabel.so.4(+0xd19bf)[0x7fb00e0e19bf]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel15generateDiagramEPNS_5OBMolE+0x65)[0x7fb00e0f8e25]; /usr/lib/openbabel/2.3.0/plugin_ops.so(+0xc012)[0x7fb00337f012]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x4b4c)[0x7fb00cbc4b4c]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x6dc2)[0x7fb00cbc6dc2]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0xee)[0x7fb00e110fce]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1d3)[0x7fb00e114763]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x20b1)[0x7fb00e1168e1]; babel[0x40287b]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed)[0x7fb00e43276d]; babel[0x402f51]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:06 5638697 /usr/bin/babel; 00605000-00606000 r--p 00005000 08:06 5638697 /usr/bin/babel; 00606000-00607000 rw-p 00006000 08:06 5638697 /usr/bin/babel; [...]. However, if I make all hydrogens implicit, in this way:; >$ babel mol.sdf -osvg pic.svg -d. the output is correctly generated. Reported by: silyus. Original Ticket: [openbabel/bugs/953](https://sourceforge.net/p/openbabel/bugs/953)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1333
https://github.com/openbabel/openbabel/issues/1333:248,Safety,detect,detected,248,"I'm running OpenBabel v2.3.0 on a xubuntu system v12.04.5 LTS; When I try to convert the given SDF file into a vectorial SVG file, running the following command:; >$ babel mol.sdf -osvg pic.svg. babel crash with the following error:; >\*\*\* glibc detected \*\*\* babel: munmap_chunk(): invalid pointer: 0x0000000000c52480 \*\*\*; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x7e846)[0x7fb00e48f846]; /usr/lib/libopenbabel.so.4(+0xc1b2d)[0x7fb00e0d1b2d]; /usr/lib/libopenbabel.so.4(+0xc462d)[0x7fb00e0d462d]; /usr/lib/libopenbabel.so.4(+0xd19bf)[0x7fb00e0e19bf]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel15generateDiagramEPNS_5OBMolE+0x65)[0x7fb00e0f8e25]; /usr/lib/openbabel/2.3.0/plugin_ops.so(+0xc012)[0x7fb00337f012]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x4b4c)[0x7fb00cbc4b4c]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x6dc2)[0x7fb00cbc6dc2]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0xee)[0x7fb00e110fce]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1d3)[0x7fb00e114763]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x20b1)[0x7fb00e1168e1]; babel[0x40287b]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed)[0x7fb00e43276d]; babel[0x402f51]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:06 5638697 /usr/bin/babel; 00605000-00606000 r--p 00005000 08:06 5638697 /usr/bin/babel; 00606000-00607000 rw-p 00006000 08:06 5638697 /usr/bin/babel; [...]. However, if I make all hydrogens implicit, in this way:; >$ babel mol.sdf -osvg pic.svg -d. the output is correctly generated. Reported by: silyus. Original Ticket: [openbabel/bugs/953](https://sourceforge.net/p/openbabel/bugs/953)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1333
https://github.com/openbabel/openbabel/issues/1334:105,Availability,fault,fault,105,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:699,Availability,error,errorlevel,699,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1293,Availability,fault,fault,1293,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1231,Integrability,Message,Message,1231,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:640,Security,audit,audit,640,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:801,Security,Audit,Audit,801,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:927,Security,Audit,Audit,927,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1025,Security,Audit,Audit,1025,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1123,Security,Audit,Audit,1123,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:481,Testability,test,tested,481,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:572,Testability,test,test,572,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:646,Testability,log,log,646,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:680,Testability,test,test,680,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:807,Testability,Log,Log,807,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:933,Testability,Log,Log,933,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1031,Testability,Log,Log,1031,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1129,Testability,Log,Log,1129,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:439,Usability,Simpl,Simple,439,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:940,Usability,Clear,Clear,940,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:962,Usability,Clear,Clear,962,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1038,Usability,Clear,Clear,1038,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1060,Usability,Clear,Clear,1060,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1136,Usability,Clear,Clear,1136,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/issues/1334:1158,Usability,Clear,Clear,1158,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334
https://github.com/openbabel/openbabel/pull/120:25,Availability,error,error,25,This fixes a compilation error for msvc. There's not really a consistent way that I see to define NAN in a cross platform way anyway.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/120
https://github.com/openbabel/openbabel/issues/1335:375,Energy Efficiency,energy,energy,375,"When I try to compute energies using the Python API, I get always 0.0. I have tried reading PDB files using Pybel and raw Openbabel, adding hydrogens, and even running .make3D(). The command line `obenergy` successfully completes the job. The problem is not limited to PDB files, as ilustrated by this example:. In [66]: sm = pybel.readstring('smi', 'C1CCCCC1'); In [68]: sm.energy; Out[68]: 0.0. In [70]: sm.addh(). In [72]: sm.energy; Out[72]: 0.0. In [73]: sm.make3D(). In [74]: sm.energy; Out[74]: 0.0. I am using Openbabel from the Fedora repositories, version 2.3.2. Reported by: davidmh. Original Ticket: [openbabel/bugs/955](https://sourceforge.net/p/openbabel/bugs/955)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1335
https://github.com/openbabel/openbabel/issues/1335:429,Energy Efficiency,energy,energy,429,"When I try to compute energies using the Python API, I get always 0.0. I have tried reading PDB files using Pybel and raw Openbabel, adding hydrogens, and even running .make3D(). The command line `obenergy` successfully completes the job. The problem is not limited to PDB files, as ilustrated by this example:. In [66]: sm = pybel.readstring('smi', 'C1CCCCC1'); In [68]: sm.energy; Out[68]: 0.0. In [70]: sm.addh(). In [72]: sm.energy; Out[72]: 0.0. In [73]: sm.make3D(). In [74]: sm.energy; Out[74]: 0.0. I am using Openbabel from the Fedora repositories, version 2.3.2. Reported by: davidmh. Original Ticket: [openbabel/bugs/955](https://sourceforge.net/p/openbabel/bugs/955)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1335
https://github.com/openbabel/openbabel/issues/1335:485,Energy Efficiency,energy,energy,485,"When I try to compute energies using the Python API, I get always 0.0. I have tried reading PDB files using Pybel and raw Openbabel, adding hydrogens, and even running .make3D(). The command line `obenergy` successfully completes the job. The problem is not limited to PDB files, as ilustrated by this example:. In [66]: sm = pybel.readstring('smi', 'C1CCCCC1'); In [68]: sm.energy; Out[68]: 0.0. In [70]: sm.addh(). In [72]: sm.energy; Out[72]: 0.0. In [73]: sm.make3D(). In [74]: sm.energy; Out[74]: 0.0. I am using Openbabel from the Fedora repositories, version 2.3.2. Reported by: davidmh. Original Ticket: [openbabel/bugs/955](https://sourceforge.net/p/openbabel/bugs/955)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1335
https://github.com/openbabel/openbabel/pull/126:3,Usability,simpl,simple,3,"As simple as in title. I was thinking of implementing other GENOPTIONS, like -f, -l in pybel. I think it would be better and more user-friendly when pybel.readfile() would have explicit arguments: pybel.readfile(....., first=None, last=None). Ideas?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/126
https://github.com/openbabel/openbabel/pull/126:130,Usability,user-friendly,user-friendly,130,"As simple as in title. I was thinking of implementing other GENOPTIONS, like -f, -l in pybel. I think it would be better and more user-friendly when pybel.readfile() would have explicit arguments: pybel.readfile(....., first=None, last=None). Ideas?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/126
https://github.com/openbabel/openbabel/issues/127:230,Security,hash,hashed,230,"Introduced in #112. If N molecules are skipped using ""-l"" option, then comments for first molecule are lost. I guess MOL2Format::SkipObjects needs to check if line ""m-2"" has # at the beginning, and then skip few lines back (until hashed lines finish).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/127
https://github.com/openbabel/openbabel/issues/1337:176,Availability,echo,echo,176,"Hi, . OpenBabel seems to have an issue with Senkirkine.; http://www.chemspider.com/Chemical-Structure.10254880.html. The following will segfault, InChI comes from ChemSpider:. echo ""InChI=1S/C19H27NO6/c1-5-13-10-12(2)19(3,24)18(23)25-11-14-6-8-20(4)9-7-15(16(14)21)26-17(13)22/h5-6,12,15,24H,7-11H2,1-4H3/b13-5-,14-6-/t12-,15-,19-/m1/s1"" | obabel -i inchi - -xK -o inchi. The corresponding does not SEGV, but does not result in any conversion:. echo ""C/C=C\1/C[C@H]([C@@](C(=O)OC/C/2=C/CN(CC[C@H](C2=O)OC1=O)C)(C)O)C"" | obabel -i inchi - -xK -o inchi. Only the SDF/MOL get me an inchikey:. https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/6433332/record/SDF/?response_type=save&record_type=2d. and also . http://www.chemspider.com/FilesHandler.ashx?type=str&striph=yes&id=10254880. obabel -i sdf data.sdf -xK -o inchi HPDHKHMHQGCNPE-PYWIAZMFSA-N. It seems that also most depiction services choke on the InChI:. https://apps.ideaconsult.net/ambit2/depict?search=InChI%3D1S%2FC19H27NO6%2Fc1-5-13-10-12%282%2919%283%2C24%2918%2823%2925-11-14-6-8-20%284%299-7-15%2816%2814%2921%2926-17%2813%2922%2Fh5-6%2C12%2C15%2C24H%2C7-11H2%2C1-4H3%2Fb13-5%2B%2C14-6-%2Ft12-%2C15%3F%2C19-%2Fm1%2Fs1&smarts=. While the corresponding SMILES from ChemSpider seems to work in ; several toolkits, including OpenBabel:. https://apps.ideaconsult.net/ambit2/depict?search=C%2FC%3DC\1%2FC[C%40H]%28[C%40%40]%28C%28%3DO%29OC%2FC%2F2%3DC%2FCN%28CC[C%40H]%28C2%3DO%29OC1%3DO%29C%29%28C%29O%29C&smarts=. I tried Open Babel 2.3.2 and today's Open Babel 2.3.90 -- Mar 4 2015 (a65a93bed157d66f8fd6b68e1d5e96ba77ffa744). Anything else where I can help debug this ?. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/957](https://sourceforge.net/p/openbabel/bugs/957)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1337
https://github.com/openbabel/openbabel/issues/1337:445,Availability,echo,echo,445,"Hi, . OpenBabel seems to have an issue with Senkirkine.; http://www.chemspider.com/Chemical-Structure.10254880.html. The following will segfault, InChI comes from ChemSpider:. echo ""InChI=1S/C19H27NO6/c1-5-13-10-12(2)19(3,24)18(23)25-11-14-6-8-20(4)9-7-15(16(14)21)26-17(13)22/h5-6,12,15,24H,7-11H2,1-4H3/b13-5-,14-6-/t12-,15-,19-/m1/s1"" | obabel -i inchi - -xK -o inchi. The corresponding does not SEGV, but does not result in any conversion:. echo ""C/C=C\1/C[C@H]([C@@](C(=O)OC/C/2=C/CN(CC[C@H](C2=O)OC1=O)C)(C)O)C"" | obabel -i inchi - -xK -o inchi. Only the SDF/MOL get me an inchikey:. https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/6433332/record/SDF/?response_type=save&record_type=2d. and also . http://www.chemspider.com/FilesHandler.ashx?type=str&striph=yes&id=10254880. obabel -i sdf data.sdf -xK -o inchi HPDHKHMHQGCNPE-PYWIAZMFSA-N. It seems that also most depiction services choke on the InChI:. https://apps.ideaconsult.net/ambit2/depict?search=InChI%3D1S%2FC19H27NO6%2Fc1-5-13-10-12%282%2919%283%2C24%2918%2823%2925-11-14-6-8-20%284%299-7-15%2816%2814%2921%2926-17%2813%2922%2Fh5-6%2C12%2C15%2C24H%2C7-11H2%2C1-4H3%2Fb13-5%2B%2C14-6-%2Ft12-%2C15%3F%2C19-%2Fm1%2Fs1&smarts=. While the corresponding SMILES from ChemSpider seems to work in ; several toolkits, including OpenBabel:. https://apps.ideaconsult.net/ambit2/depict?search=C%2FC%3DC\1%2FC[C%40H]%28[C%40%40]%28C%28%3DO%29OC%2FC%2F2%3DC%2FCN%28CC[C%40H]%28C2%3DO%29OC1%3DO%29C%29%28C%29O%29C&smarts=. I tried Open Babel 2.3.2 and today's Open Babel 2.3.90 -- Mar 4 2015 (a65a93bed157d66f8fd6b68e1d5e96ba77ffa744). Anything else where I can help debug this ?. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/957](https://sourceforge.net/p/openbabel/bugs/957)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1337
https://github.com/openbabel/openbabel/pull/130:70,Modifiability,plugin,plugin,70,This was left out by the earlier commit while using mmcif as default; plugin for cif files.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/130
https://github.com/openbabel/openbabel/issues/131:638,Availability,Down,Downloads,638,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:953,Availability,Down,Downloads,953,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:1268,Availability,Down,Downloads,1268,"/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:1583,Availability,Down,Downloads,1583," Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2724,Availability,Down,Downloads,2724,"n by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2786,Availability,Down,Downloads,2786,"n by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2899,Availability,Down,Downloads,2899,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3301,Availability,Down,Downloads,3301,"\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3363,Availability,Down,Downloads,3363,"\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3476,Availability,Down,Downloads,3476,"t_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECU",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:4883,Availability,Down,Downloads,4883,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_out",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:4945,Availability,Down,Downloads,4945,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_out",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5058,Availability,Down,Downloads,5058,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TES",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5458,Availability,Down,Downloads,5458,"v}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5520,Availability,Down,Downloads,5520,"v}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5633,Availability,Down,Downloads,5633,"ort_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7038,Availability,Down,Downloads,7038,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7100,Availability,Down,Downloads,7100,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7213,Availability,Down,Downloads,7213,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7620,Availability,Down,Downloads,7620,"EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} $",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7682,Availability,Down,Downloads,7682,"EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} $",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7795,Availability,Down,Downloads,7795,"put; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9207,Availability,Down,Downloads,9207,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9269,Availability,Down,Downloads,9269,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9382,Availability,Down,Downloads,9382,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTH",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9785,Availability,Down,Downloads,9785,"""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pye",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9847,Availability,Down,Downloads,9847,"""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pye",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9960,Availability,Down,Downloads,9960,"_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXEC",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11368,Availability,Down,Downloads,11368,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11430,Availability,Down,Downloads,11430,"ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11543,Availability,Down,Downloads,11543,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTH",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11946,Availability,Down,Downloads,11946,"""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pye",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12008,Availability,Down,Downloads,12008,"""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pye",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12121,Availability,Down,Downloads,12121,"_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXEC",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13438,Availability,Down,Downloads,13438,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13487,Availability,Down,Downloads,13487,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13551,Availability,Down,Downloads,13551,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13600,Availability,Down,Downloads,13600,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13683,Availability,Down,Downloads,13683,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13745,Availability,Down,Downloads,13745,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13804,Availability,Down,Downloads,13804,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13853,Availability,Down,Downloads,13853,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13935,Availability,Down,Downloads,13935,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14249,Availability,Down,Downloads,14249,":. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14298,Availability,Down,Downloads,14298,":. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14362,Availability,Down,Downloads,14362,":. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14411,Availability,Down,Downloads,14411,":. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14494,Availability,Down,Downloads,14494,":. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14556,Availability,Down,Downloads,14556,":. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14615,Availability,Down,Downloads,14615,"ujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14664,Availability,Down,Downloads,14664,"ujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14746,Availability,Down,Downloads,14746,"ujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16065,Availability,Down,Downloads,16065,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16114,Availability,Down,Downloads,16114,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16178,Availability,Down,Downloads,16178,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16227,Availability,Down,Downloads,16227,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16310,Availability,Down,Downloads,16310,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16372,Availability,Down,Downloads,16372,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16431,Availability,Down,Downloads,16431,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OU",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16480,Availability,Down,Downloads,16480,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OU",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16562,Availability,Down,Downloads,16562,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OU",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16874,Availability,Down,Downloads,16874,"ce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-po",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16923,Availability,Down,Downloads,16923,"ce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-po",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16987,Availability,Down,Downloads,16987,"ce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-po",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17036,Availability,Down,Downloads,17036,"ce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-po",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17119,Availability,Down,Downloads,17119,"ce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-po",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17181,Availability,Down,Downloads,17181,"ce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-po",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17240,Availability,Down,Downloads,17240,"/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17289,Availability,Down,Downloads,17289,"/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17371,Availability,Down,Downloads,17371,"/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18688,Availability,Down,Downloads,18688,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18737,Availability,Down,Downloads,18737,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18801,Availability,Down,Downloads,18801,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18850,Availability,Down,Downloads,18850,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18933,Availability,Down,Downloads,18933,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18995,Availability,Down,Downloads,18995,"press it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19054,Availability,Down,Downloads,19054,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19103,Availability,Down,Downloads,19103,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19185,Availability,Down,Downloads,19185,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19498,Availability,Down,Downloads,19498,"e:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19547,Availability,Down,Downloads,19547,"e:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19611,Availability,Down,Downloads,19611,"e:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19660,Availability,Down,Downloads,19660,"e:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19743,Availability,Down,Downloads,19743,"e:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19805,Availability,Down,Downloads,19805,"e:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19864,Availability,Down,Downloads,19864,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19913,Availability,Down,Downloads,19913,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19995,Availability,Down,Downloads,19995,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2256,Integrability,MESSAGE,MESSAGE,2256,"babel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2537,Integrability,MESSAGE,MESSAGE,2537,"nclude):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2819,Integrability,MESSAGE,MESSAGE,2819,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3110,Integrability,MESSAGE,MESSAGE,3110,"ET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; eva",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3396,Integrability,MESSAGE,MESSAGE,3396,"t_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECU",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3708,Integrability,MESSAGE,MESSAGE,3708,"ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:4415,Integrability,MESSAGE,MESSAGE,4415,"D /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:4696,Integrability,MESSAGE,MESSAGE,4696,"k to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:4978,Integrability,MESSAGE,MESSAGE,4978,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TES",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5267,Integrability,MESSAGE,MESSAGE,5267," SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evalu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5553,Integrability,MESSAGE,MESSAGE,5553,"ort_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5863,Integrability,MESSAGE,MESSAGE,5863,"SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:6570,Integrability,MESSAGE,MESSAGE,6570,"AND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LI",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:6851,Integrability,MESSAGE,MESSAGE,6851,"k to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7133,Integrability,MESSAGE,MESSAGE,7133,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7429,Integrability,MESSAGE,MESSAGE,7429,"V{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7715,Integrability,MESSAGE,MESSAGE,7715,"put; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:8032,Integrability,MESSAGE,MESSAGE,8032,"LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:8739,Integrability,MESSAGE,MESSAGE,8739,"r/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9020,Integrability,MESSAGE,MESSAGE,9020,"k to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9302,Integrability,MESSAGE,MESSAGE,9302,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTH",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9594,Integrability,MESSAGE,MESSAGE,9594,"T(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; ev",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9880,Integrability,MESSAGE,MESSAGE,9880,"_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXEC",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:10193,Integrability,MESSAGE,MESSAGE,10193,"V{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:10900,Integrability,MESSAGE,MESSAGE,10900," /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11181,Integrability,MESSAGE,MESSAGE,11181,"k to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11463,Integrability,MESSAGE,MESSAGE,11463,"53 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTH",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11755,Integrability,MESSAGE,MESSAGE,11755,"T(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; ev",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12041,Integrability,MESSAGE,MESSAGE,12041,"_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXEC",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12354,Integrability,MESSAGE,MESSAGE,12354,"V{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13061,Integrability,MESSAGE,MESSAGE,13061," /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13342,Integrability,MESSAGE,MESSAGE,13342,"k to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13778,Integrability,MESSAGE,MESSAGE,13778,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14149,Integrability,MESSAGE,MESSAGE,14149," ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (A",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14589,Integrability,MESSAGE,MESSAGE,14589,"ujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14981,Integrability,MESSAGE,MESSAGE,14981,"est/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:15688,Integrability,MESSAGE,MESSAGE,15688,"usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_outp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:15969,Integrability,MESSAGE,MESSAGE,15969,"k to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(E",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16405,Integrability,MESSAGE,MESSAGE,16405,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OU",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16774,Integrability,MESSAGE,MESSAGE,16774,"E} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17214,Integrability,MESSAGE,MESSAGE,17214,"/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17604,Integrability,MESSAGE,MESSAGE,17604,".1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_ou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18311,Integrability,MESSAGE,MESSAGE,18311," /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_out",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:18592,Integrability,MESSAGE,MESSAGE,18592,"k to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19028,Integrability,MESSAGE,MESSAGE,19028,"is warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19398,Integrability,MESSAGE,MESSAGE,19398,"} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (AD",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19838,Integrability,MESSAGE,MESSAGE,19838,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:20229,Integrability,MESSAGE,MESSAGE,20229,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:6,Modifiability,Config,Config,6,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:1889,Modifiability,variab,variable,1889,"include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:4048,Modifiability,variab,variable,4048,"_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:6203,Modifiability,variab,variable,6203,"rt_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:8372,Modifiability,variab,variable,8372,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:10533,Modifiability,variab,variable,10533,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12694,Modifiability,variab,variable,12694,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:15321,Modifiability,variab,variable,15321," SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17944,Modifiability,variab,variable,17944,"); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:20498,Modifiability,Config,Configuring,20498,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:333,Testability,Log,Log,333,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:547,Testability,test,test,547,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:862,Testability,test,test,862,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:1177,Testability,test,test,1177,"); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_P",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:1492,Testability,test,test,1492," supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # P",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2925,Testability,test,test,2925,"aluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to su",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:2930,Testability,test,testbabel,2930,"aluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to su",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3502,Testability,test,test,3502,"to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn};",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3507,Testability,test,testbabel,3507,"to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn};",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:3831,Testability,test,test,3831,"MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5084,Testability,test,test,5084,"valuation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5089,Testability,test,testsym,5089,"valuation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5659,Testability,test,test,5659,"ck to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5664,Testability,test,testsym,5664,"ck to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:5986,Testability,test,test,5986,"a); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7239,Testability,test,test,7239,"ation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7244,Testability,test,testfastsearch,7244,"ation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7821,Testability,test,test,7821,"; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolum",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:7826,Testability,test,testfastsearch,7826,"; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolum",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:8155,Testability,test,test,8155,"OTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9408,Testability,test,test,9408,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9413,Testability,test,testunique,9413,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9986,Testability,test,test,9986," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:9991,Testability,test,testunique,9991," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:10316,Testability,test,test,10316,"SSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11569,Testability,test,test,11569,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:11574,Testability,test,testkekule,11574,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12147,Testability,test,test,12147," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12152,Testability,test,testkekule,12152," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12477,Testability,test,test,12477,"SSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13961,Testability,test,test,13961,"LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:13966,Testability,test,testbindings,13966,"LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14772,Testability,test,test,14772,"SSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:14777,Testability,test,testbindings,14777,"SSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:15104,Testability,test,test,15104,"; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:16588,Testability,test,test,16588,"_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17397,Testability,test,test,17397," MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17727,Testability,test,test,17727,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19211,Testability,test,test,19211,"_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:19216,Testability,test,testexample,19216,"_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:20021,Testability,test,test,20021,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:20026,Testability,test,testexample,20026,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:20352,Testability,test,test,20352,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:1880,Usability,Simpl,Simplify,1880,"include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:4039,Usability,Simpl,Simplify,4039,"_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:6194,Usability,Simpl,Simplify,6194,"rt_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:8363,Usability,Simpl,Simplify,8363,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:10524,Usability,Simpl,Simplify,10524,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:12685,Usability,Simpl,Simplify,12685,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:15312,Usability,Simpl,Simplify,15312," SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/issues/131:17935,Usability,Simpl,Simplify,17935,"); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131
https://github.com/openbabel/openbabel/pull/132:137,Modifiability,enhance,enhanced,137,"The method marks ring bonds as potential rotors and supplies some; initial constraints on rings of size 4-8. Performance can be greatly; enhanced by checking rotors for physically realistic conformations; (i.e., sum of the dihedrals in ring = 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/132
https://github.com/openbabel/openbabel/pull/132:109,Performance,Perform,Performance,109,"The method marks ring bonds as potential rotors and supplies some; initial constraints on rings of size 4-8. Performance can be greatly; enhanced by checking rotors for physically realistic conformations; (i.e., sum of the dihedrals in ring = 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/132
https://github.com/openbabel/openbabel/pull/133:20,Modifiability,Config,Config,20,Substitute obsolete Config constant with RbConfig constant.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/133
https://github.com/openbabel/openbabel/issues/134:85,Integrability,message,message,85,"Following a thread from the mailing list (http://sourceforge.net/p/openbabel/mailman/message/33638880/) there seems to be a problem with gen3d for some InChI strings.; In short, using the InChI from https://www.ebi.ac.uk/chembl/compound/inspect/CHEMBL1096885 with gen3d will produce a very strange structure where the sugar moiety has been completely mangled with e.g. hydrogens with multiple bonds (see attached image); ![untitled_document-1](https://cloud.githubusercontent.com/assets/86855/6824103/26da3102-d2ef-11e4-99d3-75a88fc82c79.png). However, when going through canonical smiles, the problem doesn't occur. Compare the results from the following commands and you'll see that the generated structures are different even at connection level. The first is directly InChI -> can with gen3d, for the second command, I first convert InChI -> can and then in a separate call to obabel I generate 3D coordinates. ``` shell; > obabel -iinchi -:""InChI=1S/C34H36F3NO13/c1-4-5-9-21(40)49-13-20(39)33(47)11-16-24(19(12-33)51-22-10-17(27(41)14(2)50-22)38-32(46)34(35,36)37)31(45)26-25(29(16)43)28(42)15-7-6-8-18(48-3)23(15)30(26)44/h6-8,14,17,19,22,27,41,43,45,47H,4-5,9-13H2,1-3H3,(H,38,46)/t14-,17-,19-,22-,27+,33-/m0/s1"" -ocan --gen3d; COc1cccc2c1C(=O)c1c(C2=O)c(O)c2c(c1O)[C@H]13[H]C4([H][C@H]56O[C@H]7(O1)[H]C5[H][C@H]6([C@H]([H]4)(C7)N=C(C(F)(F)F)O)O)CCCC(=O)OCC(=O)[C@](C2)(C3)O ; 1 molecule converted. > obabel -iinchi -:""InChI=1S/C34H36F3NO13/c1-4-5-9-21(40)49-13-20(39)33(47)11-16-24(19(12-33)51-22-10-17(27(41)14(2)50-22)38-32(46)34(35,36)37)31(45)26-25(29(16)43)28(42)15-7-6-8-18(48-3)23(15)30(26)44/h6-8,14,17,19,22,27,41,43,45,47H,4-5,9-13H2,1-3H3,(H,38,46)/t14-,17-,19-,22-,27+,33-/m0/s1"" -ocan | obabel -ismi -ocan --gen3d; 1 molecule converted; CCCCC(=O)OCC(=O)[C@@]1(O)C[C@H](O[C@@H]2O[C@@H](C)[C@H]([C@H](C2)N=C(C(F)(F)F)O)O)c2c(C1)c(O)c1c(c2O)C(=O)c2c(C1=O)cccc2OC ; 1 molecule converted; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134
https://github.com/openbabel/openbabel/issues/135:560,Safety,Abort,Aborted,560,"```; import pybel. mA = pybel.readstring(""smi"", ""C(=O)([O-])C(=O)O""). print (mA.write(""smi"", opt={""I"" : True})); print (mA.write(""smi"", opt={""U"" : True})); ```. I expected this code to print the inchified SMILES form of the molecule followed by the universal SMILES form. In fact it works when the order of the write operations is reversed. But this ordering leads to abnormal program termination:. matt@mbe-laptop:~$ python pybel-bug.py ; C(=O)(C(=O)O)[O-] . terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check; Aborted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135
https://github.com/openbabel/openbabel/pull/136:12,Deployability,install,installing,12,"This allows installing the architecture independent data outside; the prefix, for example on a multiarch layout where the prefix; is /usr/{host-triplet}.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/136
https://github.com/openbabel/openbabel/pull/137:12,Deployability,update,updates,12,This commit updates `scripts/python/openbabel-python.i` to match recent fixes to `scripts/openbabel-python.i`. It also bumps the version number in `scripts/python/setup.py` to prepare for uploading the fixes to PyPI to fix installing the python bindings through `pip install openbabel`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/137
https://github.com/openbabel/openbabel/pull/137:223,Deployability,install,installing,223,This commit updates `scripts/python/openbabel-python.i` to match recent fixes to `scripts/openbabel-python.i`. It also bumps the version number in `scripts/python/setup.py` to prepare for uploading the fixes to PyPI to fix installing the python bindings through `pip install openbabel`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/137
https://github.com/openbabel/openbabel/pull/137:267,Deployability,install,install,267,This commit updates `scripts/python/openbabel-python.i` to match recent fixes to `scripts/openbabel-python.i`. It also bumps the version number in `scripts/python/setup.py` to prepare for uploading the fixes to PyPI to fix installing the python bindings through `pip install openbabel`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/137
https://github.com/openbabel/openbabel/pull/139:107,Deployability,install,install,107,"I've had imolecule on pypi for a while, and it makes more sense to maintain that and require users to `pip install imolecule` when they want the integration. Switching moves this rendering to the most recent version, which includes things like:; - Fallback to canvas rendering for users without webgl; - Only renders on change; - High-DPI screen bugfixes; - Highlight support ([info](https://github.com/patrickfuller/imolecule/pull/7)); - Now uses lambert renderer instead of toon. Most of these updates come from @bjonnh, so kudos go to him.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/139
https://github.com/openbabel/openbabel/pull/139:145,Deployability,integrat,integration,145,"I've had imolecule on pypi for a while, and it makes more sense to maintain that and require users to `pip install imolecule` when they want the integration. Switching moves this rendering to the most recent version, which includes things like:; - Fallback to canvas rendering for users without webgl; - Only renders on change; - High-DPI screen bugfixes; - Highlight support ([info](https://github.com/patrickfuller/imolecule/pull/7)); - Now uses lambert renderer instead of toon. Most of these updates come from @bjonnh, so kudos go to him.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/139
https://github.com/openbabel/openbabel/pull/139:496,Deployability,update,updates,496,"I've had imolecule on pypi for a while, and it makes more sense to maintain that and require users to `pip install imolecule` when they want the integration. Switching moves this rendering to the most recent version, which includes things like:; - Fallback to canvas rendering for users without webgl; - Only renders on change; - High-DPI screen bugfixes; - Highlight support ([info](https://github.com/patrickfuller/imolecule/pull/7)); - Now uses lambert renderer instead of toon. Most of these updates come from @bjonnh, so kudos go to him.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/139
https://github.com/openbabel/openbabel/pull/139:145,Integrability,integrat,integration,145,"I've had imolecule on pypi for a while, and it makes more sense to maintain that and require users to `pip install imolecule` when they want the integration. Switching moves this rendering to the most recent version, which includes things like:; - Fallback to canvas rendering for users without webgl; - Only renders on change; - High-DPI screen bugfixes; - Highlight support ([info](https://github.com/patrickfuller/imolecule/pull/7)); - Now uses lambert renderer instead of toon. Most of these updates come from @bjonnh, so kudos go to him.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/139
https://github.com/openbabel/openbabel/pull/140:229,Deployability,install,install,229,"Due to some problems with symbolic links, there are currently outdated duplicates of `openbabel-python.i` and `stereo.i` in the `scripts/python` directory. This commit removes these duplicates, but should preserve the ability to install the python bindings independently using `pip`:; - Remove the duplicate swig interface files from the `python` directory.; - Remove the rule specifying those files from `MANIFEST.in`. Unfortunately, we can’t specify files from the parent directory here, so instead:; - Modify `setup.py` to pull in the interface files from the parent directory when preparing the distrubution using `sdist`. Also:; - Add the rule `exclude openbabel.py` to `MANIFEST.in`, to help prevent accidentally including a copy of the resulting swig bindings in the source distribution.; - Bump the python bindings version number to 1.8.2 to allow these changes to be pushed to PyPI.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/140
https://github.com/openbabel/openbabel/pull/140:313,Integrability,interface,interface,313,"Due to some problems with symbolic links, there are currently outdated duplicates of `openbabel-python.i` and `stereo.i` in the `scripts/python` directory. This commit removes these duplicates, but should preserve the ability to install the python bindings independently using `pip`:; - Remove the duplicate swig interface files from the `python` directory.; - Remove the rule specifying those files from `MANIFEST.in`. Unfortunately, we can’t specify files from the parent directory here, so instead:; - Modify `setup.py` to pull in the interface files from the parent directory when preparing the distrubution using `sdist`. Also:; - Add the rule `exclude openbabel.py` to `MANIFEST.in`, to help prevent accidentally including a copy of the resulting swig bindings in the source distribution.; - Bump the python bindings version number to 1.8.2 to allow these changes to be pushed to PyPI.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/140
https://github.com/openbabel/openbabel/pull/140:538,Integrability,interface,interface,538,"Due to some problems with symbolic links, there are currently outdated duplicates of `openbabel-python.i` and `stereo.i` in the `scripts/python` directory. This commit removes these duplicates, but should preserve the ability to install the python bindings independently using `pip`:; - Remove the duplicate swig interface files from the `python` directory.; - Remove the rule specifying those files from `MANIFEST.in`. Unfortunately, we can’t specify files from the parent directory here, so instead:; - Modify `setup.py` to pull in the interface files from the parent directory when preparing the distrubution using `sdist`. Also:; - Add the rule `exclude openbabel.py` to `MANIFEST.in`, to help prevent accidentally including a copy of the resulting swig bindings in the source distribution.; - Bump the python bindings version number to 1.8.2 to allow these changes to be pushed to PyPI.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/140
https://github.com/openbabel/openbabel/pull/141:9,Availability,error,error,9,Fixed an error with the allExplicit option where the function was opposite to what was stated. Fixed by removing the negation in test.; See line note in https://github.com/openbabel/openbabel/commit/ba397aa5a01cd3753072fadf9535d0092dfcf784#diff-2a365bc04bfc2f8bea760bcade7466a0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/141
https://github.com/openbabel/openbabel/pull/141:129,Testability,test,test,129,Fixed an error with the allExplicit option where the function was opposite to what was stated. Fixed by removing the negation in test.; See line note in https://github.com/openbabel/openbabel/commit/ba397aa5a01cd3753072fadf9535d0092dfcf784#diff-2a365bc04bfc2f8bea760bcade7466a0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/141
https://github.com/openbabel/openbabel/pull/142:10,Performance,cache,cache,10,"(1) Don't cache inchi when generating inchifield smiles; (2) Don't use cached inchi if the user specifies one of several InChI output options; (3) Add a new test file for caching (and debugging) regressions: regressionstest.cpp; (4) Drive-by fix for typo in docstrings for 'unique' op and inchiformat (""/sp3"" -> ""/nosp3""); (5) Add test for regression to regressionstest.cpp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/142
https://github.com/openbabel/openbabel/pull/142:71,Performance,cache,cached,71,"(1) Don't cache inchi when generating inchifield smiles; (2) Don't use cached inchi if the user specifies one of several InChI output options; (3) Add a new test file for caching (and debugging) regressions: regressionstest.cpp; (4) Drive-by fix for typo in docstrings for 'unique' op and inchiformat (""/sp3"" -> ""/nosp3""); (5) Add test for regression to regressionstest.cpp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/142
https://github.com/openbabel/openbabel/pull/142:157,Testability,test,test,157,"(1) Don't cache inchi when generating inchifield smiles; (2) Don't use cached inchi if the user specifies one of several InChI output options; (3) Add a new test file for caching (and debugging) regressions: regressionstest.cpp; (4) Drive-by fix for typo in docstrings for 'unique' op and inchiformat (""/sp3"" -> ""/nosp3""); (5) Add test for regression to regressionstest.cpp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/142
https://github.com/openbabel/openbabel/pull/142:331,Testability,test,test,331,"(1) Don't cache inchi when generating inchifield smiles; (2) Don't use cached inchi if the user specifies one of several InChI output options; (3) Add a new test file for caching (and debugging) regressions: regressionstest.cpp; (4) Drive-by fix for typo in docstrings for 'unique' op and inchiformat (""/sp3"" -> ""/nosp3""); (5) Add test for regression to regressionstest.cpp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/142
https://github.com/openbabel/openbabel/issues/145:22,Deployability,patch,patch,22,"Hi,; Here's a trivial patch to add an option to the PDBQT writer to cause it to preserve all hydrogens in the output. Apologies, I've no idea how to do the github pull request dance. ```; $ git diff pdbqtformat.cpp; diff --git a/src/formats/pdbqtformat.cpp b/src/formats/pdbqtformat.cpp; index 289c4bd..5cafdad 100644; --- a/src/formats/pdbqtformat.cpp; +++ b/src/formats/pdbqtformat.cpp; @@ -81,7 +81,8 @@ namespace OpenBabel; "" r Output as a rigid molecule (i.e. no branches or torsion tree)\n""; "" c Combine separate molecular pieces of input into a single rigid molecule (requires \""r\"" option or will have no effect)\n""; "" s Output as a flexible residue\n""; - "" p Preserve atom indices from input file (default is to renumber atoms sequentially)\n\n"";; + "" p Preserve atom indices from input file (default is to renumber atoms sequentially)\n""; + "" h Preserve hydrogens\n\n"";; };. virtual const char* SpecificationURL(); @@ -805,7 +806,10 @@ namespace OpenBabel; }. all_pieces.at(i).SetAutomaticPartialCharge(false);; - DeleteHydrogens(all_pieces.at(i));; +; + if (!(pConv->IsOption(""h"",OBConversion::OUTOPTIONS))) {; + DeleteHydrogens(all_pieces.at(i));; + }. int model_num = 0;; char buffer[BUFF_SIZE];; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/145
https://github.com/openbabel/openbabel/issues/145:641,Modifiability,flexible,flexible,641,"Hi,; Here's a trivial patch to add an option to the PDBQT writer to cause it to preserve all hydrogens in the output. Apologies, I've no idea how to do the github pull request dance. ```; $ git diff pdbqtformat.cpp; diff --git a/src/formats/pdbqtformat.cpp b/src/formats/pdbqtformat.cpp; index 289c4bd..5cafdad 100644; --- a/src/formats/pdbqtformat.cpp; +++ b/src/formats/pdbqtformat.cpp; @@ -81,7 +81,8 @@ namespace OpenBabel; "" r Output as a rigid molecule (i.e. no branches or torsion tree)\n""; "" c Combine separate molecular pieces of input into a single rigid molecule (requires \""r\"" option or will have no effect)\n""; "" s Output as a flexible residue\n""; - "" p Preserve atom indices from input file (default is to renumber atoms sequentially)\n\n"";; + "" p Preserve atom indices from input file (default is to renumber atoms sequentially)\n""; + "" h Preserve hydrogens\n\n"";; };. virtual const char* SpecificationURL(); @@ -805,7 +806,10 @@ namespace OpenBabel; }. all_pieces.at(i).SetAutomaticPartialCharge(false);; - DeleteHydrogens(all_pieces.at(i));; +; + if (!(pConv->IsOption(""h"",OBConversion::OUTOPTIONS))) {; + DeleteHydrogens(all_pieces.at(i));; + }. int model_num = 0;; char buffer[BUFF_SIZE];; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/145
https://github.com/openbabel/openbabel/pull/147:150,Deployability,integrat,integration,150,Added two new options to the PDBQT writing code:; -h to preserve hydrogens ; -n to preserve atom and residue naming; These are useful to simplify the integration of Vina/autodock with other tools.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/147
https://github.com/openbabel/openbabel/pull/147:150,Integrability,integrat,integration,150,Added two new options to the PDBQT writing code:; -h to preserve hydrogens ; -n to preserve atom and residue naming; These are useful to simplify the integration of Vina/autodock with other tools.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/147
https://github.com/openbabel/openbabel/pull/147:137,Usability,simpl,simplify,137,Added two new options to the PDBQT writing code:; -h to preserve hydrogens ; -n to preserve atom and residue naming; These are useful to simplify the integration of Vina/autodock with other tools.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/147
https://github.com/openbabel/openbabel/issues/151:55,Availability,error,error,55,"At linking:. <pre>; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(int)"" (??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: virtual __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(void)"" (??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::str(void)const "" (?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; C:\openbabel\build\bin\Debug\formats_json.obf : fatal error LNK1169: one or more multiply defined symbols found [C:\openbabel\build\src\formats\formats_json.vcxproj]; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/151
https://github.com/openbabel/openbabel/issues/151:460,Availability,error,error,460,"At linking:. <pre>; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(int)"" (??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: virtual __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(void)"" (??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::str(void)const "" (?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; C:\openbabel\build\bin\Debug\formats_json.obf : fatal error LNK1169: one or more multiply defined symbols found [C:\openbabel\build\src\formats\formats_json.vcxproj]; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/151
https://github.com/openbabel/openbabel/issues/151:874,Availability,error,error,874,"At linking:. <pre>; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(int)"" (??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: virtual __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(void)"" (??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::str(void)const "" (?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; C:\openbabel\build\bin\Debug\formats_json.obf : fatal error LNK1169: one or more multiply defined symbols found [C:\openbabel\build\src\formats\formats_json.vcxproj]; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/151
https://github.com/openbabel/openbabel/issues/151:1378,Availability,error,error,1378,"At linking:. <pre>; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(int)"" (??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: virtual __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >(void)"" (??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; openbabel-2.lib(openbabel-2.dll) : error LNK2005: ""public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::basic_stringbuf<char,struct std::char_traits<char>,class std::allocator<char> >::str(void)const "" (?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ) already defined in jsoncpp.obj [C:\openbabel\build\src\formats\formats_json.vcxproj]; C:\openbabel\build\bin\Debug\formats_json.obf : fatal error LNK1169: one or more multiply defined symbols found [C:\openbabel\build\src\formats\formats_json.vcxproj]; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/151
https://github.com/openbabel/openbabel/issues/152:74,Availability,error,error,74,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:229,Availability,error,error,229,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:389,Availability,error,error,389,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:546,Availability,error,error,546,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:689,Availability,error,error,689,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:839,Availability,error,error,839,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:994,Availability,error,error,994,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:1149,Availability,error,error,1149,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:1301,Availability,error,error,1301,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/152:1444,Availability,error,error,1444,During compilation:. <pre>; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2039: 'not_equal_to' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2065: 'not_equal_to' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(488): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'bind2nd' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2039: 'divides' : is not a member of 'std' [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2065: 'divides' : undeclared identifier [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C2062: type 'double' unexpected [C:\openbabel\build\src\formats\formats_compchem.vcxproj]; C:\openbabel\src\formats\vaspformat.cpp(542): error C3861: 'bind2nd': identifier not found [C:\openbabel\build\src\formats\formats_compchem.vcxproj; </pre>,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/152
https://github.com/openbabel/openbabel/issues/154:1137,Deployability,update,updated,1137,"I'd like to announce openbabel committers that i've started a fork project which aims to make openbabel C++14 friendly. Here's my fork: https://github.com/chlorix/skyscraper. Here's the initial diff:; https://github.com/chlorix/skyscraper/commit/442a761d1aa580c33f2918e208c9ad59dc22febf?w=0; (Do not click the direct commit URL since it's too large. This link excludes whitespace related diffs. ). Until now, I have:; - Killed evil `using namespace std` in `*.cpp` files.; - Luckily, there was none of them in header files, but......; - This was causing some cpp files to reference C library functions instead of C++ `std::*` functions.; - Added much much more `const`ness to the codebase. :tada:; - Replaced `NULL` with `nullptr`. Some of my next goals are:; - Complete `-Wall` support.; - Replace all iterator related stuff with Range.; - Replace obsolete string manipulations with Boost stuff. ---; ### So what am I thinking?; - I am certainly going to break backward compatibilities.; - I'd like to hear some opinions from the current openbabel maintainers.; - I'd be happy to receive any kind of advices to keep openbabel fresh and updated.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/154
https://github.com/openbabel/openbabel/pull/156:10,Modifiability,plugin,plugin,10,"Hi,. This plugin, ""pointcloud"" generates points on the vdw surfaces around a molecule; Radius multipliers and point densities can be specified; Output is in (pseudo) xyz format",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156
https://github.com/openbabel/openbabel/issues/157:45,Energy Efficiency,charge,charges,45,"Hi,. I'd like to be able to assign arbitrary charges to atoms, from a file containing a list of atomname charge pairs, for example. ```; babel --partialcharges fromfile [charges.txt] -i mol2 input.mol2 -o mol2 output.mol2; ```. I'm writing a plugin to do this, since there doesn't seem to be any way to do it currently.; Any recommendations about how best to pass the filename argument to the charge method?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157
https://github.com/openbabel/openbabel/issues/157:105,Energy Efficiency,charge,charge,105,"Hi,. I'd like to be able to assign arbitrary charges to atoms, from a file containing a list of atomname charge pairs, for example. ```; babel --partialcharges fromfile [charges.txt] -i mol2 input.mol2 -o mol2 output.mol2; ```. I'm writing a plugin to do this, since there doesn't seem to be any way to do it currently.; Any recommendations about how best to pass the filename argument to the charge method?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157
https://github.com/openbabel/openbabel/issues/157:170,Energy Efficiency,charge,charges,170,"Hi,. I'd like to be able to assign arbitrary charges to atoms, from a file containing a list of atomname charge pairs, for example. ```; babel --partialcharges fromfile [charges.txt] -i mol2 input.mol2 -o mol2 output.mol2; ```. I'm writing a plugin to do this, since there doesn't seem to be any way to do it currently.; Any recommendations about how best to pass the filename argument to the charge method?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157
https://github.com/openbabel/openbabel/issues/157:393,Energy Efficiency,charge,charge,393,"Hi,. I'd like to be able to assign arbitrary charges to atoms, from a file containing a list of atomname charge pairs, for example. ```; babel --partialcharges fromfile [charges.txt] -i mol2 input.mol2 -o mol2 output.mol2; ```. I'm writing a plugin to do this, since there doesn't seem to be any way to do it currently.; Any recommendations about how best to pass the filename argument to the charge method?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157
https://github.com/openbabel/openbabel/issues/157:242,Modifiability,plugin,plugin,242,"Hi,. I'd like to be able to assign arbitrary charges to atoms, from a file containing a list of atomname charge pairs, for example. ```; babel --partialcharges fromfile [charges.txt] -i mol2 input.mol2 -o mol2 output.mol2; ```. I'm writing a plugin to do this, since there doesn't seem to be any way to do it currently.; Any recommendations about how best to pass the filename argument to the charge method?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157
https://github.com/openbabel/openbabel/pull/158:89,Availability,error,error,89,"For MSVC, link against a DLL rather than compiling it in. The latter was; causing a link error which I could not resolve. Fixes #151",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/158
https://github.com/openbabel/openbabel/pull/159:10,Energy Efficiency,charge,charges,10,"Hi,. The ""charges none"" method seems to have been removed at some point.; I'd like to re-introduce it, as we have a dependency on it. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/159
https://github.com/openbabel/openbabel/pull/159:116,Integrability,depend,dependency,116,"Hi,. The ""charges none"" method seems to have been removed at some point.; I'd like to re-introduce it, as we have a dependency on it. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/159
https://github.com/openbabel/openbabel/pull/160:4,Modifiability,plugin,plugin,4,"New plugin to produce points quasi-randomly distributed on VDW surfaces. The output is a list of {x,y,z} tuples in Angstrom. options:. -r A comma-separated list of VDW radius-multipliers for surfaces to map (default 1.0); -d A comma-separated list of point densities (AA^2/point) (default 1.0); - used to calculate minima distance between points; -p Radius in AA of the probe atom (default 0.A); -x Write out in XYZ format",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/160
https://github.com/openbabel/openbabel/pull/161:146,Modifiability,plugin,plugin,146,"Hidden surfaces not culled, but Makerware seems happy with it.; No control over # of triangles; CPK colours optional . I'm making this a separate plugin to pointcloud, as it works in quite a different way, and I expect will attract more features over time (eg adding bonds for CPK/molymod style prints)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/161
https://github.com/openbabel/openbabel/issues/162:437,Integrability,depend,depending,437,"Hi,. Starting from the SMILES c1(c(ccc(c1)N)C)O, and doing:. ```; for T in ($seq 1 14);; do babel -p $T --gen3d --smi smi.txt --out mol2 ph-$T.mol2; done; ```. yields a constant protonation across the whole range, consistent with pH ~7. Our reference protonation method, Marvin sketch, give 3 microspecies across the range. I've uncommented the printf debugging in phmodel.cpp and can see that the code's definitely behaving differently depending on the input pH. Any ideas?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/162
https://github.com/openbabel/openbabel/issues/165:71,Testability,test,test,71,"Hi,. Could someone give me a quick outline of the procedure for adding test cases, please?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165
https://github.com/openbabel/openbabel/pull/167:29,Energy Efficiency,charge,charges,29,"Applies per-atomtype/element charges specified in a file, eg:; babel --partialcharge fromfile:mapping.txt -i mol2 in.mol2 -o mol2 out.mol2. $ cat mapping.txt; C1 1.0; C2 0.5; O1 -1.0; etc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/167
https://github.com/openbabel/openbabel/pull/168:43,Testability,test,tests,43,"Take two, incl. fix for failing regression tests.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/168
https://github.com/openbabel/openbabel/pull/169:85,Deployability,patch,patch,85,"Submitted for comment -. Intended to facilitate interchangeability of QM codes, this patch adds code for generating Gaussian and PSI4 input files. Inputs are constructed them from a common set of configuration options:. ```; psi4in -- Generate a PSI4 Input file. [Write-only]; Write Options:; T<theory> Theory level for calculation. Options: (rhf); b3lyp; rhf; rohf; uhf; B<basis-set> Basis set for calculation. Options: (6-31g*); 6-31g*; cc-pvdz; M# Multiplicity of the molecule (default 1); E Calculate field and potential on points from grid.dat; O<type> Optimise geometry. Options: (default none); none loose normal tight; F<...> List of bonds, angles and dihedrals to freeze; Atoms indexed from 1, comma-separated.; Each term colon-separated.; Eg freezing one angle, one dihedral: ; -xF 1,2,3:3,5,6,7; m# Amount of memory to allocate (GB) (default 2.0); n# Number of CPUs/threads to allocate (default 1). ```. This is a derivative of something we use in-house; I've another few formats I can add in the same model",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169
https://github.com/openbabel/openbabel/pull/169:196,Deployability,configurat,configuration,196,"Submitted for comment -. Intended to facilitate interchangeability of QM codes, this patch adds code for generating Gaussian and PSI4 input files. Inputs are constructed them from a common set of configuration options:. ```; psi4in -- Generate a PSI4 Input file. [Write-only]; Write Options:; T<theory> Theory level for calculation. Options: (rhf); b3lyp; rhf; rohf; uhf; B<basis-set> Basis set for calculation. Options: (6-31g*); 6-31g*; cc-pvdz; M# Multiplicity of the molecule (default 1); E Calculate field and potential on points from grid.dat; O<type> Optimise geometry. Options: (default none); none loose normal tight; F<...> List of bonds, angles and dihedrals to freeze; Atoms indexed from 1, comma-separated.; Each term colon-separated.; Eg freezing one angle, one dihedral: ; -xF 1,2,3:3,5,6,7; m# Amount of memory to allocate (GB) (default 2.0); n# Number of CPUs/threads to allocate (default 1). ```. This is a derivative of something we use in-house; I've another few formats I can add in the same model",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169
https://github.com/openbabel/openbabel/pull/169:830,Energy Efficiency,allocate,allocate,830,"Submitted for comment -. Intended to facilitate interchangeability of QM codes, this patch adds code for generating Gaussian and PSI4 input files. Inputs are constructed them from a common set of configuration options:. ```; psi4in -- Generate a PSI4 Input file. [Write-only]; Write Options:; T<theory> Theory level for calculation. Options: (rhf); b3lyp; rhf; rohf; uhf; B<basis-set> Basis set for calculation. Options: (6-31g*); 6-31g*; cc-pvdz; M# Multiplicity of the molecule (default 1); E Calculate field and potential on points from grid.dat; O<type> Optimise geometry. Options: (default none); none loose normal tight; F<...> List of bonds, angles and dihedrals to freeze; Atoms indexed from 1, comma-separated.; Each term colon-separated.; Eg freezing one angle, one dihedral: ; -xF 1,2,3:3,5,6,7; m# Amount of memory to allocate (GB) (default 2.0); n# Number of CPUs/threads to allocate (default 1). ```. This is a derivative of something we use in-house; I've another few formats I can add in the same model",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169
https://github.com/openbabel/openbabel/pull/169:888,Energy Efficiency,allocate,allocate,888,"Submitted for comment -. Intended to facilitate interchangeability of QM codes, this patch adds code for generating Gaussian and PSI4 input files. Inputs are constructed them from a common set of configuration options:. ```; psi4in -- Generate a PSI4 Input file. [Write-only]; Write Options:; T<theory> Theory level for calculation. Options: (rhf); b3lyp; rhf; rohf; uhf; B<basis-set> Basis set for calculation. Options: (6-31g*); 6-31g*; cc-pvdz; M# Multiplicity of the molecule (default 1); E Calculate field and potential on points from grid.dat; O<type> Optimise geometry. Options: (default none); none loose normal tight; F<...> List of bonds, angles and dihedrals to freeze; Atoms indexed from 1, comma-separated.; Each term colon-separated.; Eg freezing one angle, one dihedral: ; -xF 1,2,3:3,5,6,7; m# Amount of memory to allocate (GB) (default 2.0); n# Number of CPUs/threads to allocate (default 1). ```. This is a derivative of something we use in-house; I've another few formats I can add in the same model",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169
https://github.com/openbabel/openbabel/pull/169:196,Modifiability,config,configuration,196,"Submitted for comment -. Intended to facilitate interchangeability of QM codes, this patch adds code for generating Gaussian and PSI4 input files. Inputs are constructed them from a common set of configuration options:. ```; psi4in -- Generate a PSI4 Input file. [Write-only]; Write Options:; T<theory> Theory level for calculation. Options: (rhf); b3lyp; rhf; rohf; uhf; B<basis-set> Basis set for calculation. Options: (6-31g*); 6-31g*; cc-pvdz; M# Multiplicity of the molecule (default 1); E Calculate field and potential on points from grid.dat; O<type> Optimise geometry. Options: (default none); none loose normal tight; F<...> List of bonds, angles and dihedrals to freeze; Atoms indexed from 1, comma-separated.; Each term colon-separated.; Eg freezing one angle, one dihedral: ; -xF 1,2,3:3,5,6,7; m# Amount of memory to allocate (GB) (default 2.0); n# Number of CPUs/threads to allocate (default 1). ```. This is a derivative of something we use in-house; I've another few formats I can add in the same model",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169
https://github.com/openbabel/openbabel/issues/170:85,Availability,Error,Error,85,"<pre>; >obabel -:O[C@@H](C)N -oinchi; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""r"" in Point cloud on VDW surface di; ffers from an earlier registration.; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""x"" in Point cloud on VDW surface di; ffers from an earlier registration.; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""p"" in Chemical Markup Language diff; ers from an earlier registration.; InChI=1S/C2H7NO/c1-2(3)4/h2,4H,3H2,1H3/t2-/m0/s1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/170
https://github.com/openbabel/openbabel/issues/170:304,Availability,Error,Error,304,"<pre>; >obabel -:O[C@@H](C)N -oinchi; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""r"" in Point cloud on VDW surface di; ffers from an earlier registration.; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""x"" in Point cloud on VDW surface di; ffers from an earlier registration.; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""p"" in Chemical Markup Language diff; ers from an earlier registration.; InChI=1S/C2H7NO/c1-2(3)4/h2,4H,3H2,1H3/t2-/m0/s1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/170
https://github.com/openbabel/openbabel/issues/170:523,Availability,Error,Error,523,"<pre>; >obabel -:O[C@@H](C)N -oinchi; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""r"" in Point cloud on VDW surface di; ffers from an earlier registration.; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""x"" in Point cloud on VDW surface di; ffers from an earlier registration.; ==============================; *** Open Babel Error in OpenBabel::OBConversion::RegisterOptionParam; The number of parameters needed by option ""p"" in Chemical Markup Language diff; ers from an earlier registration.; InChI=1S/C2H7NO/c1-2(3)4/h2,4H,3H2,1H3/t2-/m0/s1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/170
https://github.com/openbabel/openbabel/issues/173:33,Energy Efficiency,charge,charges,33,MSVC gives a warning about:; src\charges\eqeq.cpp(98): warning C4805: '!=' : unsafe mix of type 'bool' and type 'const double' in operation. ```; if (!_ionizations[1][0] != hi_0); ```. Double negative? (Pun intended),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/173
https://github.com/openbabel/openbabel/issues/173:77,Safety,unsafe,unsafe,77,MSVC gives a warning about:; src\charges\eqeq.cpp(98): warning C4805: '!=' : unsafe mix of type 'bool' and type 'const double' in operation. ```; if (!_ionizations[1][0] != hi_0); ```. Double negative? (Pun intended),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/173
https://github.com/openbabel/openbabel/pull/174:17,Usability,simpl,simple,17,"The fix is for a simple string-to-integer function where it was mistakenly coercing a istringstream to a boolean, but MSVC 2013 no longer is happy with this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/174
https://github.com/openbabel/openbabel/pull/175:52,Availability,avail,available,52,Fix MSVC2013 build problems as the erfc/erf are now available and this causes the compiler some confusion.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/175
https://github.com/openbabel/openbabel/issues/178:189,Performance,perform,performance,189,"Impliciting/expliciting hydrogens should not change the structure but DeleteHydrogens currently removes hydrogens with a specified isotope - it should not. Unrelated to this, but there's a performance issue with DeleteHydrogens. It should not delegate to DeleteHydrogen but do not whatever needs doing itself.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/178
https://github.com/openbabel/openbabel/pull/180:101,Integrability,depend,dependencies,101,Move MSVC-specific files to a separate repo. This is mainly to allow us to provide more binaries for dependencies.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/180
https://github.com/openbabel/openbabel/issues/1339:521,Security,access,accessing,521,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339
https://github.com/openbabel/openbabel/issues/1339:858,Testability,test,test,858,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339
https://github.com/openbabel/openbabel/issues/1339:833,Usability,Clear,Clear,833,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339
https://github.com/openbabel/openbabel/pull/183:65,Safety,detect,detect,65,"I break the -at option in a local build, and make test failed to detect; the breakage. Add a regression test for it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183
https://github.com/openbabel/openbabel/pull/183:50,Testability,test,test,50,"I break the -at option in a local build, and make test failed to detect; the breakage. Add a regression test for it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183
https://github.com/openbabel/openbabel/pull/183:104,Testability,test,test,104,"I break the -at option in a local build, and make test failed to detect; the breakage. Add a regression test for it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183
https://github.com/openbabel/openbabel/issues/184:329,Deployability,integrat,integrate,329,"I have a branch ""mpopcnt"" which adds the -mpopcnt flag to the compilation. This uses hardware support for the ""__builtin_popcount"" operations. . This makes searches in fast-search indexes 3 to 6 times faster. I know little about cmake, and I did this through random mutagenesis. Does anyone know what would be the correct way to integrate this into the build script?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184
https://github.com/openbabel/openbabel/issues/184:329,Integrability,integrat,integrate,329,"I have a branch ""mpopcnt"" which adds the -mpopcnt flag to the compilation. This uses hardware support for the ""__builtin_popcount"" operations. . This makes searches in fast-search indexes 3 to 6 times faster. I know little about cmake, and I did this through random mutagenesis. Does anyone know what would be the correct way to integrate this into the build script?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184
https://github.com/openbabel/openbabel/pull/185:20,Testability,log,logic,20,"Replaced convoluted logic with a simple flag check. Builds and runs on my computer, and should fix #173.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/185
https://github.com/openbabel/openbabel/pull/185:33,Usability,simpl,simple,33,"Replaced convoluted logic with a simple flag check. Builds and runs on my computer, and should fix #173.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/185
https://github.com/openbabel/openbabel/issues/1340:155,Safety,detect,detected,155,"Hi,. I found a bug when trying to use OBRotor objects in Python openbabel library.; Everytime I call a method of this objects I get a warning. swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor *,std::allocator< OpenBabel::OBRotor * > >::iterator *', no destructor found. My code is something like this:; 	rbonds = openbabel.OBRotorList(); 	rbonds.Setup(mol). 	rotor = rbonds.BeginRotor(rbonds.BeginRotors()); 	for i in range(rbonds.Size()):; 		print rotor.Size(); 		rotor = rbonds.NextRotor(rbonds.BeginRotors()). []'s. Reported by: hmcezar. Original Ticket: [openbabel/bugs/961](https://sourceforge.net/p/openbabel/bugs/961)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1340
https://github.com/openbabel/openbabel/issues/1341:146,Availability,error,error,146,"Hello everyone,. I think I've found a bug in the Python SWIG interface.; I tried to use the Init method of OBRotorList and received the following error:; TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); 	try:; 		temp.write(""[!$(*#*)&!D1]-!@[!$(*#*)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); 		print temp.name; 		rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; 	finally:; 		temp.close()	. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type). This one may be easy to fix, but unfortunately I have no knowledge in SWIG or OpenBabel to create a patch for it. Best Regards,; Henrique. Reported by: hmcezar. Original Ticket: [openbabel/bugs/962](https://sourceforge.net/p/openbabel/bugs/962)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341
https://github.com/openbabel/openbabel/issues/1341:978,Deployability,patch,patch,978,"Hello everyone,. I think I've found a bug in the Python SWIG interface.; I tried to use the Init method of OBRotorList and received the following error:; TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); 	try:; 		temp.write(""[!$(*#*)&!D1]-!@[!$(*#*)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); 		print temp.name; 		rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; 	finally:; 		temp.close()	. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type). This one may be easy to fix, but unfortunately I have no knowledge in SWIG or OpenBabel to create a patch for it. Best Regards,; Henrique. Reported by: hmcezar. Original Ticket: [openbabel/bugs/962](https://sourceforge.net/p/openbabel/bugs/962)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341
https://github.com/openbabel/openbabel/issues/1341:61,Integrability,interface,interface,61,"Hello everyone,. I think I've found a bug in the Python SWIG interface.; I tried to use the Init method of OBRotorList and received the following error:; TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); 	try:; 		temp.write(""[!$(*#*)&!D1]-!@[!$(*#*)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); 		print temp.name; 		rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; 	finally:; 		temp.close()	. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type). This one may be easy to fix, but unfortunately I have no knowledge in SWIG or OpenBabel to create a patch for it. Best Regards,; Henrique. Reported by: hmcezar. Original Ticket: [openbabel/bugs/962](https://sourceforge.net/p/openbabel/bugs/962)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341
https://github.com/openbabel/openbabel/issues/1341:588,Integrability,interface,interface,588,"Hello everyone,. I think I've found a bug in the Python SWIG interface.; I tried to use the Init method of OBRotorList and received the following error:; TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); 	try:; 		temp.write(""[!$(*#*)&!D1]-!@[!$(*#*)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); 		print temp.name; 		rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; 	finally:; 		temp.close()	. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type). This one may be easy to fix, but unfortunately I have no knowledge in SWIG or OpenBabel to create a patch for it. Best Regards,; Henrique. Reported by: hmcezar. Original Ticket: [openbabel/bugs/962](https://sourceforge.net/p/openbabel/bugs/962)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341
https://github.com/openbabel/openbabel/issues/1341:689,Integrability,interface,interface,689,"Hello everyone,. I think I've found a bug in the Python SWIG interface.; I tried to use the Init method of OBRotorList and received the following error:; TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); 	try:; 		temp.write(""[!$(*#*)&!D1]-!@[!$(*#*)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); 		print temp.name; 		rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; 	finally:; 		temp.close()	. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type). This one may be easy to fix, but unfortunately I have no knowledge in SWIG or OpenBabel to create a patch for it. Best Regards,; Henrique. Reported by: hmcezar. Original Ticket: [openbabel/bugs/962](https://sourceforge.net/p/openbabel/bugs/962)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341
https://github.com/openbabel/openbabel/issues/190:362,Availability,error,error,362,"First of all sorry for posting it again, I didn't know the project moved to github, so I opened two tickets at sourceforge. I'm just reposting it here since the project is here now. I'm using openbabel 2.3.2 (Linux Mint 17.1 package) and Python library installed from pip (version 1.8.2). I tried to use the Init method of OBRotorList and received the following error:. > TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:. ``` python; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); try:; temp.write(""[!$(#)&!D1]-!@[!$(#)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; finally:; temp.close(); ```. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type), but unfortunately I couldn't find out how to fix it in the package. Another problem is a warning related to the use of the OBRotor object. Everytime I use something from it I get:. > swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor ,std::allocator< OpenBabel::OBRotor \* > >::iterator ', no destructor found. My code is something like this:. ``` python; rbonds = openbabel.OBRotorList(); rbonds.Setup(mol); rotor = rbonds.BeginRotor(rbonds.BeginRotors()); for i in range(rbonds.Size()):; print rotor.Size(); rotor = rbonds.NextRotor(rbonds.BeginRotors()); ```. Best Regards,; Henrique",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190
https://github.com/openbabel/openbabel/issues/190:253,Deployability,install,installed,253,"First of all sorry for posting it again, I didn't know the project moved to github, so I opened two tickets at sourceforge. I'm just reposting it here since the project is here now. I'm using openbabel 2.3.2 (Linux Mint 17.1 package) and Python library installed from pip (version 1.8.2). I tried to use the Init method of OBRotorList and received the following error:. > TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:. ``` python; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); try:; temp.write(""[!$(#)&!D1]-!@[!$(#)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; finally:; temp.close(); ```. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type), but unfortunately I couldn't find out how to fix it in the package. Another problem is a warning related to the use of the OBRotor object. Everytime I use something from it I get:. > swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor ,std::allocator< OpenBabel::OBRotor \* > >::iterator ', no destructor found. My code is something like this:. ``` python; rbonds = openbabel.OBRotorList(); rbonds.Setup(mol); rotor = rbonds.BeginRotor(rbonds.BeginRotors()); for i in range(rbonds.Size()):; print rotor.Size(); rotor = rbonds.NextRotor(rbonds.BeginRotors()); ```. Best Regards,; Henrique",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190
https://github.com/openbabel/openbabel/issues/190:790,Integrability,interface,interface,790,"First of all sorry for posting it again, I didn't know the project moved to github, so I opened two tickets at sourceforge. I'm just reposting it here since the project is here now. I'm using openbabel 2.3.2 (Linux Mint 17.1 package) and Python library installed from pip (version 1.8.2). I tried to use the Init method of OBRotorList and received the following error:. > TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:. ``` python; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); try:; temp.write(""[!$(#)&!D1]-!@[!$(#)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; finally:; temp.close(); ```. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type), but unfortunately I couldn't find out how to fix it in the package. Another problem is a warning related to the use of the OBRotor object. Everytime I use something from it I get:. > swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor ,std::allocator< OpenBabel::OBRotor \* > >::iterator ', no destructor found. My code is something like this:. ``` python; rbonds = openbabel.OBRotorList(); rbonds.Setup(mol); rotor = rbonds.BeginRotor(rbonds.BeginRotors()); for i in range(rbonds.Size()):; print rotor.Size(); rotor = rbonds.NextRotor(rbonds.BeginRotors()); ```. Best Regards,; Henrique",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190
https://github.com/openbabel/openbabel/issues/190:892,Integrability,interface,interface,892,"First of all sorry for posting it again, I didn't know the project moved to github, so I opened two tickets at sourceforge. I'm just reposting it here since the project is here now. I'm using openbabel 2.3.2 (Linux Mint 17.1 package) and Python library installed from pip (version 1.8.2). I tried to use the Init method of OBRotorList and received the following error:. > TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:. ``` python; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); try:; temp.write(""[!$(#)&!D1]-!@[!$(#)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; finally:; temp.close(); ```. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type), but unfortunately I couldn't find out how to fix it in the package. Another problem is a warning related to the use of the OBRotor object. Everytime I use something from it I get:. > swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor ,std::allocator< OpenBabel::OBRotor \* > >::iterator ', no destructor found. My code is something like this:. ``` python; rbonds = openbabel.OBRotorList(); rbonds.Setup(mol); rotor = rbonds.BeginRotor(rbonds.BeginRotors()); for i in range(rbonds.Size()):; print rotor.Size(); rotor = rbonds.NextRotor(rbonds.BeginRotors()); ```. Best Regards,; Henrique",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190
https://github.com/openbabel/openbabel/issues/190:1276,Safety,detect,detected,1276,"First of all sorry for posting it again, I didn't know the project moved to github, so I opened two tickets at sourceforge. I'm just reposting it here since the project is here now. I'm using openbabel 2.3.2 (Linux Mint 17.1 package) and Python library installed from pip (version 1.8.2). I tried to use the Init method of OBRotorList and received the following error:. > TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:. ``` python; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); try:; temp.write(""[!$(#)&!D1]-!@[!$(#)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; finally:; temp.close(); ```. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type), but unfortunately I couldn't find out how to fix it in the package. Another problem is a warning related to the use of the OBRotor object. Everytime I use something from it I get:. > swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor ,std::allocator< OpenBabel::OBRotor \* > >::iterator ', no destructor found. My code is something like this:. ``` python; rbonds = openbabel.OBRotorList(); rbonds.Setup(mol); rotor = rbonds.BeginRotor(rbonds.BeginRotors()); for i in range(rbonds.Size()):; print rotor.Size(); rotor = rbonds.NextRotor(rbonds.BeginRotors()); ```. Best Regards,; Henrique",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190
https://github.com/openbabel/openbabel/pull/191:37,Availability,robust,robust,37,"Summary:; *fixes memory leak ; *more robust support for gzipped files; *more convenient methods for opening files (format auto-detection); *fix bug with xml reader when reading files with multiple molecules. I have made every effort to maintain backwards compatibility (even when the existing behaviour was dubious) but there are some unavoidable changes. Specifically, streams passed to a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:3080,Availability,error,error,3080,"ipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of its format (but has to be handled separately due to how OBFormats work). So to get and set the full format of a file, including compression state:; bool isgzipped;; OBFormat *format = FormatFromExt(fname, isgzipped);; conv.SetInFormat(format, isgzipped);. Convert(in,out) has different semantics. It no longer sets the input/output streams with the passed arguments. This is because existing code (e.g. babel) was deallocating these provided streams before the OBConversion object they were passed to. Since Convert consumes all its input stream, it doesn't seem unreasonable for it not to save the streams. By not keeping pointers to the provided streams, the possibility of a use after free error goes away. The constructor, SetInStream/SetOutStream, ReadFile/WriteFile, and Read/Write functions can still be used to set persistent streams. Internally, SetInStream/SetOutStream are used to setup/teardown streams, as opposed to the previous approach which was to duplicate (slightly different) blocks of code everywhere this happened (for instance, to check for gzip, set NeedToFree, etc). OBConversion keeps track of what streams it owns the memory to. SetInStream(NULL) or SetOutStream(NULL) will take care of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's speci",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:5361,Availability,avail,available,5361,"lete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file (because it was absorbing the ending `</cml>` tag). Now it returns false. ---. I suspect these changes will cause some people's code to crash. However, the cause of the crash should be immediately identifiable - the lifetime of the OBConversion object is longer than the lifetime of the input stream passed to it (and the OBConversion destructor crashes trying to flush to the no longer available user-provided stream). It should not be surprising to anyone that leaving a stale pointer to a stream in OBConversion could cause bad things to happen and the fix is easy (call SetInStream(NULL) when done reading the input stream). . On the flip side, leaving the current memory leak in results in a much less obvious and more difficult to debug crash (and it isn't the developer's fault). I think this change is worth the minimal breakage of bad code that it will entail.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:5753,Availability,fault,fault,5753,"lete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file (because it was absorbing the ending `</cml>` tag). Now it returns false. ---. I suspect these changes will cause some people's code to crash. However, the cause of the crash should be immediately identifiable - the lifetime of the OBConversion object is longer than the lifetime of the input stream passed to it (and the OBConversion destructor crashes trying to flush to the no longer available user-provided stream). It should not be surprising to anyone that leaving a stale pointer to a stream in OBConversion could cause bad things to happen and the fix is easy (call SetInStream(NULL) when done reading the input stream). . On the flip side, leaving the current memory leak in results in a much less obvious and more difficult to debug crash (and it isn't the developer's fault). I think this change is worth the minimal breakage of bad code that it will entail.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:4193,Energy Efficiency,allocate,allocated,4193,"WriteFile, and Read/Write functions can still be used to set persistent streams. Internally, SetInStream/SetOutStream are used to setup/teardown streams, as opposed to the previous approach which was to duplicate (slightly different) blocks of code everywhere this happened (for instance, to check for gzip, set NeedToFree, etc). OBConversion keeps track of what streams it owns the memory to. SetInStream(NULL) or SetOutStream(NULL) will take care of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file (because it was absorbing the ending `</cml>` tag). Now it returns false. ---. I suspect these changes will cause some people's code to crash. However, the cause of the crash s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1118,Integrability,wrap,wrap,1118,"pening files (format auto-detection); *fix bug with xml reader when reading files with multiple molecules. I have made every effort to maintain backwards compatibility (even when the existing behaviour was dubious) but there are some unavoidable changes. Specifically, streams passed to a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1178,Integrability,wrap,wrapped,1178,"rt to maintain backwards compatibility (even when the existing behaviour was dubious) but there are some unavoidable changes. Specifically, streams passed to a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1442,Integrability,depend,depended,1442,"o a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1585,Integrability,wrap,wrapped,1585,"mory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of its format (but has to be handled separately due to how OBFormats work). So to get and set the full format of a file, including compression state:; b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1653,Integrability,wrap,wrapped,1653,"h its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of its format (but has to be handled separately due to how OBFormats work). So to get and set the full format of a file, including compression state:; bool isgzipped;; OBFormat *format = FormatFromExt(fname, isgzipped);; conv.SetInFormat(format, isgzipped);. Co",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1731,Integrability,wrap,wrapping,1731,"ng its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of its format (but has to be handled separately due to how OBFormats work). So to get and set the full format of a file, including compression state:; bool isgzipped;; OBFormat *format = FormatFromExt(fname, isgzipped);; conv.SetInFormat(format, isgzipped);. Convert(in,out) has different semantics. It no longer sets the input/output streams with the passed argumen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1850,Integrability,wrap,wrapped,1850,"trol the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of its format (but has to be handled separately due to how OBFormats work). So to get and set the full format of a file, including compression state:; bool isgzipped;; OBFormat *format = FormatFromExt(fname, isgzipped);; conv.SetInFormat(format, isgzipped);. Convert(in,out) has different semantics. It no longer sets the input/output streams with the passed arguments. This is because existing code (e.g. babel) was deallocating these provided streams before the OBConversion object they",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:127,Safety,detect,detection,127,"Summary:; *fixes memory leak ; *more robust support for gzipped files; *more convenient methods for opening files (format auto-detection); *fix bug with xml reader when reading files with multiple molecules. I have made every effort to maintain backwards compatibility (even when the existing behaviour was dubious) but there are some unavoidable changes. Specifically, streams passed to a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:4057,Safety,avoid,avoid,4057," to save the streams. By not keeping pointers to the provided streams, the possibility of a use after free error goes away. The constructor, SetInStream/SetOutStream, ReadFile/WriteFile, and Read/Write functions can still be used to set persistent streams. Internally, SetInStream/SetOutStream are used to setup/teardown streams, as opposed to the previous approach which was to duplicate (slightly different) blocks of code everywhere this happened (for instance, to check for gzip, set NeedToFree, etc). OBConversion keeps track of what streams it owns the memory to. SetInStream(NULL) or SetOutStream(NULL) will take care of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:1432,Testability,test,test,1432,"o a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:4048,Testability,log,logic,4048," to save the streams. By not keeping pointers to the provided streams, the possibility of a use after free error goes away. The constructor, SetInStream/SetOutStream, ReadFile/WriteFile, and Read/Write functions can still be used to set persistent streams. Internally, SetInStream/SetOutStream are used to setup/teardown streams, as opposed to the previous approach which was to duplicate (slightly different) blocks of code everywhere this happened (for instance, to check for gzip, set NeedToFree, etc). OBConversion keeps track of what streams it owns the memory to. SetInStream(NULL) or SetOutStream(NULL) will take care of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/pull/191:4617,Usability,simpl,simple,4617,"are of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file (because it was absorbing the ending `</cml>` tag). Now it returns false. ---. I suspect these changes will cause some people's code to crash. However, the cause of the crash should be immediately identifiable - the lifetime of the OBConversion object is longer than the lifetime of the input stream passed to it (and the OBConversion destructor crashes trying to flush to the no longer available user-provided stream). It should not be surprising to anyone that leaving a stale pointer to a stream in OBConversion could cause bad things to happen and the fix is easy (call SetInStream(NULL) when done reading the input s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191
https://github.com/openbabel/openbabel/issues/193:21,Performance,perform,performs,21,"The current SVG code performs a 2D layout of a structure to produce a chemical diagram. For some compounds, a better representation would be a ball-and-stick projection of the 3D coordinates, e.g.:; http://plindenbaum.blogspot.com/2009/06/fun-with-svg-ncbipubchemxslt-svg.html. ![](http://40.media.tumblr.com/NngfN9gsDobdle0pIyy8oIw3o1_400.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/193
https://github.com/openbabel/openbabel/issues/194:98,Availability,fault,fault,98,"I cloned the master branch to Ubuntu 12.04/32bit and 14.04/64bit. Both of them gives segmentation fault when I specified input format. It works fine with ""obabel -V"", it prints the version and compile time. I tried the patch from Matt at https://gist.github.com/mcs07/7264376 but did not work either. I could not fine the reason for this because there are too many changes from the source on Ubuntu repository: openbabel-2.3.2+dfsg.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/194
https://github.com/openbabel/openbabel/issues/194:219,Deployability,patch,patch,219,"I cloned the master branch to Ubuntu 12.04/32bit and 14.04/64bit. Both of them gives segmentation fault when I specified input format. It works fine with ""obabel -V"", it prints the version and compile time. I tried the patch from Matt at https://gist.github.com/mcs07/7264376 but did not work either. I could not fine the reason for this because there are too many changes from the source on Ubuntu repository: openbabel-2.3.2+dfsg.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/194
https://github.com/openbabel/openbabel/issues/195:391,Availability,down,down,391,"When I want to do multiple Tanimoto similarity searches of the same fastsearch index using the command line tools, I have to invoke obabel multiple times because the -s argument only processes one line from the file-agument. Starting up the obabel process and mapping the fastsearch index into memory actually takes more time than doing the actual search itself, so this really slows things down. I can make my own standalone code to link into the openbabel library to do multiple searching, but I would prefer to add this feature to one of the community tools if there is a good place to do so. I thought of extending obabel so that it would process more than the first line of the -s file, but that would not be backward compatible because some people might have code depending on giving it a multiline -s file but having it process just one line, and because I would have to invent some way to delimit the output for one query line from the output of the next query line. I've actually done this in a very crude way in a branch:. https://github.com/jeffjanes/openbabel/tree/multi_fastsearch. but it is really only useful to explore the timing, and not as a real tool. Any advice on how to implement such a feature into an existing tool? Or should I just make a new single-purpose program? Thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195
https://github.com/openbabel/openbabel/issues/195:770,Integrability,depend,depending,770,"When I want to do multiple Tanimoto similarity searches of the same fastsearch index using the command line tools, I have to invoke obabel multiple times because the -s argument only processes one line from the file-agument. Starting up the obabel process and mapping the fastsearch index into memory actually takes more time than doing the actual search itself, so this really slows things down. I can make my own standalone code to link into the openbabel library to do multiple searching, but I would prefer to add this feature to one of the community tools if there is a good place to do so. I thought of extending obabel so that it would process more than the first line of the -s file, but that would not be backward compatible because some people might have code depending on giving it a multiline -s file but having it process just one line, and because I would have to invent some way to delimit the output for one query line from the output of the next query line. I've actually done this in a very crude way in a branch:. https://github.com/jeffjanes/openbabel/tree/multi_fastsearch. but it is really only useful to explore the timing, and not as a real tool. Any advice on how to implement such a feature into an existing tool? Or should I just make a new single-purpose program? Thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195
https://github.com/openbabel/openbabel/issues/195:609,Modifiability,extend,extending,609,"When I want to do multiple Tanimoto similarity searches of the same fastsearch index using the command line tools, I have to invoke obabel multiple times because the -s argument only processes one line from the file-agument. Starting up the obabel process and mapping the fastsearch index into memory actually takes more time than doing the actual search itself, so this really slows things down. I can make my own standalone code to link into the openbabel library to do multiple searching, but I would prefer to add this feature to one of the community tools if there is a good place to do so. I thought of extending obabel so that it would process more than the first line of the -s file, but that would not be backward compatible because some people might have code depending on giving it a multiline -s file but having it process just one line, and because I would have to invent some way to delimit the output for one query line from the output of the next query line. I've actually done this in a very crude way in a branch:. https://github.com/jeffjanes/openbabel/tree/multi_fastsearch. but it is really only useful to explore the timing, and not as a real tool. Any advice on how to implement such a feature into an existing tool? Or should I just make a new single-purpose program? Thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195
https://github.com/openbabel/openbabel/pull/198:60,Integrability,depend,dependent,60,More checks were necessary to make all occurrences; of zlib-dependent code build conditional.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/198
https://github.com/openbabel/openbabel/pull/199:60,Integrability,depend,dependent,60,More checks were necessary to make all occurrences; of zlib-dependent code build conditional.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/199
https://github.com/openbabel/openbabel/pull/200:110,Deployability,patch,patch,110,This provides a new tool that extracts thermochemistry (Delta H formation etc.) from a Gaussian log file. The patch also provides the necessary reference data from a large set of calculations and experiments.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200
https://github.com/openbabel/openbabel/pull/200:96,Testability,log,log,96,This provides a new tool that extracts thermochemistry (Delta H formation etc.) from a Gaussian log file. The patch also provides the necessary reference data from a large set of calculations and experiments.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200
https://github.com/openbabel/openbabel/pull/201:546,Availability,failure,failures,546,"I previous ""fix"" several years ago added successive calls to BeginModify/EndModify in AddHydrogens to ensure that coordinates were set (PR#1665519). Unfortunately, this completely blows away all but the set conformer. This, despite the AddHydrogen code correctly handling the multiple conformer cases (at least it looks like it). I believe that all that is needed to resolve the original bug is to make sure coordinates are set on atoms. The original bug report claims test cases were added for the bug and this change doesn't result in any test failures, so I assume it fixes the original bug while retaining multiple conformers.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201
https://github.com/openbabel/openbabel/pull/201:469,Testability,test,test,469,"I previous ""fix"" several years ago added successive calls to BeginModify/EndModify in AddHydrogens to ensure that coordinates were set (PR#1665519). Unfortunately, this completely blows away all but the set conformer. This, despite the AddHydrogen code correctly handling the multiple conformer cases (at least it looks like it). I believe that all that is needed to resolve the original bug is to make sure coordinates are set on atoms. The original bug report claims test cases were added for the bug and this change doesn't result in any test failures, so I assume it fixes the original bug while retaining multiple conformers.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201
https://github.com/openbabel/openbabel/pull/201:541,Testability,test,test,541,"I previous ""fix"" several years ago added successive calls to BeginModify/EndModify in AddHydrogens to ensure that coordinates were set (PR#1665519). Unfortunately, this completely blows away all but the set conformer. This, despite the AddHydrogen code correctly handling the multiple conformer cases (at least it looks like it). I believe that all that is needed to resolve the original bug is to make sure coordinates are set on atoms. The original bug report claims test cases were added for the bug and this change doesn't result in any test failures, so I assume it fixes the original bug while retaining multiple conformers.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201
https://github.com/openbabel/openbabel/pull/202:74,Testability,test,test,74,"This format is named svgbs, but this is really a svg file. This PR is for test and review. It has only been tested with the dioxin file. Up to now there are some known limitations:; - How to handle wobbly bonds and ring bonds (I don't have any clue what this means); - The conversion of a file containing more than one molecule will fail (not tested). It brings more complexity, because that would imply keeping the svg definitions and saving everything in a memstream until the very end. That would spill svg related code.; - The tool does not allow two filters to have the same name. But the name is used as the file extension. Thus, we can not use svg for this new format. This is a proposed fix for #193",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202
https://github.com/openbabel/openbabel/pull/202:108,Testability,test,tested,108,"This format is named svgbs, but this is really a svg file. This PR is for test and review. It has only been tested with the dioxin file. Up to now there are some known limitations:; - How to handle wobbly bonds and ring bonds (I don't have any clue what this means); - The conversion of a file containing more than one molecule will fail (not tested). It brings more complexity, because that would imply keeping the svg definitions and saving everything in a memstream until the very end. That would spill svg related code.; - The tool does not allow two filters to have the same name. But the name is used as the file extension. Thus, we can not use svg for this new format. This is a proposed fix for #193",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202
https://github.com/openbabel/openbabel/pull/202:343,Testability,test,tested,343,"This format is named svgbs, but this is really a svg file. This PR is for test and review. It has only been tested with the dioxin file. Up to now there are some known limitations:; - How to handle wobbly bonds and ring bonds (I don't have any clue what this means); - The conversion of a file containing more than one molecule will fail (not tested). It brings more complexity, because that would imply keeping the svg definitions and saving everything in a memstream until the very end. That would spill svg related code.; - The tool does not allow two filters to have the same name. But the name is used as the file extension. Thus, we can not use svg for this new format. This is a proposed fix for #193",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202
https://github.com/openbabel/openbabel/issues/203:204,Availability,fault,fault,204,"Dear,; I tried to install openbabel using following command.; ""conda install -c https://conda.binstar.org/patrickfuller openbabel""; Python biding works well, but when I tried to import pybel segmentation fault was occurred.; Like this.; In [1]: import openbabel # no problem. In [2]: import pybel # error..; /Users/usr1/.pyenv/versions/anaconda-2.2.0/bin/python.app: line 3: 3970 Segmentation fault: 11 /Users/usr1/.pyenv/versions/anaconda-2.2.0/python.app/Contents/MacOS/python ""$@"". If possible, would you please advice me to fix the problem.; Thank you",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203
https://github.com/openbabel/openbabel/issues/203:299,Availability,error,error,299,"Dear,; I tried to install openbabel using following command.; ""conda install -c https://conda.binstar.org/patrickfuller openbabel""; Python biding works well, but when I tried to import pybel segmentation fault was occurred.; Like this.; In [1]: import openbabel # no problem. In [2]: import pybel # error..; /Users/usr1/.pyenv/versions/anaconda-2.2.0/bin/python.app: line 3: 3970 Segmentation fault: 11 /Users/usr1/.pyenv/versions/anaconda-2.2.0/python.app/Contents/MacOS/python ""$@"". If possible, would you please advice me to fix the problem.; Thank you",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203
https://github.com/openbabel/openbabel/issues/203:393,Availability,fault,fault,393,"Dear,; I tried to install openbabel using following command.; ""conda install -c https://conda.binstar.org/patrickfuller openbabel""; Python biding works well, but when I tried to import pybel segmentation fault was occurred.; Like this.; In [1]: import openbabel # no problem. In [2]: import pybel # error..; /Users/usr1/.pyenv/versions/anaconda-2.2.0/bin/python.app: line 3: 3970 Segmentation fault: 11 /Users/usr1/.pyenv/versions/anaconda-2.2.0/python.app/Contents/MacOS/python ""$@"". If possible, would you please advice me to fix the problem.; Thank you",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203
https://github.com/openbabel/openbabel/issues/203:18,Deployability,install,install,18,"Dear,; I tried to install openbabel using following command.; ""conda install -c https://conda.binstar.org/patrickfuller openbabel""; Python biding works well, but when I tried to import pybel segmentation fault was occurred.; Like this.; In [1]: import openbabel # no problem. In [2]: import pybel # error..; /Users/usr1/.pyenv/versions/anaconda-2.2.0/bin/python.app: line 3: 3970 Segmentation fault: 11 /Users/usr1/.pyenv/versions/anaconda-2.2.0/python.app/Contents/MacOS/python ""$@"". If possible, would you please advice me to fix the problem.; Thank you",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203
https://github.com/openbabel/openbabel/issues/203:69,Deployability,install,install,69,"Dear,; I tried to install openbabel using following command.; ""conda install -c https://conda.binstar.org/patrickfuller openbabel""; Python biding works well, but when I tried to import pybel segmentation fault was occurred.; Like this.; In [1]: import openbabel # no problem. In [2]: import pybel # error..; /Users/usr1/.pyenv/versions/anaconda-2.2.0/bin/python.app: line 3: 3970 Segmentation fault: 11 /Users/usr1/.pyenv/versions/anaconda-2.2.0/python.app/Contents/MacOS/python ""$@"". If possible, would you please advice me to fix the problem.; Thank you",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203
https://github.com/openbabel/openbabel/issues/1342:319,Availability,Down,Download,319,"Hi there,. I'm trying to compile openbabel-2.3.2 on my Windows 8 computer using nmake with msvc 2010. It seems that when I follow these steps, openbabel does not include several important .dll files in the installation bin (more specifically, xdr-0.dll, libxml2.dll, and inchi.dll). Here are the steps that I take:. 1. Download openbabel-2.3.2 from here (it was linked on the website): https://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download. 2. Copy contents of openbabel-2.3.2\windows-vc2008\include to openbabel-2.3.2\include. 3. Open visual studio command prompt 2010 and navigate to it in C:\src\openbabel-2.3.2. 4. run ""mkdir build"", then ""cd build"". 5. Run this cmake command (using the latest version of CMake): cmake -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR=c:\src\zlib-1.2.5 -DEIGEN2_INCLUDE_DIR=c:\src\eigen-2.0.15 -DZLIB_LIBRARY=c:\src\zlib-1.2.5\build\zlib.lib -DLIBXML2_INCLUDE_DIR=c:\src\libxml2\include -DLIBXML2_LIBRARIES=c:\src\libxml2\lib\libxml2.lib -DXDR_LIBRARY=c:\src\openbabel-2.3.2\windows-vc2008\libs\i386\xdr.lib -DCMAKE_INSTALL_PREFIX=c:\src\openbabel -G ""NMake Makefiles"" .. It locates the eigen2 headers, zlib libraries and headers, and libxml libraries and headers just fine as far as I can tell. No major errors. 6. run ""nmake"", then ""nmake install"". It installs openbabel to the correct install_prefix: c:\src\openbabel, and it contains several files including a bunch of executables (like babel.exe) and openbabel-2.dll and openbabel-2.lib, but it does not contain the dll's that I mentioned in the first paragraph. And it won't run babel.exe because they are missing. Any advice?. Thanks,; Patrick. Reported by: @psavery. Original Ticket: [openbabel/bugs/963](https://sourceforge.net/p/openbabel/bugs/963)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1342
https://github.com/openbabel/openbabel/issues/1342:474,Availability,down,download,474,"Hi there,. I'm trying to compile openbabel-2.3.2 on my Windows 8 computer using nmake with msvc 2010. It seems that when I follow these steps, openbabel does not include several important .dll files in the installation bin (more specifically, xdr-0.dll, libxml2.dll, and inchi.dll). Here are the steps that I take:. 1. Download openbabel-2.3.2 from here (it was linked on the website): https://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download. 2. Copy contents of openbabel-2.3.2\windows-vc2008\include to openbabel-2.3.2\include. 3. Open visual studio command prompt 2010 and navigate to it in C:\src\openbabel-2.3.2. 4. run ""mkdir build"", then ""cd build"". 5. Run this cmake command (using the latest version of CMake): cmake -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR=c:\src\zlib-1.2.5 -DEIGEN2_INCLUDE_DIR=c:\src\eigen-2.0.15 -DZLIB_LIBRARY=c:\src\zlib-1.2.5\build\zlib.lib -DLIBXML2_INCLUDE_DIR=c:\src\libxml2\include -DLIBXML2_LIBRARIES=c:\src\libxml2\lib\libxml2.lib -DXDR_LIBRARY=c:\src\openbabel-2.3.2\windows-vc2008\libs\i386\xdr.lib -DCMAKE_INSTALL_PREFIX=c:\src\openbabel -G ""NMake Makefiles"" .. It locates the eigen2 headers, zlib libraries and headers, and libxml libraries and headers just fine as far as I can tell. No major errors. 6. run ""nmake"", then ""nmake install"". It installs openbabel to the correct install_prefix: c:\src\openbabel, and it contains several files including a bunch of executables (like babel.exe) and openbabel-2.dll and openbabel-2.lib, but it does not contain the dll's that I mentioned in the first paragraph. And it won't run babel.exe because they are missing. Any advice?. Thanks,; Patrick. Reported by: @psavery. Original Ticket: [openbabel/bugs/963](https://sourceforge.net/p/openbabel/bugs/963)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1342
https://github.com/openbabel/openbabel/issues/1342:1283,Availability,error,errors,1283,"Hi there,. I'm trying to compile openbabel-2.3.2 on my Windows 8 computer using nmake with msvc 2010. It seems that when I follow these steps, openbabel does not include several important .dll files in the installation bin (more specifically, xdr-0.dll, libxml2.dll, and inchi.dll). Here are the steps that I take:. 1. Download openbabel-2.3.2 from here (it was linked on the website): https://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download. 2. Copy contents of openbabel-2.3.2\windows-vc2008\include to openbabel-2.3.2\include. 3. Open visual studio command prompt 2010 and navigate to it in C:\src\openbabel-2.3.2. 4. run ""mkdir build"", then ""cd build"". 5. Run this cmake command (using the latest version of CMake): cmake -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR=c:\src\zlib-1.2.5 -DEIGEN2_INCLUDE_DIR=c:\src\eigen-2.0.15 -DZLIB_LIBRARY=c:\src\zlib-1.2.5\build\zlib.lib -DLIBXML2_INCLUDE_DIR=c:\src\libxml2\include -DLIBXML2_LIBRARIES=c:\src\libxml2\lib\libxml2.lib -DXDR_LIBRARY=c:\src\openbabel-2.3.2\windows-vc2008\libs\i386\xdr.lib -DCMAKE_INSTALL_PREFIX=c:\src\openbabel -G ""NMake Makefiles"" .. It locates the eigen2 headers, zlib libraries and headers, and libxml libraries and headers just fine as far as I can tell. No major errors. 6. run ""nmake"", then ""nmake install"". It installs openbabel to the correct install_prefix: c:\src\openbabel, and it contains several files including a bunch of executables (like babel.exe) and openbabel-2.dll and openbabel-2.lib, but it does not contain the dll's that I mentioned in the first paragraph. And it won't run babel.exe because they are missing. Any advice?. Thanks,; Patrick. Reported by: @psavery. Original Ticket: [openbabel/bugs/963](https://sourceforge.net/p/openbabel/bugs/963)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1342
https://github.com/openbabel/openbabel/issues/1342:206,Deployability,install,installation,206,"Hi there,. I'm trying to compile openbabel-2.3.2 on my Windows 8 computer using nmake with msvc 2010. It seems that when I follow these steps, openbabel does not include several important .dll files in the installation bin (more specifically, xdr-0.dll, libxml2.dll, and inchi.dll). Here are the steps that I take:. 1. Download openbabel-2.3.2 from here (it was linked on the website): https://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download. 2. Copy contents of openbabel-2.3.2\windows-vc2008\include to openbabel-2.3.2\include. 3. Open visual studio command prompt 2010 and navigate to it in C:\src\openbabel-2.3.2. 4. run ""mkdir build"", then ""cd build"". 5. Run this cmake command (using the latest version of CMake): cmake -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR=c:\src\zlib-1.2.5 -DEIGEN2_INCLUDE_DIR=c:\src\eigen-2.0.15 -DZLIB_LIBRARY=c:\src\zlib-1.2.5\build\zlib.lib -DLIBXML2_INCLUDE_DIR=c:\src\libxml2\include -DLIBXML2_LIBRARIES=c:\src\libxml2\lib\libxml2.lib -DXDR_LIBRARY=c:\src\openbabel-2.3.2\windows-vc2008\libs\i386\xdr.lib -DCMAKE_INSTALL_PREFIX=c:\src\openbabel -G ""NMake Makefiles"" .. It locates the eigen2 headers, zlib libraries and headers, and libxml libraries and headers just fine as far as I can tell. No major errors. 6. run ""nmake"", then ""nmake install"". It installs openbabel to the correct install_prefix: c:\src\openbabel, and it contains several files including a bunch of executables (like babel.exe) and openbabel-2.dll and openbabel-2.lib, but it does not contain the dll's that I mentioned in the first paragraph. And it won't run babel.exe because they are missing. Any advice?. Thanks,; Patrick. Reported by: @psavery. Original Ticket: [openbabel/bugs/963](https://sourceforge.net/p/openbabel/bugs/963)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1342
https://github.com/openbabel/openbabel/issues/1342:786,Deployability,Release,Release,786,"Hi there,. I'm trying to compile openbabel-2.3.2 on my Windows 8 computer using nmake with msvc 2010. It seems that when I follow these steps, openbabel does not include several important .dll files in the installation bin (more specifically, xdr-0.dll, libxml2.dll, and inchi.dll). Here are the steps that I take:. 1. Download openbabel-2.3.2 from here (it was linked on the website): https://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download. 2. Copy contents of openbabel-2.3.2\windows-vc2008\include to openbabel-2.3.2\include. 3. Open visual studio command prompt 2010 and navigate to it in C:\src\openbabel-2.3.2. 4. run ""mkdir build"", then ""cd build"". 5. Run this cmake command (using the latest version of CMake): cmake -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR=c:\src\zlib-1.2.5 -DEIGEN2_INCLUDE_DIR=c:\src\eigen-2.0.15 -DZLIB_LIBRARY=c:\src\zlib-1.2.5\build\zlib.lib -DLIBXML2_INCLUDE_DIR=c:\src\libxml2\include -DLIBXML2_LIBRARIES=c:\src\libxml2\lib\libxml2.lib -DXDR_LIBRARY=c:\src\openbabel-2.3.2\windows-vc2008\libs\i386\xdr.lib -DCMAKE_INSTALL_PREFIX=c:\src\openbabel -G ""NMake Makefiles"" .. It locates the eigen2 headers, zlib libraries and headers, and libxml libraries and headers just fine as far as I can tell. No major errors. 6. run ""nmake"", then ""nmake install"". It installs openbabel to the correct install_prefix: c:\src\openbabel, and it contains several files including a bunch of executables (like babel.exe) and openbabel-2.dll and openbabel-2.lib, but it does not contain the dll's that I mentioned in the first paragraph. And it won't run babel.exe because they are missing. Any advice?. Thanks,; Patrick. Reported by: @psavery. Original Ticket: [openbabel/bugs/963](https://sourceforge.net/p/openbabel/bugs/963)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1342
https://github.com/openbabel/openbabel/issues/1342:1319,Deployability,install,install,1319,"Hi there,. I'm trying to compile openbabel-2.3.2 on my Windows 8 computer using nmake with msvc 2010. It seems that when I follow these steps, openbabel does not include several important .dll files in the installation bin (more specifically, xdr-0.dll, libxml2.dll, and inchi.dll). Here are the steps that I take:. 1. Download openbabel-2.3.2 from here (it was linked on the website): https://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download. 2. Copy contents of openbabel-2.3.2\windows-vc2008\include to openbabel-2.3.2\include. 3. Open visual studio command prompt 2010 and navigate to it in C:\src\openbabel-2.3.2. 4. run ""mkdir build"", then ""cd build"". 5. Run this cmake command (using the latest version of CMake): cmake -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR=c:\src\zlib-1.2.5 -DEIGEN2_INCLUDE_DIR=c:\src\eigen-2.0.15 -DZLIB_LIBRARY=c:\src\zlib-1.2.5\build\zlib.lib -DLIBXML2_INCLUDE_DIR=c:\src\libxml2\include -DLIBXML2_LIBRARIES=c:\src\libxml2\lib\libxml2.lib -DXDR_LIBRARY=c:\src\openbabel-2.3.2\windows-vc2008\libs\i386\xdr.lib -DCMAKE_INSTALL_PREFIX=c:\src\openbabel -G ""NMake Makefiles"" .. It locates the eigen2 headers, zlib libraries and headers, and libxml libraries and headers just fine as far as I can tell. No major errors. 6. run ""nmake"", then ""nmake install"". It installs openbabel to the correct install_prefix: c:\src\openbabel, and it contains several files including a bunch of executables (like babel.exe) and openbabel-2.dll and openbabel-2.lib, but it does not contain the dll's that I mentioned in the first paragraph. And it won't run babel.exe because they are missing. Any advice?. Thanks,; Patrick. Reported by: @psavery. Original Ticket: [openbabel/bugs/963](https://sourceforge.net/p/openbabel/bugs/963)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1342
https://github.com/openbabel/openbabel/issues/1342:1332,Deployability,install,installs,1332,"Hi there,. I'm trying to compile openbabel-2.3.2 on my Windows 8 computer using nmake with msvc 2010. It seems that when I follow these steps, openbabel does not include several important .dll files in the installation bin (more specifically, xdr-0.dll, libxml2.dll, and inchi.dll). Here are the steps that I take:. 1. Download openbabel-2.3.2 from here (it was linked on the website): https://sourceforge.net/projects/openbabel/files/openbabel/2.3.2/openbabel-2.3.2.tar.gz/download. 2. Copy contents of openbabel-2.3.2\windows-vc2008\include to openbabel-2.3.2\include. 3. Open visual studio command prompt 2010 and navigate to it in C:\src\openbabel-2.3.2. 4. run ""mkdir build"", then ""cd build"". 5. Run this cmake command (using the latest version of CMake): cmake -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR=c:\src\zlib-1.2.5 -DEIGEN2_INCLUDE_DIR=c:\src\eigen-2.0.15 -DZLIB_LIBRARY=c:\src\zlib-1.2.5\build\zlib.lib -DLIBXML2_INCLUDE_DIR=c:\src\libxml2\include -DLIBXML2_LIBRARIES=c:\src\libxml2\lib\libxml2.lib -DXDR_LIBRARY=c:\src\openbabel-2.3.2\windows-vc2008\libs\i386\xdr.lib -DCMAKE_INSTALL_PREFIX=c:\src\openbabel -G ""NMake Makefiles"" .. It locates the eigen2 headers, zlib libraries and headers, and libxml libraries and headers just fine as far as I can tell. No major errors. 6. run ""nmake"", then ""nmake install"". It installs openbabel to the correct install_prefix: c:\src\openbabel, and it contains several files including a bunch of executables (like babel.exe) and openbabel-2.dll and openbabel-2.lib, but it does not contain the dll's that I mentioned in the first paragraph. And it won't run babel.exe because they are missing. Any advice?. Thanks,; Patrick. Reported by: @psavery. Original Ticket: [openbabel/bugs/963](https://sourceforge.net/p/openbabel/bugs/963)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1342
https://github.com/openbabel/openbabel/issues/1343:475,Availability,Echo,Echo,475,"Hi,; I have a MDL MOL file of ""sodium cyanoborohydride"", and want its molecular mass. So, I try _Open Babel 2.3.2_ on _Windows_. Yet, the formula in molreport's output is missing one hydrogen, and the molecular weight is missing one Dalton. If I replace the MDL MOL input file by the InChI string I get the same problem.; If I replace the molreport out by any SMILES output, I get the same problem.; If I use _Open Babel 2.3.1_ on _Linux_, I get the same problem. Example:; `Echo ""InChI=1S/CH3BN.Na/c2-1-3;/h2H3;/q-1;+1"" | obabel -i inchi -o can`; should output; `[BH3-]C#N.[Na+]`; but outputs; `[BH2-]C#N.[Na+]`. Thanks. Reported by: luismsanchez. Original Ticket: [openbabel/bugs/964](https://sourceforge.net/p/openbabel/bugs/964)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1343
https://github.com/openbabel/openbabel/pull/204:87,Security,access,access,87,"Travis uses 1.5 core per build machine. Most of the time, the build is; slowed by disk access, so setting -j2 to make usually speed up things a lot.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/204
https://github.com/openbabel/openbabel/issues/206:336,Availability,error,error,336,"If I fingerprint these two representations of the same molecule, I get different fingerprints:. C12CCN(CC1)C2; C1CN2CC1CC2. Looking at the ouptut of:. obabel dist2.smi -ocan -ofpt -xs. I see that the first representation gives a bit set for:; 0 6 1 7 1 6 1 6 1 6 1 6 1 6. while the second one does not. I don't know which direction the error is. Should that path be included from both, or not included in either?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206
https://github.com/openbabel/openbabel/pull/210:7,Usability,simpl,simple,7,Just a simple addition of documentation for the SVG format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/210
https://github.com/openbabel/openbabel/pull/213:267,Energy Efficiency,energy,energy,267,Fixes:; - Fixed detection of atomic number when coordinates in input file were set as z-matrix; - Fixed detection of imaginary frequencies. New parsers of calculations:; - ZTS calculation; - OBElectronicTransferData extraction from TDDFT calculations; - Single point energy calculation. New parsers of calculation details :; - Partial charges; - Orbital data; - Energies; - Optimization steps; - Dipole moments. Restructurization of code:; - Each parser in its own method; - String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/213
https://github.com/openbabel/openbabel/pull/213:335,Energy Efficiency,charge,charges,335,Fixes:; - Fixed detection of atomic number when coordinates in input file were set as z-matrix; - Fixed detection of imaginary frequencies. New parsers of calculations:; - ZTS calculation; - OBElectronicTransferData extraction from TDDFT calculations; - Single point energy calculation. New parsers of calculation details :; - Partial charges; - Orbital data; - Energies; - Optimization steps; - Dipole moments. Restructurization of code:; - Each parser in its own method; - String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/213
https://github.com/openbabel/openbabel/pull/213:374,Performance,Optimiz,Optimization,374,Fixes:; - Fixed detection of atomic number when coordinates in input file were set as z-matrix; - Fixed detection of imaginary frequencies. New parsers of calculations:; - ZTS calculation; - OBElectronicTransferData extraction from TDDFT calculations; - Single point energy calculation. New parsers of calculation details :; - Partial charges; - Orbital data; - Energies; - Optimization steps; - Dipole moments. Restructurization of code:; - Each parser in its own method; - String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/213
https://github.com/openbabel/openbabel/pull/213:16,Safety,detect,detection,16,Fixes:; - Fixed detection of atomic number when coordinates in input file were set as z-matrix; - Fixed detection of imaginary frequencies. New parsers of calculations:; - ZTS calculation; - OBElectronicTransferData extraction from TDDFT calculations; - Single point energy calculation. New parsers of calculation details :; - Partial charges; - Orbital data; - Energies; - Optimization steps; - Dipole moments. Restructurization of code:; - Each parser in its own method; - String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/213
https://github.com/openbabel/openbabel/pull/213:104,Safety,detect,detection,104,Fixes:; - Fixed detection of atomic number when coordinates in input file were set as z-matrix; - Fixed detection of imaginary frequencies. New parsers of calculations:; - ZTS calculation; - OBElectronicTransferData extraction from TDDFT calculations; - Single point energy calculation. New parsers of calculation details :; - Partial charges; - Orbital data; - Energies; - Optimization steps; - Dipole moments. Restructurization of code:; - Each parser in its own method; - String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/213
https://github.com/openbabel/openbabel/pull/214:257,Energy Efficiency,energy,energy,257,Fixes:. Fixed detection of atomic number when coordinates in input file were set as z-matrix; Fixed detection of imaginary frequencies; New parsers of calculations:. ZTS calculation; OBElectronicTransferData extraction from TDDFT calculations; Single point energy calculation; New parsers of calculation details :. Partial charges; Orbital data; Energies; Optimization steps; Dipole moments; Restructurization of code:. Each parser in its own method; String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/214
https://github.com/openbabel/openbabel/pull/214:323,Energy Efficiency,charge,charges,323,Fixes:. Fixed detection of atomic number when coordinates in input file were set as z-matrix; Fixed detection of imaginary frequencies; New parsers of calculations:. ZTS calculation; OBElectronicTransferData extraction from TDDFT calculations; Single point energy calculation; New parsers of calculation details :. Partial charges; Orbital data; Energies; Optimization steps; Dipole moments; Restructurization of code:. Each parser in its own method; String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/214
https://github.com/openbabel/openbabel/pull/214:356,Performance,Optimiz,Optimization,356,Fixes:. Fixed detection of atomic number when coordinates in input file were set as z-matrix; Fixed detection of imaginary frequencies; New parsers of calculations:. ZTS calculation; OBElectronicTransferData extraction from TDDFT calculations; Single point energy calculation; New parsers of calculation details :. Partial charges; Orbital data; Energies; Optimization steps; Dipole moments; Restructurization of code:. Each parser in its own method; String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/214
https://github.com/openbabel/openbabel/pull/214:14,Safety,detect,detection,14,Fixes:. Fixed detection of atomic number when coordinates in input file were set as z-matrix; Fixed detection of imaginary frequencies; New parsers of calculations:. ZTS calculation; OBElectronicTransferData extraction from TDDFT calculations; Single point energy calculation; New parsers of calculation details :. Partial charges; Orbital data; Energies; Optimization steps; Dipole moments; Restructurization of code:. Each parser in its own method; String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/214
https://github.com/openbabel/openbabel/pull/214:100,Safety,detect,detection,100,Fixes:. Fixed detection of atomic number when coordinates in input file were set as z-matrix; Fixed detection of imaginary frequencies; New parsers of calculations:. ZTS calculation; OBElectronicTransferData extraction from TDDFT calculations; Single point energy calculation; New parsers of calculation details :. Partial charges; Orbital data; Energies; Optimization steps; Dipole moments; Restructurization of code:. Each parser in its own method; String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/214
https://github.com/openbabel/openbabel/issues/216:136,Availability,error,error,136,"The git head builds and installs a program ""obtautomer"", but the program doesn't work. obtautomer -c foo.smi. obtautomer: symbol lookup error: obtautomer: undefined symbol: _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE. Although the exact error seems to depend on the platform and whether I run it from the install directory or the build/bin directory. I tried to do a git bisect, but I can't find that it ever worked. In 2.3.2, it seems not to be get built or installed at all, although the code is present. Is this program supposed to work, or is it some kind of experimental code that accidentally got included in the make file?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216
https://github.com/openbabel/openbabel/issues/216:238,Availability,error,error,238,"The git head builds and installs a program ""obtautomer"", but the program doesn't work. obtautomer -c foo.smi. obtautomer: symbol lookup error: obtautomer: undefined symbol: _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE. Although the exact error seems to depend on the platform and whether I run it from the install directory or the build/bin directory. I tried to do a git bisect, but I can't find that it ever worked. In 2.3.2, it seems not to be get built or installed at all, although the code is present. Is this program supposed to work, or is it some kind of experimental code that accidentally got included in the make file?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216
https://github.com/openbabel/openbabel/issues/216:24,Deployability,install,installs,24,"The git head builds and installs a program ""obtautomer"", but the program doesn't work. obtautomer -c foo.smi. obtautomer: symbol lookup error: obtautomer: undefined symbol: _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE. Although the exact error seems to depend on the platform and whether I run it from the install directory or the build/bin directory. I tried to do a git bisect, but I can't find that it ever worked. In 2.3.2, it seems not to be get built or installed at all, although the code is present. Is this program supposed to work, or is it some kind of experimental code that accidentally got included in the make file?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216
https://github.com/openbabel/openbabel/issues/216:306,Deployability,install,install,306,"The git head builds and installs a program ""obtautomer"", but the program doesn't work. obtautomer -c foo.smi. obtautomer: symbol lookup error: obtautomer: undefined symbol: _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE. Although the exact error seems to depend on the platform and whether I run it from the install directory or the build/bin directory. I tried to do a git bisect, but I can't find that it ever worked. In 2.3.2, it seems not to be get built or installed at all, although the code is present. Is this program supposed to work, or is it some kind of experimental code that accidentally got included in the make file?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216
https://github.com/openbabel/openbabel/issues/216:460,Deployability,install,installed,460,"The git head builds and installs a program ""obtautomer"", but the program doesn't work. obtautomer -c foo.smi. obtautomer: symbol lookup error: obtautomer: undefined symbol: _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE. Although the exact error seems to depend on the platform and whether I run it from the install directory or the build/bin directory. I tried to do a git bisect, but I can't find that it ever worked. In 2.3.2, it seems not to be get built or installed at all, although the code is present. Is this program supposed to work, or is it some kind of experimental code that accidentally got included in the make file?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216
https://github.com/openbabel/openbabel/issues/216:253,Integrability,depend,depend,253,"The git head builds and installs a program ""obtautomer"", but the program doesn't work. obtautomer -c foo.smi. obtautomer: symbol lookup error: obtautomer: undefined symbol: _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE. Although the exact error seems to depend on the platform and whether I run it from the install directory or the build/bin directory. I tried to do a git bisect, but I can't find that it ever worked. In 2.3.2, it seems not to be get built or installed at all, although the code is present. Is this program supposed to work, or is it some kind of experimental code that accidentally got included in the make file?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216
https://github.com/openbabel/openbabel/pull/217:5,Deployability,install,installing,5,"When installing the python bindings independently using `pip` or `python setup.py install`, distutils/setuptools now appear to add some default SWIG `include_dirs` and `library_dirs`, so we should append the openbabel paths to these lists rather than overwriting them entirely.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/217
https://github.com/openbabel/openbabel/pull/217:82,Deployability,install,install,82,"When installing the python bindings independently using `pip` or `python setup.py install`, distutils/setuptools now appear to add some default SWIG `include_dirs` and `library_dirs`, so we should append the openbabel paths to these lists rather than overwriting them entirely.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/217
https://github.com/openbabel/openbabel/pull/218:58,Availability,error,error,58,"The ob_make_rmat function in /src/obutil.cpp contained an error in which the resulting orthonormal vectors for the transform were incorrectly normalised (in each case, the x component was divided 3 times by the magnitude of the vector, instead of each component being divided once). I have also commented this function quite heavily to explain what it is doing, having worked through it to check I was correct. Steve",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/218
https://github.com/openbabel/openbabel/issues/219:424,Availability,error,error,424,"Hi,. Recent changes by @jnavila to svgdepictor (exactly commit 50526e562180169cdfaa5110732cab7f450ec3a4 from #207) introduced a bug, which results in segfault. The easiest way to reproduce it is to write a molecule to svg two times or use `mol.clone.write('svg')` which is called by __repr_svg method in ipython notebook. ```; [7190547.470651] ipython[8149]: segfault at 7f712e7782a8 ip 00007f7128250000 sp 00007ffe8a04ef80 error 4 in libstdc++.so.6.0.21[7f71281ea000+100000]; [7190639.712210] ipython[8345]: segfault at 7feab03083f8 ip 00007feaa904b000 sp 00007fff6ec75850 error 4 in libstdc++.so.6.0.21[7feaa8fe5000+100000]; [7190852.582706] ipython[8687]: segfault at 7f992941c528 ip 00007f991f35c000 sp 00007fffa7a09580 error 4 in libstdc++.so.6.0.21[7f991f2f6000+100000]; [7191241.308050] python[13060]: segfault at 194f320 ip 00007f204365b000 sp 00007ffec9fb0500 error 4 in libstdc++.so.6.0.21[7f20435f5000+100000]; [7202882.085227] ipython[24843]: segfault at 7f77f0df9718 ip 00007f77e9ee0060 sp 00007fff2c2e9a00 error 4 in libstdc++.so.6.0.21[7f77e9e54000+16b000]. ```. To reproduce that problem execute following code:. ```; import pybel; mol = pybel.readstring('smi', 'c1ccccc1'); mol.write('svg'); print mol.write('svg'); ```. I've confirmed that on Debian Sid and Ubuntu Precise. I was not able to debug it further, although 9dd91b10cbcaefb2f7b49e39e7d765204d0be136 works well with the code I've supplied above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219
https://github.com/openbabel/openbabel/issues/219:574,Availability,error,error,574,"Hi,. Recent changes by @jnavila to svgdepictor (exactly commit 50526e562180169cdfaa5110732cab7f450ec3a4 from #207) introduced a bug, which results in segfault. The easiest way to reproduce it is to write a molecule to svg two times or use `mol.clone.write('svg')` which is called by __repr_svg method in ipython notebook. ```; [7190547.470651] ipython[8149]: segfault at 7f712e7782a8 ip 00007f7128250000 sp 00007ffe8a04ef80 error 4 in libstdc++.so.6.0.21[7f71281ea000+100000]; [7190639.712210] ipython[8345]: segfault at 7feab03083f8 ip 00007feaa904b000 sp 00007fff6ec75850 error 4 in libstdc++.so.6.0.21[7feaa8fe5000+100000]; [7190852.582706] ipython[8687]: segfault at 7f992941c528 ip 00007f991f35c000 sp 00007fffa7a09580 error 4 in libstdc++.so.6.0.21[7f991f2f6000+100000]; [7191241.308050] python[13060]: segfault at 194f320 ip 00007f204365b000 sp 00007ffec9fb0500 error 4 in libstdc++.so.6.0.21[7f20435f5000+100000]; [7202882.085227] ipython[24843]: segfault at 7f77f0df9718 ip 00007f77e9ee0060 sp 00007fff2c2e9a00 error 4 in libstdc++.so.6.0.21[7f77e9e54000+16b000]. ```. To reproduce that problem execute following code:. ```; import pybel; mol = pybel.readstring('smi', 'c1ccccc1'); mol.write('svg'); print mol.write('svg'); ```. I've confirmed that on Debian Sid and Ubuntu Precise. I was not able to debug it further, although 9dd91b10cbcaefb2f7b49e39e7d765204d0be136 works well with the code I've supplied above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219
https://github.com/openbabel/openbabel/issues/219:724,Availability,error,error,724,"Hi,. Recent changes by @jnavila to svgdepictor (exactly commit 50526e562180169cdfaa5110732cab7f450ec3a4 from #207) introduced a bug, which results in segfault. The easiest way to reproduce it is to write a molecule to svg two times or use `mol.clone.write('svg')` which is called by __repr_svg method in ipython notebook. ```; [7190547.470651] ipython[8149]: segfault at 7f712e7782a8 ip 00007f7128250000 sp 00007ffe8a04ef80 error 4 in libstdc++.so.6.0.21[7f71281ea000+100000]; [7190639.712210] ipython[8345]: segfault at 7feab03083f8 ip 00007feaa904b000 sp 00007fff6ec75850 error 4 in libstdc++.so.6.0.21[7feaa8fe5000+100000]; [7190852.582706] ipython[8687]: segfault at 7f992941c528 ip 00007f991f35c000 sp 00007fffa7a09580 error 4 in libstdc++.so.6.0.21[7f991f2f6000+100000]; [7191241.308050] python[13060]: segfault at 194f320 ip 00007f204365b000 sp 00007ffec9fb0500 error 4 in libstdc++.so.6.0.21[7f20435f5000+100000]; [7202882.085227] ipython[24843]: segfault at 7f77f0df9718 ip 00007f77e9ee0060 sp 00007fff2c2e9a00 error 4 in libstdc++.so.6.0.21[7f77e9e54000+16b000]. ```. To reproduce that problem execute following code:. ```; import pybel; mol = pybel.readstring('smi', 'c1ccccc1'); mol.write('svg'); print mol.write('svg'); ```. I've confirmed that on Debian Sid and Ubuntu Precise. I was not able to debug it further, although 9dd91b10cbcaefb2f7b49e39e7d765204d0be136 works well with the code I've supplied above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219
https://github.com/openbabel/openbabel/issues/219:869,Availability,error,error,869,"Hi,. Recent changes by @jnavila to svgdepictor (exactly commit 50526e562180169cdfaa5110732cab7f450ec3a4 from #207) introduced a bug, which results in segfault. The easiest way to reproduce it is to write a molecule to svg two times or use `mol.clone.write('svg')` which is called by __repr_svg method in ipython notebook. ```; [7190547.470651] ipython[8149]: segfault at 7f712e7782a8 ip 00007f7128250000 sp 00007ffe8a04ef80 error 4 in libstdc++.so.6.0.21[7f71281ea000+100000]; [7190639.712210] ipython[8345]: segfault at 7feab03083f8 ip 00007feaa904b000 sp 00007fff6ec75850 error 4 in libstdc++.so.6.0.21[7feaa8fe5000+100000]; [7190852.582706] ipython[8687]: segfault at 7f992941c528 ip 00007f991f35c000 sp 00007fffa7a09580 error 4 in libstdc++.so.6.0.21[7f991f2f6000+100000]; [7191241.308050] python[13060]: segfault at 194f320 ip 00007f204365b000 sp 00007ffec9fb0500 error 4 in libstdc++.so.6.0.21[7f20435f5000+100000]; [7202882.085227] ipython[24843]: segfault at 7f77f0df9718 ip 00007f77e9ee0060 sp 00007fff2c2e9a00 error 4 in libstdc++.so.6.0.21[7f77e9e54000+16b000]. ```. To reproduce that problem execute following code:. ```; import pybel; mol = pybel.readstring('smi', 'c1ccccc1'); mol.write('svg'); print mol.write('svg'); ```. I've confirmed that on Debian Sid and Ubuntu Precise. I was not able to debug it further, although 9dd91b10cbcaefb2f7b49e39e7d765204d0be136 works well with the code I've supplied above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219
https://github.com/openbabel/openbabel/issues/219:1020,Availability,error,error,1020,"Hi,. Recent changes by @jnavila to svgdepictor (exactly commit 50526e562180169cdfaa5110732cab7f450ec3a4 from #207) introduced a bug, which results in segfault. The easiest way to reproduce it is to write a molecule to svg two times or use `mol.clone.write('svg')` which is called by __repr_svg method in ipython notebook. ```; [7190547.470651] ipython[8149]: segfault at 7f712e7782a8 ip 00007f7128250000 sp 00007ffe8a04ef80 error 4 in libstdc++.so.6.0.21[7f71281ea000+100000]; [7190639.712210] ipython[8345]: segfault at 7feab03083f8 ip 00007feaa904b000 sp 00007fff6ec75850 error 4 in libstdc++.so.6.0.21[7feaa8fe5000+100000]; [7190852.582706] ipython[8687]: segfault at 7f992941c528 ip 00007f991f35c000 sp 00007fffa7a09580 error 4 in libstdc++.so.6.0.21[7f991f2f6000+100000]; [7191241.308050] python[13060]: segfault at 194f320 ip 00007f204365b000 sp 00007ffec9fb0500 error 4 in libstdc++.so.6.0.21[7f20435f5000+100000]; [7202882.085227] ipython[24843]: segfault at 7f77f0df9718 ip 00007f77e9ee0060 sp 00007fff2c2e9a00 error 4 in libstdc++.so.6.0.21[7f77e9e54000+16b000]. ```. To reproduce that problem execute following code:. ```; import pybel; mol = pybel.readstring('smi', 'c1ccccc1'); mol.write('svg'); print mol.write('svg'); ```. I've confirmed that on Debian Sid and Ubuntu Precise. I was not able to debug it further, although 9dd91b10cbcaefb2f7b49e39e7d765204d0be136 works well with the code I've supplied above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219
https://github.com/openbabel/openbabel/pull/220:5,Deployability,patch,patch,5,This patch hopefully fixes #219,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/220
https://github.com/openbabel/openbabel/issues/222:187,Availability,error,errors,187,"Reported by Volker Sorge - just verified myself on latest build. Converting this InChI ([source](https://en.wikipedia.org/wiki/Morphine)) with gen3D provides very odd output with valence errors and hydrogens in connected to more than one atom. gen2D works as expected. ```; obabel -iinchi -:'InChI=1S/C21H23NO5/c1-11(23)25-16-6-4-13-10-15-14-5-7-17(26-12(2)24)20-21(14,8-9-22(15)3)18(13)19(16)27-20/h4-7,14-15,17,20H,8-10H2,1-3H3/t14-,15+,17-,20-,21-/m0/s1' -omol --gen3D; ```. Output:. ```. OpenBabel08201509123D. 50 58 0 0 1 0 0 0 0 0999 V2000; 15.4684 -0.4094 -1.8282 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.9174 1.6653 2.6722 C 0 0 0 0 0 0 0 0 0 0 0 0; 11.0010 3.0832 -2.3635 C 0 0 0 0 0 0 0 0 0 0 0 0; 17.5461 4.3969 -2.2439 C 0 0 0 0 0 0 0 0 0 0 0 0; 14.9436 3.2505 0.6439 C 0 0 0 0 0 0 0 0 0 0 0 0; 18.5914 3.2427 -2.1694 C 0 0 0 0 0 0 0 0 0 0 0 0; 15.9836 2.3660 1.3880 C 0 0 0 0 0 0 0 0 0 0 0 0; 14.6882 1.4515 -3.6591 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8165 1.5215 -3.4446 C 0 0 0 0 0 0 0 0 0 0 0 0; 14.2554 4.3261 -1.8030 C 0 0 0 0 0 0 0 0 0 0 0 0; 17.2914 -0.4852 -1.8503 C 0 0 0 0 0 0 0 0 0 0 0 0; 14.0791 0.2688 2.7103 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0462 4.1077 -1.9786 C 0 0 0 0 0 0 0 0 0 0 0 0; 14.0921 2.2505 -0.7836 C 0 0 1 0 0 0 0 0 0 0 0 0; 13.7057 2.6575 -2.0219 C 0 0 2 0 0 0 0 0 0 0 0 0; 18.0914 1.9566 -1.7384 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0074 0.4516 0.9819 C 0 0 1 0 0 0 0 0 0 0 0 0; 16.1563 2.8933 -1.5172 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.9843 2.0770 -1.2193 C 0 0 0 0 0 0 0 0 0 0 0 0; 15.0841 1.0003 0.1124 C 0 0 1 0 0 0 0 0 0 0 0 0; 15.1337 2.0426 -1.5877 C 0 0 2 0 0 0 0 0 0 0 0 0; 12.3488 2.5118 -2.2603 N 0 0 0 0 0 0 0 0 0 0 0 0; 17.7432 -1.5857 -1.5249 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.6197 -0.4277 3.5983 O 0 0 0 0 0 0 0 0 0 0 0 0; 18.3478 0.5766 -1.8024 O 0 0 0 0 0 0 0 0 0 0 0 0; 15.0797 -0.1685 1.9115 O 0 0 0 0 0 0 0 0 0 0 0 0; 16.4726 1.1825 -0.4088 O 0 0 0 0 0 0 0 0 0 0 0 0; 14.1072 0.7611 -1.6331 H 0 0 0 0 0 0 0 0 0 0 0 0; 14.0996 0.5001 -1.9568 H 0 0 0 0 0 0 0 0 0 0 0 0; 16.0153",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/222
https://github.com/openbabel/openbabel/pull/223:364,Usability,clear,cleared,364,"If the atom currently being visited in a path through the atoms can; both close a ring back to the first atom, and can also proceed; to a different atom, and the bond enumerator returns the closing; bond first, then the other path was omitted. That is because after; the path was marked as closed and the ring added to the fingerprint; bit set, the closure is not cleared. When the next bond is visited,; the path is not added because it still appears to be closed. In order for the bit to be missed altogether, this problem must; occur in both directions along the path, so the situation is somewhat; rare. See bug #206",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/223
https://github.com/openbabel/openbabel/issues/1345:10,Availability,error,errors,10,There are errors in the elements Symbols of the last two lines of the file `/usr/share/openbabel/2.3.2/element.txt` is says `Uuh` and `Uuh` whereas it should be `Uus` and `Uuo`. Reported by: correaa. Original Ticket: [openbabel/bugs/966](https://sourceforge.net/p/openbabel/bugs/966),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1345
https://github.com/openbabel/openbabel/pull/226:145,Testability,test,test,145,"include/libxml/xmlexports.h: CMake no longer defines _WIN32 under Cygwin. . src/fingerprint.cpp: likely a typo -- ""**CYGWIN32**"" is not defined. test/CMakeLists.txt: need to include ""include(UsePythonTest)"" before using ADD_PYTHON_TEST.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/226
https://github.com/openbabel/openbabel/issues/229:505,Availability,error,error,505,"Hi,. I'm trying to build openbabel from the github source on an Ubuntu 12.04 box with gcc 4.81. I followed the directions provided on the website and ran cmake with the following arguments:. ```; rbharath@rbharath-XPS13-9333:~$ cmake ~/openbabel -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DOPTIMIZE_NATIVE=OFF -DEIGEN3_INCLUDE_DIR=/home/rbharath/eigen-eigen-bdd17ee3b1b3 -DCMAKE_INSTALL_PREFIX=~/Tools/; ```. The install finished successfully, but when I try to import openbabel from python, I get the following error:. ```; In [1]: import openbabel; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-2335afcc2805> in <module>(); ----> 1 import openbabel. /home/rbharath/Tools/lib/python2.7/site-packages/openbabel.py in <module>(); 35 fp.close(); 36 return _mod; ---> 37 _openbabel = swig_import_helper(); 38 del swig_import_helper; 39 else:. /home/rbharath/Tools/lib/python2.7/site-packages/openbabel.py in swig_import_helper(); 31 if fp is not None:; 32 try:; ---> 33 _mod = imp.load_module('_openbabel', fp, pathname, description); 34 finally:; 35 fp.close(). ImportError: /home/rbharath/Tools/lib/python2.7/site-packages/_openbabel.so: undefined symbol: _ZTVN9OpenBabel32OBMinimizingEnergyConformerScoreE; > /home/rbharath/Tools/lib/python2.7/site-packages/openbabel.py(35)swig_import_helper(); 34 finally:; ---> 35 fp.close(); 36 return _mod; ```. I saw this forum post (http://forums.openbabel.org/openbabel-Bugs-3277614-undefined-symbol-in-python-when-compiling-without-EIGEN2-td3431130.html) which mentioned that the same problem resulted when building without Eigen, but I've explicitly set the -DEIGEN3_INCLUDE_DIR flag. Is it possible that Eigen is being ignored somehow?. I'd greatly appreciate any help here. I've been banging my head against this problem for a few hours now with no headway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/229
https://github.com/openbabel/openbabel/issues/229:406,Deployability,install,install,406,"Hi,. I'm trying to build openbabel from the github source on an Ubuntu 12.04 box with gcc 4.81. I followed the directions provided on the website and ran cmake with the following arguments:. ```; rbharath@rbharath-XPS13-9333:~$ cmake ~/openbabel -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DOPTIMIZE_NATIVE=OFF -DEIGEN3_INCLUDE_DIR=/home/rbharath/eigen-eigen-bdd17ee3b1b3 -DCMAKE_INSTALL_PREFIX=~/Tools/; ```. The install finished successfully, but when I try to import openbabel from python, I get the following error:. ```; In [1]: import openbabel; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-2335afcc2805> in <module>(); ----> 1 import openbabel. /home/rbharath/Tools/lib/python2.7/site-packages/openbabel.py in <module>(); 35 fp.close(); 36 return _mod; ---> 37 _openbabel = swig_import_helper(); 38 del swig_import_helper; 39 else:. /home/rbharath/Tools/lib/python2.7/site-packages/openbabel.py in swig_import_helper(); 31 if fp is not None:; 32 try:; ---> 33 _mod = imp.load_module('_openbabel', fp, pathname, description); 34 finally:; 35 fp.close(). ImportError: /home/rbharath/Tools/lib/python2.7/site-packages/_openbabel.so: undefined symbol: _ZTVN9OpenBabel32OBMinimizingEnergyConformerScoreE; > /home/rbharath/Tools/lib/python2.7/site-packages/openbabel.py(35)swig_import_helper(); 34 finally:; ---> 35 fp.close(); 36 return _mod; ```. I saw this forum post (http://forums.openbabel.org/openbabel-Bugs-3277614-undefined-symbol-in-python-when-compiling-without-EIGEN2-td3431130.html) which mentioned that the same problem resulted when building without Eigen, but I've explicitly set the -DEIGEN3_INCLUDE_DIR flag. Is it possible that Eigen is being ignored somehow?. I'd greatly appreciate any help here. I've been banging my head against this problem for a few hours now with no headway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/229
https://github.com/openbabel/openbabel/issues/230:1232,Deployability,update,updated,1232,"In the current parser for mmCIF `mmcifformat.cpp`, only part of the fields are read into the molecule.; For example, below are read:. ```; _atom_site_fract_x, // The x coordinate specified as a fraction of _cell_length_a; _atom_site_fract_y, // The y coordinate specified as a fraction of _cell_length_b; _atom_site_fract_z, // The z coordinate specified as a fraction of _cell_length_c; _atom_site_Cartn_x, // The x coordinate in angstroms; _atom_site_Cartn_y, // The y coordinate in angstroms; _atom_site_Cartn_z, // The z coordinate in angstroms; _atom_site_label, // The atomic label if more detailed label info unavailable; _atom_site_label_atom_id, // The atomic label within the residue; _atom_site_label_comp_id, // The residue abbreviation, e.g. ILE; _atom_site_label_entity_id, // The chain entity number of the residue, e.g. 2; _atom_site_label_asym_id, // The unique chain id; _atom_site_label_seq_id, // The sequence number of the residue, within the chain, e.g. 12; _atom_site_type_symbol, // Atomic symbol, e.g. C; ```. such are not (from a typical mmCIF file):. ```; _struct_site_gen.auth_comp_id ; _struct_site_gen.auth_asym_id ; _struct_site_gen.auth_seq_id ; ```. Is there any chance that the mmCIF parser can be updated to read such fields into the molecule?. My current project needs to parse the mmCIF files and requires the information in __struct_site_gen.auth_comp_id_. It is not difficult to modify the parser to read such attributes, but I cannot find the corresponding _setter_ and _getter_ in `OBMol`. Maybe a class that inherits `OBMol` with its own additional private variable and _setters_ can do the job. My c++ is poor and I am wondering if such a derived class is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/230
https://github.com/openbabel/openbabel/issues/230:1550,Modifiability,inherit,inherits,1550,"In the current parser for mmCIF `mmcifformat.cpp`, only part of the fields are read into the molecule.; For example, below are read:. ```; _atom_site_fract_x, // The x coordinate specified as a fraction of _cell_length_a; _atom_site_fract_y, // The y coordinate specified as a fraction of _cell_length_b; _atom_site_fract_z, // The z coordinate specified as a fraction of _cell_length_c; _atom_site_Cartn_x, // The x coordinate in angstroms; _atom_site_Cartn_y, // The y coordinate in angstroms; _atom_site_Cartn_z, // The z coordinate in angstroms; _atom_site_label, // The atomic label if more detailed label info unavailable; _atom_site_label_atom_id, // The atomic label within the residue; _atom_site_label_comp_id, // The residue abbreviation, e.g. ILE; _atom_site_label_entity_id, // The chain entity number of the residue, e.g. 2; _atom_site_label_asym_id, // The unique chain id; _atom_site_label_seq_id, // The sequence number of the residue, within the chain, e.g. 12; _atom_site_type_symbol, // Atomic symbol, e.g. C; ```. such are not (from a typical mmCIF file):. ```; _struct_site_gen.auth_comp_id ; _struct_site_gen.auth_asym_id ; _struct_site_gen.auth_seq_id ; ```. Is there any chance that the mmCIF parser can be updated to read such fields into the molecule?. My current project needs to parse the mmCIF files and requires the information in __struct_site_gen.auth_comp_id_. It is not difficult to modify the parser to read such attributes, but I cannot find the corresponding _setter_ and _getter_ in `OBMol`. Maybe a class that inherits `OBMol` with its own additional private variable and _setters_ can do the job. My c++ is poor and I am wondering if such a derived class is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/230
https://github.com/openbabel/openbabel/issues/230:1599,Modifiability,variab,variable,1599,"In the current parser for mmCIF `mmcifformat.cpp`, only part of the fields are read into the molecule.; For example, below are read:. ```; _atom_site_fract_x, // The x coordinate specified as a fraction of _cell_length_a; _atom_site_fract_y, // The y coordinate specified as a fraction of _cell_length_b; _atom_site_fract_z, // The z coordinate specified as a fraction of _cell_length_c; _atom_site_Cartn_x, // The x coordinate in angstroms; _atom_site_Cartn_y, // The y coordinate in angstroms; _atom_site_Cartn_z, // The z coordinate in angstroms; _atom_site_label, // The atomic label if more detailed label info unavailable; _atom_site_label_atom_id, // The atomic label within the residue; _atom_site_label_comp_id, // The residue abbreviation, e.g. ILE; _atom_site_label_entity_id, // The chain entity number of the residue, e.g. 2; _atom_site_label_asym_id, // The unique chain id; _atom_site_label_seq_id, // The sequence number of the residue, within the chain, e.g. 12; _atom_site_type_symbol, // Atomic symbol, e.g. C; ```. such are not (from a typical mmCIF file):. ```; _struct_site_gen.auth_comp_id ; _struct_site_gen.auth_asym_id ; _struct_site_gen.auth_seq_id ; ```. Is there any chance that the mmCIF parser can be updated to read such fields into the molecule?. My current project needs to parse the mmCIF files and requires the information in __struct_site_gen.auth_comp_id_. It is not difficult to modify the parser to read such attributes, but I cannot find the corresponding _setter_ and _getter_ in `OBMol`. Maybe a class that inherits `OBMol` with its own additional private variable and _setters_ can do the job. My c++ is poor and I am wondering if such a derived class is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/230
https://github.com/openbabel/openbabel/issues/1346:3894,Energy Efficiency,ENERGY,ENERGY,3894,ME: 0.000 TIME LEFT: 2.00D GRAD.: 19.239 HEAT: -56.90030; CYCLE: 5 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 19.043 HEAT: -56.91750; CYCLE: 6 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 6.533 HEAT: -57.02012; CYCLE: 7 TIME: 0.016 TIME LEFT: 2.00D GRAD.: 5.460 HEAT: -57.03173; CYCLE: 8 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.285 HEAT: -57.04181; CYCLE: 9 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.583 HEAT: -57.04692; CYCLE: 10 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.497 HEAT: -57.05054; CYCLE: 11 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 0.673 HEAT: -57.05291. GRADIENT = 0.67290 IS LESS THAN CUTOFF = 1.00000. -------------------------------------------------------------------------------; AM1; --- C:\MOPAC.dir\MeOH_test.pdb ---; MOPAC input generated by Facio 19.1.4. GEOMETRY OPTIMISED USING EIGENVECTOR FOLLOWING (EF). ; SCF FIELD WAS ACHIEVED . AM1 CALCULATION; MOPAC2012 (Version: 15.229W); Fri Sep 25 16:57:23 2015; No. of days left = 326. FINAL HEAT OF FORMATION = -57.05291 KCAL/MOL = -238.70937 KJ/MOL. TOTAL ENERGY = -504.00573 EV; ELECTRONIC ENERGY = -1070.07688 EV POINT GROUP: Cs ; CORE-CORE REPULSION = 566.07115 EV; COSMO AREA = 66.14 SQUARE ANGSTROMS; COSMO VOLUME = 47.24 CUBIC ANGSTROMS. GRADIENT NORM = 0.67290; IONIZATION POTENTIAL = 11.134224 EV; HOMO LUMO ENERGIES (EV) = -11.134 3.782; NO. OF FILLED LEVELS = 7; MOLECULAR WEIGHT = 32.042. MOLECULAR DIMENSIONS (Angstroms). Atom Atom Distance; H 6 H 3 2.81896; O 1 H 5 1.87905; H 4 H 5 1.59724. SCF CALCULATIONS = 14; ; WALL-CLOCK TIME = 0.047 SECONDS; COMPUTATION TIME = 0.062 SECONDS. ATOM CHEMICAL X Y Z; NUMBER SYMBOL (ANGSTROMS) (ANGSTROMS) (ANGSTROMS); ; 1 O 0.00160519 * 0.00044948 * -0.00012544 *; 2 C 1.41171949 * -0.00175602 * 0.00021003 *; 3 H 1.70503109 * 1.07793158 * 0.00114058 *; 4 H 1.81133147 * -0.50897670 * 0.91375057 *; 5 H 1.81146437 * -0.50680006 * -0.91451558 *; 6 H -0.28298690 * -0.92064469 * -0.00260083 *. CARTESIAN COORDINATES. 1 O 0.001605191 0.000449475 -0.000125442; 2 C 1.411719494 -0.001756017 0.000210032; 3 H 1.7050,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1346
https://github.com/openbabel/openbabel/issues/1346:3929,Energy Efficiency,ENERGY,ENERGY,3929,AD.: 19.239 HEAT: -56.90030; CYCLE: 5 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 19.043 HEAT: -56.91750; CYCLE: 6 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 6.533 HEAT: -57.02012; CYCLE: 7 TIME: 0.016 TIME LEFT: 2.00D GRAD.: 5.460 HEAT: -57.03173; CYCLE: 8 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.285 HEAT: -57.04181; CYCLE: 9 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.583 HEAT: -57.04692; CYCLE: 10 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.497 HEAT: -57.05054; CYCLE: 11 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 0.673 HEAT: -57.05291. GRADIENT = 0.67290 IS LESS THAN CUTOFF = 1.00000. -------------------------------------------------------------------------------; AM1; --- C:\MOPAC.dir\MeOH_test.pdb ---; MOPAC input generated by Facio 19.1.4. GEOMETRY OPTIMISED USING EIGENVECTOR FOLLOWING (EF). ; SCF FIELD WAS ACHIEVED . AM1 CALCULATION; MOPAC2012 (Version: 15.229W); Fri Sep 25 16:57:23 2015; No. of days left = 326. FINAL HEAT OF FORMATION = -57.05291 KCAL/MOL = -238.70937 KJ/MOL. TOTAL ENERGY = -504.00573 EV; ELECTRONIC ENERGY = -1070.07688 EV POINT GROUP: Cs ; CORE-CORE REPULSION = 566.07115 EV; COSMO AREA = 66.14 SQUARE ANGSTROMS; COSMO VOLUME = 47.24 CUBIC ANGSTROMS. GRADIENT NORM = 0.67290; IONIZATION POTENTIAL = 11.134224 EV; HOMO LUMO ENERGIES (EV) = -11.134 3.782; NO. OF FILLED LEVELS = 7; MOLECULAR WEIGHT = 32.042. MOLECULAR DIMENSIONS (Angstroms). Atom Atom Distance; H 6 H 3 2.81896; O 1 H 5 1.87905; H 4 H 5 1.59724. SCF CALCULATIONS = 14; ; WALL-CLOCK TIME = 0.047 SECONDS; COMPUTATION TIME = 0.062 SECONDS. ATOM CHEMICAL X Y Z; NUMBER SYMBOL (ANGSTROMS) (ANGSTROMS) (ANGSTROMS); ; 1 O 0.00160519 * 0.00044948 * -0.00012544 *; 2 C 1.41171949 * -0.00175602 * 0.00021003 *; 3 H 1.70503109 * 1.07793158 * 0.00114058 *; 4 H 1.81133147 * -0.50897670 * 0.91375057 *; 5 H 1.81146437 * -0.50680006 * -0.91451558 *; 6 H -0.28298690 * -0.92064469 * -0.00260083 *. CARTESIAN COORDINATES. 1 O 0.001605191 0.000449475 -0.000125442; 2 C 1.411719494 -0.001756017 0.000210032; 3 H 1.705031094 1.077931583 0.00114058,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1346
https://github.com/openbabel/openbabel/issues/1346:5261,Energy Efficiency,CHARGE,CHARGES,5261,ROMS. GRADIENT NORM = 0.67290; IONIZATION POTENTIAL = 11.134224 EV; HOMO LUMO ENERGIES (EV) = -11.134 3.782; NO. OF FILLED LEVELS = 7; MOLECULAR WEIGHT = 32.042. MOLECULAR DIMENSIONS (Angstroms). Atom Atom Distance; H 6 H 3 2.81896; O 1 H 5 1.87905; H 4 H 5 1.59724. SCF CALCULATIONS = 14; ; WALL-CLOCK TIME = 0.047 SECONDS; COMPUTATION TIME = 0.062 SECONDS. ATOM CHEMICAL X Y Z; NUMBER SYMBOL (ANGSTROMS) (ANGSTROMS) (ANGSTROMS); ; 1 O 0.00160519 * 0.00044948 * -0.00012544 *; 2 C 1.41171949 * -0.00175602 * 0.00021003 *; 3 H 1.70503109 * 1.07793158 * 0.00114058 *; 4 H 1.81133147 * -0.50897670 * 0.91375057 *; 5 H 1.81146437 * -0.50680006 * -0.91451558 *; 6 H -0.28298690 * -0.92064469 * -0.00260083 *. CARTESIAN COORDINATES. 1 O 0.001605191 0.000449475 -0.000125442; 2 C 1.411719494 -0.001756017 0.000210032; 3 H 1.705031094 1.077931583 0.001140585; 4 H 1.811331472 -0.508976701 0.913750566; 5 H 1.811464373 -0.506800064 -0.914515575; 6 H -0.282986899 -0.920644691 -0.002600833. Empirical Formula: C H4 O = 6 atoms. MOLECULAR POINT GROUP : Cs . EIGENVALUES ; -37.85011 -26.98114 -18.28364 -15.44859 -15.29172 -12.49759 -11.13422 3.78175; 4.08962 4.22766 4.52341 6.24221. NET ATOMIC CHARGES AND DIPOLE CONTRIBUTIONS. ATOM NO. TYPE CHARGE No. of ELECS. s-Pop p-Pop ; 1 O -0.325646 6.3256 1.87036 4.45529; 2 C -0.073412 4.0734 1.23551 2.83790; 3 H 0.098038 0.9020 0.90196; 4 H 0.052883 0.9471 0.94712; 5 H 0.052784 0.9472 0.94722; 6 H 0.195352 0.8046 0.80465; DIPOLE X Y Z TOTAL; POINT-CHG. 0.956 -0.614 -0.002 1.137; HYBRID 0.105 -0.610 -0.002 0.619; SUM 1.062 -1.225 -0.003 1.621. ATOMIC ORBITAL ELECTRON POPULATIONS. Atom s px py pz ; 1 O 1.87036 1.19531 1.28789 1.97208; 2 C 1.23551 0.82719 1.02369 0.98701; 3 H 0.90196; 4 H 0.94712; 5 H 0.94722; 6 H 0.80465. **********************; * *; * JOB ENDED NORMALLY *; * *; **********************. TOTAL JOB TIME: 0.05 SECONDS. == MOPAC DONE ==. Reported by: zfekete2. Original Ticket: [openbabel/bugs/967](https://sourceforge.net/p/openbabel/bugs/967),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1346
https://github.com/openbabel/openbabel/issues/1346:5309,Energy Efficiency,CHARGE,CHARGE,5309,ROMS. GRADIENT NORM = 0.67290; IONIZATION POTENTIAL = 11.134224 EV; HOMO LUMO ENERGIES (EV) = -11.134 3.782; NO. OF FILLED LEVELS = 7; MOLECULAR WEIGHT = 32.042. MOLECULAR DIMENSIONS (Angstroms). Atom Atom Distance; H 6 H 3 2.81896; O 1 H 5 1.87905; H 4 H 5 1.59724. SCF CALCULATIONS = 14; ; WALL-CLOCK TIME = 0.047 SECONDS; COMPUTATION TIME = 0.062 SECONDS. ATOM CHEMICAL X Y Z; NUMBER SYMBOL (ANGSTROMS) (ANGSTROMS) (ANGSTROMS); ; 1 O 0.00160519 * 0.00044948 * -0.00012544 *; 2 C 1.41171949 * -0.00175602 * 0.00021003 *; 3 H 1.70503109 * 1.07793158 * 0.00114058 *; 4 H 1.81133147 * -0.50897670 * 0.91375057 *; 5 H 1.81146437 * -0.50680006 * -0.91451558 *; 6 H -0.28298690 * -0.92064469 * -0.00260083 *. CARTESIAN COORDINATES. 1 O 0.001605191 0.000449475 -0.000125442; 2 C 1.411719494 -0.001756017 0.000210032; 3 H 1.705031094 1.077931583 0.001140585; 4 H 1.811331472 -0.508976701 0.913750566; 5 H 1.811464373 -0.506800064 -0.914515575; 6 H -0.282986899 -0.920644691 -0.002600833. Empirical Formula: C H4 O = 6 atoms. MOLECULAR POINT GROUP : Cs . EIGENVALUES ; -37.85011 -26.98114 -18.28364 -15.44859 -15.29172 -12.49759 -11.13422 3.78175; 4.08962 4.22766 4.52341 6.24221. NET ATOMIC CHARGES AND DIPOLE CONTRIBUTIONS. ATOM NO. TYPE CHARGE No. of ELECS. s-Pop p-Pop ; 1 O -0.325646 6.3256 1.87036 4.45529; 2 C -0.073412 4.0734 1.23551 2.83790; 3 H 0.098038 0.9020 0.90196; 4 H 0.052883 0.9471 0.94712; 5 H 0.052784 0.9472 0.94722; 6 H 0.195352 0.8046 0.80465; DIPOLE X Y Z TOTAL; POINT-CHG. 0.956 -0.614 -0.002 1.137; HYBRID 0.105 -0.610 -0.002 0.619; SUM 1.062 -1.225 -0.003 1.621. ATOMIC ORBITAL ELECTRON POPULATIONS. Atom s px py pz ; 1 O 1.87036 1.19531 1.28789 1.97208; 2 C 1.23551 0.82719 1.02369 0.98701; 3 H 0.90196; 4 H 0.94712; 5 H 0.94722; 6 H 0.80465. **********************; * *; * JOB ENDED NORMALLY *; * *; **********************. TOTAL JOB TIME: 0.05 SECONDS. == MOPAC DONE ==. Reported by: zfekete2. Original Ticket: [openbabel/bugs/967](https://sourceforge.net/p/openbabel/bugs/967),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1346
https://github.com/openbabel/openbabel/issues/1346:2617,Performance,optimiz,optimization,2617," *; . CARTESIAN COORDINATES . NO. ATOM X Y Z. 1 O 0.0100 -0.0030 0.0000; 2 C 1.4240 -0.0040 0.0000; 3 H 1.6860 1.0620 0.0010; 4 H 1.8060 -0.4910 0.9030; 5 H 1.8060 -0.4890 -0.9030; 6 H -0.3290 -0.9190 -0.0030. ===================== shared-memory parallel CPU Section ======================; ** **; ** MOPAC calculations will run in shared-memory parallel CPUs **; ** **; ** Number of Threads = 2 **; ** **; ** **; ** For information on this work, see: **; ** **; ** Maia, J.D.C., et al., J. Chem. Theory Comput. 2012, 8, 3072-3081. **; ** DOI: 10.1021/ct3004645. **; ** **; ===================== shared-memory parallel CPU Section ======================; . H: (AM1): M.J.S. DEWAR ET AL, J. AM. CHEM. SOC. 107 3902-3909 (1985); C: (AM1): M.J.S. DEWAR ET AL, J. AM. CHEM. SOC. 107 3902-3909 (1985); O: (AM1): M.J.S. DEWAR ET AL, J. AM. CHEM. SOC. 107 3902-3909 (1985). Empirical Formula: C H4 O = 6 atoms. MOLECULAR POINT GROUP : Cs . RHF CALCULATION, NO. OF DOUBLY OCCUPIED LEVELS = 7. Geometry optimization using EF. DIAGONAL MATRIX USED AS START HESSIAN. CYCLE: 1 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 47.504 HEAT: -55.99889; CYCLE: 2 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 28.130 HEAT: -56.58412; CYCLE: 3 TIME: 0.016 TIME LEFT: 2.00D GRAD.: 16.700 HEAT: -56.88593; CYCLE: 4 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 19.239 HEAT: -56.90030; CYCLE: 5 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 19.043 HEAT: -56.91750; CYCLE: 6 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 6.533 HEAT: -57.02012; CYCLE: 7 TIME: 0.016 TIME LEFT: 2.00D GRAD.: 5.460 HEAT: -57.03173; CYCLE: 8 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.285 HEAT: -57.04181; CYCLE: 9 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.583 HEAT: -57.04692; CYCLE: 10 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.497 HEAT: -57.05054; CYCLE: 11 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 0.673 HEAT: -57.05291. GRADIENT = 0.67290 IS LESS THAN CUTOFF = 1.00000. -------------------------------------------------------------------------------; AM1; --- C:\MOPAC.dir\MeOH_test.pdb ---; MOPAC input gener",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1346
https://github.com/openbabel/openbabel/issues/1347:369,Availability,error,error,369,"Hi there,. I have developed a web application in .NET C# code using OBDotNet. My OS is Windows 7, 64 bit.The version of Open Babel I am using, is OpenBabel-2.3.2.; Its working fine when I run application in Microsoft Visual studio. But after publishing my application and hosting it on IIS, when I run the application, it is throwing exception. I am attaching the same error log file for your reference.; Please help. Thanks; Pradeep. Reported by: pradeepv67. Original Ticket: [openbabel/bugs/968](https://sourceforge.net/p/openbabel/bugs/968)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347
https://github.com/openbabel/openbabel/issues/1347:375,Testability,log,log,375,"Hi there,. I have developed a web application in .NET C# code using OBDotNet. My OS is Windows 7, 64 bit.The version of Open Babel I am using, is OpenBabel-2.3.2.; Its working fine when I run application in Microsoft Visual studio. But after publishing my application and hosting it on IIS, when I run the application, it is throwing exception. I am attaching the same error log file for your reference.; Please help. Thanks; Pradeep. Reported by: pradeepv67. Original Ticket: [openbabel/bugs/968](https://sourceforge.net/p/openbabel/bugs/968)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347
https://github.com/openbabel/openbabel/pull/234:286,Integrability,message,message,286,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234
https://github.com/openbabel/openbabel/pull/234:148,Modifiability,plugin,plugin,148,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234
https://github.com/openbabel/openbabel/pull/234:368,Modifiability,plugin,plugin,368,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234
https://github.com/openbabel/openbabel/pull/234:667,Modifiability,plugin,plugin,667,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234
https://github.com/openbabel/openbabel/pull/234:729,Modifiability,plugin,plugin,729,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234
https://github.com/openbabel/openbabel/pull/234:674,Performance,load,loading,674,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234
https://github.com/openbabel/openbabel/pull/234:833,Performance,Load,LoadAllPlugins,833,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234
https://github.com/openbabel/openbabel/issues/1348:21,Deployability,install,installed,21,"My Open Babel 2.3.2 (installed under Windows 7) does not recognize the '-L confab' call, recommended in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html):; ; ```; >obabel -L confab; confab is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; . Reported by: zfekete2. Original Ticket: [openbabel/bugs/969](https://sourceforge.net/p/openbabel/bugs/969)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1348
https://github.com/openbabel/openbabel/issues/1348:323,Energy Efficiency,charge,charges,323,"My Open Babel 2.3.2 (installed under Windows 7) does not recognize the '-L confab' call, recommended in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html):; ; ```; >obabel -L confab; confab is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; . Reported by: zfekete2. Original Ticket: [openbabel/bugs/969](https://sourceforge.net/p/openbabel/bugs/969)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1348
https://github.com/openbabel/openbabel/issues/1348:263,Modifiability,plugin,plugin,263,"My Open Babel 2.3.2 (installed under Windows 7) does not recognize the '-L confab' call, recommended in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html):; ; ```; >obabel -L confab; confab is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; . Reported by: zfekete2. Original Ticket: [openbabel/bugs/969](https://sourceforge.net/p/openbabel/bugs/969)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1348
https://github.com/openbabel/openbabel/issues/1348:310,Performance,load,loaded,310,"My Open Babel 2.3.2 (installed under Windows 7) does not recognize the '-L confab' call, recommended in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html):; ; ```; >obabel -L confab; confab is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; . Reported by: zfekete2. Original Ticket: [openbabel/bugs/969](https://sourceforge.net/p/openbabel/bugs/969)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1348
https://github.com/openbabel/openbabel/issues/1348:381,Performance,load,loaders,381,"My Open Babel 2.3.2 (installed under Windows 7) does not recognize the '-L confab' call, recommended in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html):; ; ```; >obabel -L confab; confab is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; . Reported by: zfekete2. Original Ticket: [openbabel/bugs/969](https://sourceforge.net/p/openbabel/bugs/969)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1348
https://github.com/openbabel/openbabel/pull/236:19,Availability,error,error,19,This fixes a logic error in OBBuilder which led to nondeterministic behavior for some groups (e.g. carboxylate).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/236
https://github.com/openbabel/openbabel/pull/236:13,Testability,log,logic,13,This fixes a logic error in OBBuilder which led to nondeterministic behavior for some groups (e.g. carboxylate).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/236
https://github.com/openbabel/openbabel/issues/238:9,Availability,down,downloaded,9,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/238:187,Availability,error,error,187,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/238:217,Availability,error,error,217,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/238:331,Availability,error,errors,331,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/238:735,Deployability,patch,patch,735,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/238:363,Integrability,message,messages,363,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/238:353,Security,audit,audit,353,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/238:359,Testability,log,log,359,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238
https://github.com/openbabel/openbabel/issues/1542:55,Energy Efficiency,charge,charge,55,"Good day,. I would like to simulate the small positive charge on halides (Chlorine, Bromine and Iodine, but not Fluorine) on ligands for docking (Autodock) and molecular dynamics simulations (Gromacs, AMBER, using acpype for ligand preparation). When preparing a batch of ligands for these simulations I would like to add an Extra Point (EP) of Charge to halides (similar to how hydrogens are added to structures). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1542:345,Energy Efficiency,Charge,Charge,345,"Good day,. I would like to simulate the small positive charge on halides (Chlorine, Bromine and Iodine, but not Fluorine) on ligands for docking (Autodock) and molecular dynamics simulations (Gromacs, AMBER, using acpype for ligand preparation). When preparing a batch of ligands for these simulations I would like to add an Extra Point (EP) of Charge to halides (similar to how hydrogens are added to structures). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1542:1417,Testability,test,test,1417,"s). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be grea",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1542:1608,Testability,test,test,1608," Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be greatly appreaciated. . Thank you; Best regards; Andre. Reported by: bas123. Original Ticket: [openbabel/feature-requests/174](https://sourceforge.net/p/openbabel/feature-requests/174)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1542:1832,Testability,test,test,1832," Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be greatly appreaciated. . Thank you; Best regards; Andre. Reported by: bas123. Original Ticket: [openbabel/feature-requests/174](https://sourceforge.net/p/openbabel/feature-requests/174)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1542:2040,Testability,test,test,2040," Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be greatly appreaciated. . Thank you; Best regards; Andre. Reported by: bas123. Original Ticket: [openbabel/feature-requests/174](https://sourceforge.net/p/openbabel/feature-requests/174)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1542:2197,Testability,test,test,2197," Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be greatly appreaciated. . Thank you; Best regards; Andre. Reported by: bas123. Original Ticket: [openbabel/feature-requests/174](https://sourceforge.net/p/openbabel/feature-requests/174)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1542:1293,Usability,simpl,simple,1293,"tions I would like to add an Extra Point (EP) of Charge to halides (similar to how hydrogens are added to structures). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'Ad",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542
https://github.com/openbabel/openbabel/issues/1349:160,Testability,test,testester,160,"I just found a possible bug in the identification of ester bonds.; Basically, the method OBBond.IsEster() returns true with . HOW TO REPRODUCE IT:; ```; $ cat> testester.py << EOF; import pybel; ob = pybel.ob; smi = [ 'OC(=O)', 'CC(O)=O', 'O=C(O)c1ccccc1']; for s in smi:; mol = pybel.readstring('smi',s).OBMol; for b in ob.OBMolBondIter(mol):; if b.IsEster():; print ""FOUND ESTER BOND""; ^D; $ python testester.py; FOUND ESTER BOND; ```; The test is positive with formic, acetic and benzoic acid, and it doesn't seem to be affected by the input format (I've tested Mol2). Reported by: @sforli. Original Ticket: [openbabel/bugs/970](https://sourceforge.net/p/openbabel/bugs/970)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1349
https://github.com/openbabel/openbabel/issues/1349:401,Testability,test,testester,401,"I just found a possible bug in the identification of ester bonds.; Basically, the method OBBond.IsEster() returns true with . HOW TO REPRODUCE IT:; ```; $ cat> testester.py << EOF; import pybel; ob = pybel.ob; smi = [ 'OC(=O)', 'CC(O)=O', 'O=C(O)c1ccccc1']; for s in smi:; mol = pybel.readstring('smi',s).OBMol; for b in ob.OBMolBondIter(mol):; if b.IsEster():; print ""FOUND ESTER BOND""; ^D; $ python testester.py; FOUND ESTER BOND; ```; The test is positive with formic, acetic and benzoic acid, and it doesn't seem to be affected by the input format (I've tested Mol2). Reported by: @sforli. Original Ticket: [openbabel/bugs/970](https://sourceforge.net/p/openbabel/bugs/970)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1349
https://github.com/openbabel/openbabel/issues/1349:442,Testability,test,test,442,"I just found a possible bug in the identification of ester bonds.; Basically, the method OBBond.IsEster() returns true with . HOW TO REPRODUCE IT:; ```; $ cat> testester.py << EOF; import pybel; ob = pybel.ob; smi = [ 'OC(=O)', 'CC(O)=O', 'O=C(O)c1ccccc1']; for s in smi:; mol = pybel.readstring('smi',s).OBMol; for b in ob.OBMolBondIter(mol):; if b.IsEster():; print ""FOUND ESTER BOND""; ^D; $ python testester.py; FOUND ESTER BOND; ```; The test is positive with formic, acetic and benzoic acid, and it doesn't seem to be affected by the input format (I've tested Mol2). Reported by: @sforli. Original Ticket: [openbabel/bugs/970](https://sourceforge.net/p/openbabel/bugs/970)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1349
https://github.com/openbabel/openbabel/issues/1349:558,Testability,test,tested,558,"I just found a possible bug in the identification of ester bonds.; Basically, the method OBBond.IsEster() returns true with . HOW TO REPRODUCE IT:; ```; $ cat> testester.py << EOF; import pybel; ob = pybel.ob; smi = [ 'OC(=O)', 'CC(O)=O', 'O=C(O)c1ccccc1']; for s in smi:; mol = pybel.readstring('smi',s).OBMol; for b in ob.OBMolBondIter(mol):; if b.IsEster():; print ""FOUND ESTER BOND""; ^D; $ python testester.py; FOUND ESTER BOND; ```; The test is positive with formic, acetic and benzoic acid, and it doesn't seem to be affected by the input format (I've tested Mol2). Reported by: @sforli. Original Ticket: [openbabel/bugs/970](https://sourceforge.net/p/openbabel/bugs/970)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1349
https://github.com/openbabel/openbabel/pull/241:38,Modifiability,variab,variable,38,"In a previous commit, the type of the variable i was changed from int to unsigned int. As a result, the back substitution loop became infinite (comparison of unsigned int with zero) and the arrays B and A were accessed beyond their bounds causing a segfault.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/241
https://github.com/openbabel/openbabel/pull/241:210,Security,access,accessed,210,"In a previous commit, the type of the variable i was changed from int to unsigned int. As a result, the back substitution loop became infinite (comparison of unsigned int with zero) and the arrays B and A were accessed beyond their bounds causing a segfault.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/241
https://github.com/openbabel/openbabel/issues/242:205,Integrability,message,message,205,"Hi there,. I've noticed some recent problems with spacegroup # 230 in OpenBabel. . For a while, I haven't been able to use the 'set spacegroup' feature of Avogadro because it will crash with the following message:; Cannot find an OpenBabel equivalent to Spglib's Hall symbol ""-I 4bd 2c 3"". If I look inside the spacegroups.txt file in openbabel/data, I see that this is a symbol for spacegroup number 230, and for some reason it isn't loading properly. I also noticed that if I do something as simple as OpenBabel::SpaceGroup::GetSpaceGroup(spg)->GetHMName(), it will crash if spg is 230 (but it will work fine if spg is any other number 1 to 229). I'll try to look into the issue, but if any of you know how to fix it, that'd be great!. Thanks,; Patrick",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242
https://github.com/openbabel/openbabel/issues/242:435,Performance,load,loading,435,"Hi there,. I've noticed some recent problems with spacegroup # 230 in OpenBabel. . For a while, I haven't been able to use the 'set spacegroup' feature of Avogadro because it will crash with the following message:; Cannot find an OpenBabel equivalent to Spglib's Hall symbol ""-I 4bd 2c 3"". If I look inside the spacegroups.txt file in openbabel/data, I see that this is a symbol for spacegroup number 230, and for some reason it isn't loading properly. I also noticed that if I do something as simple as OpenBabel::SpaceGroup::GetSpaceGroup(spg)->GetHMName(), it will crash if spg is 230 (but it will work fine if spg is any other number 1 to 229). I'll try to look into the issue, but if any of you know how to fix it, that'd be great!. Thanks,; Patrick",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242
https://github.com/openbabel/openbabel/issues/242:494,Usability,simpl,simple,494,"Hi there,. I've noticed some recent problems with spacegroup # 230 in OpenBabel. . For a while, I haven't been able to use the 'set spacegroup' feature of Avogadro because it will crash with the following message:; Cannot find an OpenBabel equivalent to Spglib's Hall symbol ""-I 4bd 2c 3"". If I look inside the spacegroups.txt file in openbabel/data, I see that this is a symbol for spacegroup number 230, and for some reason it isn't loading properly. I also noticed that if I do something as simple as OpenBabel::SpaceGroup::GetSpaceGroup(spg)->GetHMName(), it will crash if spg is 230 (but it will work fine if spg is any other number 1 to 229). I'll try to look into the issue, but if any of you know how to fix it, that'd be great!. Thanks,; Patrick",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242
https://github.com/openbabel/openbabel/pull/243:0,Modifiability,Extend,Extend,0,Extend EEM to use additional parameters from http://www.jcheminf.com/content/7/1/59 and fix some issues along the way.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/243
https://github.com/openbabel/openbabel/pull/244:75,Safety,detect,detection,75,"The new OBAtom:IsHbondAcceptor() method should provide a more fine-grained detection of hydrogen bond capabilities of atoms, basing on their neighbors (i.e., different chemical moieties are recognized). The rules are based on references from Kubyni and others, and the result can differ significantly from the current 2.3.x implementation, especially for the oxygen atom. A legacy function (OBAtom:IsHBondAcceptorSimple()) has been created to provide some kind of backward compatibility. . Accordingly to these rules, the function will return:; aliph-O-aliph ether -> true [1]; hydroxy O-sp3 -> true [1]; aro-O-aliph ether -> true [1]; ester O-sp2 -> true [1]; sulfate O (R-SO3) -> true [2]; sulfoxyde O (R-SO-R) -> true [2]; organoboron-F (R-BF3) -> true [3]; ester O-sp3 -> false [1]; sulfone (R1-SO2-R2 ) -> false [2]; aro-O-aro -> false [1]; aromatic O -> false [1]; O-nitro -> false [2]; organic F (R-F) -> false [4]. References; [1] Kubinyi, H. ""Changing paradigms in drug discovery. ""SPECIAL PUBLICATION-ROYAL SOCIETY OF CHEMISTRY 304.1 (2006): 219-232.; [2] Kingsbury, Charles A. ""Why are the Nitro and Sulfone Groups Poor Hydrogen Bonders?."" (2015).; [3] Per Restorp, Orion B. Berryman, Aaron C. Sather, Dariush Ajami, Julius Rebek Jr., Chem. Commun., 2009, 5692 DOI: 10.1039/b914171e; [4] Dunitz, Taylor. ""Organic fluorine hardly ever accepts hydrogen bonds."" Chemistry-A European Journal 3.1 (1997): 83-92.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/244
https://github.com/openbabel/openbabel/issues/245:1114,Availability,fault,fault,1114,"Hello everyone,. I try to convert an xyz file (describing slightly distorted methane) to gzmat and back by invoking:; `babel -ixyz CH4.xyz -ogzmat CH4.gzmat; babel -igzmat CH4.gzmat -oxyz CH4_2.xyz`. If I compare CH4.xyz and CH4_2.xyz one H-C-H angle changes from 110.8879 to 110.8902.; Is this a bug? Or is this your desired accuracy?; [CH4_2.xyz.txt](https://github.com/openbabel/openbabel/files/69106/CH4_2.xyz.txt); [CH4.xyz.txt](https://github.com/openbabel/openbabel/files/69107/CH4.xyz.txt). Converting back and forth on a larger molecule gives completely useless results:; `babel -ixyz MIL53as_alpha_Ref.xyz -ogzmat MIL53as_alpha_Ref.gzmat; ; babel -igzmat MIL53as_alpha_Ref.gzmat -oxyz MIL53as_alpha_Ref2.xyz`. [MIL53as_alpha_Ref2.xyz.txt](https://github.com/openbabel/openbabel/files/69110/MIL53as_alpha_Ref2.xyz.txt); [MIL53as_alpha_Ref.xyz.txt](https://github.com/openbabel/openbabel/files/69111/MIL53as_alpha_Ref.xyz.txt). I used the ubuntu package which is `Open Babel 2.3.2 -- Jan 21 2014 -- 23:20:08`.; I cant reproduce the same behaviour with the lates git commit, because it gives a segmentation fault.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/245
https://github.com/openbabel/openbabel/issues/246:107,Deployability,release,release,107,"Dear openbabel,; we at Gentoo are experiencing difficulties building openbabel 2.3.2 with the latest GCC-5 release. This is mostly due to std::shared_ptr issues and using it from TR1, all of which has been fixed in git. Instead of cherrypicking the fixing commits and backporting them, could you maybe make a 2.3.3 release instead so we can use this? Thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/246
https://github.com/openbabel/openbabel/issues/246:315,Deployability,release,release,315,"Dear openbabel,; we at Gentoo are experiencing difficulties building openbabel 2.3.2 with the latest GCC-5 release. This is mostly due to std::shared_ptr issues and using it from TR1, all of which has been fixed in git. Instead of cherrypicking the fixing commits and backporting them, could you maybe make a 2.3.3 release instead so we can use this? Thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/246
https://github.com/openbabel/openbabel/pull/247:10,Testability,test,test,10,Otherwise test build fails if Python interpreter is not found or is; unset.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/247
https://github.com/openbabel/openbabel/issues/249:155,Availability,echo,echo,155,"In both 2.3.2 and in git HEAD, the ionic form of aluminum trichloride gets mangled upon smiles round-tripping. Hydrides are added. /usr/bin/obabel -ismi <(echo '[Al+3].[Cl-].[Cl-].[Cl-]') -ocan; [AlH3+3].[Cl-].[Cl-].[Cl-]",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/249
https://github.com/openbabel/openbabel/issues/250:353,Availability,error,errors,353,"I need to process large amount of SDF format files, each has multiple molecules, filter them by the total atom numbers, return the molecules as python objects. . Below is my code:; `mols = [mol for mol in pybel.readfile(format=""sdf"", filename=ifn) if len(mol.atoms) >= minimum_size]`. It seems that the files are left open by `pybel.readfile` and I got errors `[Errno 24] Too many open files` after long time running.; I found a thread (http://forums.openbabel.org/Too-many-open-files-error-td957493.html) on the issue but cannot find a solution based on that. I am wondering if the `too many open files` issues have been resolved.; Is it because my code is wrong?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/250
https://github.com/openbabel/openbabel/issues/250:485,Availability,error,error-,485,"I need to process large amount of SDF format files, each has multiple molecules, filter them by the total atom numbers, return the molecules as python objects. . Below is my code:; `mols = [mol for mol in pybel.readfile(format=""sdf"", filename=ifn) if len(mol.atoms) >= minimum_size]`. It seems that the files are left open by `pybel.readfile` and I got errors `[Errno 24] Too many open files` after long time running.; I found a thread (http://forums.openbabel.org/Too-many-open-files-error-td957493.html) on the issue but cannot find a solution based on that. I am wondering if the `too many open files` issues have been resolved.; Is it because my code is wrong?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/250
https://github.com/openbabel/openbabel/issues/1351:212,Testability,test,test,212,"Dear developpers,. I am using Open Babel 2.3.2 -- Nov 23 2015 -- 18:51:24. I have found a bug in the generations of lammps data files. I am converting a PDB file to a lmpdat file using the command ; babel -i pdb test.pdb -o lmpdat test.lmpdat. Although the generation of the atoms is done correctly, the bonds are not properly generated. Attached you will find the input and output files. Regards, ; Sebastián. Reported by: sebas-n1. Original Ticket: [openbabel/bugs/972](https://sourceforge.net/p/openbabel/bugs/972)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1351
https://github.com/openbabel/openbabel/issues/1351:231,Testability,test,test,231,"Dear developpers,. I am using Open Babel 2.3.2 -- Nov 23 2015 -- 18:51:24. I have found a bug in the generations of lammps data files. I am converting a PDB file to a lmpdat file using the command ; babel -i pdb test.pdb -o lmpdat test.lmpdat. Although the generation of the atoms is done correctly, the bonds are not properly generated. Attached you will find the input and output files. Regards, ; Sebastián. Reported by: sebas-n1. Original Ticket: [openbabel/bugs/972](https://sourceforge.net/p/openbabel/bugs/972)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1351
https://github.com/openbabel/openbabel/issues/251:392,Deployability,patch,patch,392,"In particular (from http://deposit.rcsb.org/adit/docs/pdb_atom_format.html ):; **For a rhombohedral space group in the hexagonal setting, the lattice type symbol used is H.**. For example this:; `_symmetry_space_group_name_H-M 'R -3 m :H'`. Should be converted to:; `H-3m`. The code to fix is around: https://github.com/openbabel/openbabel/blob/master/src/formats/pdbformat.cpp#L557. Similar patch exists for the Computational Crystallography Toolbox: http://sourceforge.net/p/cctbx/mailman/message/19334798/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/251
https://github.com/openbabel/openbabel/issues/251:491,Integrability,message,message,491,"In particular (from http://deposit.rcsb.org/adit/docs/pdb_atom_format.html ):; **For a rhombohedral space group in the hexagonal setting, the lattice type symbol used is H.**. For example this:; `_symmetry_space_group_name_H-M 'R -3 m :H'`. Should be converted to:; `H-3m`. The code to fix is around: https://github.com/openbabel/openbabel/blob/master/src/formats/pdbformat.cpp#L557. Similar patch exists for the Computational Crystallography Toolbox: http://sourceforge.net/p/cctbx/mailman/message/19334798/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/251
https://github.com/openbabel/openbabel/pull/252:30,Availability,avail,available,30,fixes #251 ; Reference CIF is available from COD: http://www.crystallography.net/cod/cif/9/01/53/9015328.cif; http://www.crystallography.net/cod/9015328.html,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/252
https://github.com/openbabel/openbabel/pull/253:107,Availability,failure,failures,107,Use partial metrization and damped stereochemical corrections. This is still incomplete - causes some test failures.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253
https://github.com/openbabel/openbabel/pull/253:102,Testability,test,test,102,Use partial metrization and damped stereochemical corrections. This is still incomplete - causes some test failures.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253
https://github.com/openbabel/openbabel/pull/257:32,Deployability,patch,patch,32,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257
https://github.com/openbabel/openbabel/pull/257:496,Deployability,patch,patch,496,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257
https://github.com/openbabel/openbabel/pull/257:693,Deployability,patch,patch,693,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257
https://github.com/openbabel/openbabel/pull/257:322,Modifiability,extend,extends,322,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257
https://github.com/openbabel/openbabel/pull/257:625,Testability,test,tested,625,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257
https://github.com/openbabel/openbabel/pull/257:964,Usability,guid,guidance,964,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257
https://github.com/openbabel/openbabel/pull/261:118,Availability,avail,available,118,For several cases SpaceGroup::Find returns `NULL`. The idea of this patch is to try to convert to P1 group (apply all available symmetry transformations). This way we might get at least something better than just atoms present in the asymmetric unit with no symmetry operations..,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/261
https://github.com/openbabel/openbabel/pull/261:68,Deployability,patch,patch,68,For several cases SpaceGroup::Find returns `NULL`. The idea of this patch is to try to convert to P1 group (apply all available symmetry transformations). This way we might get at least something better than just atoms present in the asymmetric unit with no symmetry operations..,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/261
https://github.com/openbabel/openbabel/pull/265:27,Testability,test,tests,27,Please close: #259 . Added tests. It seems it works now correctly.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/265
https://github.com/openbabel/openbabel/issues/266:345,Availability,Error,Errors,345,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:307,Safety,Timeout,Timeout,307,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:335,Safety,Timeout,Timeout,335,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:932,Safety,Timeout,Timeout,932,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:1216,Safety,Timeout,Timeout,1216,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:82,Testability,test,tests,82,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:98,Testability,test,tests,98,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:129,Testability,Test,Test,129,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:175,Testability,test,tests,175,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:406,Testability,test,test,406,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:438,Testability,log,log,438,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:499,Testability,Test,Test,499,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:702,Testability,Test,Test,702,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:884,Testability,Test,Test,884,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/266:1168,Testability,Test,Test,1168,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266
https://github.com/openbabel/openbabel/issues/268:145,Deployability,install,installed,145,"Hi. Currently, `openbabel/shared_ptr.h` chooses; which implementation of a shared pointer should be used at compile time; and the header file is installed as is in the source tree. Isn't it dangerous because different implementations can be chosen; at compile time of the library and of users' code?. I think it is better to hardcode a chosen implementation; at configure time into `babelconfig.h`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/268
https://github.com/openbabel/openbabel/issues/268:362,Modifiability,config,configure,362,"Hi. Currently, `openbabel/shared_ptr.h` chooses; which implementation of a shared pointer should be used at compile time; and the header file is installed as is in the source tree. Isn't it dangerous because different implementations can be chosen; at compile time of the library and of users' code?. I think it is better to hardcode a chosen implementation; at configure time into `babelconfig.h`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/268
https://github.com/openbabel/openbabel/issues/1352:1175,Availability,error,error,1175,"6 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:1706,Availability,error,error,1706,"make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:683,Deployability,install,install,683,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:753,Deployability,install,install,753,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:857,Deployability,install,install,857,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:2152,Deployability,install,installs,2152,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:1081,Performance,load,loaded,1081,"Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:2738,Performance,load,loading,2738,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:1190,Safety,detect,detected,1190,"6 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:68,Testability,test,test,68,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:792,Testability,test,test,792,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:871,Testability,test,test,871,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:1832,Testability,log,log,1832,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:2527,Testability,log,logged,2527,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:2572,Testability,log,log,2572,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/issues/1352:61,Usability,simpl,simple,61,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352
https://github.com/openbabel/openbabel/pull/269:134,Deployability,patch,patch,134,The total charge in an OBMol may be changed by EndModify or; other routines involved with changing bondorder and or atom types.; This patch moves the assignment to the end of the file to make; sure the total charge does not get lost.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/269
https://github.com/openbabel/openbabel/pull/269:10,Energy Efficiency,charge,charge,10,The total charge in an OBMol may be changed by EndModify or; other routines involved with changing bondorder and or atom types.; This patch moves the assignment to the end of the file to make; sure the total charge does not get lost.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/269
https://github.com/openbabel/openbabel/pull/269:208,Energy Efficiency,charge,charge,208,The total charge in an OBMol may be changed by EndModify or; other routines involved with changing bondorder and or atom types.; This patch moves the assignment to the end of the file to make; sure the total charge does not get lost.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/269
https://github.com/openbabel/openbabel/pull/269:67,Integrability,rout,routines,67,The total charge in an OBMol may be changed by EndModify or; other routines involved with changing bondorder and or atom types.; This patch moves the assignment to the end of the file to make; sure the total charge does not get lost.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/269
https://github.com/openbabel/openbabel/issues/270:625,Availability,error,error,625,"commit 200ebd0320579adc4d4cbea2c856c2fde6d18b55; Merge: 3c199b7 f840204; Author: Geoff Hutchison geoff.hutchison@gmail.com; Date: Wed Mar 2 16:09:40 2016 -0500. ```; Merge pull request #253 from ghutchis/dist-geom-fixes. Improve distance geometry coordinate generation methods.; ```. ---. It looks like this commit may have broken compilation:. [ 19%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.o; .../openbabel/src/ops/gen3d.cpp: In member function ‘virtual bool OpenBabel::OpGen3D::Do(OpenBabel::OBBase, const char, OpenBabel::OBOp::OpMap, OpenBabel::OBConversion)’:; .../openbabel/src/ops/gen3d.cpp:90:3: error: ‘OBDistanceGeometry’ was not declared in this scope; OBDistanceGeometry dg;; ^; .../openbabel/src/ops/gen3d.cpp:98:5: error: ‘dg’ was not declared in this scope; dg.Setup(pmol, attemptBuild); // use the bond lengths and angles if we ran the builder; ^; make[3]: *\* [src/CMakeFiles/plugin_ops.dir/ops/gen3d.o] Error 1; make[3]: Leaving directory .../openbabel/build' make[2]: **\* [src/CMakeFiles/plugin_ops.dir/all] Error 2 make[2]: Leaving directory.../openbabel/build'; make[1]: **\* [all] Error 2; make[1]: Leaving directory `.../openbabel/build'; make: **\* [openbabel/build/bin/babel] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270
https://github.com/openbabel/openbabel/issues/270:750,Availability,error,error,750,"commit 200ebd0320579adc4d4cbea2c856c2fde6d18b55; Merge: 3c199b7 f840204; Author: Geoff Hutchison geoff.hutchison@gmail.com; Date: Wed Mar 2 16:09:40 2016 -0500. ```; Merge pull request #253 from ghutchis/dist-geom-fixes. Improve distance geometry coordinate generation methods.; ```. ---. It looks like this commit may have broken compilation:. [ 19%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.o; .../openbabel/src/ops/gen3d.cpp: In member function ‘virtual bool OpenBabel::OpGen3D::Do(OpenBabel::OBBase, const char, OpenBabel::OBOp::OpMap, OpenBabel::OBConversion)’:; .../openbabel/src/ops/gen3d.cpp:90:3: error: ‘OBDistanceGeometry’ was not declared in this scope; OBDistanceGeometry dg;; ^; .../openbabel/src/ops/gen3d.cpp:98:5: error: ‘dg’ was not declared in this scope; dg.Setup(pmol, attemptBuild); // use the bond lengths and angles if we ran the builder; ^; make[3]: *\* [src/CMakeFiles/plugin_ops.dir/ops/gen3d.o] Error 1; make[3]: Leaving directory .../openbabel/build' make[2]: **\* [src/CMakeFiles/plugin_ops.dir/all] Error 2 make[2]: Leaving directory.../openbabel/build'; make[1]: **\* [all] Error 2; make[1]: Leaving directory `.../openbabel/build'; make: **\* [openbabel/build/bin/babel] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270
https://github.com/openbabel/openbabel/issues/270:942,Availability,Error,Error,942,"commit 200ebd0320579adc4d4cbea2c856c2fde6d18b55; Merge: 3c199b7 f840204; Author: Geoff Hutchison geoff.hutchison@gmail.com; Date: Wed Mar 2 16:09:40 2016 -0500. ```; Merge pull request #253 from ghutchis/dist-geom-fixes. Improve distance geometry coordinate generation methods.; ```. ---. It looks like this commit may have broken compilation:. [ 19%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.o; .../openbabel/src/ops/gen3d.cpp: In member function ‘virtual bool OpenBabel::OpGen3D::Do(OpenBabel::OBBase, const char, OpenBabel::OBOp::OpMap, OpenBabel::OBConversion)’:; .../openbabel/src/ops/gen3d.cpp:90:3: error: ‘OBDistanceGeometry’ was not declared in this scope; OBDistanceGeometry dg;; ^; .../openbabel/src/ops/gen3d.cpp:98:5: error: ‘dg’ was not declared in this scope; dg.Setup(pmol, attemptBuild); // use the bond lengths and angles if we ran the builder; ^; make[3]: *\* [src/CMakeFiles/plugin_ops.dir/ops/gen3d.o] Error 1; make[3]: Leaving directory .../openbabel/build' make[2]: **\* [src/CMakeFiles/plugin_ops.dir/all] Error 2 make[2]: Leaving directory.../openbabel/build'; make[1]: **\* [all] Error 2; make[1]: Leaving directory `.../openbabel/build'; make: **\* [openbabel/build/bin/babel] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270
https://github.com/openbabel/openbabel/issues/270:1049,Availability,Error,Error,1049,"commit 200ebd0320579adc4d4cbea2c856c2fde6d18b55; Merge: 3c199b7 f840204; Author: Geoff Hutchison geoff.hutchison@gmail.com; Date: Wed Mar 2 16:09:40 2016 -0500. ```; Merge pull request #253 from ghutchis/dist-geom-fixes. Improve distance geometry coordinate generation methods.; ```. ---. It looks like this commit may have broken compilation:. [ 19%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.o; .../openbabel/src/ops/gen3d.cpp: In member function ‘virtual bool OpenBabel::OpGen3D::Do(OpenBabel::OBBase, const char, OpenBabel::OBOp::OpMap, OpenBabel::OBConversion)’:; .../openbabel/src/ops/gen3d.cpp:90:3: error: ‘OBDistanceGeometry’ was not declared in this scope; OBDistanceGeometry dg;; ^; .../openbabel/src/ops/gen3d.cpp:98:5: error: ‘dg’ was not declared in this scope; dg.Setup(pmol, attemptBuild); // use the bond lengths and angles if we ran the builder; ^; make[3]: *\* [src/CMakeFiles/plugin_ops.dir/ops/gen3d.o] Error 1; make[3]: Leaving directory .../openbabel/build' make[2]: **\* [src/CMakeFiles/plugin_ops.dir/all] Error 2 make[2]: Leaving directory.../openbabel/build'; make[1]: **\* [all] Error 2; make[1]: Leaving directory `.../openbabel/build'; make: **\* [openbabel/build/bin/babel] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270
https://github.com/openbabel/openbabel/issues/270:1125,Availability,Error,Error,1125,"commit 200ebd0320579adc4d4cbea2c856c2fde6d18b55; Merge: 3c199b7 f840204; Author: Geoff Hutchison geoff.hutchison@gmail.com; Date: Wed Mar 2 16:09:40 2016 -0500. ```; Merge pull request #253 from ghutchis/dist-geom-fixes. Improve distance geometry coordinate generation methods.; ```. ---. It looks like this commit may have broken compilation:. [ 19%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.o; .../openbabel/src/ops/gen3d.cpp: In member function ‘virtual bool OpenBabel::OpGen3D::Do(OpenBabel::OBBase, const char, OpenBabel::OBOp::OpMap, OpenBabel::OBConversion)’:; .../openbabel/src/ops/gen3d.cpp:90:3: error: ‘OBDistanceGeometry’ was not declared in this scope; OBDistanceGeometry dg;; ^; .../openbabel/src/ops/gen3d.cpp:98:5: error: ‘dg’ was not declared in this scope; dg.Setup(pmol, attemptBuild); // use the bond lengths and angles if we ran the builder; ^; make[3]: *\* [src/CMakeFiles/plugin_ops.dir/ops/gen3d.o] Error 1; make[3]: Leaving directory .../openbabel/build' make[2]: **\* [src/CMakeFiles/plugin_ops.dir/all] Error 2 make[2]: Leaving directory.../openbabel/build'; make[1]: **\* [all] Error 2; make[1]: Leaving directory `.../openbabel/build'; make: **\* [openbabel/build/bin/babel] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270
https://github.com/openbabel/openbabel/issues/270:1223,Availability,Error,Error,1223,"commit 200ebd0320579adc4d4cbea2c856c2fde6d18b55; Merge: 3c199b7 f840204; Author: Geoff Hutchison geoff.hutchison@gmail.com; Date: Wed Mar 2 16:09:40 2016 -0500. ```; Merge pull request #253 from ghutchis/dist-geom-fixes. Improve distance geometry coordinate generation methods.; ```. ---. It looks like this commit may have broken compilation:. [ 19%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.o; .../openbabel/src/ops/gen3d.cpp: In member function ‘virtual bool OpenBabel::OpGen3D::Do(OpenBabel::OBBase, const char, OpenBabel::OBOp::OpMap, OpenBabel::OBConversion)’:; .../openbabel/src/ops/gen3d.cpp:90:3: error: ‘OBDistanceGeometry’ was not declared in this scope; OBDistanceGeometry dg;; ^; .../openbabel/src/ops/gen3d.cpp:98:5: error: ‘dg’ was not declared in this scope; dg.Setup(pmol, attemptBuild); // use the bond lengths and angles if we ran the builder; ^; make[3]: *\* [src/CMakeFiles/plugin_ops.dir/ops/gen3d.o] Error 1; make[3]: Leaving directory .../openbabel/build' make[2]: **\* [src/CMakeFiles/plugin_ops.dir/all] Error 2 make[2]: Leaving directory.../openbabel/build'; make[1]: **\* [all] Error 2; make[1]: Leaving directory `.../openbabel/build'; make: **\* [openbabel/build/bin/babel] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270
https://github.com/openbabel/openbabel/pull/273:37,Availability,error,error,37,"The Windows equivalent returns 0 for error/no files, this variant should; do the same. This member is used to load all plugins, and can result in; an infinite loop when -1 is returned.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/273
https://github.com/openbabel/openbabel/pull/273:119,Modifiability,plugin,plugins,119,"The Windows equivalent returns 0 for error/no files, this variant should; do the same. This member is used to load all plugins, and can result in; an infinite loop when -1 is returned.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/273
https://github.com/openbabel/openbabel/pull/273:110,Performance,load,load,110,"The Windows equivalent returns 0 for error/no files, this variant should; do the same. This member is used to load all plugins, and can result in; an infinite loop when -1 is returned.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/273
https://github.com/openbabel/openbabel/issues/274:50,Availability,error,error,50,"Hi there,; I'm quite confused that I'm getting an error for the following SMART:; [CH2=CH]. OpenBabel complains about the equal sign which should actually define a double bond and is also documented like that in the SMARTS documentation (http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html):. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [CH2=CH]; ^; ```. So I tried the SMARTS Editor (http://www.biosolveit.de/SMARTStools/index.html) out because I was not sure about defining the molecular structure correctly and the editor gives me the following SMARTS for a CH2=CH group:; C([H])([H])=C[H]. But OpenBabel also complains about the parenthesis sign:. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [C([H])([H])=C[H]]; ^; ```. What am I doing wrong?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/274
https://github.com/openbabel/openbabel/issues/274:323,Availability,Error,Error,323,"Hi there,; I'm quite confused that I'm getting an error for the following SMART:; [CH2=CH]. OpenBabel complains about the equal sign which should actually define a double bond and is also documented like that in the SMARTS documentation (http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html):. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [CH2=CH]; ^; ```. So I tried the SMARTS Editor (http://www.biosolveit.de/SMARTStools/index.html) out because I was not sure about defining the molecular structure correctly and the editor gives me the following SMARTS for a CH2=CH group:; C([H])([H])=C[H]. But OpenBabel also complains about the parenthesis sign:. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [C([H])([H])=C[H]]; ^; ```. What am I doing wrong?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/274
https://github.com/openbabel/openbabel/issues/274:352,Availability,Error,Error,352,"Hi there,; I'm quite confused that I'm getting an error for the following SMART:; [CH2=CH]. OpenBabel complains about the equal sign which should actually define a double bond and is also documented like that in the SMARTS documentation (http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html):. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [CH2=CH]; ^; ```. So I tried the SMARTS Editor (http://www.biosolveit.de/SMARTStools/index.html) out because I was not sure about defining the molecular structure correctly and the editor gives me the following SMARTS for a CH2=CH group:; C([H])([H])=C[H]. But OpenBabel also complains about the parenthesis sign:. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [C([H])([H])=C[H]]; ^; ```. What am I doing wrong?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/274
https://github.com/openbabel/openbabel/issues/274:695,Availability,Error,Error,695,"Hi there,; I'm quite confused that I'm getting an error for the following SMART:; [CH2=CH]. OpenBabel complains about the equal sign which should actually define a double bond and is also documented like that in the SMARTS documentation (http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html):. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [CH2=CH]; ^; ```. So I tried the SMARTS Editor (http://www.biosolveit.de/SMARTStools/index.html) out because I was not sure about defining the molecular structure correctly and the editor gives me the following SMARTS for a CH2=CH group:; C([H])([H])=C[H]. But OpenBabel also complains about the parenthesis sign:. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [C([H])([H])=C[H]]; ^; ```. What am I doing wrong?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/274
https://github.com/openbabel/openbabel/issues/274:724,Availability,Error,Error,724,"Hi there,; I'm quite confused that I'm getting an error for the following SMART:; [CH2=CH]. OpenBabel complains about the equal sign which should actually define a double bond and is also documented like that in the SMARTS documentation (http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html):. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [CH2=CH]; ^; ```. So I tried the SMARTS Editor (http://www.biosolveit.de/SMARTStools/index.html) out because I was not sure about defining the molecular structure correctly and the editor gives me the following SMARTS for a CH2=CH group:; C([H])([H])=C[H]. But OpenBabel also complains about the parenthesis sign:. ```; *** Open Babel Error in SMARTSError; SMARTS Error:; [C([H])([H])=C[H]]; ^; ```. What am I doing wrong?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/274
https://github.com/openbabel/openbabel/pull/278:29,Deployability,update,updated,29,"gaff.prm and bondtyp.txt are updated in order to reproduce the atom types based on the Wang et al. Vol. 25, No. 9 . Journal of computational Chemistry. 2004",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/278
https://github.com/openbabel/openbabel/issues/279:259,Availability,error,error,259,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279
https://github.com/openbabel/openbabel/issues/279:1087,Availability,error,errors,1087,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279
https://github.com/openbabel/openbabel/issues/279:937,Integrability,depend,dependent,937,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279
https://github.com/openbabel/openbabel/issues/279:748,Performance,optimiz,optimizations,748,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279
https://github.com/openbabel/openbabel/issues/279:833,Performance,optimiz,optimization,833,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279
https://github.com/openbabel/openbabel/issues/279:1029,Safety,avoid,avoid,1029,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279
https://github.com/openbabel/openbabel/pull/280:47,Deployability,update,update,47,"Default the OPTIMIZE_NATIVE option to OFF, and update the documentation; to more accurately reflect the optimization for the machines CPU; architecture. This isn't related to cross-compiling, so replaced; references to it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280
https://github.com/openbabel/openbabel/pull/280:104,Performance,optimiz,optimization,104,"Default the OPTIMIZE_NATIVE option to OFF, and update the documentation; to more accurately reflect the optimization for the machines CPU; architecture. This isn't related to cross-compiling, so replaced; references to it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280
https://github.com/openbabel/openbabel/issues/282:280,Availability,error,errors,280,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:364,Modifiability,plugin,plugin,364,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:376,Modifiability,plugin,plugin,376,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:566,Modifiability,plugin,plugin,566,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:578,Modifiability,plugin,plugin,578,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:771,Modifiability,plugin,plugin,771,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:783,Modifiability,plugin,plugin,783,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:1469,Modifiability,plugin,plugin,1469,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/282:1486,Modifiability,plugin,plugin,1486,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282
https://github.com/openbabel/openbabel/issues/286:152,Availability,Down,Downloads,152,"I followed the instruction page of openbabel installation, cmake with python binding like this,; ""cmake ../openbabel -DEIGEN2_INCLUDE_DIR=/home/vagrant/Downloads/eigen-eigen-b23437e61a07 -DPYTHON_BINDINGS=ON"" and finished subsequent steps of installation. But ""import pybel"" generates the ""ImportError"" as shown in title. Has anybody got solution for this? Thanks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/286
https://github.com/openbabel/openbabel/issues/286:45,Deployability,install,installation,45,"I followed the instruction page of openbabel installation, cmake with python binding like this,; ""cmake ../openbabel -DEIGEN2_INCLUDE_DIR=/home/vagrant/Downloads/eigen-eigen-b23437e61a07 -DPYTHON_BINDINGS=ON"" and finished subsequent steps of installation. But ""import pybel"" generates the ""ImportError"" as shown in title. Has anybody got solution for this? Thanks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/286
https://github.com/openbabel/openbabel/issues/286:242,Deployability,install,installation,242,"I followed the instruction page of openbabel installation, cmake with python binding like this,; ""cmake ../openbabel -DEIGEN2_INCLUDE_DIR=/home/vagrant/Downloads/eigen-eigen-b23437e61a07 -DPYTHON_BINDINGS=ON"" and finished subsequent steps of installation. But ""import pybel"" generates the ""ImportError"" as shown in title. Has anybody got solution for this? Thanks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/286
https://github.com/openbabel/openbabel/pull/287:147,Deployability,install,install,147,"The main improvement is getting rid of the hard-coded path by using the already-existing variable. (Also introduces the possibility of the include install path to something else using -DOB_INCLUDE_DIRS in cmake; this was my personal reason for looking through and editing the CMakeLists.txt file, I wanted the option to install headers to ~/include/openbabel/ instead of ~/include/openbabel-2.0/openbabel/, for example.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287
https://github.com/openbabel/openbabel/pull/287:320,Deployability,install,install,320,"The main improvement is getting rid of the hard-coded path by using the already-existing variable. (Also introduces the possibility of the include install path to something else using -DOB_INCLUDE_DIRS in cmake; this was my personal reason for looking through and editing the CMakeLists.txt file, I wanted the option to install headers to ~/include/openbabel/ instead of ~/include/openbabel-2.0/openbabel/, for example.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287
https://github.com/openbabel/openbabel/pull/287:89,Modifiability,variab,variable,89,"The main improvement is getting rid of the hard-coded path by using the already-existing variable. (Also introduces the possibility of the include install path to something else using -DOB_INCLUDE_DIRS in cmake; this was my personal reason for looking through and editing the CMakeLists.txt file, I wanted the option to install headers to ~/include/openbabel/ instead of ~/include/openbabel-2.0/openbabel/, for example.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287
https://github.com/openbabel/openbabel/issues/288:617,Availability,Error,Error,617,"Hi,. I am trying install openbabel with python bindings in my MAC and want to be able to use it wit anaconda python. I followed instructions from the below link. But my installation fails at the last step. http://forums.openbabel.org/Openbabel-and-Anaconda-td4658042.html . Any suggestions to solve this problem is highly appreciated. . ```; [100%] Building CXX object scripts/CMakeFiles/bindings_python.dir/python/openbabel-python.cpp.o; make[2]: *** No rule to make target `/Users/Sriram/anaconda/lib/libpython2.7.so', needed by `lib/_openbabel.so'. Stop.; make[1]: *** [scripts/CMakeFiles/bindings_python.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/288
https://github.com/openbabel/openbabel/issues/288:642,Availability,Error,Error,642,"Hi,. I am trying install openbabel with python bindings in my MAC and want to be able to use it wit anaconda python. I followed instructions from the below link. But my installation fails at the last step. http://forums.openbabel.org/Openbabel-and-Anaconda-td4658042.html . Any suggestions to solve this problem is highly appreciated. . ```; [100%] Building CXX object scripts/CMakeFiles/bindings_python.dir/python/openbabel-python.cpp.o; make[2]: *** No rule to make target `/Users/Sriram/anaconda/lib/libpython2.7.so', needed by `lib/_openbabel.so'. Stop.; make[1]: *** [scripts/CMakeFiles/bindings_python.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/288
https://github.com/openbabel/openbabel/issues/288:17,Deployability,install,install,17,"Hi,. I am trying install openbabel with python bindings in my MAC and want to be able to use it wit anaconda python. I followed instructions from the below link. But my installation fails at the last step. http://forums.openbabel.org/Openbabel-and-Anaconda-td4658042.html . Any suggestions to solve this problem is highly appreciated. . ```; [100%] Building CXX object scripts/CMakeFiles/bindings_python.dir/python/openbabel-python.cpp.o; make[2]: *** No rule to make target `/Users/Sriram/anaconda/lib/libpython2.7.so', needed by `lib/_openbabel.so'. Stop.; make[1]: *** [scripts/CMakeFiles/bindings_python.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/288
https://github.com/openbabel/openbabel/issues/288:169,Deployability,install,installation,169,"Hi,. I am trying install openbabel with python bindings in my MAC and want to be able to use it wit anaconda python. I followed instructions from the below link. But my installation fails at the last step. http://forums.openbabel.org/Openbabel-and-Anaconda-td4658042.html . Any suggestions to solve this problem is highly appreciated. . ```; [100%] Building CXX object scripts/CMakeFiles/bindings_python.dir/python/openbabel-python.cpp.o; make[2]: *** No rule to make target `/Users/Sriram/anaconda/lib/libpython2.7.so', needed by `lib/_openbabel.so'. Stop.; make[1]: *** [scripts/CMakeFiles/bindings_python.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/288
https://github.com/openbabel/openbabel/pull/289:72,Deployability,update,updated,72,This adds new experimental reference data for those atoms.; In addition updated the reference for the other values.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/289
https://github.com/openbabel/openbabel/pull/290:83,Modifiability,plugin,plugin,83,"- Adds basic support for ATOMBASIS format; in both reading and writing; - make the plugin more compliant in terms of; default options (and obey those rules), i.e.; the -xb and -xs options; - Adds option (using -xk flag) to specify what; basis set to use. I got tired of having to; sed my way through thousands of input files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/290
https://github.com/openbabel/openbabel/issues/293:72,Availability,error,errors,72,"When reading a file of smiles, obabel exits ""normally"" (no warnings, no errors, exit code is zero) without processing the entire file. I don't doubt that the triggering SMILES is corrupt in some way, but it should report an error rather than just acting as if it were EOF. obabel -ismi -ocan foo2_smi.txt ; echo $?; 0 molecules converted; 0. [foo2_smi.txt](https://github.com/openbabel/openbabel/files/198585/foo2_smi.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/293
https://github.com/openbabel/openbabel/issues/293:224,Availability,error,error,224,"When reading a file of smiles, obabel exits ""normally"" (no warnings, no errors, exit code is zero) without processing the entire file. I don't doubt that the triggering SMILES is corrupt in some way, but it should report an error rather than just acting as if it were EOF. obabel -ismi -ocan foo2_smi.txt ; echo $?; 0 molecules converted; 0. [foo2_smi.txt](https://github.com/openbabel/openbabel/files/198585/foo2_smi.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/293
https://github.com/openbabel/openbabel/issues/293:307,Availability,echo,echo,307,"When reading a file of smiles, obabel exits ""normally"" (no warnings, no errors, exit code is zero) without processing the entire file. I don't doubt that the triggering SMILES is corrupt in some way, but it should report an error rather than just acting as if it were EOF. obabel -ismi -ocan foo2_smi.txt ; echo $?; 0 molecules converted; 0. [foo2_smi.txt](https://github.com/openbabel/openbabel/files/198585/foo2_smi.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/293
https://github.com/openbabel/openbabel/issues/294:116,Availability,fault,faults,116,"Attached is a file of SMILES, all taken from wikipedia articles with ChemBox template, which individually cause seg faults in the parser ""obabel -ismy"". These SMILES cause warnings, but not segfaults, with the ""obabel -ismi"" parser. [smy_parser_seg_fault.txt](https://github.com/openbabel/openbabel/files/198712/smy_parser_seg_fault.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294
https://github.com/openbabel/openbabel/pull/295:250,Availability,fault,faults,250,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295
https://github.com/openbabel/openbabel/pull/295:898,Deployability,patch,patch,898,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295
https://github.com/openbabel/openbabel/pull/295:587,Integrability,rout,routines,587,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295
https://github.com/openbabel/openbabel/pull/295:737,Modifiability,variab,variables,737,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295
https://github.com/openbabel/openbabel/pull/295:46,Performance,perform,performing,46,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295
https://github.com/openbabel/openbabel/pull/295:175,Performance,race condition,race conditions,175,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295
https://github.com/openbabel/openbabel/pull/297:275,Deployability,release,released,275,"Well-behaved programs are supposed to exit with status 0 upon; successful completion. Make obtautomer follow this convention. There are other programs which exit with 1 upon successful completion,; such as obprop, obsym, obprobe and perhaps others. But since they; have been released in that state, maybe it is better not to change; them now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/297
https://github.com/openbabel/openbabel/issues/1353:176,Deployability,release,release,176,"Monoclinic cif files (produced by a crystallography program) are not generated the correct atoms for space groups P2/c or P2 . I attach the files here. I am running the latest release I think, from github (https://github.com/openbabel/openbabel) and it builds as Open Babel 2.3.90 -- Apr 18 2016 -- 10:50:49 . I also attach output from Crystalmaker which is correct, and a correct version I generated from vesta. Thank you for any help!. Ron. ---; Ronald Cohen; Geophysical Laboratory; Carnegie Institution; 5251 Broad Branch Rd., N.W.; Washington, D.C. 20015; rcohen@carnegiescience.edu; office: 202-478-8937; skype: ronaldcohen; https://twitter.com/recohen3; https://www.linkedin.com/profile/view?id=163327727. Reported by: recohen3. Original Ticket: [openbabel/bugs/974](https://sourceforge.net/p/openbabel/bugs/974)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1353
https://github.com/openbabel/openbabel/pull/299:21,Availability,error,error,21,"[src/data.cpp:108]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/forcefields/forcefieldmm2.cpp:496]: (style) 'operator=' should return reference to 'this' instance.; [src/forcefields/forcefieldmm2.cpp:354]: (style) Unused variable: idx; [src/forcefields/forcefieldmm2.cpp:519]: (style) Unused variable: filename; [src/forcefields/forcefieldmm2.cpp:520]: (style) Unused variable: currently_parsing; [src/formats/libinchi/ichi_bns.c:6018]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:6071]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:9614]: (error) Expression 'pBond.cap=pBond.flow=pBond.cap=0' depends on order of evaluation of side effects; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'; [src/formats/mdffformat.cpp:233]: (warning) Return value of std::remove() ignored. Elements remain in container; [src/formats/mol2format.cpp:47]: (style) Statements following return, break, continue, goto or throw will never be executed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/299
https://github.com/openbabel/openbabel/pull/299:753,Availability,error,error,753,"[src/data.cpp:108]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/forcefields/forcefieldmm2.cpp:496]: (style) 'operator=' should return reference to 'this' instance.; [src/forcefields/forcefieldmm2.cpp:354]: (style) Unused variable: idx; [src/forcefields/forcefieldmm2.cpp:519]: (style) Unused variable: filename; [src/forcefields/forcefieldmm2.cpp:520]: (style) Unused variable: currently_parsing; [src/formats/libinchi/ichi_bns.c:6018]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:6071]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:9614]: (error) Expression 'pBond.cap=pBond.flow=pBond.cap=0' depends on order of evaluation of side effects; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'; [src/formats/mdffformat.cpp:233]: (warning) Return value of std::remove() ignored. Elements remain in container; [src/formats/mol2format.cpp:47]: (style) Statements following return, break, continue, goto or throw will never be executed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/299
https://github.com/openbabel/openbabel/pull/299:806,Integrability,depend,depends,806,"[src/data.cpp:108]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/forcefields/forcefieldmm2.cpp:496]: (style) 'operator=' should return reference to 'this' instance.; [src/forcefields/forcefieldmm2.cpp:354]: (style) Unused variable: idx; [src/forcefields/forcefieldmm2.cpp:519]: (style) Unused variable: filename; [src/forcefields/forcefieldmm2.cpp:520]: (style) Unused variable: currently_parsing; [src/formats/libinchi/ichi_bns.c:6018]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:6071]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:9614]: (error) Expression 'pBond.cap=pBond.flow=pBond.cap=0' depends on order of evaluation of side effects; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'; [src/formats/mdffformat.cpp:233]: (warning) Return value of std::remove() ignored. Elements remain in container; [src/formats/mol2format.cpp:47]: (style) Statements following return, break, continue, goto or throw will never be executed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/299
https://github.com/openbabel/openbabel/pull/299:312,Modifiability,variab,variable,312,"[src/data.cpp:108]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/forcefields/forcefieldmm2.cpp:496]: (style) 'operator=' should return reference to 'this' instance.; [src/forcefields/forcefieldmm2.cpp:354]: (style) Unused variable: idx; [src/forcefields/forcefieldmm2.cpp:519]: (style) Unused variable: filename; [src/forcefields/forcefieldmm2.cpp:520]: (style) Unused variable: currently_parsing; [src/formats/libinchi/ichi_bns.c:6018]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:6071]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:9614]: (error) Expression 'pBond.cap=pBond.flow=pBond.cap=0' depends on order of evaluation of side effects; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'; [src/formats/mdffformat.cpp:233]: (warning) Return value of std::remove() ignored. Elements remain in container; [src/formats/mol2format.cpp:47]: (style) Statements following return, break, continue, goto or throw will never be executed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/299
https://github.com/openbabel/openbabel/pull/299:383,Modifiability,variab,variable,383,"[src/data.cpp:108]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/forcefields/forcefieldmm2.cpp:496]: (style) 'operator=' should return reference to 'this' instance.; [src/forcefields/forcefieldmm2.cpp:354]: (style) Unused variable: idx; [src/forcefields/forcefieldmm2.cpp:519]: (style) Unused variable: filename; [src/forcefields/forcefieldmm2.cpp:520]: (style) Unused variable: currently_parsing; [src/formats/libinchi/ichi_bns.c:6018]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:6071]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:9614]: (error) Expression 'pBond.cap=pBond.flow=pBond.cap=0' depends on order of evaluation of side effects; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'; [src/formats/mdffformat.cpp:233]: (warning) Return value of std::remove() ignored. Elements remain in container; [src/formats/mol2format.cpp:47]: (style) Statements following return, break, continue, goto or throw will never be executed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/299
https://github.com/openbabel/openbabel/pull/299:459,Modifiability,variab,variable,459,"[src/data.cpp:108]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/forcefields/forcefieldmm2.cpp:496]: (style) 'operator=' should return reference to 'this' instance.; [src/forcefields/forcefieldmm2.cpp:354]: (style) Unused variable: idx; [src/forcefields/forcefieldmm2.cpp:519]: (style) Unused variable: filename; [src/forcefields/forcefieldmm2.cpp:520]: (style) Unused variable: currently_parsing; [src/formats/libinchi/ichi_bns.c:6018]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:6071]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:9614]: (error) Expression 'pBond.cap=pBond.flow=pBond.cap=0' depends on order of evaluation of side effects; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'; [src/formats/mdffformat.cpp:233]: (warning) Return value of std::remove() ignored. Elements remain in container; [src/formats/mol2format.cpp:47]: (style) Statements following return, break, continue, goto or throw will never be executed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/299
https://github.com/openbabel/openbabel/issues/300:85,Deployability,install,install,85,make uninstall doesn't work from the build directory after cmake ../.; Being able to install from sources is nice.; Being unable to uninstall is also very nice.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/300
https://github.com/openbabel/openbabel/pull/303:122,Availability,error,error,122,"I noticed slight differences in the FF calculation results for repeated calculations of the same structure using UFF. The error stems from a missing SetupPointers() override.; gaff, ghemical, mmff94 all use OBFFCalculation objects and override the forcefield base function SetupPointers() to assure that the coordinate pointers are setup properly. The patch fixes the error, such that repeated calculations lead to the same results.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/303
https://github.com/openbabel/openbabel/pull/303:368,Availability,error,error,368,"I noticed slight differences in the FF calculation results for repeated calculations of the same structure using UFF. The error stems from a missing SetupPointers() override.; gaff, ghemical, mmff94 all use OBFFCalculation objects and override the forcefield base function SetupPointers() to assure that the coordinate pointers are setup properly. The patch fixes the error, such that repeated calculations lead to the same results.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/303
https://github.com/openbabel/openbabel/pull/303:352,Deployability,patch,patch,352,"I noticed slight differences in the FF calculation results for repeated calculations of the same structure using UFF. The error stems from a missing SetupPointers() override.; gaff, ghemical, mmff94 all use OBFFCalculation objects and override the forcefield base function SetupPointers() to assure that the coordinate pointers are setup properly. The patch fixes the error, such that repeated calculations lead to the same results.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/303
https://github.com/openbabel/openbabel/pull/307:22,Energy Efficiency,charge,charges,22,Prints atomic partial charges on standard output after calculating them,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/307
https://github.com/openbabel/openbabel/pull/308:28,Testability,test,test,28,This is a fix for #305. The test file provided by the OP is included as a regression.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/308
https://github.com/openbabel/openbabel/pull/309:6,Deployability,update,updates,6,These updates add information or fix formatting in the HTML version.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/309
https://github.com/openbabel/openbabel/issues/310:26,Deployability,install,installation,26,"Just noticed that a local installation using -DCMAKE_INSTALL_PREFIX no longer works. It fails as it attempts to copy the data files to /usr/local/share etc, and the man pages to a similar folder. ...and more, the Python bindings install correctly but the runtime path is pointing to the wrong location, /usr/local/lib:; -- Installing: /home/noel/Tools/openbabel/tree/lib/python2.7/site-packages/_openbabel.so; -- Set runtime path of ""/home/noel/Tools/openbabel/tree/lib/python2.7/site-packages/_openbabel.so"" to ""/usr/local/lib""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/310
https://github.com/openbabel/openbabel/issues/310:229,Deployability,install,install,229,"Just noticed that a local installation using -DCMAKE_INSTALL_PREFIX no longer works. It fails as it attempts to copy the data files to /usr/local/share etc, and the man pages to a similar folder. ...and more, the Python bindings install correctly but the runtime path is pointing to the wrong location, /usr/local/lib:; -- Installing: /home/noel/Tools/openbabel/tree/lib/python2.7/site-packages/_openbabel.so; -- Set runtime path of ""/home/noel/Tools/openbabel/tree/lib/python2.7/site-packages/_openbabel.so"" to ""/usr/local/lib""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/310
https://github.com/openbabel/openbabel/issues/310:323,Deployability,Install,Installing,323,"Just noticed that a local installation using -DCMAKE_INSTALL_PREFIX no longer works. It fails as it attempts to copy the data files to /usr/local/share etc, and the man pages to a similar folder. ...and more, the Python bindings install correctly but the runtime path is pointing to the wrong location, /usr/local/lib:; -- Installing: /home/noel/Tools/openbabel/tree/lib/python2.7/site-packages/_openbabel.so; -- Set runtime path of ""/home/noel/Tools/openbabel/tree/lib/python2.7/site-packages/_openbabel.so"" to ""/usr/local/lib""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/310
https://github.com/openbabel/openbabel/pull/312:281,Deployability,release,release,281,"For ""babel -H"", the warning is added near the top of the help text; For ""babel"" just on its own, the warning is added at the end of the short usage information.; For other uses, no warning is given. The text is:. <pre>; WARNING: babel is deprecated and will be removed in a future release; of Open Babel. You should use obabel instead. For information; on the differences please see:; http://openbabel.org/docs/current/Command-line_tools; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/312
https://github.com/openbabel/openbabel/pull/316:114,Integrability,interface,interface,114,1. Support x64; 2. Fix CSharp compile problems due to changes in the language; 3. Correct comment symbols in SWIG interface file; 4. Include required build files in the source tree (were moved out to msvc-dependencies); 5. Change build system to create OBDotNet.dll with the rest of the binaries rather than in the source tree,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/316
https://github.com/openbabel/openbabel/pull/316:205,Integrability,depend,dependencies,205,1. Support x64; 2. Fix CSharp compile problems due to changes in the language; 3. Correct comment symbols in SWIG interface file; 4. Include required build files in the source tree (were moved out to msvc-dependencies); 5. Change build system to create OBDotNet.dll with the rest of the binaries rather than in the source tree,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/316
https://github.com/openbabel/openbabel/pull/317:86,Availability,error,error,86,"Swig uses C style comments. Earlier I was using ""#"" sometimes which now causes a Swig error. Another dev had changed a few of these to %#. I have changed everything to //.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/317
https://github.com/openbabel/openbabel/pull/321:110,Energy Efficiency,energy,energy,110,"The WeightedRotorSearch method of the OBForceField class returned wrong; index to the conformer of the lowest energy. Although the method worked; correctly, it returned incorrect result. I think this must be somehow; related to a change in indexing conformers which did not propagate fully; to dependent classes. The change is minimal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/321
https://github.com/openbabel/openbabel/pull/321:294,Integrability,depend,dependent,294,"The WeightedRotorSearch method of the OBForceField class returned wrong; index to the conformer of the lowest energy. Although the method worked; correctly, it returned incorrect result. I think this must be somehow; related to a change in indexing conformers which did not propagate fully; to dependent classes. The change is minimal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/321
https://github.com/openbabel/openbabel/issues/325:55,Performance,load,loaded,55,"In Python 2.7 there is a bug when unicode_leterals are loaded. ```; from __future__ import unicode_leterals; import pybel; m = pybel.readstring('smi', 'c1ccccc1'); ```. ```; TypeError Traceback (most recent call last); <ipython-input-3-c6b6881f6c6d> in <module>(); ----> 1 m = pybel.readstring('smi', 'c1ccccc1'). /home/maciek/miniconda/lib/python2.7/site-packages/pybel.pyc in readstring(format, string, opt); 195 obconversion = ob.OBConversion(); 196 ; --> 197 formatok = obconversion.SetInFormat(format); 198 if not formatok:; 199 raise ValueError(""%s is not a recognised Open Babel format"" % format). TypeError: in method 'OBConversion_SetInFormat', argument 2 of type 'char const *'; ```. Posible [solution](http://swig-user.narkive.com/pTuPgRC9/typemap-of-python-unicode-to-c-std-string-in-utf-8-encoding) (?):",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/325
https://github.com/openbabel/openbabel/pull/329:410,Deployability,release,release,410,"Numbered R groups (e.g. R1, R2) are currently handled like other atom aliases without special handling. However, to be interpreted as true R groups they need to be stored in an M RGP section. This code allows these sections to be read and written. Note to self: I should document how to set these through the API. (I intend to write a test case or two for this code, so maybe don't merge until then unless the release is imminent)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329
https://github.com/openbabel/openbabel/pull/329:335,Testability,test,test,335,"Numbered R groups (e.g. R1, R2) are currently handled like other atom aliases without special handling. However, to be interpreted as true R groups they need to be stored in an M RGP section. This code allows these sections to be read and written. Note to self: I should document how to set these through the API. (I intend to write a test case or two for this code, so maybe don't merge until then unless the release is imminent)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329
https://github.com/openbabel/openbabel/pull/330:20,Energy Efficiency,charge,charges,20,Problem reading the charges from the CDX file (e.g. M CHG 2 432513 832767 instead of M CHG 2 4 1 8 -1; value of 32767 instead of -1).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/330
