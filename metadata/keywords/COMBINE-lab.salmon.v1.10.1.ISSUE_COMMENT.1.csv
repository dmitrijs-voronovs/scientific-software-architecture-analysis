id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305539421:891,Availability,ERROR,ERROR,891,"Thanks for the responses. Here's the records for the first read in my bam:; ```; NB501285:81:HVJFGBGX2:1:11101:7287:1044 105 uc008cdk.2|C4b 2845 1 36M = 2845 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 149 uc008cdk.2|C4b 2845 0 * = 2845 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 361 uc008cdl.2|C4b 2845 1 36M = 2845 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 405 uc008cdl.2|C4b 2845 0 * = 2845 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 361 uc008cdp.1|C4a 2814 1 36M = 2814 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 405 uc008cdp.1|C4a 2814 0 * = 2814 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; ```; Picard crashes on the fourth record with error: ; ```; ERROR: Record 4, Read name NB501285:81:HVJFGBGX2:1:11101:7287:1044, Not primary alignment flag should not be set for unmapped read.; ```; It looks like the issue is that Salmon is setting bit 4 (read unmapped) for the mates and is setting bit 256 (not primary alignment) for the secondary alignments. Both bits 4 and 256 are set for the mate of a secondary alignment which picard doesn't like.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305539421
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570:999,Availability,error,error,999,"> Hi Brian,; > ; > In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes).; > ; > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed.; > ; > Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads).; > ; > --Rob. It is in the latest Salmon release?. Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570:1348,Deployability,release,release,1348,"> Hi Brian,; > ; > In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes).; > ; > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed.; > ; > Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads).; > ; > --Rob. It is in the latest Salmon release?. Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570:665,Modifiability,extend,extended,665,"> Hi Brian,; > ; > In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes).; > ; > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed.; > ; > Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads).; > ; > --Rob. It is in the latest Salmon release?. Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570:1032,Security,validat,validation,1032,"> Hi Brian,; > ; > In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes).; > ; > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed.; > ; > Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads).; > ; > --Rob. It is in the latest Salmon release?. Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570:339,Testability,test,tests,339,"> Hi Brian,; > ; > In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes).; > ; > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed.; > ; > Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads).; > ; > --Rob. It is in the latest Salmon release?. Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-499500637:29,Availability,avail,available,29,"I'm curious if there is code available to remove the duplicates based on UMI tags for RNA. I'm aware of Alevin, but I don't think this suits my purpose. Regards,; Steven",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-499500637
https://github.com/COMBINE-lab/salmon/issues/137#issuecomment-406356935:26,Safety,detect,detected,26,I usually get IU for auto-detected library type for TCGA samples.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/137#issuecomment-406356935
https://github.com/COMBINE-lab/salmon/issues/137#issuecomment-406366598:306,Safety,detect,detection,306,"Yup, and the fact that this ended up as `MU` is strange, since the library type frequencies clearly suggest `IU` (since `ISF` and `ISR` counts seem to dominate). Could it be the result of having the FASTQ files generated by converting from BAM which some sort of bias in the beginning reads? The automatic detection uses the first 10,000 reads to decide --- if these are mapped in a biased way, that could be the cause.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/137#issuecomment-406366598
https://github.com/COMBINE-lab/salmon/issues/137#issuecomment-406366598:92,Usability,clear,clearly,92,"Yup, and the fact that this ended up as `MU` is strange, since the library type frequencies clearly suggest `IU` (since `ISF` and `ISR` counts seem to dominate). Could it be the result of having the FASTQ files generated by converting from BAM which some sort of bias in the beginning reads? The automatic detection uses the first 10,000 reads to decide --- if these are mapped in a biased way, that could be the cause.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/137#issuecomment-406366598
https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585340775:119,Deployability,update,updates,119,Rob mentioned to us at some point that this was possibly on the roadmap. It would really be a very useful feature. Any updates on this?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585340775
https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585812231:262,Safety,detect,detection,262,"Hi @uniqueg,. Yes, it would. However, it's worth noting that `--skipQuant` does not usually shave that much time off of the run. Specifically, it only eliminates the quantification step, but not the alignment of all of the reads. On the other hand, library type detection chooses a library type after the first ~10,000 mapped reads. If you would like to use this flag for library type detection, I'd recommend something like the following. Feed your input to salmon using the `--skipQuant` option, but only fix it a small prefix of the read set (maybe the first 100,000 reads or so). This way, it will run quickly, not attempt to do quantification, and still provide you with an inferred library type. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585812231
https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585812231:385,Safety,detect,detection,385,"Hi @uniqueg,. Yes, it would. However, it's worth noting that `--skipQuant` does not usually shave that much time off of the run. Specifically, it only eliminates the quantification step, but not the alignment of all of the reads. On the other hand, library type detection chooses a library type after the first ~10,000 mapped reads. If you would like to use this flag for library type detection, I'd recommend something like the following. Feed your input to salmon using the `--skipQuant` option, but only fix it a small prefix of the read set (maybe the first 100,000 reads or so). This way, it will run quickly, not attempt to do quantification, and still provide you with an inferred library type. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585812231
https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585837124:269,Testability,test,tests,269,"Hi @rob-p, thanks a lot for the detailed info - sounds great. I tried pretty much exactly what you proposed with 10k reads yesterday, and it only took a couple of seconds, so 100k seems like a great compromise to do this as fast and accurate as possible. We'll do some tests for this with different library types in the next couple of weeks (it's not super urgent for us) and we'll get back at you. Perhaps it's a use case of Salmon you would like to document for others as well... :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/138#issuecomment-585837124
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473:92,Availability,error,error,92,I have the same issue. But doing 'cmake -DFETCH_BOOST=TRUE ..' or 'cmake ..' gives the same error message 'does not appear to contain CMakeLists.txt'. I downloaded version 'salmon-0.12.0_linux_x86_64'.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473:153,Availability,down,downloaded,153,I have the same issue. But doing 'cmake -DFETCH_BOOST=TRUE ..' or 'cmake ..' gives the same error message 'does not appear to contain CMakeLists.txt'. I downloaded version 'salmon-0.12.0_linux_x86_64'.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473:98,Integrability,message,message,98,I have the same issue. But doing 'cmake -DFETCH_BOOST=TRUE ..' or 'cmake ..' gives the same error message 'does not appear to contain CMakeLists.txt'. I downloaded version 'salmon-0.12.0_linux_x86_64'.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449035144:183,Modifiability,variab,variables,183,"Hi @RoebideBruijn,. If you've already run `cmake ..`, you must `rm CMakeCache.txt` and `rm -fr CMakeFiles` before running `cmake -DFETCH_BOOST=TRUE`. This is because CMake will cache variables between runs, and it won't properly interpret the flag to fetch boost. Also, can you show the entire sequence of steps you're executing to build? It looks like the camke file can't be found. Are you running cmake from within a build directory, or are you running it from the top-level directory?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449035144
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449035144:177,Performance,cache,cache,177,"Hi @RoebideBruijn,. If you've already run `cmake ..`, you must `rm CMakeCache.txt` and `rm -fr CMakeFiles` before running `cmake -DFETCH_BOOST=TRUE`. This is because CMake will cache variables between runs, and it won't properly interpret the flag to fetch boost. Also, can you show the entire sequence of steps you're executing to build? It looks like the camke file can't be found. Are you running cmake from within a build directory, or are you running it from the top-level directory?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449035144
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012:112,Availability,down,downloaded,112,"Hi Rob,. I'm running from the empty directory 'build'. The cmake file and folder you mention are not there. . I downloaded here https://github.com/COMBINE-lab/salmon/releases: salmon-0.12.0_linux_x86_64.tar.gz. Unpacked it. Went into directory 'salmon-0.12.0_linux_x86_6'. Created new dir build/ (same level as bin and lib). Installed cmake with sudo apt-get. Attempted to run cmake from build/. . If I just type 'cmake':; Usage. cmake [options] <path-to-source>; cmake [options] <path-to-existing-build>. Specify a source directory to (re-)generate a build system for it in the; current working directory. Specify an existing build directory to; re-generate its build system. Run 'cmake --help' for more information. So it looks installed I would think.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012:166,Deployability,release,releases,166,"Hi Rob,. I'm running from the empty directory 'build'. The cmake file and folder you mention are not there. . I downloaded here https://github.com/COMBINE-lab/salmon/releases: salmon-0.12.0_linux_x86_64.tar.gz. Unpacked it. Went into directory 'salmon-0.12.0_linux_x86_6'. Created new dir build/ (same level as bin and lib). Installed cmake with sudo apt-get. Attempted to run cmake from build/. . If I just type 'cmake':; Usage. cmake [options] <path-to-source>; cmake [options] <path-to-existing-build>. Specify a source directory to (re-)generate a build system for it in the; current working directory. Specify an existing build directory to; re-generate its build system. Run 'cmake --help' for more information. So it looks installed I would think.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012:325,Deployability,Install,Installed,325,"Hi Rob,. I'm running from the empty directory 'build'. The cmake file and folder you mention are not there. . I downloaded here https://github.com/COMBINE-lab/salmon/releases: salmon-0.12.0_linux_x86_64.tar.gz. Unpacked it. Went into directory 'salmon-0.12.0_linux_x86_6'. Created new dir build/ (same level as bin and lib). Installed cmake with sudo apt-get. Attempted to run cmake from build/. . If I just type 'cmake':; Usage. cmake [options] <path-to-source>; cmake [options] <path-to-existing-build>. Specify a source directory to (re-)generate a build system for it in the; current working directory. Specify an existing build directory to; re-generate its build system. Run 'cmake --help' for more information. So it looks installed I would think.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012:730,Deployability,install,installed,730,"Hi Rob,. I'm running from the empty directory 'build'. The cmake file and folder you mention are not there. . I downloaded here https://github.com/COMBINE-lab/salmon/releases: salmon-0.12.0_linux_x86_64.tar.gz. Unpacked it. Went into directory 'salmon-0.12.0_linux_x86_6'. Created new dir build/ (same level as bin and lib). Installed cmake with sudo apt-get. Attempted to run cmake from build/. . If I just type 'cmake':; Usage. cmake [options] <path-to-source>; cmake [options] <path-to-existing-build>. Specify a source directory to (re-)generate a build system for it in the; current working directory. Specify an existing build directory to; re-generate its build system. Run 'cmake --help' for more information. So it looks installed I would think.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449067149:151,Availability,error,error,151,"Hi @RoebideBruijn , ; if the build directory is empty and inside the salmon folder, can you check if the run ; `cmake -DFETCH_BOOST=TRUE ..` gives you error or not. . NB: make sure `..` is at the end",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449067149
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449688983:29,Availability,Error,Error,29,"@hiraksarkar: it says 'CMake Error: The source directory ""<>/salmon-0.12.0_linux_x86_64"" does not appear to contain CMakeLists.txt. Specify --help for usage, or press the help button on the CMake GUI.'",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449688983
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276:43,Availability,down,downloaded,43,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276:150,Availability,down,download,150,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276:94,Deployability,release,release,94,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276:141,Deployability,release,releases,141,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278:43,Availability,down,downloaded,43,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278:150,Availability,down,download,150,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278:94,Deployability,release,release,94,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278
https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278:141,Deployability,release,releases,141,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718278
https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313545771:478,Availability,error,error,478,"Hi @bioinfo17 ,; If I understand it right you did the following, correct me I am wrong:; (1) Made one reference file. concat(`Genome.fa`,`txptome.fa`); (2) You map reads set say `R` to the above reference and extracted a subset of reads `R1`(both-pair mapped) and `R2` (single-end mapped).; (3)You mapped again `R1`,`R2` to txptome.fa using HISAT and generated bam to filter-out mapping of the reads only mapped to transcriptome? (I am not sure about this part). Either way the error seems to be arising from non-matching flags of the read-pair entries in the `bam` file. Can you try **not** including your `singleton` set in the last-step of filtering, just to confirm if the set `R2` is really the problem?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313545771
https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915:341,Availability,error,error,341,"Hi k3yavi, yes you are correct regarding 1,2 & 3. Howver, at step 2, I generated mapped files as two separate files, *.R1.paired.fastq, *.R2.paired.fastq and individual *.singletons.fastq file. Used Hisat2 using -1, -2 and -U parameters with the respective files and generated bam files - used these files in Salmon then and encountered the error.; I can run Hisat2 again without the -U option and see if Salmon works!!. In a separate run, I used transcriptome.fasta file in the 1st step and generated bam file using Hisat2. Then used bam file in Salmon using transcriptome.fasta in the -t flag. Error below:. WARNING: Detected suspicious pair --- ; 	The names are different:; 	read1 : HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937; 	read2 : HWI-7001326F:36:C7J2GANXX:4:2204:6152:63667; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : no proper-pair; mapped; matenot mapped. [2017-07-07 10:53:31.160] [jointLog] [warning] . Does the bam files need to be sorted before using Salmon? Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915
https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915:596,Availability,Error,Error,596,"Hi k3yavi, yes you are correct regarding 1,2 & 3. Howver, at step 2, I generated mapped files as two separate files, *.R1.paired.fastq, *.R2.paired.fastq and individual *.singletons.fastq file. Used Hisat2 using -1, -2 and -U parameters with the respective files and generated bam files - used these files in Salmon then and encountered the error.; I can run Hisat2 again without the -U option and see if Salmon works!!. In a separate run, I used transcriptome.fasta file in the 1st step and generated bam file using Hisat2. Then used bam file in Salmon using transcriptome.fasta in the -t flag. Error below:. WARNING: Detected suspicious pair --- ; 	The names are different:; 	read1 : HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937; 	read2 : HWI-7001326F:36:C7J2GANXX:4:2204:6152:63667; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : no proper-pair; mapped; matenot mapped. [2017-07-07 10:53:31.160] [jointLog] [warning] . Does the bam files need to be sorted before using Salmon? Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915
https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915:619,Safety,Detect,Detected,619,"Hi k3yavi, yes you are correct regarding 1,2 & 3. Howver, at step 2, I generated mapped files as two separate files, *.R1.paired.fastq, *.R2.paired.fastq and individual *.singletons.fastq file. Used Hisat2 using -1, -2 and -U parameters with the respective files and generated bam files - used these files in Salmon then and encountered the error.; I can run Hisat2 again without the -U option and see if Salmon works!!. In a separate run, I used transcriptome.fasta file in the 1st step and generated bam file using Hisat2. Then used bam file in Salmon using transcriptome.fasta in the -t flag. Error below:. WARNING: Detected suspicious pair --- ; 	The names are different:; 	read1 : HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937; 	read2 : HWI-7001326F:36:C7J2GANXX:4:2204:6152:63667; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : no proper-pair; mapped; matenot mapped. [2017-07-07 10:53:31.160] [jointLog] [warning] . Does the bam files need to be sorted before using Salmon? Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915
https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-452081412:62,Availability,error,error,62,"Hi @bioinfo17, can you please elaborate? I am seeing the same error using STAR-aligned BAMs (to transcriptome) sorted with samtools 1.9 (default arguments, which the docs say means they are sorted as follows: 'Sort alignments by leftmost coordinates'). I am going to try sorting the bams by name (samtools argument -n) and re-trying salmon",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-452081412
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314423408:26,Deployability,install,install,26,You can try `sudo apt-get install zlib1g-dev`.; If you don't have root privilege then you might have to provide the path to the library file of the zlib.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314423408
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314430634:100,Availability,error,error,100,ld is just the GNU linker.; I still think it's not able to find the zlib **library** file since the error at `-lz` where `-l` gives the namespace of the library.; If you are confident about the inclusion of the `Zlib` then can you try clearing the cmake cache (i.e. remove the file CMakeCache.txt) and build again?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314430634
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314430634:254,Performance,cache,cache,254,ld is just the GNU linker.; I still think it's not able to find the zlib **library** file since the error at `-lz` where `-l` gives the namespace of the library.; If you are confident about the inclusion of the `Zlib` then can you try clearing the cmake cache (i.e. remove the file CMakeCache.txt) and build again?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314430634
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314430634:235,Usability,clear,clearing,235,ld is just the GNU linker.; I still think it's not able to find the zlib **library** file since the error at `-lz` where `-l` gives the namespace of the library.; If you are confident about the inclusion of the `Zlib` then can you try clearing the cmake cache (i.e. remove the file CMakeCache.txt) and build again?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314430634
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:1205,Availability,down,download,1205,"the item.**; **WARNING: Target ""unitTests"" requests linking to directory ""/users/work/jake/bin/zlib-1.2.11/"". Targets may link only to libraries. CMake is dropping the item.**. So I actually went back a step and check my initial cmake command in the ../salmon-0.8.2/build/ directory. It also had the same issue and therefore wasn't building correctly. I started the install again from ../salmon-0.8.2/build/ using the following: . cmake -DBOOST_ROOT=/users/work/jake/bin/boost_1_64_0/ -DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h .. . It seemed to work nicely and I got all the build files to propagate into the ../salmon-0.8.2/build/ directory. From here I ran 'make' which did a whole bunch of things I hadn't seen it do yet, so assumably it was working as intended. This is until it got to the following stage:. Scanning dependencies of target libbwa; [ 48%] Creating directories for 'libbwa'; [ 49%] Performing download step for 'libbwa'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 0 125 0 0 167 0 --:--:-- --:--:-- --:--:-- 167; 0 0 0 219k 0 0 123k 0 --:--:-- 0:00:01 --:--:-- 326k; bwa-master.tar.gz: OK; bwa-0.7.12.3/.gitignore; bwa-0.7.12.3/.travis.yml; bwa-0.7.12.3/COPYING; bwa-0.7.12.3/ChangeLog; bwa-0.7.12.3/Makefile; bwa-0.7.12.3/NEWS.md; bwa-0.7.12.3/QSufSort.c; bwa-0.7.12.3/QSufSort.h; bwa-0.7.12.3/README-alt.md; bwa-0.7.12.3/README.md; bwa-0.7.12.3/bamlite.c; bwa-0.7.12.3/bamlite.h; bwa-0.7.12.3/bntseq.c; bwa-0.7.12.3/bntseq.h; bwa-0.7.12.3/bwa.1; bwa-0.7.12.3/bwa.c; bwa-0.7.12.3/bwa.h; bwa-0.7.12.3/bwakit/; bwa-0.7.12.3/bwakit/README.md; bwa-0.7.12.3/bwakit/bwa-postalt.js; bwa-0.7.12.3/bwakit/run-HLA; bwa-0.7.12.3/bwakit/run-bwamem; bwa-0.7.12.3/bwakit/run-gen-ref; bwa-0.7.12.3/bwakit/typeHLA-selctg.js; bwa-0.7.12.3/bwakit/typeHLA.js; bwa-0.7.12.3/bwakit/typeHLA.sh; bwa-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3481,Availability,error,error,3481,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3534,Availability,Error,Error,3534,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3602,Availability,Error,Error,3602,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3652,Availability,Error,Error,3652,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3677,Availability,Error,Error,3677,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:646,Deployability,install,install,646,"Okay, so I've made some progress. After deleting the Cache.txt file I tried to build again at which point I noticed the following:; **WARNING: Target ""salmon"" requests linking to directory ""/users/work/jake/bin/zlib-1.2.11/"". Targets may link only to libraries. CMake is dropping the item.**; **WARNING: Target ""unitTests"" requests linking to directory ""/users/work/jake/bin/zlib-1.2.11/"". Targets may link only to libraries. CMake is dropping the item.**. So I actually went back a step and check my initial cmake command in the ../salmon-0.8.2/build/ directory. It also had the same issue and therefore wasn't building correctly. I started the install again from ../salmon-0.8.2/build/ using the following: . cmake -DBOOST_ROOT=/users/work/jake/bin/boost_1_64_0/ -DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h .. . It seemed to work nicely and I got all the build files to propagate into the ../salmon-0.8.2/build/ directory. From here I ran 'make' which did a whole bunch of things I hadn't seen it do yet, so assumably it was working as intended. This is until it got to the following stage:. Scanning dependencies of target libbwa; [ 48%] Creating directories for 'libbwa'; [ 49%] Performing download step for 'libbwa'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 0 125 0 0 167 0 --:--:-- --:--:-- --:--:-- 167; 0 0 0 219k 0 0 123k 0 --:--:-- 0:00:01 --:--:-- 326k; bwa-master.tar.gz: OK; bwa-0.7.12.3/.gitignore; bwa-0.7.12.3/.travis.yml; bwa-0.7.12.3/COPYING; bwa-0.7.12.3/ChangeLog; bwa-0.7.12.3/Makefile; bwa-0.7.12.3/NEWS.md; bwa-0.7.12.3/QSufSort.c; bwa-0.7.12.3/QSufSort.h; bwa-0.7.12.3/README-alt.md; bwa-0.7.12.3/README.md; bwa-0.7.12.3/bamlite.c; bwa-0.7.12.3/bamlite.h; bwa-0.7.12.3/bntseq.c; bwa-0.7.12.3/bntseq.h; bwa-0.7.12.3/bwa.1; bwa-0.7.12.3/bwa.c; bwa-0.7.12.3/bwa.h; bwa-0.7.12.3/bwakit/; bwa-0.7.12.3/bwakit/README.md; bwa-0.7.12.3/bwakit/bwa-postalt.js; bwa-0.7.12.3/bwakit/run-HLA; bwa-0.7.12.3/bwak",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3302,Deployability,patch,patch,3302,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3337,Deployability,update,update,3337,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:1114,Integrability,depend,dependencies,1114,"the item.**; **WARNING: Target ""unitTests"" requests linking to directory ""/users/work/jake/bin/zlib-1.2.11/"". Targets may link only to libraries. CMake is dropping the item.**. So I actually went back a step and check my initial cmake command in the ../salmon-0.8.2/build/ directory. It also had the same issue and therefore wasn't building correctly. I started the install again from ../salmon-0.8.2/build/ using the following: . cmake -DBOOST_ROOT=/users/work/jake/bin/boost_1_64_0/ -DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h .. . It seemed to work nicely and I got all the build files to propagate into the ../salmon-0.8.2/build/ directory. From here I ran 'make' which did a whole bunch of things I hadn't seen it do yet, so assumably it was working as intended. This is until it got to the following stage:. Scanning dependencies of target libbwa; [ 48%] Creating directories for 'libbwa'; [ 49%] Performing download step for 'libbwa'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 0 125 0 0 167 0 --:--:-- --:--:-- --:--:-- 167; 0 0 0 219k 0 0 123k 0 --:--:-- 0:00:01 --:--:-- 326k; bwa-master.tar.gz: OK; bwa-0.7.12.3/.gitignore; bwa-0.7.12.3/.travis.yml; bwa-0.7.12.3/COPYING; bwa-0.7.12.3/ChangeLog; bwa-0.7.12.3/Makefile; bwa-0.7.12.3/NEWS.md; bwa-0.7.12.3/QSufSort.c; bwa-0.7.12.3/QSufSort.h; bwa-0.7.12.3/README-alt.md; bwa-0.7.12.3/README.md; bwa-0.7.12.3/bamlite.c; bwa-0.7.12.3/bamlite.h; bwa-0.7.12.3/bntseq.c; bwa-0.7.12.3/bntseq.h; bwa-0.7.12.3/bwa.1; bwa-0.7.12.3/bwa.c; bwa-0.7.12.3/bwa.h; bwa-0.7.12.3/bwakit/; bwa-0.7.12.3/bwakit/README.md; bwa-0.7.12.3/bwakit/bwa-postalt.js; bwa-0.7.12.3/bwakit/run-HLA; bwa-0.7.12.3/bwakit/run-bwamem; bwa-0.7.12.3/bwakit/run-gen-ref; bwa-0.7.12.3/bwakit/typeHLA-selctg.js; bwa-0.7.12.3/bwakit/typeHLA.js; bwa-0.7.12.3/bwakit/typeHLA.sh; bwa-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3373,Modifiability,config,configure,3373,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:53,Performance,Cache,Cache,53,"Okay, so I've made some progress. After deleting the Cache.txt file I tried to build again at which point I noticed the following:; **WARNING: Target ""salmon"" requests linking to directory ""/users/work/jake/bin/zlib-1.2.11/"". Targets may link only to libraries. CMake is dropping the item.**; **WARNING: Target ""unitTests"" requests linking to directory ""/users/work/jake/bin/zlib-1.2.11/"". Targets may link only to libraries. CMake is dropping the item.**. So I actually went back a step and check my initial cmake command in the ../salmon-0.8.2/build/ directory. It also had the same issue and therefore wasn't building correctly. I started the install again from ../salmon-0.8.2/build/ using the following: . cmake -DBOOST_ROOT=/users/work/jake/bin/boost_1_64_0/ -DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h .. . It seemed to work nicely and I got all the build files to propagate into the ../salmon-0.8.2/build/ directory. From here I ran 'make' which did a whole bunch of things I hadn't seen it do yet, so assumably it was working as intended. This is until it got to the following stage:. Scanning dependencies of target libbwa; [ 48%] Creating directories for 'libbwa'; [ 49%] Performing download step for 'libbwa'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 0 125 0 0 167 0 --:--:-- --:--:-- --:--:-- 167; 0 0 0 219k 0 0 123k 0 --:--:-- 0:00:01 --:--:-- 326k; bwa-master.tar.gz: OK; bwa-0.7.12.3/.gitignore; bwa-0.7.12.3/.travis.yml; bwa-0.7.12.3/COPYING; bwa-0.7.12.3/ChangeLog; bwa-0.7.12.3/Makefile; bwa-0.7.12.3/NEWS.md; bwa-0.7.12.3/QSufSort.c; bwa-0.7.12.3/QSufSort.h; bwa-0.7.12.3/README-alt.md; bwa-0.7.12.3/README.md; bwa-0.7.12.3/bamlite.c; bwa-0.7.12.3/bamlite.h; bwa-0.7.12.3/bntseq.c; bwa-0.7.12.3/bntseq.h; bwa-0.7.12.3/bwa.1; bwa-0.7.12.3/bwa.c; bwa-0.7.12.3/bwa.h; bwa-0.7.12.3/bwakit/; bwa-0.7.12.3/bwakit/README.md; bwa-0.7.12.3/bwakit/bwa-postalt.js; bwa-0.7.12.3/bwakit/run-HLA; bwa-0.7.12.3/bwak",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:1194,Performance,Perform,Performing,1194,"the item.**; **WARNING: Target ""unitTests"" requests linking to directory ""/users/work/jake/bin/zlib-1.2.11/"". Targets may link only to libraries. CMake is dropping the item.**. So I actually went back a step and check my initial cmake command in the ../salmon-0.8.2/build/ directory. It also had the same issue and therefore wasn't building correctly. I started the install again from ../salmon-0.8.2/build/ using the following: . cmake -DBOOST_ROOT=/users/work/jake/bin/boost_1_64_0/ -DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h .. . It seemed to work nicely and I got all the build files to propagate into the ../salmon-0.8.2/build/ directory. From here I ran 'make' which did a whole bunch of things I hadn't seen it do yet, so assumably it was working as intended. This is until it got to the following stage:. Scanning dependencies of target libbwa; [ 48%] Creating directories for 'libbwa'; [ 49%] Performing download step for 'libbwa'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 0 125 0 0 167 0 --:--:-- --:--:-- --:--:-- 167; 0 0 0 219k 0 0 123k 0 --:--:-- 0:00:01 --:--:-- 326k; bwa-master.tar.gz: OK; bwa-0.7.12.3/.gitignore; bwa-0.7.12.3/.travis.yml; bwa-0.7.12.3/COPYING; bwa-0.7.12.3/ChangeLog; bwa-0.7.12.3/Makefile; bwa-0.7.12.3/NEWS.md; bwa-0.7.12.3/QSufSort.c; bwa-0.7.12.3/QSufSort.h; bwa-0.7.12.3/README-alt.md; bwa-0.7.12.3/README.md; bwa-0.7.12.3/bamlite.c; bwa-0.7.12.3/bamlite.h; bwa-0.7.12.3/bntseq.c; bwa-0.7.12.3/bntseq.h; bwa-0.7.12.3/bwa.1; bwa-0.7.12.3/bwa.c; bwa-0.7.12.3/bwa.h; bwa-0.7.12.3/bwakit/; bwa-0.7.12.3/bwakit/README.md; bwa-0.7.12.3/bwakit/bwa-postalt.js; bwa-0.7.12.3/bwakit/run-HLA; bwa-0.7.12.3/bwakit/run-bwamem; bwa-0.7.12.3/bwakit/run-gen-ref; bwa-0.7.12.3/bwakit/typeHLA-selctg.js; bwa-0.7.12.3/bwakit/typeHLA.js; bwa-0.7.12.3/bwakit/typeHLA.sh; bwa-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3409,Performance,Perform,Performing,3409,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:4138,Usability,learn,learning,4138,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314454908:140,Deployability,install,installing,140,"Even I am not sure how to add the flags in the make command explicitly.; But, I'd suggest you can try couple of things:; Like I said before installing zlib to apt-get/brew would be the easiest.; If not can you try `-DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/` i.e. remove `zlib.h`.; As you can see I am learning on the go too 😜",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314454908
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314454908:308,Usability,learn,learning,308,"Even I am not sure how to add the flags in the make command explicitly.; But, I'd suggest you can try couple of things:; Like I said before installing zlib to apt-get/brew would be the easiest.; If not can you try `-DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/` i.e. remove `zlib.h`.; As you can see I am learning on the go too 😜",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314454908
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314459160:46,Deployability,install,install,46,Unfortunately I can't use apt-get/brew/yum to install zlib since I'm not root on my cluster. This is why I installed zlib-1.2.11 separately. . Make doesn't seem to allow the same commands as cmake so `-DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/` or any variation of it isn't accepted. I guess I'll keep plugging away to see if I can resolve the issue. There isn't any build files that I could modify to include the directory path to zlib?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314459160
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314459160:107,Deployability,install,installed,107,Unfortunately I can't use apt-get/brew/yum to install zlib since I'm not root on my cluster. This is why I installed zlib-1.2.11 separately. . Make doesn't seem to allow the same commands as cmake so `-DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/` or any variation of it isn't accepted. I guess I'll keep plugging away to see if I can resolve the issue. There isn't any build files that I could modify to include the directory path to zlib?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314459160
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314460816:229,Security,access,access,229,Actually I meant the following command:; `cmake -DBOOST_ROOT=/users/work/jake/bin/boost_1_64_0/ -DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/`.; Also you can try [linuxbrew](http://linuxbrew.sh/) for which you don't need root access.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314460816
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472:198,Deployability,install,install,198,"So after struggling, and failing for a little bit I looked into linuxbrew - its pretty much the best thing ever. I'm honestly not sure what my original issue was derived from but using linuxbrew to install the dependancies and then salmon itself worked perfectly. Honestly much easier to install it this way. . Salmon seems to be working now so I'd say my install issues are resolved. Thanks for your help, and an extra thanks for introducing me to linuxbrew, its going to make my work a lot easier.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472:288,Deployability,install,install,288,"So after struggling, and failing for a little bit I looked into linuxbrew - its pretty much the best thing ever. I'm honestly not sure what my original issue was derived from but using linuxbrew to install the dependancies and then salmon itself worked perfectly. Honestly much easier to install it this way. . Salmon seems to be working now so I'd say my install issues are resolved. Thanks for your help, and an extra thanks for introducing me to linuxbrew, its going to make my work a lot easier.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472:356,Deployability,install,install,356,"So after struggling, and failing for a little bit I looked into linuxbrew - its pretty much the best thing ever. I'm honestly not sure what my original issue was derived from but using linuxbrew to install the dependancies and then salmon itself worked perfectly. Honestly much easier to install it this way. . Salmon seems to be working now so I'd say my install issues are resolved. Thanks for your help, and an extra thanks for introducing me to linuxbrew, its going to make my work a lot easier.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472
https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472:210,Integrability,depend,dependancies,210,"So after struggling, and failing for a little bit I looked into linuxbrew - its pretty much the best thing ever. I'm honestly not sure what my original issue was derived from but using linuxbrew to install the dependancies and then salmon itself worked perfectly. Honestly much easier to install it this way. . Salmon seems to be working now so I'd say my install issues are resolved. Thanks for your help, and an extra thanks for introducing me to linuxbrew, its going to make my work a lot easier.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314548472
https://github.com/COMBINE-lab/salmon/issues/142#issuecomment-315820645:18,Deployability,install,installed,18,"Ok, not urgent. I installed 0.8.2 from source with no problem, so I'll just use that for now. I have just come to take homebrew's convenience for granted!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142#issuecomment-315820645
https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319665072:214,Availability,error,error,214,"Hi Roy,. I looks like things are going awry during seq-specific bias correction. Can you remove that option and see if it rubs to completion? If so, it would be great if you can share a sample that reproduces this error so we can fix the underlying issue. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319665072
https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319669636:98,Integrability,protocol,protocol,98,"Is salmon suggesting this is stranded?. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: 142-salmon-quant/lib_format_counts.json for details`. . The libraries are generated using the [smart-seq2](http://www.nature.com/nmeth/journal/v10/n11/full/nmeth.2639.html) protocol which as far I know does not retain strand information. From the article . ""Currently, Smart-seq2 is limited to poly(A)+ RNAs and does not retain strand or molecule information, although it is compatible with partial-molecule counting.""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319669636
https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319669636:296,Integrability,protocol,protocol,296,"Is salmon suggesting this is stranded?. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: 142-salmon-quant/lib_format_counts.json for details`. . The libraries are generated using the [smart-seq2](http://www.nature.com/nmeth/journal/v10/n11/full/nmeth.2639.html) protocol which as far I know does not retain strand information. From the article . ""Currently, Smart-seq2 is limited to poly(A)+ RNAs and does not retain strand or molecule information, although it is compatible with partial-molecule counting.""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319669636
https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319669636:41,Safety,Detect,Detected,41,"Is salmon suggesting this is stranded?. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: 142-salmon-quant/lib_format_counts.json for details`. . The libraries are generated using the [smart-seq2](http://www.nature.com/nmeth/journal/v10/n11/full/nmeth.2639.html) protocol which as far I know does not retain strand information. From the article . ""Currently, Smart-seq2 is limited to poly(A)+ RNAs and does not retain strand or molecule information, although it is compatible with partial-molecule counting.""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319669636
https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319676557:34,Integrability,protocol,protocol,34,This doesn't necessarily mean the protocol is stranded. You can inspect the contents of lib_format_counts.json to see the exact extent of the mapping bias.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319676557
https://github.com/COMBINE-lab/salmon/issues/145#issuecomment-320442364:79,Deployability,release,release,79,"Hi @tobi-te ,. Thanks for the bug report we will try to correct it in our next release.; In the mean time you can make it work by swapping [line](https://github.com/COMBINE-lab/salmon/blob/master/include/BAMQueue.tpp#L540) by `scram_close(fp_);` and compiling it again. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145#issuecomment-320442364
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178:5,Availability,error,error,5,"Same error here, with a fresh (this morning) install of anaconda3-4.40 on Linux64-bit and a first-time install of salmon through bioconda. This may be premature / just plain incorrect, but [this post](https://github.com/ContinuumIO/anaconda-recipes/issues/56) mentioned issues with the default version of readline, so on a hunch I installed readline from conda-forge and then reinstalled salmon. The above errors disappear (still waiting on other errors).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178:406,Availability,error,errors,406,"Same error here, with a fresh (this morning) install of anaconda3-4.40 on Linux64-bit and a first-time install of salmon through bioconda. This may be premature / just plain incorrect, but [this post](https://github.com/ContinuumIO/anaconda-recipes/issues/56) mentioned issues with the default version of readline, so on a hunch I installed readline from conda-forge and then reinstalled salmon. The above errors disappear (still waiting on other errors).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178:447,Availability,error,errors,447,"Same error here, with a fresh (this morning) install of anaconda3-4.40 on Linux64-bit and a first-time install of salmon through bioconda. This may be premature / just plain incorrect, but [this post](https://github.com/ContinuumIO/anaconda-recipes/issues/56) mentioned issues with the default version of readline, so on a hunch I installed readline from conda-forge and then reinstalled salmon. The above errors disappear (still waiting on other errors).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178:45,Deployability,install,install,45,"Same error here, with a fresh (this morning) install of anaconda3-4.40 on Linux64-bit and a first-time install of salmon through bioconda. This may be premature / just plain incorrect, but [this post](https://github.com/ContinuumIO/anaconda-recipes/issues/56) mentioned issues with the default version of readline, so on a hunch I installed readline from conda-forge and then reinstalled salmon. The above errors disappear (still waiting on other errors).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178:103,Deployability,install,install,103,"Same error here, with a fresh (this morning) install of anaconda3-4.40 on Linux64-bit and a first-time install of salmon through bioconda. This may be premature / just plain incorrect, but [this post](https://github.com/ContinuumIO/anaconda-recipes/issues/56) mentioned issues with the default version of readline, so on a hunch I installed readline from conda-forge and then reinstalled salmon. The above errors disappear (still waiting on other errors).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178:331,Deployability,install,installed,331,"Same error here, with a fresh (this morning) install of anaconda3-4.40 on Linux64-bit and a first-time install of salmon through bioconda. This may be premature / just plain incorrect, but [this post](https://github.com/ContinuumIO/anaconda-recipes/issues/56) mentioned issues with the default version of readline, so on a hunch I installed readline from conda-forge and then reinstalled salmon. The above errors disappear (still waiting on other errors).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324679973:126,Integrability,depend,depend,126,"Hi all,. Thanks for reporting this. It's strange (and unfortunate), since managing the shared libraries on which the programs depend correctly is supposed to be a major raison d'etre for Bioconda to begin with. I'll try and take a look to see if there is e.g. another version of the SO that can be used for Salmon to resolve this conflict.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324679973
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-374346707:50,Deployability,install,installed,50,Has anyone found a solution to this issue? I just installed Salmon and used it ( I really liked it by the way). But now my R doesn't work. Should I re-install R with condo? Will this then break Salmon?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-374346707
https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-374346707:151,Deployability,install,install,151,Has anyone found a solution to this issue? I just installed Salmon and used it ( I really liked it by the way). But now my R doesn't work. Should I re-install R with condo? Will this then break Salmon?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-374346707
https://github.com/COMBINE-lab/salmon/issues/148#issuecomment-335953142:59,Deployability,release,release,59,This is resolved in develop and will make it into the next release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/148#issuecomment-335953142
https://github.com/COMBINE-lab/salmon/issues/148#issuecomment-378405708:220,Integrability,message,messages,220,"I've addressed this in a recent [commit](https://github.com/COMBINE-lab/salmon/commit/05859ef8412687be14de5084f3b1e0e688fb3e76). Now, `version`, `help`, `cite` and `swim` will print to stdout, while other normal logging messages will print to stderr. Basically, if it was specifically requested by the user, send it to stdout; otherwise send it to stderr.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/148#issuecomment-378405708
https://github.com/COMBINE-lab/salmon/issues/148#issuecomment-378405708:212,Testability,log,logging,212,"I've addressed this in a recent [commit](https://github.com/COMBINE-lab/salmon/commit/05859ef8412687be14de5084f3b1e0e688fb3e76). Now, `version`, `help`, `cite` and `swim` will print to stdout, while other normal logging messages will print to stderr. Basically, if it was specifically requested by the user, send it to stdout; otherwise send it to stderr.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/148#issuecomment-378405708
https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-325164357:200,Performance,Perform,Perform,200,"I don't mind what you do, but currently it says `cite` is a <COMMAND>, but it isn't?. ```; Commands:; cite Show salmon citation information; index Create a salmon index; quant Quantify a sample; swim Perform super-secret operation; ```. ie. `salmon cite` does *not* `Show salmon citation information` - that's all :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-325164357
https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-325170015:127,Deployability,release,release,127,"Ahh, serves me right for trying to write that help message by hand! I'll remove `cite` from the list of ""commands"" in the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-325170015
https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-325170015:51,Integrability,message,message,51,"Ahh, serves me right for trying to write that help message by hand! I'll remove `cite` from the list of ""commands"" in the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-325170015
https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-335952935:60,Deployability,release,release,60,These are resolved in develop and will be fixed in the next release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/149#issuecomment-335952935
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630:204,Availability,error,error,204,"Hi @kvittingseerup,. Sorry for letting this sit for so long without responding. Currently, Salmon does not support mixed paired-end and single-end library types, so this is presumably what is causing the error (granted, the error message here could be considerably better). Practically, I'd be curious what the difference is between allowing this and simply running Salmon with the _non-quality-trimmed_ paired-end reads. Specifically, if Salmon is not able to map a pair concordantly, but it can map one of the ends of the read, then it will already do so. . However, in the case that there's a really compelling reason to want to quality trim the reads prior to quantification (and to include the reads such that the mate has been completely quality-trimmed away), we would be able to support this. It will require a bit of modification to allow different library types to be processed back to back and to contribute to the same quantification estimates. In this case, I imagine what we would want to do for the orphans is essentially what Salmon would do internally if it can't map the mate. That is, we would learn essentially all of the parameters and biases from the pairs that do map concordantly, and then just include the orphaned reads as indicating an entire fragment but of unknown length. Let me know if you have any thoughts about the above, and sorry again for the delay!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630:224,Availability,error,error,224,"Hi @kvittingseerup,. Sorry for letting this sit for so long without responding. Currently, Salmon does not support mixed paired-end and single-end library types, so this is presumably what is causing the error (granted, the error message here could be considerably better). Practically, I'd be curious what the difference is between allowing this and simply running Salmon with the _non-quality-trimmed_ paired-end reads. Specifically, if Salmon is not able to map a pair concordantly, but it can map one of the ends of the read, then it will already do so. . However, in the case that there's a really compelling reason to want to quality trim the reads prior to quantification (and to include the reads such that the mate has been completely quality-trimmed away), we would be able to support this. It will require a bit of modification to allow different library types to be processed back to back and to contribute to the same quantification estimates. In this case, I imagine what we would want to do for the orphans is essentially what Salmon would do internally if it can't map the mate. That is, we would learn essentially all of the parameters and biases from the pairs that do map concordantly, and then just include the orphaned reads as indicating an entire fragment but of unknown length. Let me know if you have any thoughts about the above, and sorry again for the delay!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630:230,Integrability,message,message,230,"Hi @kvittingseerup,. Sorry for letting this sit for so long without responding. Currently, Salmon does not support mixed paired-end and single-end library types, so this is presumably what is causing the error (granted, the error message here could be considerably better). Practically, I'd be curious what the difference is between allowing this and simply running Salmon with the _non-quality-trimmed_ paired-end reads. Specifically, if Salmon is not able to map a pair concordantly, but it can map one of the ends of the read, then it will already do so. . However, in the case that there's a really compelling reason to want to quality trim the reads prior to quantification (and to include the reads such that the mate has been completely quality-trimmed away), we would be able to support this. It will require a bit of modification to allow different library types to be processed back to back and to contribute to the same quantification estimates. In this case, I imagine what we would want to do for the orphans is essentially what Salmon would do internally if it can't map the mate. That is, we would learn essentially all of the parameters and biases from the pairs that do map concordantly, and then just include the orphaned reads as indicating an entire fragment but of unknown length. Let me know if you have any thoughts about the above, and sorry again for the delay!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630:351,Usability,simpl,simply,351,"Hi @kvittingseerup,. Sorry for letting this sit for so long without responding. Currently, Salmon does not support mixed paired-end and single-end library types, so this is presumably what is causing the error (granted, the error message here could be considerably better). Practically, I'd be curious what the difference is between allowing this and simply running Salmon with the _non-quality-trimmed_ paired-end reads. Specifically, if Salmon is not able to map a pair concordantly, but it can map one of the ends of the read, then it will already do so. . However, in the case that there's a really compelling reason to want to quality trim the reads prior to quantification (and to include the reads such that the mate has been completely quality-trimmed away), we would be able to support this. It will require a bit of modification to allow different library types to be processed back to back and to contribute to the same quantification estimates. In this case, I imagine what we would want to do for the orphans is essentially what Salmon would do internally if it can't map the mate. That is, we would learn essentially all of the parameters and biases from the pairs that do map concordantly, and then just include the orphaned reads as indicating an entire fragment but of unknown length. Let me know if you have any thoughts about the above, and sorry again for the delay!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630:1113,Usability,learn,learn,1113,"Hi @kvittingseerup,. Sorry for letting this sit for so long without responding. Currently, Salmon does not support mixed paired-end and single-end library types, so this is presumably what is causing the error (granted, the error message here could be considerably better). Practically, I'd be curious what the difference is between allowing this and simply running Salmon with the _non-quality-trimmed_ paired-end reads. Specifically, if Salmon is not able to map a pair concordantly, but it can map one of the ends of the read, then it will already do so. . However, in the case that there's a really compelling reason to want to quality trim the reads prior to quantification (and to include the reads such that the mate has been completely quality-trimmed away), we would be able to support this. It will require a bit of modification to allow different library types to be processed back to back and to contribute to the same quantification estimates. In this case, I imagine what we would want to do for the orphans is essentially what Salmon would do internally if it can't map the mate. That is, we would learn essentially all of the parameters and biases from the pairs that do map concordantly, and then just include the orphaned reads as indicating an entire fragment but of unknown length. Let me know if you have any thoughts about the above, and sorry again for the delay!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353287536:274,Energy Efficiency,adapt,adapter,274,No worries - and that is exactly what I thought could be possible :-). Just out of curiosity - how would Salmon currently handle if half of a read could be quasi-mapped to a transcript but the second half did not fit anywhere (due to it being very low quality or sequencing adapter contamination)?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353287536
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353287536:274,Integrability,adapter,adapter,274,No worries - and that is exactly what I thought could be possible :-). Just out of curiosity - how would Salmon currently handle if half of a read could be quasi-mapped to a transcript but the second half did not fit anywhere (due to it being very low quality or sequencing adapter contamination)?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353287536
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353287536:274,Modifiability,adapt,adapter,274,No worries - and that is exactly what I thought could be possible :-). Just out of curiosity - how would Salmon currently handle if half of a read could be quasi-mapped to a transcript but the second half did not fit anywhere (due to it being very low quality or sequencing adapter contamination)?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353287536
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072:314,Availability,error,errors,314,That sounds like a very good way of doing it :-). I'm sorry I was not clear enough - my question was acutally meant for a single sequence - let me try again:; Lets say we have a read pair where one mate maps fine - but the other mate have a problem - half of it is an adapter (or low quality sequence with to many errors). How would Salmon currently handle this situation where the first half of a sequence (e.g. nt 1-50) could be quasi-mapped to a transcript but the second half (nt 51-100) did not match anywhere? Would the the second half cause the whole sequence to be discarded or would it be enough that the first half matched for it to be considered/counted?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072:268,Energy Efficiency,adapt,adapter,268,That sounds like a very good way of doing it :-). I'm sorry I was not clear enough - my question was acutally meant for a single sequence - let me try again:; Lets say we have a read pair where one mate maps fine - but the other mate have a problem - half of it is an adapter (or low quality sequence with to many errors). How would Salmon currently handle this situation where the first half of a sequence (e.g. nt 1-50) could be quasi-mapped to a transcript but the second half (nt 51-100) did not match anywhere? Would the the second half cause the whole sequence to be discarded or would it be enough that the first half matched for it to be considered/counted?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072:268,Integrability,adapter,adapter,268,That sounds like a very good way of doing it :-). I'm sorry I was not clear enough - my question was acutally meant for a single sequence - let me try again:; Lets say we have a read pair where one mate maps fine - but the other mate have a problem - half of it is an adapter (or low quality sequence with to many errors). How would Salmon currently handle this situation where the first half of a sequence (e.g. nt 1-50) could be quasi-mapped to a transcript but the second half (nt 51-100) did not match anywhere? Would the the second half cause the whole sequence to be discarded or would it be enough that the first half matched for it to be considered/counted?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072:268,Modifiability,adapt,adapter,268,That sounds like a very good way of doing it :-). I'm sorry I was not clear enough - my question was acutally meant for a single sequence - let me try again:; Lets say we have a read pair where one mate maps fine - but the other mate have a problem - half of it is an adapter (or low quality sequence with to many errors). How would Salmon currently handle this situation where the first half of a sequence (e.g. nt 1-50) could be quasi-mapped to a transcript but the second half (nt 51-100) did not match anywhere? Would the the second half cause the whole sequence to be discarded or would it be enough that the first half matched for it to be considered/counted?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072:70,Usability,clear,clear,70,That sounds like a very good way of doing it :-). I'm sorry I was not clear enough - my question was acutally meant for a single sequence - let me try again:; Lets say we have a read pair where one mate maps fine - but the other mate have a problem - half of it is an adapter (or low quality sequence with to many errors). How would Salmon currently handle this situation where the first half of a sequence (e.g. nt 1-50) could be quasi-mapped to a transcript but the second half (nt 51-100) did not match anywhere? Would the the second half cause the whole sequence to be discarded or would it be enough that the first half matched for it to be considered/counted?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997:705,Availability,reliab,reliably,705,"Hi @kvittingseerup,. No need to apologize, I think it was I who was not clear. What I am saying is that this is *already* the way that Salmon handles such a case. That is, if you have a paired-end read, and one of the reads maps but the other doesn't (due to e.g., adapter contamination or just very low quality), then Salmon will consider the remaining (mapping) end of the read as representative of an entire fragment, and will resolve the fragment origin accordingly during optimization. Generally, not having both ends of a paired-end read leads to increased ambiguity, but this isn't a particularly big problem if it only happens to a generally small fraction of the reads. Further, since you cannot reliably infer the implied fragment length on a transcript from only a single-end read, such mappings will not contribute to the bias model. Again, however, as long as this doesn't happen to the vast majority of fragments, it should have only a negligible effect on quantification and bias correction. Please let me know if this description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997:265,Energy Efficiency,adapt,adapter,265,"Hi @kvittingseerup,. No need to apologize, I think it was I who was not clear. What I am saying is that this is *already* the way that Salmon handles such a case. That is, if you have a paired-end read, and one of the reads maps but the other doesn't (due to e.g., adapter contamination or just very low quality), then Salmon will consider the remaining (mapping) end of the read as representative of an entire fragment, and will resolve the fragment origin accordingly during optimization. Generally, not having both ends of a paired-end read leads to increased ambiguity, but this isn't a particularly big problem if it only happens to a generally small fraction of the reads. Further, since you cannot reliably infer the implied fragment length on a transcript from only a single-end read, such mappings will not contribute to the bias model. Again, however, as long as this doesn't happen to the vast majority of fragments, it should have only a negligible effect on quantification and bias correction. Please let me know if this description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997:265,Integrability,adapter,adapter,265,"Hi @kvittingseerup,. No need to apologize, I think it was I who was not clear. What I am saying is that this is *already* the way that Salmon handles such a case. That is, if you have a paired-end read, and one of the reads maps but the other doesn't (due to e.g., adapter contamination or just very low quality), then Salmon will consider the remaining (mapping) end of the read as representative of an entire fragment, and will resolve the fragment origin accordingly during optimization. Generally, not having both ends of a paired-end read leads to increased ambiguity, but this isn't a particularly big problem if it only happens to a generally small fraction of the reads. Further, since you cannot reliably infer the implied fragment length on a transcript from only a single-end read, such mappings will not contribute to the bias model. Again, however, as long as this doesn't happen to the vast majority of fragments, it should have only a negligible effect on quantification and bias correction. Please let me know if this description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997:265,Modifiability,adapt,adapter,265,"Hi @kvittingseerup,. No need to apologize, I think it was I who was not clear. What I am saying is that this is *already* the way that Salmon handles such a case. That is, if you have a paired-end read, and one of the reads maps but the other doesn't (due to e.g., adapter contamination or just very low quality), then Salmon will consider the remaining (mapping) end of the read as representative of an entire fragment, and will resolve the fragment origin accordingly during optimization. Generally, not having both ends of a paired-end read leads to increased ambiguity, but this isn't a particularly big problem if it only happens to a generally small fraction of the reads. Further, since you cannot reliably infer the implied fragment length on a transcript from only a single-end read, such mappings will not contribute to the bias model. Again, however, as long as this doesn't happen to the vast majority of fragments, it should have only a negligible effect on quantification and bias correction. Please let me know if this description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997:477,Performance,optimiz,optimization,477,"Hi @kvittingseerup,. No need to apologize, I think it was I who was not clear. What I am saying is that this is *already* the way that Salmon handles such a case. That is, if you have a paired-end read, and one of the reads maps but the other doesn't (due to e.g., adapter contamination or just very low quality), then Salmon will consider the remaining (mapping) end of the read as representative of an entire fragment, and will resolve the fragment origin accordingly during optimization. Generally, not having both ends of a paired-end read leads to increased ambiguity, but this isn't a particularly big problem if it only happens to a generally small fraction of the reads. Further, since you cannot reliably infer the implied fragment length on a transcript from only a single-end read, such mappings will not contribute to the bias model. Again, however, as long as this doesn't happen to the vast majority of fragments, it should have only a negligible effect on quantification and bias correction. Please let me know if this description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997:72,Usability,clear,clear,72,"Hi @kvittingseerup,. No need to apologize, I think it was I who was not clear. What I am saying is that this is *already* the way that Salmon handles such a case. That is, if you have a paired-end read, and one of the reads maps but the other doesn't (due to e.g., adapter contamination or just very low quality), then Salmon will consider the remaining (mapping) end of the read as representative of an entire fragment, and will resolve the fragment origin accordingly during optimization. Generally, not having both ends of a paired-end read leads to increased ambiguity, but this isn't a particularly big problem if it only happens to a generally small fraction of the reads. Further, since you cannot reliably infer the implied fragment length on a transcript from only a single-end read, such mappings will not contribute to the bias model. Again, however, as long as this doesn't happen to the vast majority of fragments, it should have only a negligible effect on quantification and bias correction. Please let me know if this description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:542,Availability,failure,failure,542,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:88,Energy Efficiency,adapt,adapter,88,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:209,Energy Efficiency,adapt,adapters,209,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:449,Energy Efficiency,adapt,adapters,449,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:483,Energy Efficiency,reduce,reduce,483,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:88,Integrability,adapter,adapter,88,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:209,Integrability,adapter,adapters,209,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:449,Integrability,adapter,adapters,449,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:88,Modifiability,adapt,adapter,88,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:209,Modifiability,adapt,adapters,209,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:449,Modifiability,adapt,adapters,449,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325
https://github.com/COMBINE-lab/salmon/issues/151#issuecomment-326430054:125,Safety,detect,detection,125,"Great idea! Hopefully, this is something that could be done on e.g. the first 10k reads just like the automatic library type detection, as a sanity check.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/151#issuecomment-326430054
https://github.com/COMBINE-lab/salmon/issues/151#issuecomment-326430054:141,Safety,sanity check,sanity check,141,"Great idea! Hopefully, this is something that could be done on e.g. the first 10k reads just like the automatic library type detection, as a sanity check.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/151#issuecomment-326430054
https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-328981463:21,Energy Efficiency,charge,charges,21,Holy cloud-computing charges! I'm sorry to hear about this. We can certainly rate-limit this message. I'll work on fixing this upstream. Sorry for the trouble.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-328981463
https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-328981463:93,Integrability,message,message,93,Holy cloud-computing charges! I'm sorry to hear about this. We can certainly rate-limit this message. I'll work on fixing this upstream. Sorry for the trouble.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-328981463
https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-346981211:6,Integrability,message,messages,6,"These messages have been removed in 0.9.0. Also, the read parser has had a considerable overhaul to avoid simply busy waiting in a situation like this where the processing is much slower than the disk. Let me know if this problem is resolved on your end.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-346981211
https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-346981211:100,Safety,avoid,avoid,100,"These messages have been removed in 0.9.0. Also, the read parser has had a considerable overhaul to avoid simply busy waiting in a situation like this where the processing is much slower than the disk. Let me know if this problem is resolved on your end.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-346981211
https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-346981211:106,Usability,simpl,simply,106,"These messages have been removed in 0.9.0. Also, the read parser has had a considerable overhaul to avoid simply busy waiting in a situation like this where the processing is much slower than the disk. Let me know if this problem is resolved on your end.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-346981211
https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-349358819:29,Integrability,message,message,29,Thanks Rob - haven't had the message pop up in the last few days. All seems to be running smoothly. Thanks again!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-349358819
https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-349406690:368,Energy Efficiency,consumption,consumption,368,"You're very welcome! Sorry for the console spam in the first place; I wasn't anticipating usage scenarios with that type of imbalance between producers and consumers. My guess is that the newest version of Salmon will also consume slightly less user-time as well, since now the parsing thread will backoff rather than busy wait when it wants to produce more reads for consumption.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152#issuecomment-349406690
https://github.com/COMBINE-lab/salmon/issues/153#issuecomment-331260342:127,Deployability,release,release,127,"Hi @teshomem ,. We are working on resolving this issue just waiting for few other things to resolve before making a new tagged release.; In the meantime you can resolve this issue by replace the hash in [this](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L522) line by `00a8b2798c498507572e24c2db7bf4896f05b760a38ed9ba566ffd348a7c6cef `.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153#issuecomment-331260342
https://github.com/COMBINE-lab/salmon/issues/153#issuecomment-331260342:195,Security,hash,hash,195,"Hi @teshomem ,. We are working on resolving this issue just waiting for few other things to resolve before making a new tagged release.; In the meantime you can resolve this issue by replace the hash in [this](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L522) line by `00a8b2798c498507572e24c2db7bf4896f05b760a38ed9ba566ffd348a7c6cef `.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153#issuecomment-331260342
https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141:607,Deployability,release,release,607,"Hi @teshomem,. If you want to proceed with transcript-level differential expression, _all transcripts are relevant_. That is, the relevant tools (e.g. DESeq2, limma-voom, Sleuth, etc.) will expect to be provided with _all_ quantified isoforms for each gene. They will then automatically apply their own filtering criteria to determine which transcripts to actually test for DE. . If you want to proceed with DE at the gene level (and hence want to aggregate the quantification information from the level of transcripts to genes), the easiest option is to use the [tximport](http://bioconductor.org/packages/release/bioc/html/tximport.html) package. It can import all of the quantifications from multiple runs of Salmon, aggregate them to the gene level, and produce a count matrix that can then be used with traditional count-based gene-level DE tools. I would recommend the pipeline Salmon => tximport => DESeq2 for gene-level DE analysis. Finally, the best place for questions like this, that don't have to do with a specific bug or feature request for the Salmon software, is the [Google user group](https://groups.google.com/forum/#!forum/sailfish-users). This way, other users will be more likely to provide you with feedback and help answer your questions.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141
https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141:875,Deployability,pipeline,pipeline,875,"Hi @teshomem,. If you want to proceed with transcript-level differential expression, _all transcripts are relevant_. That is, the relevant tools (e.g. DESeq2, limma-voom, Sleuth, etc.) will expect to be provided with _all_ quantified isoforms for each gene. They will then automatically apply their own filtering criteria to determine which transcripts to actually test for DE. . If you want to proceed with DE at the gene level (and hence want to aggregate the quantification information from the level of transcripts to genes), the easiest option is to use the [tximport](http://bioconductor.org/packages/release/bioc/html/tximport.html) package. It can import all of the quantifications from multiple runs of Salmon, aggregate them to the gene level, and produce a count matrix that can then be used with traditional count-based gene-level DE tools. I would recommend the pipeline Salmon => tximport => DESeq2 for gene-level DE analysis. Finally, the best place for questions like this, that don't have to do with a specific bug or feature request for the Salmon software, is the [Google user group](https://groups.google.com/forum/#!forum/sailfish-users). This way, other users will be more likely to provide you with feedback and help answer your questions.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141
https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141:365,Testability,test,test,365,"Hi @teshomem,. If you want to proceed with transcript-level differential expression, _all transcripts are relevant_. That is, the relevant tools (e.g. DESeq2, limma-voom, Sleuth, etc.) will expect to be provided with _all_ quantified isoforms for each gene. They will then automatically apply their own filtering criteria to determine which transcripts to actually test for DE. . If you want to proceed with DE at the gene level (and hence want to aggregate the quantification information from the level of transcripts to genes), the easiest option is to use the [tximport](http://bioconductor.org/packages/release/bioc/html/tximport.html) package. It can import all of the quantifications from multiple runs of Salmon, aggregate them to the gene level, and produce a count matrix that can then be used with traditional count-based gene-level DE tools. I would recommend the pipeline Salmon => tximport => DESeq2 for gene-level DE analysis. Finally, the best place for questions like this, that don't have to do with a specific bug or feature request for the Salmon software, is the [Google user group](https://groups.google.com/forum/#!forum/sailfish-users). This way, other users will be more likely to provide you with feedback and help answer your questions.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141
https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141:1222,Usability,feedback,feedback,1222,"Hi @teshomem,. If you want to proceed with transcript-level differential expression, _all transcripts are relevant_. That is, the relevant tools (e.g. DESeq2, limma-voom, Sleuth, etc.) will expect to be provided with _all_ quantified isoforms for each gene. They will then automatically apply their own filtering criteria to determine which transcripts to actually test for DE. . If you want to proceed with DE at the gene level (and hence want to aggregate the quantification information from the level of transcripts to genes), the easiest option is to use the [tximport](http://bioconductor.org/packages/release/bioc/html/tximport.html) package. It can import all of the quantifications from multiple runs of Salmon, aggregate them to the gene level, and produce a count matrix that can then be used with traditional count-based gene-level DE tools. I would recommend the pipeline Salmon => tximport => DESeq2 for gene-level DE analysis. Finally, the best place for questions like this, that don't have to do with a specific bug or feature request for the Salmon software, is the [Google user group](https://groups.google.com/forum/#!forum/sailfish-users). This way, other users will be more likely to provide you with feedback and help answer your questions.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/154#issuecomment-329974141
https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951:283,Safety,avoid,avoid,283,"Hi @tobi-te ,; Salmon is a two-phase algorithm i.e. online and offline. The first phase i.e. online-phase learns various parameters before starting the offline-phase (order doesn't matter). Like most online learning algorithm Salmon also expects the input to be randomized enough to avoid bias or in the case of Salmon *possibly* nudge the offline-phase towards a local-minima, which can vary according to the data (not always). I think in your case even though the learnt online parameters are biased (because of non-random order) the estimated abundances at the end are corrected by the offline-phase pretty well and you are observing the similar results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951
https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951:106,Usability,learn,learns,106,"Hi @tobi-te ,; Salmon is a two-phase algorithm i.e. online and offline. The first phase i.e. online-phase learns various parameters before starting the offline-phase (order doesn't matter). Like most online learning algorithm Salmon also expects the input to be randomized enough to avoid bias or in the case of Salmon *possibly* nudge the offline-phase towards a local-minima, which can vary according to the data (not always). I think in your case even though the learnt online parameters are biased (because of non-random order) the estimated abundances at the end are corrected by the offline-phase pretty well and you are observing the similar results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951
https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951:207,Usability,learn,learning,207,"Hi @tobi-te ,; Salmon is a two-phase algorithm i.e. online and offline. The first phase i.e. online-phase learns various parameters before starting the offline-phase (order doesn't matter). Like most online learning algorithm Salmon also expects the input to be randomized enough to avoid bias or in the case of Salmon *possibly* nudge the offline-phase towards a local-minima, which can vary according to the data (not always). I think in your case even though the learnt online parameters are biased (because of non-random order) the estimated abundances at the end are corrected by the offline-phase pretty well and you are observing the similar results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951
https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951:466,Usability,learn,learnt,466,"Hi @tobi-te ,; Salmon is a two-phase algorithm i.e. online and offline. The first phase i.e. online-phase learns various parameters before starting the offline-phase (order doesn't matter). Like most online learning algorithm Salmon also expects the input to be randomized enough to avoid bias or in the case of Salmon *possibly* nudge the offline-phase towards a local-minima, which can vary according to the data (not always). I think in your case even though the learnt online parameters are biased (because of non-random order) the estimated abundances at the end are corrected by the offline-phase pretty well and you are observing the similar results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/155#issuecomment-331262951
https://github.com/COMBINE-lab/salmon/pull/158#issuecomment-332854529:112,Deployability,update,updated,112,"Ignore travis-ci --- it's drunk (has been broken for the past week or so, without any good reason; I think they updated images or some such).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/158#issuecomment-332854529
https://github.com/COMBINE-lab/salmon/issues/160#issuecomment-334762498:560,Usability,simpl,simply,560,"Hi @atasub,. It's hard to say exactly if this mapping rate is much lower than expected or not. Many RNA-seq experiments do end up with a mapping rate of 65-70%. One thing that might contribute to a lower mapping rate would be short reads relative to the minimum required exact match length (default of 31). If your reads are relatively short (after trimming, which it looks like you are doing here) --- say ~50bp, then one might try lowering the k value with which the index is built. This will allow more sensitive mapping. However, the other thing to try is simply to align one of these samples to the genome with a tool like STAR or HISAT2 and look at their mapping rate _to known features_. If it's similar, then the other reads could be accounted for by e.g. intron retention or even contamination. Finally, @vals has an [*excellent* series of blog posts](http://www.nxn.se/valent/2017/9/18/low-mapping-rate-5-human-dna-contamination) on investigating and addressing low mapping rates (albeit in single-cell data) that you might find useful. Let me know what you find.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/160#issuecomment-334762498
https://github.com/COMBINE-lab/salmon/issues/160#issuecomment-367371707:47,Deployability,update,updated,47,"@InesdeSantiago ; Sorry, that the docs are not updated yet. It's definitely on our to-do list. The selective alignment needs a separate index from normal quasi-index. The steps are as following, ; If you are in salmon root folder, the most updated branch that implements Selective Alignment is,; [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan). >git checkout rescue-orphan ; (re-build it); >build/src/salmon index -i selective_alignment_ind -t transcript.fa; >salmon quant -i selective_alignment_ind -la -1 reads1.fa -2 reads2.fq -o transcript_quant --softFilter --editDistance 4 --rangeFactorization 4 . We strongly recommend these options while using selective alignment, as they tend to produce superior result almost always (I am considering them making default soon :) ). Please let me know if you face problem in any of the above steps, or if the results are not expected. ; Thanks again for using selective alignment and Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/160#issuecomment-367371707
https://github.com/COMBINE-lab/salmon/issues/160#issuecomment-367371707:240,Deployability,update,updated,240,"@InesdeSantiago ; Sorry, that the docs are not updated yet. It's definitely on our to-do list. The selective alignment needs a separate index from normal quasi-index. The steps are as following, ; If you are in salmon root folder, the most updated branch that implements Selective Alignment is,; [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan). >git checkout rescue-orphan ; (re-build it); >build/src/salmon index -i selective_alignment_ind -t transcript.fa; >salmon quant -i selective_alignment_ind -la -1 reads1.fa -2 reads2.fq -o transcript_quant --softFilter --editDistance 4 --rangeFactorization 4 . We strongly recommend these options while using selective alignment, as they tend to produce superior result almost always (I am considering them making default soon :) ). Please let me know if you face problem in any of the above steps, or if the results are not expected. ; Thanks again for using selective alignment and Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/160#issuecomment-367371707
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415:421,Availability,error,error,421,"I'm not sure whether I should create a new issue for each problem. I'll just put them all here. . BWA continued to make, when I changed the BUILD_COMMAND to use gmake. I also ran 'export MAKE=gmake', and used gmake to run the output of cmake. . BUILD_COMMAND sh -c ""gmake ${QUIET_MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}"". Unfortunately, the BWA included with Salmon is broken on FreeBSD. . kthread.c:70:2: error: unknown type name 'int64_t'. The one on Git (https://github.com/lh3/bwa) works though. So I modified DOWNLOAD_COMMAND to grab the one from Git. . DOWNLOAD_COMMAND git clone https://github.com/lh3/bwa bwa-master. Next problem, it tries to build TBB and fails. This is two problems, because I have TBB, I passed it the path, and it fails to use it. The output of cmake says:. -- Could NOT find TBB (missing: tbbmalloc_proxy) (found suitable version ""2018.0"", minimum required is ""4.4""). tbbmalloc_proxy.h is present in /usr/local/include/tbb. Moving on, TBB fails to build because it's hard coded to use make. I fixed this and it built. BUILD_COMMAND gmake ${QUIET_MAKE} CXXFLAGS=${TBB_CXXFLAGS} lambdas=1 compiler=${TBB_COMPILER} cfg=release tbb_build_prefix=LIBS. Staden-io_lib fails to build with: ; /usr/bin/ld: undefined reference to symbol `pthread_create@@FBSD_1.0' (try adding -lthr); //lib/libthr.so.3: could not read symbols: Bad value. As advertised, -lthr fixed this issue. ; CONFIGURE_COMMAND ./configure --enable-shared=no --without-libcurl --prefix=<INSTALL_DIR> LDFLAGS=-lthr CFLAGS=${LIBSTADEN_CFLAGS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}. This leads me to an error I can't fix on my own. /home/esiefker/salmon/fresh-salmon/include/BWAMemStaticFuncs.hpp:36:36: error:; use of undeclared identifier 'MEM_F_SELF_OVLP'; int start_width = (opt->flag & MEM_F_SELF_OVLP)? 2 : 1;. There is a similar Debian bug which is fixed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818397. I could not find the fix mentioned. https://github.com/COMBINE-lab/s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415:1615,Availability,error,error,1615,"I changed the BUILD_COMMAND to use gmake. I also ran 'export MAKE=gmake', and used gmake to run the output of cmake. . BUILD_COMMAND sh -c ""gmake ${QUIET_MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}"". Unfortunately, the BWA included with Salmon is broken on FreeBSD. . kthread.c:70:2: error: unknown type name 'int64_t'. The one on Git (https://github.com/lh3/bwa) works though. So I modified DOWNLOAD_COMMAND to grab the one from Git. . DOWNLOAD_COMMAND git clone https://github.com/lh3/bwa bwa-master. Next problem, it tries to build TBB and fails. This is two problems, because I have TBB, I passed it the path, and it fails to use it. The output of cmake says:. -- Could NOT find TBB (missing: tbbmalloc_proxy) (found suitable version ""2018.0"", minimum required is ""4.4""). tbbmalloc_proxy.h is present in /usr/local/include/tbb. Moving on, TBB fails to build because it's hard coded to use make. I fixed this and it built. BUILD_COMMAND gmake ${QUIET_MAKE} CXXFLAGS=${TBB_CXXFLAGS} lambdas=1 compiler=${TBB_COMPILER} cfg=release tbb_build_prefix=LIBS. Staden-io_lib fails to build with: ; /usr/bin/ld: undefined reference to symbol `pthread_create@@FBSD_1.0' (try adding -lthr); //lib/libthr.so.3: could not read symbols: Bad value. As advertised, -lthr fixed this issue. ; CONFIGURE_COMMAND ./configure --enable-shared=no --without-libcurl --prefix=<INSTALL_DIR> LDFLAGS=-lthr CFLAGS=${LIBSTADEN_CFLAGS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}. This leads me to an error I can't fix on my own. /home/esiefker/salmon/fresh-salmon/include/BWAMemStaticFuncs.hpp:36:36: error:; use of undeclared identifier 'MEM_F_SELF_OVLP'; int start_width = (opt->flag & MEM_F_SELF_OVLP)? 2 : 1;. There is a similar Debian bug which is fixed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818397. I could not find the fix mentioned. https://github.com/COMBINE-lab/salmon/commits/master?author=satta. I have done my best, but I am stuck. I hope this is helpful for those more skilled than I.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415:1716,Availability,error,error,1716,"I changed the BUILD_COMMAND to use gmake. I also ran 'export MAKE=gmake', and used gmake to run the output of cmake. . BUILD_COMMAND sh -c ""gmake ${QUIET_MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}"". Unfortunately, the BWA included with Salmon is broken on FreeBSD. . kthread.c:70:2: error: unknown type name 'int64_t'. The one on Git (https://github.com/lh3/bwa) works though. So I modified DOWNLOAD_COMMAND to grab the one from Git. . DOWNLOAD_COMMAND git clone https://github.com/lh3/bwa bwa-master. Next problem, it tries to build TBB and fails. This is two problems, because I have TBB, I passed it the path, and it fails to use it. The output of cmake says:. -- Could NOT find TBB (missing: tbbmalloc_proxy) (found suitable version ""2018.0"", minimum required is ""4.4""). tbbmalloc_proxy.h is present in /usr/local/include/tbb. Moving on, TBB fails to build because it's hard coded to use make. I fixed this and it built. BUILD_COMMAND gmake ${QUIET_MAKE} CXXFLAGS=${TBB_CXXFLAGS} lambdas=1 compiler=${TBB_COMPILER} cfg=release tbb_build_prefix=LIBS. Staden-io_lib fails to build with: ; /usr/bin/ld: undefined reference to symbol `pthread_create@@FBSD_1.0' (try adding -lthr); //lib/libthr.so.3: could not read symbols: Bad value. As advertised, -lthr fixed this issue. ; CONFIGURE_COMMAND ./configure --enable-shared=no --without-libcurl --prefix=<INSTALL_DIR> LDFLAGS=-lthr CFLAGS=${LIBSTADEN_CFLAGS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}. This leads me to an error I can't fix on my own. /home/esiefker/salmon/fresh-salmon/include/BWAMemStaticFuncs.hpp:36:36: error:; use of undeclared identifier 'MEM_F_SELF_OVLP'; int start_width = (opt->flag & MEM_F_SELF_OVLP)? 2 : 1;. There is a similar Debian bug which is fixed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818397. I could not find the fix mentioned. https://github.com/COMBINE-lab/salmon/commits/master?author=satta. I have done my best, but I am stuck. I hope this is helpful for those more skilled than I.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415:1161,Deployability,release,release,1161,"I changed the BUILD_COMMAND to use gmake. I also ran 'export MAKE=gmake', and used gmake to run the output of cmake. . BUILD_COMMAND sh -c ""gmake ${QUIET_MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}"". Unfortunately, the BWA included with Salmon is broken on FreeBSD. . kthread.c:70:2: error: unknown type name 'int64_t'. The one on Git (https://github.com/lh3/bwa) works though. So I modified DOWNLOAD_COMMAND to grab the one from Git. . DOWNLOAD_COMMAND git clone https://github.com/lh3/bwa bwa-master. Next problem, it tries to build TBB and fails. This is two problems, because I have TBB, I passed it the path, and it fails to use it. The output of cmake says:. -- Could NOT find TBB (missing: tbbmalloc_proxy) (found suitable version ""2018.0"", minimum required is ""4.4""). tbbmalloc_proxy.h is present in /usr/local/include/tbb. Moving on, TBB fails to build because it's hard coded to use make. I fixed this and it built. BUILD_COMMAND gmake ${QUIET_MAKE} CXXFLAGS=${TBB_CXXFLAGS} lambdas=1 compiler=${TBB_COMPILER} cfg=release tbb_build_prefix=LIBS. Staden-io_lib fails to build with: ; /usr/bin/ld: undefined reference to symbol `pthread_create@@FBSD_1.0' (try adding -lthr); //lib/libthr.so.3: could not read symbols: Bad value. As advertised, -lthr fixed this issue. ; CONFIGURE_COMMAND ./configure --enable-shared=no --without-libcurl --prefix=<INSTALL_DIR> LDFLAGS=-lthr CFLAGS=${LIBSTADEN_CFLAGS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}. This leads me to an error I can't fix on my own. /home/esiefker/salmon/fresh-salmon/include/BWAMemStaticFuncs.hpp:36:36: error:; use of undeclared identifier 'MEM_F_SELF_OVLP'; int start_width = (opt->flag & MEM_F_SELF_OVLP)? 2 : 1;. There is a similar Debian bug which is fixed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818397. I could not find the fix mentioned. https://github.com/COMBINE-lab/salmon/commits/master?author=satta. I have done my best, but I am stuck. I hope this is helpful for those more skilled than I.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415:1434,Modifiability,config,configure,1434,"I changed the BUILD_COMMAND to use gmake. I also ran 'export MAKE=gmake', and used gmake to run the output of cmake. . BUILD_COMMAND sh -c ""gmake ${QUIET_MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}"". Unfortunately, the BWA included with Salmon is broken on FreeBSD. . kthread.c:70:2: error: unknown type name 'int64_t'. The one on Git (https://github.com/lh3/bwa) works though. So I modified DOWNLOAD_COMMAND to grab the one from Git. . DOWNLOAD_COMMAND git clone https://github.com/lh3/bwa bwa-master. Next problem, it tries to build TBB and fails. This is two problems, because I have TBB, I passed it the path, and it fails to use it. The output of cmake says:. -- Could NOT find TBB (missing: tbbmalloc_proxy) (found suitable version ""2018.0"", minimum required is ""4.4""). tbbmalloc_proxy.h is present in /usr/local/include/tbb. Moving on, TBB fails to build because it's hard coded to use make. I fixed this and it built. BUILD_COMMAND gmake ${QUIET_MAKE} CXXFLAGS=${TBB_CXXFLAGS} lambdas=1 compiler=${TBB_COMPILER} cfg=release tbb_build_prefix=LIBS. Staden-io_lib fails to build with: ; /usr/bin/ld: undefined reference to symbol `pthread_create@@FBSD_1.0' (try adding -lthr); //lib/libthr.so.3: could not read symbols: Bad value. As advertised, -lthr fixed this issue. ; CONFIGURE_COMMAND ./configure --enable-shared=no --without-libcurl --prefix=<INSTALL_DIR> LDFLAGS=-lthr CFLAGS=${LIBSTADEN_CFLAGS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}. This leads me to an error I can't fix on my own. /home/esiefker/salmon/fresh-salmon/include/BWAMemStaticFuncs.hpp:36:36: error:; use of undeclared identifier 'MEM_F_SELF_OVLP'; int start_width = (opt->flag & MEM_F_SELF_OVLP)? 2 : 1;. There is a similar Debian bug which is fixed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818397. I could not find the fix mentioned. https://github.com/COMBINE-lab/salmon/commits/master?author=satta. I have done my best, but I am stuck. I hope this is helpful for those more skilled than I.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337396709:105,Security,access,access,105,"Hi,. I think keeping this all in one issue is best. First, i applaud your Herculean effort! I don't have access to a FreeBSD or OpenBSD box, which is partly why we hadn't seen these issues. I can look into this, but testing is hard b/c i don't have the target environment. In the meantime, if you are just trying to use the software, perhaps give the Docker image a try (as i hear Docket can be cajoled to work on FreeBSD).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337396709
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337396709:216,Testability,test,testing,216,"Hi,. I think keeping this all in one issue is best. First, i applaud your Herculean effort! I don't have access to a FreeBSD or OpenBSD box, which is partly why we hadn't seen these issues. I can look into this, but testing is hard b/c i don't have the target environment. In the meantime, if you are just trying to use the software, perhaps give the Docker image a try (as i hear Docket can be cajoled to work on FreeBSD).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337396709
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760:127,Availability,error,error,127,"Thanks. I noticed that you forked BWA. I'm guessing my substitution of mainline BWA for your forked version is behind the last error. If we get int64_t defined, that might resolve it. I'd be happy to test, and can submit some patches for my other edits to CMakefiles.txt . I will try the Docker image. I was hesitant to use it because it relies on ZFS, and I'm not sure how ZFS will interact with my jail. Probably the easier path right now though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760:226,Deployability,patch,patches,226,"Thanks. I noticed that you forked BWA. I'm guessing my substitution of mainline BWA for your forked version is behind the last error. If we get int64_t defined, that might resolve it. I'd be happy to test, and can submit some patches for my other edits to CMakefiles.txt . I will try the Docker image. I was hesitant to use it because it relies on ZFS, and I'm not sure how ZFS will interact with my jail. Probably the easier path right now though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760:200,Testability,test,test,200,"Thanks. I noticed that you forked BWA. I'm guessing my substitution of mainline BWA for your forked version is behind the last error. If we get int64_t defined, that might resolve it. I'd be happy to test, and can submit some patches for my other edits to CMakefiles.txt . I will try the Docker image. I was hesitant to use it because it relies on ZFS, and I'm not sure how ZFS will interact with my jail. Probably the easier path right now though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922:58,Availability,error,error,58,"Same issue on Alpine Linux (latest, 3.6). kthread.c:70:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~; kthread.c:78:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~ ; make[3]: *** [Makefile:24: kthread.o] Error 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922:135,Availability,error,error,135,"Same issue on Alpine Linux (latest, 3.6). kthread.c:70:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~; kthread.c:78:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~ ; make[3]: *** [Makefile:24: kthread.o] Error 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922:235,Availability,Error,Error,235,"Same issue on Alpine Linux (latest, 3.6). kthread.c:70:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~; kthread.c:78:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~ ; make[3]: *** [Makefile:24: kthread.o] Error 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308:535,Deployability,release,release,535,"Hi rob-p,; `gcc -version ` tells me its version `6.3.0` of the GCC compiler. . ```; c+\+ -v; Using built-in specs.; COLLECT_GCC=c++; COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-alpine-linux-musl/6.3.0/lto-wrapper; Target: x86_64-alpine-linux-musl; Configured with: /home/buildozer/aports/main/gcc/src/gcc-6.3.0/configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --target=x86_64-alpine-linux-musl --with-pkgversion='Alpine 6.3.0' --enable-checking=release --disable-fixed-point --disable-libstdcxx-pch --disable-multilib --disable-nls --disable-werror --disable-symvers --enable-__cxa_atexit --enable-default-pie --enable-cloog-backend --enable-languages=c,c++,objc,java,fortran,ada --disable-libssp --disable-libmpx --disable-libmudflap --disable-libsanitizer --enable-shared --enable-threads --enable-tls --with-system-zlib --with-linker-hash-style=gnu; Thread model: posix; gcc version 6.3.0 (Alpine 6.3.0); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308:205,Integrability,wrap,wrapper,205,"Hi rob-p,; `gcc -version ` tells me its version `6.3.0` of the GCC compiler. . ```; c+\+ -v; Using built-in specs.; COLLECT_GCC=c++; COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-alpine-linux-musl/6.3.0/lto-wrapper; Target: x86_64-alpine-linux-musl; Configured with: /home/buildozer/aports/main/gcc/src/gcc-6.3.0/configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --target=x86_64-alpine-linux-musl --with-pkgversion='Alpine 6.3.0' --enable-checking=release --disable-fixed-point --disable-libstdcxx-pch --disable-multilib --disable-nls --disable-werror --disable-symvers --enable-__cxa_atexit --enable-default-pie --enable-cloog-backend --enable-languages=c,c++,objc,java,fortran,ada --disable-libssp --disable-libmpx --disable-libmudflap --disable-libsanitizer --enable-shared --enable-threads --enable-tls --with-system-zlib --with-linker-hash-style=gnu; Thread model: posix; gcc version 6.3.0 (Alpine 6.3.0); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308:248,Modifiability,Config,Configured,248,"Hi rob-p,; `gcc -version ` tells me its version `6.3.0` of the GCC compiler. . ```; c+\+ -v; Using built-in specs.; COLLECT_GCC=c++; COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-alpine-linux-musl/6.3.0/lto-wrapper; Target: x86_64-alpine-linux-musl; Configured with: /home/buildozer/aports/main/gcc/src/gcc-6.3.0/configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --target=x86_64-alpine-linux-musl --with-pkgversion='Alpine 6.3.0' --enable-checking=release --disable-fixed-point --disable-libstdcxx-pch --disable-multilib --disable-nls --disable-werror --disable-symvers --enable-__cxa_atexit --enable-default-pie --enable-cloog-backend --enable-languages=c,c++,objc,java,fortran,ada --disable-libssp --disable-libmpx --disable-libmudflap --disable-libsanitizer --enable-shared --enable-threads --enable-tls --with-system-zlib --with-linker-hash-style=gnu; Thread model: posix; gcc version 6.3.0 (Alpine 6.3.0); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308:311,Modifiability,config,configure,311,"Hi rob-p,; `gcc -version ` tells me its version `6.3.0` of the GCC compiler. . ```; c+\+ -v; Using built-in specs.; COLLECT_GCC=c++; COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-alpine-linux-musl/6.3.0/lto-wrapper; Target: x86_64-alpine-linux-musl; Configured with: /home/buildozer/aports/main/gcc/src/gcc-6.3.0/configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --target=x86_64-alpine-linux-musl --with-pkgversion='Alpine 6.3.0' --enable-checking=release --disable-fixed-point --disable-libstdcxx-pch --disable-multilib --disable-nls --disable-werror --disable-symvers --enable-__cxa_atexit --enable-default-pie --enable-cloog-backend --enable-languages=c,c++,objc,java,fortran,ada --disable-libssp --disable-libmpx --disable-libmudflap --disable-libsanitizer --enable-shared --enable-threads --enable-tls --with-system-zlib --with-linker-hash-style=gnu; Thread model: posix; gcc version 6.3.0 (Alpine 6.3.0); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308:927,Security,hash,hash-style,927,"Hi rob-p,; `gcc -version ` tells me its version `6.3.0` of the GCC compiler. . ```; c+\+ -v; Using built-in specs.; COLLECT_GCC=c++; COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-alpine-linux-musl/6.3.0/lto-wrapper; Target: x86_64-alpine-linux-musl; Configured with: /home/buildozer/aports/main/gcc/src/gcc-6.3.0/configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --target=x86_64-alpine-linux-musl --with-pkgversion='Alpine 6.3.0' --enable-checking=release --disable-fixed-point --disable-libstdcxx-pch --disable-multilib --disable-nls --disable-werror --disable-symvers --enable-__cxa_atexit --enable-default-pie --enable-cloog-backend --enable-languages=c,c++,objc,java,fortran,ada --disable-libssp --disable-libmpx --disable-libmudflap --disable-libsanitizer --enable-shared --enable-threads --enable-tls --with-system-zlib --with-linker-hash-style=gnu; Thread model: posix; gcc version 6.3.0 (Alpine 6.3.0); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343658308
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-345752365:110,Testability,test,tested,110,"Hi @apeltzer ,. Thanks for this info. I've fixed the issues related to the bwa files in the develop branch. I tested things out using an Alpine Linux docker image to re-create your environment. Unfortunately, there seems to be a bigger issue for building from source on Alpine Linux that is actually far beyond the scope of Salmon itself. Apparently, Alpine linux uses [musl])(https://www.musl-libc.org/), a non-standard libc replacement that is missing some of the calls used by [Intel's TBB](http://forum.alpinelinux.org/forum/general-discussion/compilation-tbb). I imagine this would affect quite a bit of scientific software on this distribution. I currently haven't found a work-around, but let me know if you're aware of anything. In the mean time, does the pre-compiled binary (or the docker image) work for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-345752365
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-345761296:169,Deployability,install,installing,169,"@apeltzer ,. I tried to use the pre-compiled binary myself under alpine within Docker. Initially, it suffers from the same issue (lack of a compliant libc). However, by installing the glibc compatibility layer (which was simply a few commands as laid out [here](https://github.com/sgerrand/alpine-pkg-glibc)), I was able to get the pre-compiled binary to work without issue. Actually, this layer may also fix building from source, but I have not checked yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-345761296
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-345761296:221,Usability,simpl,simply,221,"@apeltzer ,. I tried to use the pre-compiled binary myself under alpine within Docker. Initially, it suffers from the same issue (lack of a compliant libc). However, by installing the glibc compatibility layer (which was simply a few commands as laid out [here](https://github.com/sgerrand/alpine-pkg-glibc)), I was able to get the pre-compiled binary to work without issue. Actually, this layer may also fix building from source, but I have not checked yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-345761296
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-400086140:288,Deployability,patch,patches,288,"I just wanted to point you that Gentoo Linux also has a FreeBSD port, so the packages in Gentoo should compile on Gentoo FreeBSD too. But hey, it is just discontinued: https://wiki.gentoo.org/wiki/Gentoo_FreeBSD. I just managed to to get a working package for salmon in Gentoo (with some patches fixing the awfull curl/cmake mixture): https://github.com/gentoo/sci/tree/master/sci-biology/salmon",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-400086140
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:357,Availability,down,downloading,357,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:477,Availability,down,downloads,477,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:621,Availability,down,downloads,621,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:1021,Deployability,install,installed,1021,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:1069,Integrability,depend,dependencies,1069,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:387,Modifiability,config,configure,387,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:554,Security,checksum,checksums,554,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-989322122:165,Deployability,update,update,165,"FYI: [https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon](https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon). It would be good to update to onetbb 2021 soon. FreeBSD ports still has a 2020.3 legacy port, but we're trying to update everything that depends on it so it can be retired. I think maybe this issue can be closed at this point?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-989322122
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-989322122:259,Deployability,update,update,259,"FYI: [https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon](https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon). It would be good to update to onetbb 2021 soon. FreeBSD ports still has a 2020.3 legacy port, but we're trying to update everything that depends on it so it can be retired. I think maybe this issue can be closed at this point?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-989322122
https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-989322122:282,Integrability,depend,depends,282,"FYI: [https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon](https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon). It would be good to update to onetbb 2021 soon. FreeBSD ports still has a 2020.3 legacy port, but we're trying to update everything that depends on it so it can be retired. I think maybe this issue can be closed at this point?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-989322122
https://github.com/COMBINE-lab/salmon/issues/163#issuecomment-337916447:306,Availability,error,error,306,"Hi Tanya,. The only cases in which I've seen this before have had to do with corrupted input (most often with corrupted `.gz` files --- for which we have a fix to report and quit on the develop branch). Can you confirm that all of the files you are providing to salmon as input properly decompress without error? If so, would you be able to share the specific files causing the problem?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/163#issuecomment-337916447
https://github.com/COMBINE-lab/salmon/issues/164#issuecomment-338276821:390,Performance,Perform,Perform,390,"Well, I figured out how to run Salmon under Docker, but how do I feed it data?. `[rancher@rancher ~]$ docker run combinelab/salmon salmon; Salmon v0.8.2. Usage: salmon -h|--help or; salmon -v|--version or; salmon -c|--cite or; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; cite Show salmon citation information; index Create a salmon index; quant Quantify a sample; swim Perform super-secret operation; [rancher@rancher ~]$ ls rna.fa.gz; rna.fa.gz; [rancher@rancher ~]$ docker run combinelab/salmon salmon index -t rna.fa.gz -i mus.rna.index; Version Info: This is the most recent version of Salmon.; The file [rna.fa.gz] provided for the transcriptome does not appear to exist.[rancher@rancher ~]$`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164#issuecomment-338276821
https://github.com/COMBINE-lab/salmon/issues/164#issuecomment-338278307:363,Usability,simpl,simply,363,"The easiest way is probably to mount the external data / the relevant external directories as a [volume](https://docs.docker.com/engine/admin/volumes/volumes/#create-and-manage-volumes) when you run the docker command. The TLDR version of that page is [here](https://stackoverflow.com/questions/42625947/docker-input-output-outside-the-container). Basically, you simply map some location on your host system to some directory _inside_ the docker image, and then the executable in the container can read and write directly to that volume.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164#issuecomment-338278307
https://github.com/COMBINE-lab/salmon/issues/164#issuecomment-338296339:23,Deployability,update,update,23,Great; I'll definitely update the documentation with this as I agree that it's not obvious at all :).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164#issuecomment-338296339
https://github.com/COMBINE-lab/salmon/issues/169#issuecomment-341436830:463,Deployability,release,release,463,"Hi Kadir,. How significant are the differences? There is a stochastic component to the algorithm, so one would not generally expect identical results between runs. However, differences should be small. The use of the `-g` flag should not affect transcript level inference, since the aggregation to gene-level abundances is done post-facto (i.e. after all transcript-level abundances have been estimated). Nonetheless, [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html) is the recommended way to aggregate transcript-level inferences to the gene level. The `-g` option predates the existence of that package and exists mostly for backward compatibility.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/169#issuecomment-341436830
https://github.com/COMBINE-lab/salmon/issues/169#issuecomment-341731522:172,Security,access,access,172,"Hi Kadir,. So, the short answer is that on a _single sample_ the `-g` flag and `tximport` do something very similar. However, the real benefit of `tximport` is that it has access to _all_ of the samples when doing transcript to gene-level aggregation. . So, while Salmon with the `-g` flag will estimate the average expressed gene length in each sample, `tximport` will also have knowledge of how the average gene length varies across all samples. Also, `tximport` provides a few different options for how, exactly, you wish to aggregate. Generally, the `-g` option is completely reasonable, but `tximport` is the same in the simple case and better in the general case.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/169#issuecomment-341731522
https://github.com/COMBINE-lab/salmon/issues/169#issuecomment-341731522:626,Usability,simpl,simple,626,"Hi Kadir,. So, the short answer is that on a _single sample_ the `-g` flag and `tximport` do something very similar. However, the real benefit of `tximport` is that it has access to _all_ of the samples when doing transcript to gene-level aggregation. . So, while Salmon with the `-g` flag will estimate the average expressed gene length in each sample, `tximport` will also have knowledge of how the average gene length varies across all samples. Also, `tximport` provides a few different options for how, exactly, you wish to aggregate. Generally, the `-g` option is completely reasonable, but `tximport` is the same in the simple case and better in the general case.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/169#issuecomment-341731522
https://github.com/COMBINE-lab/salmon/issues/170#issuecomment-341735839:109,Integrability,protocol,protocol,109,"Sure; the other thing you may want to consider is what is in your index. For example, if you had a ribo-zero protocol here, you may get a higher mapping rate if you include rRNA. Otherwise, is there a significant degree of intron retention?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/170#issuecomment-341735839
https://github.com/COMBINE-lab/salmon/issues/170#issuecomment-341744828:230,Safety,detect,detect,230,"If you are getting a lot of reads mapping to the genome but not quantified with Salmon, a good thing to check for is genomic DNA contamination. If you count up read mapping to genes with featureCounts or something similar you can detect genomic DNA contamination by looking at the numbers that fall into intergenic regions.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/170#issuecomment-341744828
https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684:298,Availability,Down,Downloads,298,"Hi @RK489,. It seems it cannot find the library it wants. The easiest solution is to install salmon on OS X [using bioconda](https://anaconda.org/bioconda/salmon). Otherwise, you can also try to explicitly make sure that path is being searched via e.g.:. `DYLD_FALLBACK_LIBRARY_PATH=/Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/lib ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon -h`. Please let me know if either of these solutions works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684
https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684:339,Availability,Down,Downloads,339,"Hi @RK489,. It seems it cannot find the library it wants. The easiest solution is to install salmon on OS X [using bioconda](https://anaconda.org/bioconda/salmon). Otherwise, you can also try to explicitly make sure that path is being searched via e.g.:. `DYLD_FALLBACK_LIBRARY_PATH=/Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/lib ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon -h`. Please let me know if either of these solutions works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684
https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684:85,Deployability,install,install,85,"Hi @RK489,. It seems it cannot find the library it wants. The easiest solution is to install salmon on OS X [using bioconda](https://anaconda.org/bioconda/salmon). Otherwise, you can also try to explicitly make sure that path is being searched via e.g.:. `DYLD_FALLBACK_LIBRARY_PATH=/Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/lib ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon -h`. Please let me know if either of these solutions works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684
https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958:52,Availability,error,error,52,"Hi @antonkulaga,. This is not a particularly useful error message (_sorry for that_), but this is a result of passing both un-paired (`-r`) and paired-end (`-1,-2`) reads to salmon together. This is actually not supported, as the single-end and paired-end models are actually a bit different. I will fix the error checking so that a useful message is printed out if these options are passed in together. Can you let me know if the program runs correctly if you use just the paired-end reads?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958
https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958:308,Availability,error,error,308,"Hi @antonkulaga,. This is not a particularly useful error message (_sorry for that_), but this is a result of passing both un-paired (`-r`) and paired-end (`-1,-2`) reads to salmon together. This is actually not supported, as the single-end and paired-end models are actually a bit different. I will fix the error checking so that a useful message is printed out if these options are passed in together. Can you let me know if the program runs correctly if you use just the paired-end reads?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958
https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958:58,Integrability,message,message,58,"Hi @antonkulaga,. This is not a particularly useful error message (_sorry for that_), but this is a result of passing both un-paired (`-r`) and paired-end (`-1,-2`) reads to salmon together. This is actually not supported, as the single-end and paired-end models are actually a bit different. I will fix the error checking so that a useful message is printed out if these options are passed in together. Can you let me know if the program runs correctly if you use just the paired-end reads?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958
https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958:340,Integrability,message,message,340,"Hi @antonkulaga,. This is not a particularly useful error message (_sorry for that_), but this is a result of passing both un-paired (`-r`) and paired-end (`-1,-2`) reads to salmon together. This is actually not supported, as the single-end and paired-end models are actually a bit different. I will fix the error checking so that a useful message is printed out if these options are passed in together. Can you let me know if the program runs correctly if you use just the paired-end reads?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958
https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392174468:144,Availability,error,error,144,"If this feature is not supported, is there a reason that Salmon is allowed to run through the entire quantification process before throwing the error? Wouldn't it be beneficial to check that the -r and -1 -2 flags are not all called simultaneously? You could always add an override flag if there is some use case for adding all together...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392174468
https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392179743:95,Availability,redundant,redundant,95,nm - I just re-read the above and realized @rob-p already suggested just that. Sorry for being redundant! PS I am very grateful for the existence of Salmon. Thanks to all contributors!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392179743
https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392179743:95,Safety,redund,redundant,95,nm - I just re-read the above and realized @rob-p already suggested just that. Sorry for being redundant! PS I am very grateful for the existence of Salmon. Thanks to all contributors!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392179743
https://github.com/COMBINE-lab/salmon/issues/176#issuecomment-347524898:317,Deployability,patch,patch,317,"Hi @bounlu ,. This warning is harmless, and comes from the fact that the parsing code improved but the rapmap code being called to build the index is forgetting to call a particular method. So, the destructor detects this and calls it instead. This isn't a problem, and won't affect the results. However, I'll push a patch release that eliminates this issue (either today or tomorrow sometime). Until then, you can go ahead using this index, it should work fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176#issuecomment-347524898
https://github.com/COMBINE-lab/salmon/issues/176#issuecomment-347524898:323,Deployability,release,release,323,"Hi @bounlu ,. This warning is harmless, and comes from the fact that the parsing code improved but the rapmap code being called to build the index is forgetting to call a particular method. So, the destructor detects this and calls it instead. This isn't a problem, and won't affect the results. However, I'll push a patch release that eliminates this issue (either today or tomorrow sometime). Until then, you can go ahead using this index, it should work fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176#issuecomment-347524898
https://github.com/COMBINE-lab/salmon/issues/176#issuecomment-347524898:209,Safety,detect,detects,209,"Hi @bounlu ,. This warning is harmless, and comes from the fact that the parsing code improved but the rapmap code being called to build the index is forgetting to call a particular method. So, the destructor detects this and calls it instead. This isn't a problem, and won't affect the results. However, I'll push a patch release that eliminates this issue (either today or tomorrow sometime). Until then, you can go ahead using this index, it should work fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176#issuecomment-347524898
https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360:680,Integrability,message,message,680,"Hi @wdecoster,. Thanks for reporting this. One restriction that needs to be better documented (actually, I have to make sure it is properly documented at all!) is that the library type should come _before_ the reads they describe. That is, you should consider passing `-l SF -r {}` rather than `-r {} -l SF`. The reason for this is that the `-r` and `-1,-2` parameters are repeatable so you could, conceivably, pass multiple reads of different library types. However, this is a feature that nobody uses and frankly doesn't make too much sense (so I'll consider removing it in the future to simplify library type parsing). For the time being, I'll also consider printing a warning message when a read file is encountered without an explicitly pre-defined library type (in that case, the behavior, as you saw, is to assume an unstranded library). Could you let me know if passing `-l` before `-r` resolves the issue for you. As to your other suggestion. The internal capitalization rules follow those for camel-case naming of variables (as opposed to separating words with`_`). However, I realize this is somewhat esoteric and even among those who are familiar with such conventions, an arbitrary preference. I'll look into aliasing this flag (and maybe others) to be usable with different names as well. I just have to check how to do this (and if it is possible) with boost's program options.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360
https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360:1024,Modifiability,variab,variables,1024,"Hi @wdecoster,. Thanks for reporting this. One restriction that needs to be better documented (actually, I have to make sure it is properly documented at all!) is that the library type should come _before_ the reads they describe. That is, you should consider passing `-l SF -r {}` rather than `-r {} -l SF`. The reason for this is that the `-r` and `-1,-2` parameters are repeatable so you could, conceivably, pass multiple reads of different library types. However, this is a feature that nobody uses and frankly doesn't make too much sense (so I'll consider removing it in the future to simplify library type parsing). For the time being, I'll also consider printing a warning message when a read file is encountered without an explicitly pre-defined library type (in that case, the behavior, as you saw, is to assume an unstranded library). Could you let me know if passing `-l` before `-r` resolves the issue for you. As to your other suggestion. The internal capitalization rules follow those for camel-case naming of variables (as opposed to separating words with`_`). However, I realize this is somewhat esoteric and even among those who are familiar with such conventions, an arbitrary preference. I'll look into aliasing this flag (and maybe others) to be usable with different names as well. I just have to check how to do this (and if it is possible) with boost's program options.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360
https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360:590,Usability,simpl,simplify,590,"Hi @wdecoster,. Thanks for reporting this. One restriction that needs to be better documented (actually, I have to make sure it is properly documented at all!) is that the library type should come _before_ the reads they describe. That is, you should consider passing `-l SF -r {}` rather than `-r {} -l SF`. The reason for this is that the `-r` and `-1,-2` parameters are repeatable so you could, conceivably, pass multiple reads of different library types. However, this is a feature that nobody uses and frankly doesn't make too much sense (so I'll consider removing it in the future to simplify library type parsing). For the time being, I'll also consider printing a warning message when a read file is encountered without an explicitly pre-defined library type (in that case, the behavior, as you saw, is to assume an unstranded library). Could you let me know if passing `-l` before `-r` resolves the issue for you. As to your other suggestion. The internal capitalization rules follow those for camel-case naming of variables (as opposed to separating words with`_`). However, I realize this is somewhat esoteric and even among those who are familiar with such conventions, an arbitrary preference. I'll look into aliasing this flag (and maybe others) to be usable with different names as well. I just have to check how to do this (and if it is possible) with boost's program options.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360
https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360:1266,Usability,usab,usable,1266,"Hi @wdecoster,. Thanks for reporting this. One restriction that needs to be better documented (actually, I have to make sure it is properly documented at all!) is that the library type should come _before_ the reads they describe. That is, you should consider passing `-l SF -r {}` rather than `-r {} -l SF`. The reason for this is that the `-r` and `-1,-2` parameters are repeatable so you could, conceivably, pass multiple reads of different library types. However, this is a feature that nobody uses and frankly doesn't make too much sense (so I'll consider removing it in the future to simplify library type parsing). For the time being, I'll also consider printing a warning message when a read file is encountered without an explicitly pre-defined library type (in that case, the behavior, as you saw, is to assume an unstranded library). Could you let me know if passing `-l` before `-r` resolves the issue for you. As to your other suggestion. The internal capitalization rules follow those for camel-case naming of variables (as opposed to separating words with`_`). However, I realize this is somewhat esoteric and even among those who are familiar with such conventions, an arbitrary preference. I'll look into aliasing this flag (and maybe others) to be usable with different names as well. I just have to check how to do this (and if it is possible) with boost's program options.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177#issuecomment-347524360
https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-542828122:17,Usability,simpl,simple,17,"I have couple of simple question on ""list of dir"" to supply part.; 1) DO i have to supply the complete path or just names of dir as a txt file?. I tried both and it does not work! But when i try one folder in the dir it works. salmon quantmerge --quants barcode01_quant -o all_barcodes_merged.txt; Version Info: This is the most recent version of salmon.; [2019-10-16 14:15:06.726] [mergeLog] [info] samples: [ barcode01_quant ]; [2019-10-16 14:15:06.726] [mergeLog] [info] sample names : [ barcode01_quant ]; [2019-10-16 14:15:06.726] [mergeLog] [info] output column : TPM; [2019-10-16 14:15:06.726] [mergeLog] [info] output file : all_barcodes_merged.txt; [2019-10-16 14:15:06.726] [mergeLog] [info] Parsing barcode01_quant/quant.sf. ###; When i try a list of all the folders. almon quantmerge --quants quant_dir_list.txt -o all_barcodes_merged.txt; Version Info: This is the most recent version of salmon.; [2019-10-16 14:15:54.698] [mergeLog] [info] samples: [ quant_dir_list.txt ]; [2019-10-16 14:15:54.698] [mergeLog] [info] sample names : [ quant_dir_list.txt ]; [2019-10-16 14:15:54.698] [mergeLog] [info] output column : TPM; [2019-10-16 14:15:54.698] [mergeLog] [info] output file : all_barcodes_merged.txt; [2019-10-16 14:15:54.698] [mergeLog] [critical] The sample directory quant_dir_list.txt either doesn't exist, or doesn't contain a quant.sf file. head quant_dir_list.txt; barcode01_quant; barcode02_quant; barcode03_quant; barcode04_quant; barcode05_quant; barcode06_quant; barcode07_quant; barcode08_quant. I have even tried with complete path to the dir and it fails. What am i doing wrong. Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-542828122
https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-543271953:63,Availability,error,error,63,"There are quant.sf files in each one of folders. But i get the error saying ""doesn't contain quant.sf "". aux_info cmd_info.json lib_format_counts.json libParams logs quant.sf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-543271953
https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-543271953:161,Testability,log,logs,161,"There are quant.sf files in each one of folders. But i get the error saying ""doesn't contain quant.sf "". aux_info cmd_info.json lib_format_counts.json libParams logs quant.sf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-543271953
https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-724756145:42,Availability,avail,available,42,"Above list format @Yago-91 showed is also available for `salmon quant` to input multiple sequence files.; e.g. `salmon quant -l A -i reference -o result -1 {sample1_1.fastq.gz,sample2_1.fastq.gz} -2 {sample1_2.fastq.gz,sample2_2.fastq.gz}`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-724756145
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470:50,Availability,down,downloading,50,"Hi Gert,. Indeed, the CMake build uses `curl` for downloading relevant dependencies. Presumably, it would be possible to have a fallback to `wget` if `curl` is not available. I will look into the best way to do this. In the meantime, you should be able to use the pre-compiled binary for linux (x86-64) or install Salmon via [bioconda](https://anaconda.org/bioconda/salmon). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470:164,Availability,avail,available,164,"Hi Gert,. Indeed, the CMake build uses `curl` for downloading relevant dependencies. Presumably, it would be possible to have a fallback to `wget` if `curl` is not available. I will look into the best way to do this. In the meantime, you should be able to use the pre-compiled binary for linux (x86-64) or install Salmon via [bioconda](https://anaconda.org/bioconda/salmon). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470:306,Deployability,install,install,306,"Hi Gert,. Indeed, the CMake build uses `curl` for downloading relevant dependencies. Presumably, it would be possible to have a fallback to `wget` if `curl` is not available. I will look into the best way to do this. In the meantime, you should be able to use the pre-compiled binary for linux (x86-64) or install Salmon via [bioconda](https://anaconda.org/bioconda/salmon). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470:71,Integrability,depend,dependencies,71,"Hi Gert,. Indeed, the CMake build uses `curl` for downloading relevant dependencies. Presumably, it would be possible to have a fallback to `wget` if `curl` is not available. I will look into the best way to do this. In the meantime, you should be able to use the pre-compiled binary for linux (x86-64) or install Salmon via [bioconda](https://anaconda.org/bioconda/salmon). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540:226,Availability,down,downloads,226,"Actually, I was only checking the package for building it on Debian, I don't use it personally. ; From that point of view of packaging the software for Debian it would be desirable to be able to build the software without any downloads during the build process. The reason for this is that building packages on the Debian build servers does not allow downloads for the very simple reason that this would bypass the QA checks for proper licensing of all files required to build some software (The same is true for Ubuntu and Linux distributions based on Debian). . Best, ; Gert",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540:351,Availability,down,downloads,351,"Actually, I was only checking the package for building it on Debian, I don't use it personally. ; From that point of view of packaging the software for Debian it would be desirable to be able to build the software without any downloads during the build process. The reason for this is that building packages on the Debian build servers does not allow downloads for the very simple reason that this would bypass the QA checks for proper licensing of all files required to build some software (The same is true for Ubuntu and Linux distributions based on Debian). . Best, ; Gert",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540:374,Usability,simpl,simple,374,"Actually, I was only checking the package for building it on Debian, I don't use it personally. ; From that point of view of packaging the software for Debian it would be desirable to be able to build the software without any downloads during the build process. The reason for this is that building packages on the Debian build servers does not allow downloads for the very simple reason that this would bypass the QA checks for proper licensing of all files required to build some software (The same is true for Ubuntu and Linux distributions based on Debian). . Best, ; Gert",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842:30,Availability,error,error,30,"Hi, Rob. I'm seeing this same error `Cannot find source file`; ```; -- Configuring done; CMake Error at src/CMakeLists.txt:113 (add_executable):; Cannot find source file:; /tmp/salmon-20180222-8345-abjxc0/salmon-0.8.2/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```; See the complete build log at https://circleci.com/gh/brewsci/homebrew-bio/491; Any ideas?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842:95,Availability,Error,Error,95,"Hi, Rob. I'm seeing this same error `Cannot find source file`; ```; -- Configuring done; CMake Error at src/CMakeLists.txt:113 (add_executable):; Cannot find source file:; /tmp/salmon-20180222-8345-abjxc0/salmon-0.8.2/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```; See the complete build log at https://circleci.com/gh/brewsci/homebrew-bio/491; Any ideas?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842:227,Deployability,install,install,227,"Hi, Rob. I'm seeing this same error `Cannot find source file`; ```; -- Configuring done; CMake Error at src/CMakeLists.txt:113 (add_executable):; Cannot find source file:; /tmp/salmon-20180222-8345-abjxc0/salmon-0.8.2/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```; See the complete build log at https://circleci.com/gh/brewsci/homebrew-bio/491; Any ideas?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842:71,Modifiability,Config,Configuring,71,"Hi, Rob. I'm seeing this same error `Cannot find source file`; ```; -- Configuring done; CMake Error at src/CMakeLists.txt:113 (add_executable):; Cannot find source file:; /tmp/salmon-20180222-8345-abjxc0/salmon-0.8.2/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```; See the complete build log at https://circleci.com/gh/brewsci/homebrew-bio/491; Any ideas?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842:385,Testability,log,log,385,"Hi, Rob. I'm seeing this same error `Cannot find source file`; ```; -- Configuring done; CMake Error at src/CMakeLists.txt:113 (add_executable):; Cannot find source file:; /tmp/salmon-20180222-8345-abjxc0/salmon-0.8.2/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```; See the complete build log at https://circleci.com/gh/brewsci/homebrew-bio/491; Any ideas?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367729441:102,Availability,down,down,102,"Hi Shaun!. This is strange! One thing that's strange about it is that this seems to be trying to pull down v0.8.2 rather than v0.9.1 --- is that correct? The stranger thing though is that it seem the ""fetchRapMap.sh"" script isn't being run, which means the following from the CMakeLists.txt is not being executed:. ```; if(NOT FETCHED_RAPMAP); exec_program(${CMAKE_CURRENT_SOURCE_DIR}/scripts/fetchRapMap.sh); set(FETCHED_RAPMAP TRUE CACHE BOOL ""Has RapMap been fetched?"" FORCE); endif(); ```. Any idea why this might be happening? Does the CI environment prohibit this for some reason?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367729441
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367729441:434,Performance,CACHE,CACHE,434,"Hi Shaun!. This is strange! One thing that's strange about it is that this seems to be trying to pull down v0.8.2 rather than v0.9.1 --- is that correct? The stranger thing though is that it seem the ""fetchRapMap.sh"" script isn't being run, which means the following from the CMakeLists.txt is not being executed:. ```; if(NOT FETCHED_RAPMAP); exec_program(${CMAKE_CURRENT_SOURCE_DIR}/scripts/fetchRapMap.sh); set(FETCHED_RAPMAP TRUE CACHE BOOL ""Has RapMap been fetched?"" FORCE); endif(); ```. Any idea why this might be happening? Does the CI environment prohibit this for some reason?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367729441
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367734290:768,Deployability,install,installed,768,"Hi, Rob. I'm migrating the previous known-good formula from the deprecated Homebrew/science tap to the new Brewsci/bio tap. I usually first migrate the last known-good formula, and then in a second PR bump the version to the most recent version. I'll bump the version know though for the sake of troubleshooting. Here's the build log for 0.9.1: https://circleci.com/gh/brewsci/homebrew-bio/500. ~~By default CircleCI runs with `make -j32`. Is it perhaps an issue with the Makefile not liking parallel?~~; I see that it's already being run with `make -j1` because it's known not to like being run in parallel. > Any idea why this might be happening? Does the CI environment prohibit this for some reason?. I'm not aware of any reason that it wouldn't be run. `curl` is installed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367734290
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367734290:330,Testability,log,log,330,"Hi, Rob. I'm migrating the previous known-good formula from the deprecated Homebrew/science tap to the new Brewsci/bio tap. I usually first migrate the last known-good formula, and then in a second PR bump the version to the most recent version. I'll bump the version know though for the sake of troubleshooting. Here's the build log for 0.9.1: https://circleci.com/gh/brewsci/homebrew-bio/500. ~~By default CircleCI runs with `make -j32`. Is it perhaps an issue with the Makefile not liking parallel?~~; I see that it's already being run with `make -j1` because it's known not to like being run in parallel. > Any idea why this might be happening? Does the CI environment prohibit this for some reason?. I'm not aware of any reason that it wouldn't be run. `curl` is installed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367734290
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367735487:238,Deployability,Release,Release,238,"`cmake` is being run with the default Homebrew flags, which are…; ```sh; cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/home/linuxbrew/.linuxbrew/Cellar/salmon/0.9.1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_VERBOSE_MAKEFILE=ON -Wno-dev; ```; Are any of those options related?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367735487
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367755018:243,Deployability,release,releases,243,"Hrmm, it doesn't seem so. I am able to do cmake with exactly these options and it still runs the `fetchRapMap.sh` script. I tried this under both 0.8.2 and 0.9.1. Let me look more through the logs. Also, parallel builds *should* work in newer releases (our internal build does parallel make on our CI).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367755018
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367755018:192,Testability,log,logs,192,"Hrmm, it doesn't seem so. I am able to do cmake with exactly these options and it still runs the `fetchRapMap.sh` script. I tried this under both 0.8.2 and 0.9.1. Let me look more through the logs. Also, parallel builds *should* work in newer releases (our internal build does parallel make on our CI).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367755018
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367755874:20,Security,access,access,20,"Is there any way to access the CMakeLog info that was not written to stderr/stdout? This is all related to it not running the fetch script, but the stdout doesn't show anything about that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367755874
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367756380:38,Deployability,install,install,38,The script was running `cmake && make install` with no `make`. Could that be it? I've added `make` before `make install`. I'll get that log file for you.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367756380
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367756380:112,Deployability,install,install,112,The script was running `cmake && make install` with no `make`. Could that be it? I've added `make` before `make install`. I'll get that log file for you.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367756380
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367756380:136,Testability,log,log,136,The script was running `cmake && make install` with no `make`. Could that be it? I've added `make` before `make install`. I'll get that log file for you.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367756380
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367760156:15,Deployability,install,install,15,`cmake && make install` _should_ work --- the fetching should happen during the configuration (i.e. `cmake`) phase.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367760156
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367760156:80,Deployability,configurat,configuration,80,`cmake && make install` _should_ work --- the fetching should happen during the configuration (i.e. `cmake`) phase.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367760156
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367760156:80,Modifiability,config,configuration,80,`cmake && make install` _should_ work --- the fetching should happen during the configuration (i.e. `cmake`) phase.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367760156
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075:298,Availability,error,error,298,"I don't see any files named `*CMakeLog*`. Which file exactly do you need? I see…; ```; CMakeFiles/CMakeError.log CMakeFiles/CMakeRuleHashes.txt; CMakeFiles/CMakeOutput.log CMakeFiles/TargetDirectories.txt; ```; Here's a gist: https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda; This error is reproducible like so:; ```sh; docker run -it linuxbrew/linuxbrew brew install -sdv https://raw.githubusercontent.com/sjackman/homebrew-bio/dab661f902c5841e0d498eb338975c47080a1118/Formula/salmon.rb; ```. Ignore `FormulaUnavailableError: No available formula with the name ""xorg""`; and select `5. shell` to get a shell prompt",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075:547,Availability,avail,available,547,"I don't see any files named `*CMakeLog*`. Which file exactly do you need? I see…; ```; CMakeFiles/CMakeError.log CMakeFiles/CMakeRuleHashes.txt; CMakeFiles/CMakeOutput.log CMakeFiles/TargetDirectories.txt; ```; Here's a gist: https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda; This error is reproducible like so:; ```sh; docker run -it linuxbrew/linuxbrew brew install -sdv https://raw.githubusercontent.com/sjackman/homebrew-bio/dab661f902c5841e0d498eb338975c47080a1118/Formula/salmon.rb; ```. Ignore `FormulaUnavailableError: No available formula with the name ""xorg""`; and select `5. shell` to get a shell prompt",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075:377,Deployability,install,install,377,"I don't see any files named `*CMakeLog*`. Which file exactly do you need? I see…; ```; CMakeFiles/CMakeError.log CMakeFiles/CMakeRuleHashes.txt; CMakeFiles/CMakeOutput.log CMakeFiles/TargetDirectories.txt; ```; Here's a gist: https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda; This error is reproducible like so:; ```sh; docker run -it linuxbrew/linuxbrew brew install -sdv https://raw.githubusercontent.com/sjackman/homebrew-bio/dab661f902c5841e0d498eb338975c47080a1118/Formula/salmon.rb; ```. Ignore `FormulaUnavailableError: No available formula with the name ""xorg""`; and select `5. shell` to get a shell prompt",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075:109,Testability,log,log,109,"I don't see any files named `*CMakeLog*`. Which file exactly do you need? I see…; ```; CMakeFiles/CMakeError.log CMakeFiles/CMakeRuleHashes.txt; CMakeFiles/CMakeOutput.log CMakeFiles/TargetDirectories.txt; ```; Here's a gist: https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda; This error is reproducible like so:; ```sh; docker run -it linuxbrew/linuxbrew brew install -sdv https://raw.githubusercontent.com/sjackman/homebrew-bio/dab661f902c5841e0d498eb338975c47080a1118/Formula/salmon.rb; ```. Ignore `FormulaUnavailableError: No available formula with the name ""xorg""`; and select `5. shell` to get a shell prompt",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075:168,Testability,log,log,168,"I don't see any files named `*CMakeLog*`. Which file exactly do you need? I see…; ```; CMakeFiles/CMakeError.log CMakeFiles/CMakeRuleHashes.txt; CMakeFiles/CMakeOutput.log CMakeFiles/TargetDirectories.txt; ```; Here's a gist: https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda; This error is reproducible like so:; ```sh; docker run -it linuxbrew/linuxbrew brew install -sdv https://raw.githubusercontent.com/sjackman/homebrew-bio/dab661f902c5841e0d498eb338975c47080a1118/Formula/salmon.rb; ```. Ignore `FormulaUnavailableError: No available formula with the name ""xorg""`; and select `5. shell` to get a shell prompt",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367795756:24,Availability,avail,available,24,"Thanks for making these available! I'm looking through. Though it's not directly related to the `fetchRapMap.sh` script, I do find [this](https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda#file-cmakeerror-log-L47) disconcerting. Any idea what's up there?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367795756
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367795756:220,Testability,log,log-,220,"Thanks for making these available! I'm looking through. Though it's not directly related to the `fetchRapMap.sh` script, I do find [this](https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda#file-cmakeerror-log-L47) disconcerting. Any idea what's up there?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367795756
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367796621:194,Testability,test,test,194,"```; /usr/bin/ld: cannot find -lpthreads; ```; That's normal. Cmake is probing to determine the name of the pthreads library on this system, and it's named `-lpthread` not `-lpthreads`, so this test fails, and is expected to fail.; ```; ❯❯❯ ls /usr/lib/x86_64-linux-gnu/libpthread.so; /usr/lib/x86_64-linux-gnu/libpthread.so; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367796621
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367800400:298,Availability,avail,available,298,"Got it! The docker image is gold; thanks for that. Here is the source of the problem:. ```; /tmp/salmon-20180222-6167-19otg9q/salmon-0.9.1/scripts/fetchRapMap.sh: line 51: unzip: command not found; ```. we grab a zip of the (version-tagged) rapmap that we need. However, it seems that unzip is not available.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367800400
https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367802780:43,Integrability,depend,dependencies,43,"Thanks, Rob. I'll add `unzip` to the build dependencies of `salmon`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367802780
https://github.com/COMBINE-lab/salmon/issues/183#issuecomment-359218185:1364,Usability,clear,clearly,1364,"Hi @nskbe,. I apologize for the slow reply. Things have been super-busy over the ""break"" trying to get things done before the semester starts here. Let me see if I can answer your question satisfactorily. In retrospect, I think that the raw `lib_format_counts.json` file can be quite confusing, and I should definitely provide a more thorough description of it in the documentation (or include a tool to generate a more digestible report from it). Basically, the report records the number of each type of _mapping_ observed. By _mapping_, I mean the particular correspondence between a read and a transcript. A given read can have many mappings, and so can contribute multiple times to the entries of the `lib_format_counts.json` file. The reason changing the library type doesn't change the results of this file is because this file records how fragments _mapped_ to the reference, not necessarily how they were _assigned_ during quantification. So, for example, a read map map in both the forward `SF` and reverse complement `SR` orientations. If you pass the library type `-l SR` to Salmon, then the reverse complement mapping will be strongly preferred for assignment of the read to the forward mapping. However, before the read was probabilistically assigned to a transcript, both types of mappings were observed. From the report you have provided, you quite clearly have a `SR` library type. One other thing that I should note. As I mention above, Salmon will assign a higher probability to the preferred library type, but not, by default, a probability of 1. If you want to force Salmon to only assign reads that arise from mappings in the prescribed orientation, you should pass the flag `--incompatPrior 0.0`. This will tell Salmon that it should assign a probability of 0 to any read that maps to a transcript in a way that disagrees with the provided library type. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/183#issuecomment-359218185
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-358336866:60,Deployability,patch,patch,60,"Hi @rekado,. I would absolutely be willing to accept such a patch, and this is a good idea! However, as I mention in issue #102, there is a _small_, inherent, non-determinism in the program, even if random seeds are all set identically. This is due to the streaming nature of the first phase of the algorithm (i.e., the online phase). Specifically, the initial, online abundance estimates, as well as the parameters of some of the experimental and bias models, can be affected by the order in which reads are observed / processed, which is asynchronous and non-deterministic. As I mention in #102, deviations are expected to be _very small_, and any differences encountered due to this are smaller than the inherent uncertainty in inference. I think that allowing to remove all controllable sources of non-determinism (e.g. random number generator seeds) is a great idea, and we should do it. However, removing small perturbations that are due to asynchronous processing of reads is a much larger task.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-358336866
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-358792432:137,Deployability,pipeline,pipeline,137,"+1 for this feature, I would like to be able to use this feature for helping quality control and testing for our larger automated Salmon pipeline. @rekado - do you want to try to develop this and submit a pull request? :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-358792432
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-358792432:97,Testability,test,testing,97,"+1 for this feature, I would like to be able to use this feature for helping quality control and testing for our larger automated Salmon pipeline. @rekado - do you want to try to develop this and submit a pull request? :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-358792432
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392759884:88,Integrability,depend,dependent,88,"Hi @rob-p,. you wrote that the first phase of the algorithm may yield different results dependent on the order in which reads are observed / processed. How is the order determined? Could you point me to the location in the source where this happens?. Asynchronicity doesn't necessarily have to lead to non-determinism if we can ensure that the assignment of threads of execution to reads is deterministic. I'd be happy to work on this, if you can point me to the locations of interest (and maybe some overview on how the code is supposed to behave). (Note: I'm not a biologist, just a silly hacker, so please be patient when I have silly questions.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392759884
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209:782,Deployability,update,update,782,"Hi @rekado,. The order is determined based on how work is pulled from a queue. Specifically, the way quantification works in the first phase is that independent threads pull reads to be processed from a lock-free concurrent queue [e.g. here for paired-end reads](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L981). This queue is filled in by parsing threads (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/src/FastxParser.cpp#L151)). This is the major source of stochasticity. One other source is that once reads are pulled from the queue, they are mapped and then their contribution to the quantifications is processed in [this function](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L165) which, itself, calls update functions to a few classes that are potentially being updated by many threads. I'd be thrilled, of course, if you were able to find a good way to make this process deterministic. To me, however, this seems like a tall task. Best,; Rob. P.S. None of your questions are silly; I'm happy to answer them!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209:843,Deployability,update,updated,843,"Hi @rekado,. The order is determined based on how work is pulled from a queue. Specifically, the way quantification works in the first phase is that independent threads pull reads to be processed from a lock-free concurrent queue [e.g. here for paired-end reads](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L981). This queue is filled in by parsing threads (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/src/FastxParser.cpp#L151)). This is the major source of stochasticity. One other source is that once reads are pulled from the queue, they are mapped and then their contribution to the quantifications is processed in [this function](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L165) which, itself, calls update functions to a few classes that are potentially being updated by many threads. I'd be thrilled, of course, if you were able to find a good way to make this process deterministic. To me, however, this seems like a tall task. Best,; Rob. P.S. None of your questions are silly; I'm happy to answer them!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209:72,Performance,queue,queue,72,"Hi @rekado,. The order is determined based on how work is pulled from a queue. Specifically, the way quantification works in the first phase is that independent threads pull reads to be processed from a lock-free concurrent queue [e.g. here for paired-end reads](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L981). This queue is filled in by parsing threads (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/src/FastxParser.cpp#L151)). This is the major source of stochasticity. One other source is that once reads are pulled from the queue, they are mapped and then their contribution to the quantifications is processed in [this function](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L165) which, itself, calls update functions to a few classes that are potentially being updated by many threads. I'd be thrilled, of course, if you were able to find a good way to make this process deterministic. To me, however, this seems like a tall task. Best,; Rob. P.S. None of your questions are silly; I'm happy to answer them!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209:213,Performance,concurren,concurrent,213,"Hi @rekado,. The order is determined based on how work is pulled from a queue. Specifically, the way quantification works in the first phase is that independent threads pull reads to be processed from a lock-free concurrent queue [e.g. here for paired-end reads](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L981). This queue is filled in by parsing threads (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/src/FastxParser.cpp#L151)). This is the major source of stochasticity. One other source is that once reads are pulled from the queue, they are mapped and then their contribution to the quantifications is processed in [this function](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L165) which, itself, calls update functions to a few classes that are potentially being updated by many threads. I'd be thrilled, of course, if you were able to find a good way to make this process deterministic. To me, however, this seems like a tall task. Best,; Rob. P.S. None of your questions are silly; I'm happy to answer them!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209:224,Performance,queue,queue,224,"Hi @rekado,. The order is determined based on how work is pulled from a queue. Specifically, the way quantification works in the first phase is that independent threads pull reads to be processed from a lock-free concurrent queue [e.g. here for paired-end reads](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L981). This queue is filled in by parsing threads (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/src/FastxParser.cpp#L151)). This is the major source of stochasticity. One other source is that once reads are pulled from the queue, they are mapped and then their contribution to the quantifications is processed in [this function](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L165) which, itself, calls update functions to a few classes that are potentially being updated by many threads. I'd be thrilled, of course, if you were able to find a good way to make this process deterministic. To me, however, this seems like a tall task. Best,; Rob. P.S. None of your questions are silly; I'm happy to answer them!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209:348,Performance,queue,queue,348,"Hi @rekado,. The order is determined based on how work is pulled from a queue. Specifically, the way quantification works in the first phase is that independent threads pull reads to be processed from a lock-free concurrent queue [e.g. here for paired-end reads](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L981). This queue is filled in by parsing threads (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/src/FastxParser.cpp#L151)). This is the major source of stochasticity. One other source is that once reads are pulled from the queue, they are mapped and then their contribution to the quantifications is processed in [this function](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L165) which, itself, calls update functions to a few classes that are potentially being updated by many threads. I'd be thrilled, of course, if you were able to find a good way to make this process deterministic. To me, however, this seems like a tall task. Best,; Rob. P.S. None of your questions are silly; I'm happy to answer them!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209
https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209:576,Performance,queue,queue,576,"Hi @rekado,. The order is determined based on how work is pulled from a queue. Specifically, the way quantification works in the first phase is that independent threads pull reads to be processed from a lock-free concurrent queue [e.g. here for paired-end reads](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L981). This queue is filled in by parsing threads (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/src/FastxParser.cpp#L151)). This is the major source of stochasticity. One other source is that once reads are pulled from the queue, they are mapped and then their contribution to the quantifications is processed in [this function](https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L165) which, itself, calls update functions to a few classes that are potentially being updated by many threads. I'd be thrilled, of course, if you were able to find a good way to make this process deterministic. To me, however, this seems like a tall task. Best,; Rob. P.S. None of your questions are silly; I'm happy to answer them!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185#issuecomment-392962209
https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359017963:56,Availability,down,download,56,"I think @rob-p meant to include links in his reply. The download page is [here](https://www.gencodegenes.org/releases/current.html), and you're likely looking for this file:. ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_27/gencode.v27.pc_transcripts.fa.gz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359017963
https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359017963:109,Deployability,release,releases,109,"I think @rob-p meant to include links in his reply. The download page is [here](https://www.gencodegenes.org/releases/current.html), and you're likely looking for this file:. ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_27/gencode.v27.pc_transcripts.fa.gz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359017963
https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359218368:30,Usability,feedback,feedback,30,"Hi @DawnEve,. Thanks for your feedback, and I'm sorry this caused you such a headache. You're right that it would be a good idea to link to the most common transcriptomes for model organisms (e.g. human and mouse) directly in the documentation. I'll add this in the future. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359218368
https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-361717344:43,Energy Efficiency,monitor,monitoring,43,"What's wrong with actually running salmon, monitoring stderr for what you need, and then killing the process?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-361717344
https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-361748694:146,Performance,optimiz,optimizer,146,"I don't completely disagree, and don't speak for this project as anything other than a user, but `until 'salmon [args]' 2>1 | grep -m 1 ""Starting optimizer""; do : ; done` seems pretty unix-y to me.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-361748694
https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-362155044:155,Performance,load,load,155,"Hi @Miserlou,. I'm not necessarily opposed to this. What exactly would the dry-run do? For example, would it simply check if the input files exist, try to load the index, etc.? This seems like it could be useful functionality, though, in my experience `--dry-run` commands usually aren't effectful (i.e. they usually don't create directories or output files). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-362155044
https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-362155044:109,Usability,simpl,simply,109,"Hi @Miserlou,. I'm not necessarily opposed to this. What exactly would the dry-run do? For example, would it simply check if the input files exist, try to load the index, etc.? This seems like it could be useful functionality, though, in my experience `--dry-run` commands usually aren't effectful (i.e. they usually don't create directories or output files). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189#issuecomment-362155044
https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695:270,Availability,down,downstream,270,"It depends what type of ""replicates"" these are. If these are biological replicates, then they should _definitely_ be run separately. Biological replicates contain crucial information about the variability of expression that can be expected in a given condition, and all downstream differential expression tools will use this information. If these are ""technical"" replicates, then there should be little harm in quantifying them together (of course, then one has a 2 condition experiment with only 1 biological replicate per-condition ... which is a big problem if one wishes to analyze e.g. differential expression).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695
https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695:3,Integrability,depend,depends,3,"It depends what type of ""replicates"" these are. If these are biological replicates, then they should _definitely_ be run separately. Biological replicates contain crucial information about the variability of expression that can be expected in a given condition, and all downstream differential expression tools will use this information. If these are ""technical"" replicates, then there should be little harm in quantifying them together (of course, then one has a 2 condition experiment with only 1 biological replicate per-condition ... which is a big problem if one wishes to analyze e.g. differential expression).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695
https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695:193,Modifiability,variab,variability,193,"It depends what type of ""replicates"" these are. If these are biological replicates, then they should _definitely_ be run separately. Biological replicates contain crucial information about the variability of expression that can be expected in a given condition, and all downstream differential expression tools will use this information. If these are ""technical"" replicates, then there should be little harm in quantifying them together (of course, then one has a 2 condition experiment with only 1 biological replicate per-condition ... which is a big problem if one wishes to analyze e.g. differential expression).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695
https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963:261,Availability,avail,available,261,"Hi! I'm really sorry for taking so long to get back to you; things have been quite hectic this semester. The reason it's not being show is because it's been placed in a parameter group that is not made visible by default; the `--posBias` option itself is still available. It's definitely still experimental in that it has not been tested nearly as thoroughly as the other bias models. However, it is useable. Once we have performed more testing, it will migrate into the normal options and be better documented. If you gather any useful data while using this flag, we'd love some feedback!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963
https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963:422,Performance,perform,performed,422,"Hi! I'm really sorry for taking so long to get back to you; things have been quite hectic this semester. The reason it's not being show is because it's been placed in a parameter group that is not made visible by default; the `--posBias` option itself is still available. It's definitely still experimental in that it has not been tested nearly as thoroughly as the other bias models. However, it is useable. Once we have performed more testing, it will migrate into the normal options and be better documented. If you gather any useful data while using this flag, we'd love some feedback!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963
https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963:331,Testability,test,tested,331,"Hi! I'm really sorry for taking so long to get back to you; things have been quite hectic this semester. The reason it's not being show is because it's been placed in a parameter group that is not made visible by default; the `--posBias` option itself is still available. It's definitely still experimental in that it has not been tested nearly as thoroughly as the other bias models. However, it is useable. Once we have performed more testing, it will migrate into the normal options and be better documented. If you gather any useful data while using this flag, we'd love some feedback!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963
https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963:437,Testability,test,testing,437,"Hi! I'm really sorry for taking so long to get back to you; things have been quite hectic this semester. The reason it's not being show is because it's been placed in a parameter group that is not made visible by default; the `--posBias` option itself is still available. It's definitely still experimental in that it has not been tested nearly as thoroughly as the other bias models. However, it is useable. Once we have performed more testing, it will migrate into the normal options and be better documented. If you gather any useful data while using this flag, we'd love some feedback!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963
https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963:580,Usability,feedback,feedback,580,"Hi! I'm really sorry for taking so long to get back to you; things have been quite hectic this semester. The reason it's not being show is because it's been placed in a parameter group that is not made visible by default; the `--posBias` option itself is still available. It's definitely still experimental in that it has not been tested nearly as thoroughly as the other bias models. However, it is useable. Once we have performed more testing, it will migrate into the normal options and be better documented. If you gather any useful data while using this flag, we'd love some feedback!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-362880274:197,Deployability,install,install,197,"Hi @bgarchow,. This appears to be because you are trying to use the linux binary on OSX. These aren't binary-compatible operating systems. If you want to use Salmon on OSX, then you should either [install it using bioconda](https://anaconda.org/bioconda/salmon) (this is the easiest and quickest option), or build it from source. Let me know if you're able to do the bioconda install (they have it pre-built for OSX). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-362880274
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-362880274:376,Deployability,install,install,376,"Hi @bgarchow,. This appears to be because you are trying to use the linux binary on OSX. These aren't binary-compatible operating systems. If you want to use Salmon on OSX, then you should either [install it using bioconda](https://anaconda.org/bioconda/salmon) (this is the easiest and quickest option), or build it from source. Let me know if you're able to do the bioconda install (they have it pre-built for OSX). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-362880274
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230:141,Availability,error,error,141,"Hi,; It does not seem to work through bioconda, I am trying to install the latest release on OSX with conda but I keep getting the following error:. ```; $ conda install -c bioconda salmon ; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon; - boost=1.64; - salmon; - libcxx==4.0.0. Current channels:. - https://conda.anaconda.org/bioconda/osx-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/osx-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/osx-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/osx-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/osx-64; - https://repo.anaconda.com/pkgs/pro/noarch; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230:274,Availability,avail,available,274,"Hi,; It does not seem to work through bioconda, I am trying to install the latest release on OSX with conda but I keep getting the following error:. ```; $ conda install -c bioconda salmon ; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon; - boost=1.64; - salmon; - libcxx==4.0.0. Current channels:. - https://conda.anaconda.org/bioconda/osx-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/osx-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/osx-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/osx-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/osx-64; - https://repo.anaconda.com/pkgs/pro/noarch; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230:63,Deployability,install,install,63,"Hi,; It does not seem to work through bioconda, I am trying to install the latest release on OSX with conda but I keep getting the following error:. ```; $ conda install -c bioconda salmon ; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon; - boost=1.64; - salmon; - libcxx==4.0.0. Current channels:. - https://conda.anaconda.org/bioconda/osx-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/osx-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/osx-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/osx-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/osx-64; - https://repo.anaconda.com/pkgs/pro/noarch; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230:82,Deployability,release,release,82,"Hi,; It does not seem to work through bioconda, I am trying to install the latest release on OSX with conda but I keep getting the following error:. ```; $ conda install -c bioconda salmon ; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon; - boost=1.64; - salmon; - libcxx==4.0.0. Current channels:. - https://conda.anaconda.org/bioconda/osx-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/osx-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/osx-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/osx-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/osx-64; - https://repo.anaconda.com/pkgs/pro/noarch; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230:162,Deployability,install,install,162,"Hi,; It does not seem to work through bioconda, I am trying to install the latest release on OSX with conda but I keep getting the following error:. ```; $ conda install -c bioconda salmon ; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon; - boost=1.64; - salmon; - libcxx==4.0.0. Current channels:. - https://conda.anaconda.org/bioconda/osx-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/osx-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/osx-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/osx-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/osx-64; - https://repo.anaconda.com/pkgs/pro/noarch; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379775613:114,Deployability,install,install,114,"Hi @Jx-b,. There seem to be some strange versioning issues with bioconda. Can you try the following; which should install salmon in its own environment?. ```; conda create -n salmon salmon=0.9.1; ```. Then, you can activate the salmon environment and run salmon from there. Please let me know if this works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379775613
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:132,Availability,error,error,132,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:611,Availability,down,downloaded,611,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:547,Deployability,update,updated,547,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:205,Modifiability,config,config,205,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:314,Modifiability,config,config,314,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:357,Modifiability,config,config,357,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:239,Security,access,access,239,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270:53,Availability,failure,failure,53,"I tried ; conda install -c bioconda salmon ; similar failure as shown by Jx-b.; Then I tried the way as Jx-b suggested, it failed at first. After updating Conda to the latest version (4.5.1), removing the salmon file and reinstall it by:; conda create -n salmon salmon=0.9.1; The installation was finally complete without error. Thanks for the discussion here, @Jx-b",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270:322,Availability,error,error,322,"I tried ; conda install -c bioconda salmon ; similar failure as shown by Jx-b.; Then I tried the way as Jx-b suggested, it failed at first. After updating Conda to the latest version (4.5.1), removing the salmon file and reinstall it by:; conda create -n salmon salmon=0.9.1; The installation was finally complete without error. Thanks for the discussion here, @Jx-b",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270:16,Deployability,install,install,16,"I tried ; conda install -c bioconda salmon ; similar failure as shown by Jx-b.; Then I tried the way as Jx-b suggested, it failed at first. After updating Conda to the latest version (4.5.1), removing the salmon file and reinstall it by:; conda create -n salmon salmon=0.9.1; The installation was finally complete without error. Thanks for the discussion here, @Jx-b",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270
https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270:280,Deployability,install,installation,280,"I tried ; conda install -c bioconda salmon ; similar failure as shown by Jx-b.; Then I tried the way as Jx-b suggested, it failed at first. After updating Conda to the latest version (4.5.1), removing the salmon file and reinstall it by:; conda create -n salmon salmon=0.9.1; The installation was finally complete without error. Thanks for the discussion here, @Jx-b",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270
https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-371818629:25,Usability,simpl,simple,25,This seems like a fairly simple job for an external tool as well. What did you have in mind? Just transcript --> genomic coordinates in a table or are you interested in visualizing the pseudobam output mapped to genomic coordinates?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-371818629
https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-733126078:337,Security,validat,validateMappings,337,"Hey @rob-p @mdshw5 ,. First, thanks a lot for implementing salmon, it is super helpful. Has this been achieved? I would like to visualise the ```salmon quant```output in IGV. . I have generate the .bam file with ```salmon quant -lISR -r Parent_NGSC3_DI_HodgkinsLymphoma_S1_L002_R2_001.fastq.gz -i $SALMON_INDEX -p 26 -o alignment_file --validateMappings --no-version-check --writeMappings | samtools view -Sb - | samtools sort -T sort.tmp -o - > salmon.bam```. But if I explore the bam file with ```samtools view```what I see is:; ```; A00519:603:H7KMNDSXY:2:1307:5900:21699	16	ENST00000390436.2	204	255	91M	*	0	0	AAAAGACCTCAGCTTATTATAGACATTCGTTCAAATGTGGGCGAAAAGAAAGACCAACGAATTGCTGTTACATTGAACAAGACAGCCAAAC	*	NH:i:1	HI:i:1	XT:A:T	AS:i:176; A00519:603:H7KMNDSXY:2:1307:5801:2018	0	ENST00000535880.2	326	255	91M	*	0	0	GACGGTTTTCTGTGAAACACATTCTGACCCAGAAAGCCTTTCACTTGGTGATCTCTCCAGTAAGGACTGAAGACAGTGCCACTTACTACTG	*	NH:i:1	HI:i:1	XT:A:T	AS:i:182; ```. Where in the 3rd column I am seeing the transcript ID. I would like to have the chromosome coordinates of that read, like here:; ```; A00519:603:H7KMNDSXY:2:1401:1814:22357	0	chr1	11261	0	90M	*	0	0	CTATTGCTTAGACTGGTGGCCAGCGCCCCCTGCTGGCGCCGGGGCACTGCAGGGCCCTCTTGCTTACTGTATAGTGGTGGCACGCCGCCT	FF,FFFFFFFFF,FFFFFFFFFFFFF:FFFF,FFFFFFFFFFFF,FFFFFFF:,FFFFFFFFFFFF,:,:FFFFF,FFFF::F,F,F:FF	NH:i:5	HI:i:1	AS:i:84	nM:i:2	RG:Z:Parent_NGSC3_DI_HodgkinsLymphoma:0:1:H7KMNDSXY:2	RE:A:I	xf:i:0	CR:Z:GATTCGACAACGCATT	CY:Z:FFFFFFFFFF:F,F:F	CB:Z:GATTCGACAACGCATT-1	UR:Z:CGATCACGGAAC	UY:Z:FFFFFFF,:FFF	UB:Z:CGATCACGGAAC; A00519:603:H7KMNDSXY:2:1250:26503:19272	16	chr1	11570	1	90M	*	0	0	GATTACCATCAGAATTGTACTGTTCTGTATCCCACCAGCAATGTCTAGGAATGCCTGTTTCTCCACAAAGTGTTTACTTTTGGATTTTTG	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF	NH:i:3	HI:i:1	AS:i:88	nM:i:0	RG:Z:Parent_NGSC3_DI_HodgkinsLymphoma:0:1:H7KMNDSXY:2	RE:A:I	xf:i:0	CR:Z:CCGGACAGTACAAACA	CY:Z:FFFFFFFFFFFFFFFF	CB:Z:CCGGACAGTACAAACA-1	UR:Z:AAGATTCACTAT	UY:Z:FFFFFFFFFFFF	UB:Z:AA",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-733126078
https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-736948709:961,Integrability,message,message,961,"@kikegoni this is something I started to work on but then quickly abandoned. I've uploaded the utility (`transcoorder`) that I started writing (https://github.com/mdshw5/transcoorder) for this purpose. If you find it useful and want to help finish the work please do. Currently the `transcoord` command will take a SAM/BAM, a GTF and matching genomic FASTA, and will convert reads from transcript to genomic coordinates, with appropriate reference names and offsets. However, it is not tested, and will only properly handle reads that fall entirely within an exon. Spliced reads shouldn't be too hard to add, but I just don't have the time right now. . ```; $ transcoord -h; usage: transcoord [-h] [-o OUT] [-t TAG_NAME] [--debug] [--version] gtf bam fasta. positional arguments:; gtf GTF file containing transcripts; bam SAM or BAM files aligned to transcriptome; fasta FASTA format assembly coresponding to GTF. optional arguments:; -h, --help show this help message and exit; -o OUT, --out OUT output file for genomic SAM (default: stdout); -t TAG_NAME, --tag-name TAG_NAME; SAM tag name for storing transcript identifier. default: ZT; --debug enable debugging; --version display version number; ```. The command is veeeeeery slow, but should process a typical RNAseq library in a few hours.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-736948709
https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-736948709:486,Testability,test,tested,486,"@kikegoni this is something I started to work on but then quickly abandoned. I've uploaded the utility (`transcoorder`) that I started writing (https://github.com/mdshw5/transcoorder) for this purpose. If you find it useful and want to help finish the work please do. Currently the `transcoord` command will take a SAM/BAM, a GTF and matching genomic FASTA, and will convert reads from transcript to genomic coordinates, with appropriate reference names and offsets. However, it is not tested, and will only properly handle reads that fall entirely within an exon. Spliced reads shouldn't be too hard to add, but I just don't have the time right now. . ```; $ transcoord -h; usage: transcoord [-h] [-o OUT] [-t TAG_NAME] [--debug] [--version] gtf bam fasta. positional arguments:; gtf GTF file containing transcripts; bam SAM or BAM files aligned to transcriptome; fasta FASTA format assembly coresponding to GTF. optional arguments:; -h, --help show this help message and exit; -o OUT, --out OUT output file for genomic SAM (default: stdout); -t TAG_NAME, --tag-name TAG_NAME; SAM tag name for storing transcript identifier. default: ZT; --debug enable debugging; --version display version number; ```. The command is veeeeeery slow, but should process a typical RNAseq library in a few hours.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/193#issuecomment-736948709
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364599820:158,Deployability,update,update,158,This is really strange; the latest version for Mac should be 0.9.1 (see [here](https://anaconda.org/bioconda/salmon)). Does anything change if you do a conda update/upgrade?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364599820
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364599820:165,Deployability,upgrade,upgrade,165,This is really strange; the latest version for Mac should be 0.9.1 (see [here](https://anaconda.org/bioconda/salmon)). Does anything change if you do a conda update/upgrade?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364599820
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364609365:382,Deployability,update,update,382,"That's what I thought... But no. Updating conda did not solve the problem. Best wishes,; Javier; (Sent from my iPhone). On Feb 9, 2018, at 6:34 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. This is really strange; the latest version for Mac should be 0.9.1 (see here<https://anaconda.org/bioconda/salmon>). Does anything change if you do a conda update/upgrade?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364599820>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHfqVY_pmlr_ho7ab77WhaqSIVP-mks5tTNYAgaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364609365
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364609365:389,Deployability,upgrade,upgrade,389,"That's what I thought... But no. Updating conda did not solve the problem. Best wishes,; Javier; (Sent from my iPhone). On Feb 9, 2018, at 6:34 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. This is really strange; the latest version for Mac should be 0.9.1 (see here<https://anaconda.org/bioconda/salmon>). Does anything change if you do a conda update/upgrade?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364599820>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHfqVY_pmlr_ho7ab77WhaqSIVP-mks5tTNYAgaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364609365
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364822189:42,Deployability,install,install,42,same thing happened to me using the conda install,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364822189
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034:148,Availability,avail,available,148,"I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. `> conda install salmon=0.9.1`. do you see this version as available? Does it try to install it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034:98,Deployability,install,install,98,"I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. `> conda install salmon=0.9.1`. do you see this version as available? Does it try to install it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034:174,Deployability,install,install,174,"I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. `> conda install salmon=0.9.1`. do you see this version as available? Does it try to install it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:1323,Availability,avail,available,1323,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:1274,Deployability,install,install,1274,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:1349,Deployability,install,install,1349,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:294,Integrability,depend,dependencies,294,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:695,Integrability,message,message,695,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:1060,Integrability,message,message,1060,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:658,Security,Confidential,Confidentiality,658,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:796,Security,confidential,confidential,796,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364953699:25,Deployability,install,installing,25,"Hey Rob, I wound up just installing it using the tar.gz and no issues",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364953699
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006:52,Deployability,install,install,52,"Hi @jirazoqui and @pdellorusso,; beware that if you install via a `.tar.gz` file, you make `conda` ignore *all* dependencies. It's somewhat equivalent to `conda install --no-deps ...` and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for `salmon` with `conda create -c bioconda -c conda-forge --name salmon salmon`. In this new environment you wouldn't have any dependency version conflict.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006:161,Deployability,install,install,161,"Hi @jirazoqui and @pdellorusso,; beware that if you install via a `.tar.gz` file, you make `conda` ignore *all* dependencies. It's somewhat equivalent to `conda install --no-deps ...` and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for `salmon` with `conda create -c bioconda -c conda-forge --name salmon salmon`. In this new environment you wouldn't have any dependency version conflict.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006:112,Integrability,depend,dependencies,112,"Hi @jirazoqui and @pdellorusso,; beware that if you install via a `.tar.gz` file, you make `conda` ignore *all* dependencies. It's somewhat equivalent to `conda install --no-deps ...` and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for `salmon` with `conda create -c bioconda -c conda-forge --name salmon salmon`. In this new environment you wouldn't have any dependency version conflict.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006:259,Integrability,depend,dependencies,259,"Hi @jirazoqui and @pdellorusso,; beware that if you install via a `.tar.gz` file, you make `conda` ignore *all* dependencies. It's somewhat equivalent to `conda install --no-deps ...` and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for `salmon` with `conda create -c bioconda -c conda-forge --name salmon salmon`. In this new environment you wouldn't have any dependency version conflict.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006:468,Integrability,depend,dependency,468,"Hi @jirazoqui and @pdellorusso,; beware that if you install via a `.tar.gz` file, you make `conda` ignore *all* dependencies. It's somewhat equivalent to `conda install --no-deps ...` and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for `salmon` with `conda create -c bioconda -c conda-forge --name salmon salmon`. In this new environment you wouldn't have any dependency version conflict.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:988,Deployability,install,install,988,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:1090,Deployability,install,install,1090,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:387,Integrability,message,message,387,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:752,Integrability,message,message,752,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:1042,Integrability,depend,dependencies,1042,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:1187,Integrability,depend,dependencies,1187,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:1392,Integrability,depend,dependency,1392,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:350,Security,Confidential,Confidentiality,350,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252:488,Security,confidential,confidential,488,"good suggestion. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 12, 2018, at 12:21 PM, Marcel Bargull <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @jirazoqui<https://github.com/jirazoqui> and @pdellorusso<https://github.com/pdellorusso>,; beware that if you install via a .tar.gz file, you make conda ignore all dependencies. It's somewhat equivalent to conda install --no-deps ... and thus I wouldn't recommend doing something like that.; Until we fix the dependencies in Bioconda, can you, if possible, use a separate Conda environment for salmon with conda create -c bioconda -c conda-forge --name salmon salmon. In this new environment you wouldn't have any dependency version conflict. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996006>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHe_b7YX4kqzddLHJT7ZK6s1PhJgoks5tUHM1gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364996252
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392333657:7,Deployability,install,installed,7,Hi!; I installed version 0.8.2 (on linux) by using the command:; conda install -c bioconda salmon . Is there an update on how to get the newer version?. Thanks!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392333657
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392333657:71,Deployability,install,install,71,Hi!; I installed version 0.8.2 (on linux) by using the command:; conda install -c bioconda salmon . Is there an update on how to get the newer version?. Thanks!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392333657
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392333657:112,Deployability,update,update,112,Hi!; I installed version 0.8.2 (on linux) by using the command:; conda install -c bioconda salmon . Is there an update on how to get the newer version?. Thanks!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392333657
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392336534:73,Deployability,install,install,73,"Hi Maya,. You can try the solution posed over in issue #192. That should install the newer version via bioconda. I'll also mention that version 0.10 should land sometime early this coming week, so keep an eye out for this update . Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392336534
https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392336534:222,Deployability,update,update,222,"Hi Maya,. You can try the solution posed over in issue #192. That should install the newer version via bioconda. I'll also mention that version 0.10 should land sometime early this coming week, so keep an eye out for this update . Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-392336534
https://github.com/COMBINE-lab/salmon/issues/195#issuecomment-598522020:136,Safety,predict,predicted,136,"Hi @rob-p,. I am also seeking guidance on the use of Salmon for metatranscriptomes. Similar to this issue and issue #350 I am using the predicted genes from a metagenome assembly as the 'reference transcriptome' and would like to quantify gene expression from the corresponding metatranscriptome data. My metaT data is unstranded. What flags are most appropriate for this purpose? `--meta`? Something else? Are there any assumptions within Salmon that make it unsuitable for metagenomic/metatranscriptomic data (for example, the probability of observing a fragment when organisms are present at different abudances)?. Rachael",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/195#issuecomment-598522020
https://github.com/COMBINE-lab/salmon/issues/195#issuecomment-598522020:30,Usability,guid,guidance,30,"Hi @rob-p,. I am also seeking guidance on the use of Salmon for metatranscriptomes. Similar to this issue and issue #350 I am using the predicted genes from a metagenome assembly as the 'reference transcriptome' and would like to quantify gene expression from the corresponding metatranscriptome data. My metaT data is unstranded. What flags are most appropriate for this purpose? `--meta`? Something else? Are there any assumptions within Salmon that make it unsuitable for metagenomic/metatranscriptomic data (for example, the probability of observing a fragment when organisms are present at different abudances)?. Rachael",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/195#issuecomment-598522020
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297:775,Availability,mask,mask,775,"Hi @klaas-men,. Thanks for the question and for the detailed report! This is an interesting observation. The most likely reason you are seeing this behavior is that the fast mapping algorithms are, in a sense, quite greedy in how they attempt to map reads. This can lead them to suffer with compared to more traditional alignment algorithms like Bowtie2 and BWA-MEM with respect to both sensitivity and specificity. Here, you are likely seeing a manifestation of the former. Specifically, greedy behavior can lead to spurious matches. Many of these spurious matches are filtered out when applying a consensus mechanism to the series of matches produced by a read; however, this can result in the read going unmapped. We have noticed this behavior where spurious matches can ""mask"" better overall mappings, and we have developed an algorithm to overcome these limitations (called selective-alignment). This is currently implemented in [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan) of the Salmon repo (if you want to test it out and have trouble building, we can build you a linux executable). This algorithm explores more potential mappings and then applies a fast algorithm for filtering potentially poor ones. In our benchmarks, it exhibits sensitivity and specificity very close to Bowtie2 (which is among the best of the alignment-based methods we considered). Also, I will note that, though the speed and statistical optimization procedures used in fast transcript abundance estimation tools make them a potentially desirable choice for microbiomic / metagenomic abundance estimation, their indices are typically optimized for speed and not size. For small numbers of bacterial species this can be okay, but if one wishes to index large collections of species, the memory usage can become a problem. To this end, we have developed a new indexing scheme (software [here](https://github.com/COMBINE-lab/pufferfish), slightly out-of-date pre-print [here](https://www.biorxiv",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297:2237,Integrability,depend,depending,2237,"nt algorithms like Bowtie2 and BWA-MEM with respect to both sensitivity and specificity. Here, you are likely seeing a manifestation of the former. Specifically, greedy behavior can lead to spurious matches. Many of these spurious matches are filtered out when applying a consensus mechanism to the series of matches produced by a read; however, this can result in the read going unmapped. We have noticed this behavior where spurious matches can ""mask"" better overall mappings, and we have developed an algorithm to overcome these limitations (called selective-alignment). This is currently implemented in [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan) of the Salmon repo (if you want to test it out and have trouble building, we can build you a linux executable). This algorithm explores more potential mappings and then applies a fast algorithm for filtering potentially poor ones. In our benchmarks, it exhibits sensitivity and specificity very close to Bowtie2 (which is among the best of the alignment-based methods we considered). Also, I will note that, though the speed and statistical optimization procedures used in fast transcript abundance estimation tools make them a potentially desirable choice for microbiomic / metagenomic abundance estimation, their indices are typically optimized for speed and not size. For small numbers of bacterial species this can be okay, but if one wishes to index large collections of species, the memory usage can become a problem. To this end, we have developed a new indexing scheme (software [here](https://github.com/COMBINE-lab/pufferfish), slightly out-of-date pre-print [here](https://www.biorxiv.org/content/early/2017/09/21/191874)). That code already implements a tool for taxonomic read assignment (a la the excellent [Kraken](https://github.com/DerrickWood/kraken)), but not yet abundance estimation (that is coming soon). So, depending on how much you want to scale up, you might want to keep an eye on that as well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297:1447,Performance,optimiz,optimization,1447,"nt algorithms like Bowtie2 and BWA-MEM with respect to both sensitivity and specificity. Here, you are likely seeing a manifestation of the former. Specifically, greedy behavior can lead to spurious matches. Many of these spurious matches are filtered out when applying a consensus mechanism to the series of matches produced by a read; however, this can result in the read going unmapped. We have noticed this behavior where spurious matches can ""mask"" better overall mappings, and we have developed an algorithm to overcome these limitations (called selective-alignment). This is currently implemented in [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan) of the Salmon repo (if you want to test it out and have trouble building, we can build you a linux executable). This algorithm explores more potential mappings and then applies a fast algorithm for filtering potentially poor ones. In our benchmarks, it exhibits sensitivity and specificity very close to Bowtie2 (which is among the best of the alignment-based methods we considered). Also, I will note that, though the speed and statistical optimization procedures used in fast transcript abundance estimation tools make them a potentially desirable choice for microbiomic / metagenomic abundance estimation, their indices are typically optimized for speed and not size. For small numbers of bacterial species this can be okay, but if one wishes to index large collections of species, the memory usage can become a problem. To this end, we have developed a new indexing scheme (software [here](https://github.com/COMBINE-lab/pufferfish), slightly out-of-date pre-print [here](https://www.biorxiv.org/content/early/2017/09/21/191874)). That code already implements a tool for taxonomic read assignment (a la the excellent [Kraken](https://github.com/DerrickWood/kraken)), but not yet abundance estimation (that is coming soon). So, depending on how much you want to scale up, you might want to keep an eye on that as well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297:1643,Performance,optimiz,optimized,1643,"nt algorithms like Bowtie2 and BWA-MEM with respect to both sensitivity and specificity. Here, you are likely seeing a manifestation of the former. Specifically, greedy behavior can lead to spurious matches. Many of these spurious matches are filtered out when applying a consensus mechanism to the series of matches produced by a read; however, this can result in the read going unmapped. We have noticed this behavior where spurious matches can ""mask"" better overall mappings, and we have developed an algorithm to overcome these limitations (called selective-alignment). This is currently implemented in [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan) of the Salmon repo (if you want to test it out and have trouble building, we can build you a linux executable). This algorithm explores more potential mappings and then applies a fast algorithm for filtering potentially poor ones. In our benchmarks, it exhibits sensitivity and specificity very close to Bowtie2 (which is among the best of the alignment-based methods we considered). Also, I will note that, though the speed and statistical optimization procedures used in fast transcript abundance estimation tools make them a potentially desirable choice for microbiomic / metagenomic abundance estimation, their indices are typically optimized for speed and not size. For small numbers of bacterial species this can be okay, but if one wishes to index large collections of species, the memory usage can become a problem. To this end, we have developed a new indexing scheme (software [here](https://github.com/COMBINE-lab/pufferfish), slightly out-of-date pre-print [here](https://www.biorxiv.org/content/early/2017/09/21/191874)). That code already implements a tool for taxonomic read assignment (a la the excellent [Kraken](https://github.com/DerrickWood/kraken)), but not yet abundance estimation (that is coming soon). So, depending on how much you want to scale up, you might want to keep an eye on that as well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297:1041,Testability,test,test,1041,"and for the detailed report! This is an interesting observation. The most likely reason you are seeing this behavior is that the fast mapping algorithms are, in a sense, quite greedy in how they attempt to map reads. This can lead them to suffer with compared to more traditional alignment algorithms like Bowtie2 and BWA-MEM with respect to both sensitivity and specificity. Here, you are likely seeing a manifestation of the former. Specifically, greedy behavior can lead to spurious matches. Many of these spurious matches are filtered out when applying a consensus mechanism to the series of matches produced by a read; however, this can result in the read going unmapped. We have noticed this behavior where spurious matches can ""mask"" better overall mappings, and we have developed an algorithm to overcome these limitations (called selective-alignment). This is currently implemented in [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan) of the Salmon repo (if you want to test it out and have trouble building, we can build you a linux executable). This algorithm explores more potential mappings and then applies a fast algorithm for filtering potentially poor ones. In our benchmarks, it exhibits sensitivity and specificity very close to Bowtie2 (which is among the best of the alignment-based methods we considered). Also, I will note that, though the speed and statistical optimization procedures used in fast transcript abundance estimation tools make them a potentially desirable choice for microbiomic / metagenomic abundance estimation, their indices are typically optimized for speed and not size. For small numbers of bacterial species this can be okay, but if one wishes to index large collections of species, the memory usage can become a problem. To this end, we have developed a new indexing scheme (software [here](https://github.com/COMBINE-lab/pufferfish), slightly out-of-date pre-print [here](https://www.biorxiv.org/content/early/2017/09/21/191874)).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297:1244,Testability,benchmark,benchmarks,1244,"itional alignment algorithms like Bowtie2 and BWA-MEM with respect to both sensitivity and specificity. Here, you are likely seeing a manifestation of the former. Specifically, greedy behavior can lead to spurious matches. Many of these spurious matches are filtered out when applying a consensus mechanism to the series of matches produced by a read; however, this can result in the read going unmapped. We have noticed this behavior where spurious matches can ""mask"" better overall mappings, and we have developed an algorithm to overcome these limitations (called selective-alignment). This is currently implemented in [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan) of the Salmon repo (if you want to test it out and have trouble building, we can build you a linux executable). This algorithm explores more potential mappings and then applies a fast algorithm for filtering potentially poor ones. In our benchmarks, it exhibits sensitivity and specificity very close to Bowtie2 (which is among the best of the alignment-based methods we considered). Also, I will note that, though the speed and statistical optimization procedures used in fast transcript abundance estimation tools make them a potentially desirable choice for microbiomic / metagenomic abundance estimation, their indices are typically optimized for speed and not size. For small numbers of bacterial species this can be okay, but if one wishes to index large collections of species, the memory usage can become a problem. To this end, we have developed a new indexing scheme (software [here](https://github.com/COMBINE-lab/pufferfish), slightly out-of-date pre-print [here](https://www.biorxiv.org/content/early/2017/09/21/191874)). That code already implements a tool for taxonomic read assignment (a la the excellent [Kraken](https://github.com/DerrickWood/kraken)), but not yet abundance estimation (that is coming soon). So, depending on how much you want to scale up, you might want to keep an eye on",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365534279:181,Integrability,depend,dependency-issues,181,"Hi Rob,. Thank you for your swift and elaborate response! It would be most satisfying for me to compare your branch with selective-alignment to the other mappers I used. I had some dependency-issues last time I wanted to compile Salmon on my ubuntu on windows system, so a linux executable would be very welcome. Currently, we aim to only map on a limited number of microbial genomes and the abundance estimation is quite important to us. Thank you for your time!; Klaas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365534279
https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-379190396:31,Testability,test,test,31,"Hi Rob,. I would still like to test your branch with selective-alignment if you can provide the linux executable. Tnx!; Klaas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-379190396
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457:288,Availability,avail,available,288,"Hi Rachel,. So it looks like `output/hs.grch39.index/versionInfo.json` doesn't exist here? Are there any other messages that show up during indexing? Also, v0.8.1 is very outdated at this point. It might be worth checking if this issue is still popping up if you grab the latest version (available both as a linux binary from the releases page, as well as via bioconda).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457:330,Deployability,release,releases,330,"Hi Rachel,. So it looks like `output/hs.grch39.index/versionInfo.json` doesn't exist here? Are there any other messages that show up during indexing? Also, v0.8.1 is very outdated at this point. It might be worth checking if this issue is still popping up if you grab the latest version (available both as a linux binary from the releases page, as well as via bioconda).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457:111,Integrability,message,messages,111,"Hi Rachel,. So it looks like `output/hs.grch39.index/versionInfo.json` doesn't exist here? Are there any other messages that show up during indexing? Also, v0.8.1 is very outdated at this point. It might be worth checking if this issue is still popping up if you grab the latest version (available both as a linux binary from the releases page, as well as via bioconda).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019:46,Deployability,install,install,46,"Hi Rob-. Might be worth noting that ``` conda install -c bioconda salmon ``` automatically installs v0.8.1 for me, but followed your previous suggestion to upgrade to v0.12.0 (https://github.com/COMBINE-lab/salmon/issues/192). Even with this upgrade, I still have the same issue where versionInfo.json is not outputted at all . <img width=""1080"" alt=""screen shot 2019-02-25 at 2 19 55 pm"" src=""https://user-images.githubusercontent.com/18176863/53372728-7d868400-3908-11e9-9564-ced6045d5a88.png"">; <img width=""1197"" alt=""screen shot 2019-02-25 at 2 24 35 pm"" src=""https://user-images.githubusercontent.com/18176863/53372992-27fea700-3909-11e9-9210-18d6282fe630.png"">; <img width=""1240"" alt=""screen shot 2019-02-25 at 2 24 49 pm"" src=""https://user-images.githubusercontent.com/18176863/53372996-292fd400-3909-11e9-8c57-c8835cb3fa0d.png"">",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019:91,Deployability,install,installs,91,"Hi Rob-. Might be worth noting that ``` conda install -c bioconda salmon ``` automatically installs v0.8.1 for me, but followed your previous suggestion to upgrade to v0.12.0 (https://github.com/COMBINE-lab/salmon/issues/192). Even with this upgrade, I still have the same issue where versionInfo.json is not outputted at all . <img width=""1080"" alt=""screen shot 2019-02-25 at 2 19 55 pm"" src=""https://user-images.githubusercontent.com/18176863/53372728-7d868400-3908-11e9-9564-ced6045d5a88.png"">; <img width=""1197"" alt=""screen shot 2019-02-25 at 2 24 35 pm"" src=""https://user-images.githubusercontent.com/18176863/53372992-27fea700-3909-11e9-9210-18d6282fe630.png"">; <img width=""1240"" alt=""screen shot 2019-02-25 at 2 24 49 pm"" src=""https://user-images.githubusercontent.com/18176863/53372996-292fd400-3909-11e9-8c57-c8835cb3fa0d.png"">",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019:156,Deployability,upgrade,upgrade,156,"Hi Rob-. Might be worth noting that ``` conda install -c bioconda salmon ``` automatically installs v0.8.1 for me, but followed your previous suggestion to upgrade to v0.12.0 (https://github.com/COMBINE-lab/salmon/issues/192). Even with this upgrade, I still have the same issue where versionInfo.json is not outputted at all . <img width=""1080"" alt=""screen shot 2019-02-25 at 2 19 55 pm"" src=""https://user-images.githubusercontent.com/18176863/53372728-7d868400-3908-11e9-9564-ced6045d5a88.png"">; <img width=""1197"" alt=""screen shot 2019-02-25 at 2 24 35 pm"" src=""https://user-images.githubusercontent.com/18176863/53372992-27fea700-3909-11e9-9210-18d6282fe630.png"">; <img width=""1240"" alt=""screen shot 2019-02-25 at 2 24 49 pm"" src=""https://user-images.githubusercontent.com/18176863/53372996-292fd400-3909-11e9-8c57-c8835cb3fa0d.png"">",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019:242,Deployability,upgrade,upgrade,242,"Hi Rob-. Might be worth noting that ``` conda install -c bioconda salmon ``` automatically installs v0.8.1 for me, but followed your previous suggestion to upgrade to v0.12.0 (https://github.com/COMBINE-lab/salmon/issues/192). Even with this upgrade, I still have the same issue where versionInfo.json is not outputted at all . <img width=""1080"" alt=""screen shot 2019-02-25 at 2 19 55 pm"" src=""https://user-images.githubusercontent.com/18176863/53372728-7d868400-3908-11e9-9564-ced6045d5a88.png"">; <img width=""1197"" alt=""screen shot 2019-02-25 at 2 24 35 pm"" src=""https://user-images.githubusercontent.com/18176863/53372992-27fea700-3909-11e9-9210-18d6282fe630.png"">; <img width=""1240"" alt=""screen shot 2019-02-25 at 2 24 49 pm"" src=""https://user-images.githubusercontent.com/18176863/53372996-292fd400-3909-11e9-8c57-c8835cb3fa0d.png"">",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467209019
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467214391:140,Usability,clear,clearly,140,"Thanks for the quick reply. Do you have a place you could share the contents of `outputs/hs.grch39.index`? It seems to me that the index is clearly not being fully constructed, but it would be ideal to compare this with an index that I know is correct and look for specific differences. Thanks,; Rob. P.s. any details about your specific system might also be useful to help debug.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467214391
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789:314,Availability,down,download,314,"Absolutely! And thank you for your quick responses! Just trying to make an index from Homo_sapiens.GRCh38.cdna.all.fa.gz (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz) to use for a ENCODE fastq file (test file is https://www.encodeproject.org/files/ENCFF163DLM/@@download/ENCFF163DLM.fastq.gz). I'm working from a cluster computer in a salmon environment with biopython as the only other thing installed ; <img width=""750"" alt=""screen shot 2019-02-25 at 2 50 38 pm"" src=""https://user-images.githubusercontent.com/18176863/53374317-d1936780-390c-11e9-8370-51504ffb0996.png"">. Index is here: https://drive.google.com/file/d/1iKD-qfJKIViePE7Uu_1Wsp8z71oGipjN/view?usp=sharing",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789:148,Deployability,release,release-,148,"Absolutely! And thank you for your quick responses! Just trying to make an index from Homo_sapiens.GRCh38.cdna.all.fa.gz (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz) to use for a ENCODE fastq file (test file is https://www.encodeproject.org/files/ENCFF163DLM/@@download/ENCFF163DLM.fastq.gz). I'm working from a cluster computer in a salmon environment with biopython as the only other thing installed ; <img width=""750"" alt=""screen shot 2019-02-25 at 2 50 38 pm"" src=""https://user-images.githubusercontent.com/18176863/53374317-d1936780-390c-11e9-8370-51504ffb0996.png"">. Index is here: https://drive.google.com/file/d/1iKD-qfJKIViePE7Uu_1Wsp8z71oGipjN/view?usp=sharing",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789:445,Deployability,install,installed,445,"Absolutely! And thank you for your quick responses! Just trying to make an index from Homo_sapiens.GRCh38.cdna.all.fa.gz (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz) to use for a ENCODE fastq file (test file is https://www.encodeproject.org/files/ENCFF163DLM/@@download/ENCFF163DLM.fastq.gz). I'm working from a cluster computer in a salmon environment with biopython as the only other thing installed ; <img width=""750"" alt=""screen shot 2019-02-25 at 2 50 38 pm"" src=""https://user-images.githubusercontent.com/18176863/53374317-d1936780-390c-11e9-8370-51504ffb0996.png"">. Index is here: https://drive.google.com/file/d/1iKD-qfJKIViePE7Uu_1Wsp8z71oGipjN/view?usp=sharing",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789:251,Testability,test,test,251,"Absolutely! And thank you for your quick responses! Just trying to make an index from Homo_sapiens.GRCh38.cdna.all.fa.gz (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz) to use for a ENCODE fastq file (test file is https://www.encodeproject.org/files/ENCFF163DLM/@@download/ENCFF163DLM.fastq.gz). I'm working from a cluster computer in a salmon environment with biopython as the only other thing installed ; <img width=""750"" alt=""screen shot 2019-02-25 at 2 50 38 pm"" src=""https://user-images.githubusercontent.com/18176863/53374317-d1936780-390c-11e9-8370-51504ffb0996.png"">. Index is here: https://drive.google.com/file/d/1iKD-qfJKIViePE7Uu_1Wsp8z71oGipjN/view?usp=sharing",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836:136,Energy Efficiency,allocate,allocated,136,"A follow up on this (with a lot of help from @raungar; thanks!) led to the conclusion that the problem was that insufficient memory was allocated to the cluster job during indexing (indexing this transcriptome takes ~4.3G). Allocating more memory to the job resolves the issue. The strange thing is that the cluster manager seemed to kill the job rather than refuse to allocate the memory (which would have resulted in a `bad_alloc` exception that would have made the problem clear). So, if you're indexing with salmon on a cluster and see this behavior, be aware of the memory allocation and that the cluster software may surreptitiously kill the process rather than simply fail to allocate the memory!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836:369,Energy Efficiency,allocate,allocate,369,"A follow up on this (with a lot of help from @raungar; thanks!) led to the conclusion that the problem was that insufficient memory was allocated to the cluster job during indexing (indexing this transcriptome takes ~4.3G). Allocating more memory to the job resolves the issue. The strange thing is that the cluster manager seemed to kill the job rather than refuse to allocate the memory (which would have resulted in a `bad_alloc` exception that would have made the problem clear). So, if you're indexing with salmon on a cluster and see this behavior, be aware of the memory allocation and that the cluster software may surreptitiously kill the process rather than simply fail to allocate the memory!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836:683,Energy Efficiency,allocate,allocate,683,"A follow up on this (with a lot of help from @raungar; thanks!) led to the conclusion that the problem was that insufficient memory was allocated to the cluster job during indexing (indexing this transcriptome takes ~4.3G). Allocating more memory to the job resolves the issue. The strange thing is that the cluster manager seemed to kill the job rather than refuse to allocate the memory (which would have resulted in a `bad_alloc` exception that would have made the problem clear). So, if you're indexing with salmon on a cluster and see this behavior, be aware of the memory allocation and that the cluster software may surreptitiously kill the process rather than simply fail to allocate the memory!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836:476,Usability,clear,clear,476,"A follow up on this (with a lot of help from @raungar; thanks!) led to the conclusion that the problem was that insufficient memory was allocated to the cluster job during indexing (indexing this transcriptome takes ~4.3G). Allocating more memory to the job resolves the issue. The strange thing is that the cluster manager seemed to kill the job rather than refuse to allocate the memory (which would have resulted in a `bad_alloc` exception that would have made the problem clear). So, if you're indexing with salmon on a cluster and see this behavior, be aware of the memory allocation and that the cluster software may surreptitiously kill the process rather than simply fail to allocate the memory!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836
https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836:668,Usability,simpl,simply,668,"A follow up on this (with a lot of help from @raungar; thanks!) led to the conclusion that the problem was that insufficient memory was allocated to the cluster job during indexing (indexing this transcriptome takes ~4.3G). Allocating more memory to the job resolves the issue. The strange thing is that the cluster manager seemed to kill the job rather than refuse to allocate the memory (which would have resulted in a `bad_alloc` exception that would have made the problem clear). So, if you're indexing with salmon on a cluster and see this behavior, be aware of the memory allocation and that the cluster software may surreptitiously kill the process rather than simply fail to allocate the memory!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467720836
https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366:937,Availability,down,downstream,937,"Hi @amaer,. The warning suggests that the gff parser cannot even find a transcript with the given name (in the example you provided `ENST00000619185.1`). Does such a transcript exist? Can you grep for it. The string must match exactly (version number and all). The gff-based parser to do the transcript to gene mapping is quite picky, as gff & gtf files are often quite ill-formed. My top suggestion would be to do transcript -> gene abundance aggregation using [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html). The other option is to provide Salmon with a TSV mapping the transcripts to genes, as this eliminates all of the parsing problems (at the cost of pawning them off on the user, who must parse the questionable gtf file). However, tximport is the recommended strategy, since it can perform average gene length normalization across multiple samples (rather than just per-sample), which is useful for downstream DE.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366
https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366:507,Deployability,release,release,507,"Hi @amaer,. The warning suggests that the gff parser cannot even find a transcript with the given name (in the example you provided `ENST00000619185.1`). Does such a transcript exist? Can you grep for it. The string must match exactly (version number and all). The gff-based parser to do the transcript to gene mapping is quite picky, as gff & gtf files are often quite ill-formed. My top suggestion would be to do transcript -> gene abundance aggregation using [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html). The other option is to provide Salmon with a TSV mapping the transcripts to genes, as this eliminates all of the parsing problems (at the cost of pawning them off on the user, who must parse the questionable gtf file). However, tximport is the recommended strategy, since it can perform average gene length normalization across multiple samples (rather than just per-sample), which is useful for downstream DE.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366
https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366:820,Performance,perform,perform,820,"Hi @amaer,. The warning suggests that the gff parser cannot even find a transcript with the given name (in the example you provided `ENST00000619185.1`). Does such a transcript exist? Can you grep for it. The string must match exactly (version number and all). The gff-based parser to do the transcript to gene mapping is quite picky, as gff & gtf files are often quite ill-formed. My top suggestion would be to do transcript -> gene abundance aggregation using [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html). The other option is to provide Salmon with a TSV mapping the transcripts to genes, as this eliminates all of the parsing problems (at the cost of pawning them off on the user, who must parse the questionable gtf file). However, tximport is the recommended strategy, since it can perform average gene length normalization across multiple samples (rather than just per-sample), which is useful for downstream DE.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366
https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365984195:39,Availability,down,downloaded,39,"Hi Rob,. I checked the cdna.fa files I downloaded from Ensembl and indeed there is a difference. In Ensembl v.75 the version number was not included in the fasta header, in v.91 it is.; e.g. . grep ENST00000518611 *cdna.ncrna.fa; Homo_sapiens.GRCh37.75.cdna.ncrna.fa:>ENST00000518611 cdna:novel chromosome:GRCh37:8:26247878:26268564:1 gene:ENSG00000104765 gene_biotype:protein_coding transcript_biotype:protein_coding; Homo_sapiens.GRCh38.91.cdna.ncrna.fa:>**ENST00000518611.5** cdna chromosome:GRCh38:8:26390362:26411048:1 gene:ENSG00000104765.15 gene_biotype:protein_coding transcript_biotype:protein_coding gene_symbol:BNIP3L description:BCL2 interacting protein 3 like [Source:HGNC Symbol;Acc:HGNC:1085]. while in the gtf file the transcript_id is still ENST00000518611 and version transcript is indicated separately. The gtf file does not have transcript_id ENST00000518611.5. just ENST00000518611. I don't mind parsing the gtf file to a tsv mapping. If I want to use a tsv file, what should be its format - just 2 columns - first one with transcript ID (just as it appears in the fasta file - in this case ENST00000518611.5) , second one with the gene ID?. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365984195
https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-366005924:42,Usability,simpl,simple,42,"Hi @amaer ,. Yes, exactly. The input is a simple TSV where the first column is transcript names and the second column is the gene names (note, that the keys in column 1 are unique, but that many transcripts can map to the same gene). This is the same type of input accepted by tximport to do the transcript => gene mapping. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-366005924
https://github.com/COMBINE-lab/salmon/pull/199#issuecomment-368083042:238,Deployability,update,update,238,"Drone is awesome! The problem seems to be related to the ancient image on which we do CI (holy build box) having a version of curl that, just now (in the last day?), became incompatible with github's OpenSSL protocol. I guess they did an update, and now my version of curl is too old. I think we need to update the image.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/199#issuecomment-368083042
https://github.com/COMBINE-lab/salmon/pull/199#issuecomment-368083042:304,Deployability,update,update,304,"Drone is awesome! The problem seems to be related to the ancient image on which we do CI (holy build box) having a version of curl that, just now (in the last day?), became incompatible with github's OpenSSL protocol. I guess they did an update, and now my version of curl is too old. I think we need to update the image.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/199#issuecomment-368083042
https://github.com/COMBINE-lab/salmon/pull/199#issuecomment-368083042:208,Integrability,protocol,protocol,208,"Drone is awesome! The problem seems to be related to the ancient image on which we do CI (holy build box) having a version of curl that, just now (in the last day?), became incompatible with github's OpenSSL protocol. I guess they did an update, and now my version of curl is too old. I think we need to update the image.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/199#issuecomment-368083042
https://github.com/COMBINE-lab/salmon/issues/200#issuecomment-368350374:196,Performance,perform,performing,196,"Hi @pdellorusso,. This is because the `--gencode` flag is only relevant during indexing. That is, you should pass the `--gencode` flag to Salmon when building the index, but not when subsequently performing quantification.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/200#issuecomment-368350374
https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969:164,Availability,down,downsample,164,"Hi Andrea,. The bias correction time depends on the number of expressed transcripts. There is a flag to speed it up `--biasSpeedSamp`. It takes a value by which to downsample the fragment length pmf for bias modeling. The larger this number, the faster bias correction will become. The default is 1, and is super conservative (we are probably going to make the default 5 in the next release because it is much faster with no real difference in modeling quality). In fact, values up to at least 10 seem to work quite well with respect to the baseline. So, I'd recommend testing this parameter on a sample until you are happy with the speed, and then using that on all samples. Let me know how it goes, and if my description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969
https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969:383,Deployability,release,release,383,"Hi Andrea,. The bias correction time depends on the number of expressed transcripts. There is a flag to speed it up `--biasSpeedSamp`. It takes a value by which to downsample the fragment length pmf for bias modeling. The larger this number, the faster bias correction will become. The default is 1, and is super conservative (we are probably going to make the default 5 in the next release because it is much faster with no real difference in modeling quality). In fact, values up to at least 10 seem to work quite well with respect to the baseline. So, I'd recommend testing this parameter on a sample until you are happy with the speed, and then using that on all samples. Let me know how it goes, and if my description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969
https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969:37,Integrability,depend,depends,37,"Hi Andrea,. The bias correction time depends on the number of expressed transcripts. There is a flag to speed it up `--biasSpeedSamp`. It takes a value by which to downsample the fragment length pmf for bias modeling. The larger this number, the faster bias correction will become. The default is 1, and is super conservative (we are probably going to make the default 5 in the next release because it is much faster with no real difference in modeling quality). In fact, values up to at least 10 seem to work quite well with respect to the baseline. So, I'd recommend testing this parameter on a sample until you are happy with the speed, and then using that on all samples. Let me know how it goes, and if my description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969
https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969:569,Testability,test,testing,569,"Hi Andrea,. The bias correction time depends on the number of expressed transcripts. There is a flag to speed it up `--biasSpeedSamp`. It takes a value by which to downsample the fragment length pmf for bias modeling. The larger this number, the faster bias correction will become. The default is 1, and is super conservative (we are probably going to make the default 5 in the next release because it is much faster with no real difference in modeling quality). In fact, values up to at least 10 seem to work quite well with respect to the baseline. So, I'd recommend testing this parameter on a sample until you are happy with the speed, and then using that on all samples. Let me know how it goes, and if my description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969
https://github.com/COMBINE-lab/salmon/issues/206#issuecomment-400077831:30,Integrability,protocol,protocol,30,"Hi, you did not say which lab protocol has been used. I assume Illumina Nextera Long-Mate pair protocol? This one gives you RF (reverse&forward) reads but highly contaminated with FR (forward&reverse) reads (ordinary paired-end reads). From normal paired-end sequencing libraries I have just 100% FR reads, as expected (I used `ISF` for salmon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206#issuecomment-400077831
https://github.com/COMBINE-lab/salmon/issues/206#issuecomment-400077831:95,Integrability,protocol,protocol,95,"Hi, you did not say which lab protocol has been used. I assume Illumina Nextera Long-Mate pair protocol? This one gives you RF (reverse&forward) reads but highly contaminated with FR (forward&reverse) reads (ordinary paired-end reads). From normal paired-end sequencing libraries I have just 100% FR reads, as expected (I used `ISF` for salmon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206#issuecomment-400077831
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374368312:203,Availability,error,error,203,"Hi @grantcramer,. Is this the same index you used before? Were there any issues with indexing? Could you provide a link to the transcriptome you are mapping against? We could see if we can reproduce the error on our end. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374368312
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623:1464,Availability,error,error,1464,"t:; https://nevada.box.com/s/b7wx8rnwae4dzak6m04u0lgxalv1kxh6. Here is a link to the transcriptome that was used in the build: Sorry my NevadaBox is very slow copying many files so I have copied the transcriptome again to the following Dropbox folder:. https://www.dropbox.com/s/3ux7lz84qrx5ybd/CS_clean.primary.corrected_loci.CDS.fasta?dl=0. Thanks for your help!. Grant. Grant R. Cramer; Professor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 19, 2018, at 1:43 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=Rv5JuLm0kNlPPfQOshcc%2FUGmEC2g%2B0wIXVmdmIXnbCk%3D&reserved=0>,. Is this the same index you used before? Were there any issues with indexing? Could you provide a link to the transcriptome you are mapping against? We could see if we can reproduce the error on our end. --Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-374368312&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5xxIgJXM4Fks3IGZkGjQ5%2FR7SAaqb%2F5TvMudf4jZTio%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RiwrvJNIRo4GQHosqdQGVHLIG-iFYks5tgBhsgaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=mTKTIF9dFJToq9zGkIBQF%2FaET1Hu42%2F3QHiFmxpakNc%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623:1025,Safety,safe,safelinks,1025,"e index I used before. There were no issues when I built the index before. In fact everything went very smoothly. Super easy!; I am using a different computer (laptop) instead of my office computer. Here is a link to my index that I built:; https://nevada.box.com/s/b7wx8rnwae4dzak6m04u0lgxalv1kxh6. Here is a link to the transcriptome that was used in the build: Sorry my NevadaBox is very slow copying many files so I have copied the transcriptome again to the following Dropbox folder:. https://www.dropbox.com/s/3ux7lz84qrx5ybd/CS_clean.primary.corrected_loci.CDS.fasta?dl=0. Thanks for your help!. Grant. Grant R. Cramer; Professor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 19, 2018, at 1:43 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=Rv5JuLm0kNlPPfQOshcc%2FUGmEC2g%2B0wIXVmdmIXnbCk%3D&reserved=0>,. Is this the same index you used before? Were there any issues with indexing? Could you provide a link to the transcriptome you are mapping against? We could see if we can reproduce the error on our end. --Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-374368312&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5xxIgJXM4Fks3IGZkGjQ5%2FR7SAaqb%2F5TvMudf4jZTio%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscrib",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623:1605,Safety,safe,safelinks,1605,"t:; https://nevada.box.com/s/b7wx8rnwae4dzak6m04u0lgxalv1kxh6. Here is a link to the transcriptome that was used in the build: Sorry my NevadaBox is very slow copying many files so I have copied the transcriptome again to the following Dropbox folder:. https://www.dropbox.com/s/3ux7lz84qrx5ybd/CS_clean.primary.corrected_loci.CDS.fasta?dl=0. Thanks for your help!. Grant. Grant R. Cramer; Professor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 19, 2018, at 1:43 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=Rv5JuLm0kNlPPfQOshcc%2FUGmEC2g%2B0wIXVmdmIXnbCk%3D&reserved=0>,. Is this the same index you used before? Were there any issues with indexing? Could you provide a link to the transcriptome you are mapping against? We could see if we can reproduce the error on our end. --Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-374368312&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5xxIgJXM4Fks3IGZkGjQ5%2FR7SAaqb%2F5TvMudf4jZTio%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RiwrvJNIRo4GQHosqdQGVHLIG-iFYks5tgBhsgaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=mTKTIF9dFJToq9zGkIBQF%2FaET1Hu42%2F3QHiFmxpakNc%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623:1939,Safety,safe,safelinks,1939,"t:; https://nevada.box.com/s/b7wx8rnwae4dzak6m04u0lgxalv1kxh6. Here is a link to the transcriptome that was used in the build: Sorry my NevadaBox is very slow copying many files so I have copied the transcriptome again to the following Dropbox folder:. https://www.dropbox.com/s/3ux7lz84qrx5ybd/CS_clean.primary.corrected_loci.CDS.fasta?dl=0. Thanks for your help!. Grant. Grant R. Cramer; Professor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 19, 2018, at 1:43 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=Rv5JuLm0kNlPPfQOshcc%2FUGmEC2g%2B0wIXVmdmIXnbCk%3D&reserved=0>,. Is this the same index you used before? Were there any issues with indexing? Could you provide a link to the transcriptome you are mapping against? We could see if we can reproduce the error on our end. --Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-374368312&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5xxIgJXM4Fks3IGZkGjQ5%2FR7SAaqb%2F5TvMudf4jZTio%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RiwrvJNIRo4GQHosqdQGVHLIG-iFYks5tgBhsgaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7Cfa8af76ea22140f38e4008d58dda106b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=mTKTIF9dFJToq9zGkIBQF%2FaET1Hu42%2F3QHiFmxpakNc%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374383623
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375509050:321,Availability,avail,available,321,"Hi @grantcramer,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not _yet_ able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375509050
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375509050:592,Testability,test,tested,592,"Hi @grantcramer,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not _yet_ able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375509050
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800:1303,Availability,avail,available,1303," have some answers just to let you know what happened.; All the best,; Grant. Grant R. Cramer; Professor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800:750,Safety,safe,safelinks,750,"Hi Rob,; Thanks for your help and advice. No, I built the index on my office machine. I will return home this weekend to give salmon a try on my office computer. In the meantime, I will try rebuilding the index on my laptop to see if that makes things work. I will get back to you when I have some answers just to let you know what happened.; All the best,; Grant. Grant R. Cramer; Professor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800:1724,Safety,safe,safelinks,1724,"essor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800:2058,Safety,safe,safelinks,2058,"essor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800:1574,Testability,test,tested,1574,"essor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475:821,Availability,avail,available,821,"Hi Rob,; That seemed to be the problem. I rebuilt the index on my laptop and salmon worked perfectly on my laptop!; Thanks,; Grant. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475:268,Safety,safe,safelinks,268,"Hi Rob,; That seemed to be the problem. I rebuilt the index on my laptop and salmon worked perfectly on my laptop!; Thanks,; Grant. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475:1242,Safety,safe,safelinks,1242,"Hi Rob,; That seemed to be the problem. I rebuilt the index on my laptop and salmon worked perfectly on my laptop!; Thanks,; Grant. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475:1576,Safety,safe,safelinks,1576,"Hi Rob,; That seemed to be the problem. I rebuilt the index on my laptop and salmon worked perfectly on my laptop!; Thanks,; Grant. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475
https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475:1092,Testability,test,tested,1092,"Hi Rob,; That seemed to be the problem. I rebuilt the index on my laptop and salmon worked perfectly on my laptop!; Thanks,; Grant. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422:45,Availability,error,error,45,"Hi @alexg9010,. This is absolutely a cryptic error message. I'm *guessing* it may have something to do with the de-serialization of the index. Would you be able to provide the file on which you build the index? I can see if I can reproduce this error locally. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422:245,Availability,error,error,245,"Hi @alexg9010,. This is absolutely a cryptic error message. I'm *guessing* it may have something to do with the de-serialization of the index. Would you be able to provide the file on which you build the index? I can see if I can reproduce this error locally. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422:51,Integrability,message,message,51,"Hi @alexg9010,. This is absolutely a cryptic error message. I'm *guessing* it may have something to do with the de-serialization of the index. Would you be able to provide the file on which you build the index? I can see if I can reproduce this error locally. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497:141,Deployability,release,release-,141,"Hi Rob,. The file that I am building the index on is a cdna.all fasta file from Ensembl, ; exactly this one here : ftp://ftp.ensembl.org/pub/release-91/fasta/caenorhabditis_elegans/cdna/Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz . . It was unzipped and then used with `salmon index`. ; This is the log of the indexing process:; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-03-20 17:41:44.417] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-03-20 17:41:48.639] [jointLog] [warning] Entry with header [W03F8.6d], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 4.82575s. [2018-03-20 17:41:49.262] [jointLog] [warning] Removed 414 transcripts that were sequence duplicates of indexed transcripts.; [2018-03-20 17:41:49.263] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 20 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0570225s; Writing sequence data to file . . . done; Elapsed time: 0.286971s; [info] Building 32-bit suffix array (length of generalized text is 56718041); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 0.959095s; done; Elapsed time: 8.1189s; ^M^Mprocessed 0 positions^M^Mprocessed 1000000 positions^M^Mprocessed 2000000 positions^M^Mprocessed 3000000 positions^M^Mprocessed 4000000 positions^M^Mprocessed 5000000 positions^M^Mprocessed 6000000 positions^M^Mprocessed 7000000 positions^M^Mprocessed 8000000 positions^M^Mprocessed 9000000 positions^M^Mprocessed 10000000 positions^M^Mprocessed 11000000 positions^M^Mprocessed 12000000 positions^M^Mprocessed 13000000 positions^M^Mprocessed 14000000 positions^M^Mprocessed 15000000 positions^M^Mprocessed 16000000 positions^M^Mprocessed 17000000 position",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497:369,Deployability,upgrade,upgrade,369,"Hi Rob,. The file that I am building the index on is a cdna.all fasta file from Ensembl, ; exactly this one here : ftp://ftp.ensembl.org/pub/release-91/fasta/caenorhabditis_elegans/cdna/Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz . . It was unzipped and then used with `salmon index`. ; This is the log of the indexing process:; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-03-20 17:41:44.417] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-03-20 17:41:48.639] [jointLog] [warning] Entry with header [W03F8.6d], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 4.82575s. [2018-03-20 17:41:49.262] [jointLog] [warning] Removed 414 transcripts that were sequence duplicates of indexed transcripts.; [2018-03-20 17:41:49.263] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 20 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0570225s; Writing sequence data to file . . . done; Elapsed time: 0.286971s; [info] Building 32-bit suffix array (length of generalized text is 56718041); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 0.959095s; done; Elapsed time: 8.1189s; ^M^Mprocessed 0 positions^M^Mprocessed 1000000 positions^M^Mprocessed 2000000 positions^M^Mprocessed 3000000 positions^M^Mprocessed 4000000 positions^M^Mprocessed 5000000 positions^M^Mprocessed 6000000 positions^M^Mprocessed 7000000 positions^M^Mprocessed 8000000 positions^M^Mprocessed 9000000 positions^M^Mprocessed 10000000 positions^M^Mprocessed 11000000 positions^M^Mprocessed 12000000 positions^M^Mprocessed 13000000 positions^M^Mprocessed 14000000 positions^M^Mprocessed 15000000 positions^M^Mprocessed 16000000 positions^M^Mprocessed 17000000 position",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497:421,Deployability,upgrade,upgrades,421,"Hi Rob,. The file that I am building the index on is a cdna.all fasta file from Ensembl, ; exactly this one here : ftp://ftp.ensembl.org/pub/release-91/fasta/caenorhabditis_elegans/cdna/Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz . . It was unzipped and then used with `salmon index`. ; This is the log of the indexing process:; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-03-20 17:41:44.417] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-03-20 17:41:48.639] [jointLog] [warning] Entry with header [W03F8.6d], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 4.82575s. [2018-03-20 17:41:49.262] [jointLog] [warning] Removed 414 transcripts that were sequence duplicates of indexed transcripts.; [2018-03-20 17:41:49.263] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 20 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0570225s; Writing sequence data to file . . . done; Elapsed time: 0.286971s; [info] Building 32-bit suffix array (length of generalized text is 56718041); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 0.959095s; done; Elapsed time: 8.1189s; ^M^Mprocessed 0 positions^M^Mprocessed 1000000 positions^M^Mprocessed 2000000 positions^M^Mprocessed 3000000 positions^M^Mprocessed 4000000 positions^M^Mprocessed 5000000 positions^M^Mprocessed 6000000 positions^M^Mprocessed 7000000 positions^M^Mprocessed 8000000 positions^M^Mprocessed 9000000 positions^M^Mprocessed 10000000 positions^M^Mprocessed 11000000 positions^M^Mprocessed 12000000 positions^M^Mprocessed 13000000 positions^M^Mprocessed 14000000 positions^M^Mprocessed 15000000 positions^M^Mprocessed 16000000 positions^M^Mprocessed 17000000 position",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497:3284,Security,hash,hash,3284,g to disk . . . done; Elapsed time: 0.959095s; done; Elapsed time: 8.1189s; ^M^Mprocessed 0 positions^M^Mprocessed 1000000 positions^M^Mprocessed 2000000 positions^M^Mprocessed 3000000 positions^M^Mprocessed 4000000 positions^M^Mprocessed 5000000 positions^M^Mprocessed 6000000 positions^M^Mprocessed 7000000 positions^M^Mprocessed 8000000 positions^M^Mprocessed 9000000 positions^M^Mprocessed 10000000 positions^M^Mprocessed 11000000 positions^M^Mprocessed 12000000 positions^M^Mprocessed 13000000 positions^M^Mprocessed 14000000 positions^M^Mprocessed 15000000 positions^M^Mprocessed 16000000 positions^M^Mprocessed 17000000 positions^M^Mprocessed 18000000 positions^M^Mprocessed 19000000 positions^M^Mprocessed 20000000 positions^M^Mprocessed 21000000 positions^M^Mprocessed 22000000 positions^M^Mprocessed 23000000 positions^M^Mprocessed 24000000 positions^M^Mprocessed 25000000 positions^M^Mprocessed 26000000 positions^M^Mprocessed 27000000 positions^M^Mprocessed 28000000 positions^M^Mprocessed 29000000 positions^M^Mprocessed 30000000 positions^M^Mprocessed 31000000 positions^M^Mprocessed 32000000 positions^M^Mprocessed 33000000 positions^M^Mprocessed 34000000 positions^M^Mprocessed 35000000 positions^M^Mprocessed 36000000 positions^M^Mprocessed 37000000 positions^M^Mprocessed 38000000 positions^M^Mprocessed 39000000 positions^M^Mprocessed 40000000 positions^M^Mprocessed 41000000 positions^M^Mprocessed 42000000 positions^M^Mprocessed 43000000 positions^M^Mprocessed 44000000 positions^M^Mprocessed 45000000 positions^M^Mprocessed 46000000 positions^M^Mprocessed 47000000 positions^M^Mprocessed 48000000 positions^M^Mprocessed 49000000 positions^M^Mprocessed 50000000 positions^M^Mprocessed 51000000 positions^M^Mprocessed 52000000 positions^M^Mprocessed 53000000 positions^M^Mprocessed 54000000 positions^M^Mprocessed 55000000 positions^M^Mprocessed 56000000 positions; khash had 29386942 keys; saving hash to disk . . . done; Elapsed time: 75.4197s; [2018-03-20 17:43:53.055] [jLog] [,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497:302,Testability,log,log,302,"Hi Rob,. The file that I am building the index on is a cdna.all fasta file from Ensembl, ; exactly this one here : ftp://ftp.ensembl.org/pub/release-91/fasta/caenorhabditis_elegans/cdna/Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz . . It was unzipped and then used with `salmon index`. ; This is the log of the indexing process:; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-03-20 17:41:44.417] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-03-20 17:41:48.639] [jointLog] [warning] Entry with header [W03F8.6d], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 4.82575s. [2018-03-20 17:41:49.262] [jointLog] [warning] Removed 414 transcripts that were sequence duplicates of indexed transcripts.; [2018-03-20 17:41:49.263] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 20 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0570225s; Writing sequence data to file . . . done; Elapsed time: 0.286971s; [info] Building 32-bit suffix array (length of generalized text is 56718041); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 0.959095s; done; Elapsed time: 8.1189s; ^M^Mprocessed 0 positions^M^Mprocessed 1000000 positions^M^Mprocessed 2000000 positions^M^Mprocessed 3000000 positions^M^Mprocessed 4000000 positions^M^Mprocessed 5000000 positions^M^Mprocessed 6000000 positions^M^Mprocessed 7000000 positions^M^Mprocessed 8000000 positions^M^Mprocessed 9000000 positions^M^Mprocessed 10000000 positions^M^Mprocessed 11000000 positions^M^Mprocessed 12000000 positions^M^Mprocessed 13000000 positions^M^Mprocessed 14000000 positions^M^Mprocessed 15000000 positions^M^Mprocessed 16000000 positions^M^Mprocessed 17000000 position",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376093497
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376380132:316,Performance,load,loaded,316,"Hi @alexg9010,. Thanks for the info. I grabbed this transcriptome and indexed it, and then I grabbed the gtf file and executed this `quant` command with the same parameters (except, of course, for the read set). Unfortunately, I was unable to trigger the same behavior. On my machine (Ubuntu 16.10 x86-64) the index loaded successfully and quantification completed. Can you provide some more details about the system on which you are running? Would you be able to share the actual index file that you created? In relation to [issue 209](https://github.com/COMBINE-lab/salmon/issues/209), is the index being used on the same machine where it was created (from what you've posted, however, I believe it is)?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376380132
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236:98,Availability,down,download,98,"It's possible that `Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz` was corrupted during your FTP download, since there's no error correction aside from TCP checksums. You might want to check your file just to make sure:. ```shell; $ md5 Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz ; MD5 (Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz) = 3979cd3a2d5fe408b6261ae5b1d0c4de; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236:125,Availability,error,error,125,"It's possible that `Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz` was corrupted during your FTP download, since there's no error correction aside from TCP checksums. You might want to check your file just to make sure:. ```shell; $ md5 Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz ; MD5 (Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz) = 3979cd3a2d5fe408b6261ae5b1d0c4de; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236:157,Security,checksum,checksums,157,"It's possible that `Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz` was corrupted during your FTP download, since there's no error correction aside from TCP checksums. You might want to check your file just to make sure:. ```shell; $ md5 Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz ; MD5 (Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz) = 3979cd3a2d5fe408b6261ae5b1d0c4de; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377157736:100,Availability,down,downloaded,100,"@mdshw5 I checked the md5sum of the file that I was using before and it had a different value, so I downloaded again, this time the md5sum matched.; ```; $ md5sum Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz; 3979cd3a2d5fe408b6261ae5b1d0c4de Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz; ```; I rerun the indexing and quantification, but still get exactly the same error. . Next I am running it locally (not the cluster) to check wether this solves the issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377157736
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377157736:369,Availability,error,error,369,"@mdshw5 I checked the md5sum of the file that I was using before and it had a different value, so I downloaded again, this time the md5sum matched.; ```; $ md5sum Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz; 3979cd3a2d5fe408b6261ae5b1d0c4de Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz; ```; I rerun the indexing and quantification, but still get exactly the same error. . Next I am running it locally (not the cluster) to check wether this solves the issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377157736
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490:156,Availability,error,error,156,"Hi @rob-p , @mdshw5 , . I did a local run, it crashed again, but now at least with some more information and a core dump. ; So the process failed with this error:; ```; /bin/bash: line 1: 31345 Aborted (core dumped) /home/agosdsc/pigx/pigx_rnaseq/.guix-profile/bin/salmon quant -i /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index -l A -p 8 -1 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R1.fastq.gz -2 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R2.fastq.gz -o /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/N2_1 --seqBias --gcBias -g /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf >> /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/logs/salmon_quant_N2_1.log 2>&1; ```; I uploaded the files and the dump, such that you can try to debug this: ; https://1drv.ms/f/s!AqRdeUKlw8lFjDV7eDqqQbN7cQPa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490:194,Safety,Abort,Aborted,194,"Hi @rob-p , @mdshw5 , . I did a local run, it crashed again, but now at least with some more information and a core dump. ; So the process failed with this error:; ```; /bin/bash: line 1: 31345 Aborted (core dumped) /home/agosdsc/pigx/pigx_rnaseq/.guix-profile/bin/salmon quant -i /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index -l A -p 8 -1 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R1.fastq.gz -2 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R2.fastq.gz -o /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/N2_1 --seqBias --gcBias -g /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf >> /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/logs/salmon_quant_N2_1.log 2>&1; ```; I uploaded the files and the dump, such that you can try to debug this: ; https://1drv.ms/f/s!AqRdeUKlw8lFjDV7eDqqQbN7cQPa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490:802,Testability,log,logs,802,"Hi @rob-p , @mdshw5 , . I did a local run, it crashed again, but now at least with some more information and a core dump. ; So the process failed with this error:; ```; /bin/bash: line 1: 31345 Aborted (core dumped) /home/agosdsc/pigx/pigx_rnaseq/.guix-profile/bin/salmon quant -i /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index -l A -p 8 -1 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R1.fastq.gz -2 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R2.fastq.gz -o /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/N2_1 --seqBias --gcBias -g /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf >> /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/logs/salmon_quant_N2_1.log 2>&1; ```; I uploaded the files and the dump, such that you can try to debug this: ; https://1drv.ms/f/s!AqRdeUKlw8lFjDV7eDqqQbN7cQPa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490:825,Testability,log,log,825,"Hi @rob-p , @mdshw5 , . I did a local run, it crashed again, but now at least with some more information and a core dump. ; So the process failed with this error:; ```; /bin/bash: line 1: 31345 Aborted (core dumped) /home/agosdsc/pigx/pigx_rnaseq/.guix-profile/bin/salmon quant -i /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index -l A -p 8 -1 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R1.fastq.gz -2 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R2.fastq.gz -o /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/N2_1 --seqBias --gcBias -g /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf >> /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/logs/salmon_quant_N2_1.log 2>&1; ```; I uploaded the files and the dump, such that you can try to debug this: ; https://1drv.ms/f/s!AqRdeUKlw8lFjDV7eDqqQbN7cQPa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377266261:393,Availability,error,error,393,"Hi @alexg9010,. This is great; thanks for providing all of the output details. I just did quantification on your specific reads (and I tried it using the latest Salmon from bioconda on my Mac, so it was different from the environment I used before). Again, I was able to quantify successfully. However, I see that your files contain a core dump which should let me at least find out where the error is popping up in your run. Could you provide system details so I know how I should be analyzing the core file (specifically, is this run on OSX or Linux? Was this a pre-compiled binary or did you compile it? Was it compiled with gcc or clang (and which version)?). Thanks again for your help in trying to reproduce this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377266261
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-378182888:60,Deployability,release,release,60,"Hi @rob-p,. The system that I am running on is CentOS Linux release 7.4.1708, salmon was compiled locally with gcc and the version of gcc that I am using is 5.4.0. ; I hope that this helps you do find the reason for the crash.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-378182888
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-380456916:28,Deployability,update,update,28,"Hi @rob-p,. Do you have any update on this yet?. Best,; Alex",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-380456916
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395199735:115,Deployability,release,release,115,"Hi @alexg9010 ,. A apologize profusely for dropping the ball on this. Would it be possible to test with the latest release of salmon? I am still not able to reproduce this behavior on any of our test machines.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395199735
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395199735:94,Testability,test,test,94,"Hi @alexg9010 ,. A apologize profusely for dropping the ball on this. Would it be possible to test with the latest release of salmon? I am still not able to reproduce this behavior on any of our test machines.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395199735
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395199735:195,Testability,test,test,195,"Hi @alexg9010 ,. A apologize profusely for dropping the ball on this. Would it be possible to test with the latest release of salmon? I am still not able to reproduce this behavior on any of our test machines.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395199735
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395375963:103,Deployability,update,updated,103,"Hi @rob-p,. Actually I have to apologize, because about one month ago I got it running, after using an updated version of our guix installation (hpc package manager). I still do not know what actually caused that issue, but it seems to be fixed now. ; So sorry for bothering you so long and thanks for digging into this!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395375963
https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395375963:131,Deployability,install,installation,131,"Hi @rob-p,. Actually I have to apologize, because about one month ago I got it running, after using an updated version of our guix installation (hpc package manager). I still do not know what actually caused that issue, but it seems to be fixed now. ; So sorry for bothering you so long and thanks for digging into this!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-395375963
https://github.com/COMBINE-lab/salmon/issues/211#issuecomment-822139485:49,Deployability,pipeline,pipeline-transcriptome-de,49,"I have used ""U"" as was default in config.yml for pipeline-transcriptome-de but now I am thinking it should be stranded but i am not understanding the reverse part? Should it not be SF as this is essentially single-read and the baseball sequence is output as 5' to 3' of original RNA molecule despite being sequenced in the reverse from 3' to 5'.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/211#issuecomment-822139485
https://github.com/COMBINE-lab/salmon/issues/211#issuecomment-822139485:34,Modifiability,config,config,34,"I have used ""U"" as was default in config.yml for pipeline-transcriptome-de but now I am thinking it should be stranded but i am not understanding the reverse part? Should it not be SF as this is essentially single-read and the baseball sequence is output as 5' to 3' of original RNA molecule despite being sequenced in the reverse from 3' to 5'.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/211#issuecomment-822139485
https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-378954000:567,Integrability,depend,depending,567,"Hi Carlos,. This is quite interesting, and I have a few hypotheses. My first hypothesis is that the difference could be arising from differences in the annotation --- for salmon you are using reference cdna, and for STAR+RSEM you are mapping against the genome with, presumably, some gtf file used for annotation (I believe that what RSEM does internally is to run STAR with the proper flags to ""project"" mapped reads onto the transcriptome). Are these transcriptomes equivalent? For example, are there differences in annotated rRNAs, which can make a big difference depending on the prep protocol. The other question is the difference in the total assigned number of reads. What do you get when you add up the `NumReads` column from salmon versus the `expected_count` column from RSEM --- there could be some difference in terms of reads mapped to the genome but not properly annotated and, therefore, not contributing to quantification. Finally, you can always pass the BAM file generated by STAR+RSEM to salmon (in alignment mode) to see how that affects the total number of mapped reads. Though there is always the possibility that something unforeseen is causing these differences, they usually seem to wind up being due to something mundane but non-obvious. Here, slight differences in the annotation --- particularly the inclusion or not of rRNA and other RNA species --- would be my first guess.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-378954000
https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-378954000:589,Integrability,protocol,protocol,589,"Hi Carlos,. This is quite interesting, and I have a few hypotheses. My first hypothesis is that the difference could be arising from differences in the annotation --- for salmon you are using reference cdna, and for STAR+RSEM you are mapping against the genome with, presumably, some gtf file used for annotation (I believe that what RSEM does internally is to run STAR with the proper flags to ""project"" mapped reads onto the transcriptome). Are these transcriptomes equivalent? For example, are there differences in annotated rRNAs, which can make a big difference depending on the prep protocol. The other question is the difference in the total assigned number of reads. What do you get when you add up the `NumReads` column from salmon versus the `expected_count` column from RSEM --- there could be some difference in terms of reads mapped to the genome but not properly annotated and, therefore, not contributing to quantification. Finally, you can always pass the BAM file generated by STAR+RSEM to salmon (in alignment mode) to see how that affects the total number of mapped reads. Though there is always the possibility that something unforeseen is causing these differences, they usually seem to wind up being due to something mundane but non-obvious. Here, slight differences in the annotation --- particularly the inclusion or not of rRNA and other RNA species --- would be my first guess.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-378954000
https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-379253109:111,Availability,down,down,111,"Hi Rob, . Thank you for the fast reply. I did some tests and ran the suggestions you told me. Everything comes down to the reference i used. The mapping rates are still low (44 - 54 %) but they have increased when I mapped the reads with Salmon allowing for more genes in the reference. Thank you for the useful suggestions though, I will incorporate them in my future evaluations.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-379253109
https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-379253109:51,Testability,test,tests,51,"Hi Rob, . Thank you for the fast reply. I did some tests and ran the suggestions you told me. Everything comes down to the reference i used. The mapping rates are still low (44 - 54 %) but they have increased when I mapped the reads with Salmon allowing for more genes in the reference. Thank you for the useful suggestions though, I will incorporate them in my future evaluations.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-379253109
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235:760,Availability,recover,recover,760,"Hi Kristoffer,. The duplicate transcript issue is a frustrating one. It came to our attention when we noticed that ensembl often annotated transcripts on patch / haplotype contigs that were identical and unlikely to be different from more ""canonical"" transcripts in any way. Further, these transcripts are indistinguishable from the quantification perspective. That being said, the removal of sequence duplicate transcripts is optional in Salmon. If you pass `--keepDuplicates` to the indexer, it wont remove them. Also, Salmon does record, in the index directory, the ""collapsing map"". Specifically, there is a tsv file that record, for every collapsed transcript, the transcript that was sequence identical and retained in the index. You can use this map to recover the abundances for the collapsed transcripts, since they are all sequence identical, they should all have an abundance of x / num duplicates (where x is the abundance of the retained transcript). I hope this info helps. Let me know if there is anything else i can clarify or help with. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235:154,Deployability,patch,patch,154,"Hi Kristoffer,. The duplicate transcript issue is a frustrating one. It came to our attention when we noticed that ensembl often annotated transcripts on patch / haplotype contigs that were identical and unlikely to be different from more ""canonical"" transcripts in any way. Further, these transcripts are indistinguishable from the quantification perspective. That being said, the removal of sequence duplicate transcripts is optional in Salmon. If you pass `--keepDuplicates` to the indexer, it wont remove them. Also, Salmon does record, in the index directory, the ""collapsing map"". Specifically, there is a tsv file that record, for every collapsed transcript, the transcript that was sequence identical and retained in the index. You can use this map to recover the abundances for the collapsed transcripts, since they are all sequence identical, they should all have an abundance of x / num duplicates (where x is the abundance of the retained transcript). I hope this info helps. Let me know if there is anything else i can clarify or help with. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235:760,Safety,recover,recover,760,"Hi Kristoffer,. The duplicate transcript issue is a frustrating one. It came to our attention when we noticed that ensembl often annotated transcripts on patch / haplotype contigs that were identical and unlikely to be different from more ""canonical"" transcripts in any way. Further, these transcripts are indistinguishable from the quantification perspective. That being said, the removal of sequence duplicate transcripts is optional in Salmon. If you pass `--keepDuplicates` to the indexer, it wont remove them. Also, Salmon does record, in the index directory, the ""collapsing map"". Specifically, there is a tsv file that record, for every collapsed transcript, the transcript that was sequence identical and retained in the index. You can use this map to recover the abundances for the collapsed transcripts, since they are all sequence identical, they should all have an abundance of x / num duplicates (where x is the abundance of the retained transcript). I hope this info helps. Let me know if there is anything else i can clarify or help with. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892:188,Availability,recover,recover,188,"Yea. Both are frustrating, which is why we spam warning messages to the console when we remove duplicates. Sorry if this default behavior caused you any trouble, but hopefully its easy to recover these quants without rerunning anything using the map of collapsed transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892:56,Integrability,message,messages,56,"Yea. Both are frustrating, which is why we spam warning messages to the console when we remove duplicates. Sorry if this default behavior caused you any trouble, but hopefully its easy to recover these quants without rerunning anything using the map of collapsed transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892:188,Safety,recover,recover,188,"Yea. Both are frustrating, which is why we spam warning messages to the console when we remove duplicates. Sorry if this default behavior caused you any trouble, but hopefully its easy to recover these quants without rerunning anything using the map of collapsed transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410512481:201,Deployability,release,releases,201,"Hi, ; I am writing here, because I think this issue is relevant to both @rob-p and @kvittingseerup. I ran my salmon analysis twice with the most recent gencode annotation [https://www.gencodegenes.org/releases/current.html](url) -> PRI. Once with the `--keepDuplicates` option in the indexing and once without (bec I read this post late..). ; When loadind the data into IsoformSwithcAnalyzer the first time (w/o `--keepDuplicates`), I received the following warning message, ""The annotation (count matrix and isoform annotation) contain differences in which isoforms are analyzed... 875 more isoforms than the count matrix..."". Following the run with `--keepDuplicates`, I now receive ""67 more isoforms than the count matrix"". If I am using the `--keepDuplicates` option, what exactly are there 67 isforms?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410512481
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410512481:466,Integrability,message,message,466,"Hi, ; I am writing here, because I think this issue is relevant to both @rob-p and @kvittingseerup. I ran my salmon analysis twice with the most recent gencode annotation [https://www.gencodegenes.org/releases/current.html](url) -> PRI. Once with the `--keepDuplicates` option in the indexing and once without (bec I read this post late..). ; When loadind the data into IsoformSwithcAnalyzer the first time (w/o `--keepDuplicates`), I received the following warning message, ""The annotation (count matrix and isoform annotation) contain differences in which isoforms are analyzed... 875 more isoforms than the count matrix..."". Following the run with `--keepDuplicates`, I now receive ""67 more isoforms than the count matrix"". If I am using the `--keepDuplicates` option, what exactly are there 67 isforms?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410512481
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410512481:348,Performance,load,loadind,348,"Hi, ; I am writing here, because I think this issue is relevant to both @rob-p and @kvittingseerup. I ran my salmon analysis twice with the most recent gencode annotation [https://www.gencodegenes.org/releases/current.html](url) -> PRI. Once with the `--keepDuplicates` option in the indexing and once without (bec I read this post late..). ; When loadind the data into IsoformSwithcAnalyzer the first time (w/o `--keepDuplicates`), I received the following warning message, ""The annotation (count matrix and isoform annotation) contain differences in which isoforms are analyzed... 875 more isoforms than the count matrix..."". Following the run with `--keepDuplicates`, I now receive ""67 more isoforms than the count matrix"". If I am using the `--keepDuplicates` option, what exactly are there 67 isforms?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410512481
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410601245:10114,Safety,avoid,avoid,10114," [warning] Entry with header [ENST00000604838.1|ENSG00000270185.1|OTTHUMG00000184585.2|OTTHUMT00000468915.2|RP11-1360M22.4-001|IGHD1OR15-1B|17|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 150000 transcripts[2018-08-02 16:23:32.097] [jointLog] [warning] Entry with header [ENST00000579054.1|ENSG00000266416.1|OTTHUMG00000179204.1|OTTHUMT00000445280.1|RP1-66C13.2-001|RP1-66C13.2|28|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 170000 transcripts[2018-08-02 16:23:32.554] [jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|RP11-157B13.10-001|RP11-157B13.10|28|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 200000 transcriptsElapsed time: 5.76935s. [2018-08-02 16:23:33.248] [jointLog] [warning] There were 808 transcripts that would need to be removed to avoid duplicates.; Replaced 4 non-ATCG nucleotides; Clipped poly-A tails from 1586 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0169059s; Writing sequence data to file . . . done; Elapsed time: 0.13359s; [info] Building 32-bit suffix array (length of generalized text is 309778559); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 6.96499s; done; Elapsed time: 33.5821s; processed 309000000 positions; khash had 130317526 keys; saving hash to disk . . . done; Elapsed time: 34.8185s; [2018-08-02 16:26:58.153] [jLog] [info] done building index; ```; I reproduced the warnings from the initial run w/o the `--keepDuplicates` argument. ; ```; [Step 1 of 4] : counting k-mers; [2018-08-06 09:29:02.061] [jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|RP11-145M9.2-001|RP11-145M9.2|25|processed_pseudogene|], had length less than",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410601245
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410601245:10620,Security,hash,hash,10620," (perhaps after poly-A clipping); counted k-mers for 170000 transcripts[2018-08-02 16:23:32.554] [jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|RP11-157B13.10-001|RP11-157B13.10|28|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 200000 transcriptsElapsed time: 5.76935s. [2018-08-02 16:23:33.248] [jointLog] [warning] There were 808 transcripts that would need to be removed to avoid duplicates.; Replaced 4 non-ATCG nucleotides; Clipped poly-A tails from 1586 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0169059s; Writing sequence data to file . . . done; Elapsed time: 0.13359s; [info] Building 32-bit suffix array (length of generalized text is 309778559); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 6.96499s; done; Elapsed time: 33.5821s; processed 309000000 positions; khash had 130317526 keys; saving hash to disk . . . done; Elapsed time: 34.8185s; [2018-08-02 16:26:58.153] [jLog] [info] done building index; ```; I reproduced the warnings from the initial run w/o the `--keepDuplicates` argument. ; ```; [Step 1 of 4] : counting k-mers; [2018-08-06 09:29:02.061] [jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|RP11-145M9.2-001|RP11-145M9.2|25|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-06 09:29:02.143] [jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.9-001|AC006499.9|23|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-06 09:29:03.084] [jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|RP11-520H11.10-001|TRBD1|12|TR_D_gene",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410601245
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410601245:21214,Security,hash,hash,21214,"r poly-A clipping); [2018-08-06 09:29:04.752] [jointLog] [warning] Entry with header [ENST00000603693.1|ENSG00000270451.1|OTTHUMG00000184611.3|OTTHUMT00000468945.3|RP11-810K23.14-001|IGHD4OR15-4B|19|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-06 09:29:04.752] [jointLog] [warning] Entry with header [ENST00000604838.1|ENSG00000270185.1|OTTHUMG00000184585.2|OTTHUMT00000468915.2|RP11-1360M22.4-001|IGHD1OR15-1B|17|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-06 09:29:05.304] [jointLog] [warning] Entry with header [ENST00000579054.1|ENSG00000266416.1|OTTHUMG00000179204.1|OTTHUMT00000445280.1|RP1-66C13.2-001|RP1-66C13.2|28|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-06 09:29:05.761] [jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|RP11-157B13.10-001|RP11-157B13.10|28|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 5.65811s. [2018-08-06 09:29:06.451] [jointLog] [warning] Removed 808 transcripts that were sequence duplicates of indexed transcripts.; [2018-08-06 09:29:06.451] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 4 non-ATCG nucleotides; Clipped poly-A tails from 1586 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0178594s; Writing sequence data to file . . . done; Elapsed time: 0.702003s; [info] Building 32-bit suffix array (length of generalized text is 308972089); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 8.62493s; done; Elapsed time: 35.9517s; processed 308000000 positions; khash had 130317526 keys; saving hash to disk . . . done; Elapsed time: 29.414s; [2018-08-06 09:34:12.370] [jLog] [info] done building index; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410601245
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410709037:63,Deployability,release,releases,63,"Yes, it is in the previous post.. https://www.gencodegenes.org/releases/current.html -> PRI.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410709037
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410725104:45,Availability,down,downloaded,45,"Hi @rbenel,. This is quite interesting. So I downloaded both the Gencode transcriptome (all transcript sequences) and the annotation you point out (PRI --- comprehensive gene annotation). There are a few transcripts present in the latter but not the former:. ``````. Specifically, these are _not_ dropped by salmon. They are not in the [input reference transcriptome file](ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/gencode.v28.transcripts.fa.gz). So it looks like Gencode includes these in the GTF, but _not_ in the transcriptome fasta. I looked at the first few, and nothing immediately jumps out as to why Gencode would have dropped",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410725104
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410992441:357,Availability,down,downloaded,357,"GENCODE provide 1 FASTA File called ""Transcript sequences"" which ""only"" contains the ""CHR"" (chromosomal) regions. GENCODE provide many GTF files (specifically 9). The GTF file corresponding to the FASTA file mentioned above is the ""Comprehensive gene annotation"" from the ""CHR"" regions (aka chromosomal regions) (which is the first on their list). You have downloaded the ""Pri"" (third entry) which is the normal chromosomes (Chr) as well as as well as scaffolds. which explain the 68 extra transcripts. Specifically the scaffolds included in ""Pri"" but not in ""Chr"" are:. ```; ""GL000009.2"" ""GL000194.1"" ""GL000195.1"" ""GL000205.2"" ""GL000213.1""; ""GL000216.2"" ""GL000218.1"" ""GL000219.1"" ""GL000220.1"" ""GL000225.1""; ""KI270442.1"" ""KI270711.1"" ""KI270713.1"" ""KI270721.1"" ""KI270726.1""; ""KI270727.1"" ""KI270728.1"" ""KI270731.1"" ""KI270733.1"" ""KI270734.1""; ""KI270744.1"" ""KI270750.1""; ```. So the solution is as @rob-p suggested:; 1) Use gffread to make your own fasta file; 2) Remove those extra transcripts (or the ""Chr"" GTF file). Cheers; Kristoffer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410992441
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:298,Availability,down,downloaded,298,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's suggestion and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR), gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**; [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:24544,Availability,down,downstream,24544,"of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000603935.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604102.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604838.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:14.411] [puff::index::jointLog] [warning] Entry with header [ENST00000579054.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:15.280] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] Removed 829 transcripts that were sequence duplicates of indexed transcripts.; [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 11:31:28.118] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 11:31:58.286] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa; -----------------------------. **My concern is would it make problem for rest of downstream analysis?. Thanks,; Tima**",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:19,Deployability,update,update,19,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's suggestion and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR), gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**; [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:52,Integrability,message,message,52,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's suggestion and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR), gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**; [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:14971,Integrability,message,message,14971,"If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 10:49:09.969] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 10:49:40.159] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa; --------------------------------------------. **So using gffread I created a transcripts.fa file:; gffread -w salmon_transcripts.fa -g GRCh38.primary_assembly.genome.fa gencode.v36.annotation.gtf. using this new transcripts.fa I run again the above mentioned salmon index with decoy command, but the warning message was shown up again:**. [Step 1 of 4] : counting k-mers; [2020-12-26 11:30:08.799] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:08.951] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:10.751] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:12.936] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.188] [puff::index::jointLog] [warning] Entry with header [ENST00000415118.1], had length less than equal to the k-mer length of 31 (perhaps after po",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:14554,Security,Hash,Hash,14554,"634174.1|ENSG00000282732.1|OTTHUMG00000191398|OTTHUMT00000487783.1|AC073539.14-201|AC073539.14|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2020-12-26 10:49:06.436] [puff::index::jointLog] [warning] Removed 829 transcripts that were sequence duplicates of indexed transcripts.; [2020-12-26 10:49:06.436] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 10:49:09.969] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 10:49:40.159] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa; --------------------------------------------. **So using gffread I created a transcripts.fa file:; gffread -w salmon_transcripts.fa -g GRCh38.primary_assembly.genome.fa gencode.v36.annotation.gtf. using this new transcripts.fa I run again the above mentioned salmon index with decoy command, but the warning message was shown up again:**. [Step 1 of 4] : counting k-mers; [2020-12-26 11:30:08.799] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:08.951] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:10.751] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1], had length less than equal to t",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:24354,Security,Hash,Hash,24354,"of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000603935.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604102.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604838.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:14.411] [puff::index::jointLog] [warning] Entry with header [ENST00000579054.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:15.280] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] Removed 829 transcripts that were sequence duplicates of indexed transcripts.; [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 11:31:28.118] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 11:31:58.286] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa; -----------------------------. **My concern is would it make problem for rest of downstream analysis?. Thanks,; Tima**",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:294,Availability,down,downloaded,294,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's advice and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR) and gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**. [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entry",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:24466,Availability,down,downstream,24466,"n equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000603935.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604102.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604838.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:14.411] [puff::index::jointLog] [warning] Entry with header [ENST00000579054.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:15.280] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] Removed 829 transcripts that were sequence duplicates of indexed transcripts.; [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 11:31:28.118] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 11:31:58.286] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa. **My concern is would it make problem for rest of downstream analysis?. Thanks,; Tima**; #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:19,Deployability,update,update,19,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's advice and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR) and gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**. [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entry",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:52,Integrability,message,message,52,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's advice and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR) and gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**. [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entry",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:14924,Integrability,message,message,14924,":49:06.436] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 10:49:09.969] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 10:49:40.159] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa. **So using gffread I created a transcripts.fa file:; gffread -w salmon_transcripts.fa -g GRCh38.primary_assembly.genome.fa gencode.v36.annotation.gtf. using this new transcripts.fa I run again the above mentioned salmon index with decoy command, but the warning message was shown up again:**. [Step 1 of 4] : counting k-mers; [2020-12-26 11:30:08.799] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:08.951] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:10.751] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:12.936] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.188] [puff::index::jointLog] [warning] Entry with header [ENST00000415118.1], had length less than equal to the k-mer length of 31 (perhaps after po",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:14553,Security,Hash,Hash,14553,"634174.1|ENSG00000282732.1|OTTHUMG00000191398|OTTHUMT00000487783.1|AC073539.14-201|AC073539.14|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:49:06.436] [puff::index::jointLog] [warning] Removed 829 transcripts that were sequence duplicates of indexed transcripts.; [2020-12-26 10:49:06.436] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 10:49:06.448] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 10:49:09.969] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 10:49:40.159] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa. **So using gffread I created a transcripts.fa file:; gffread -w salmon_transcripts.fa -g GRCh38.primary_assembly.genome.fa gencode.v36.annotation.gtf. using this new transcripts.fa I run again the above mentioned salmon index with decoy command, but the warning message was shown up again:**. [Step 1 of 4] : counting k-mers; [2020-12-26 11:30:08.799] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:08.951] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:10.751] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A cl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:24307,Security,Hash,Hash,24307,"n equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000603935.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604102.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:13.489] [puff::index::jointLog] [warning] Entry with header [ENST00000604838.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:14.411] [puff::index::jointLog] [warning] Entry with header [ENST00000579054.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:30:15.280] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] Removed 829 transcripts that were sequence duplicates of indexed transcripts.; [2020-12-26 11:31:24.590] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2020-12-26 11:31:24.641] [puff::index::jointLog] [info] Clipped poly-A tails from 1,829 transcripts; wrote 231443 cleaned references; [2020-12-26 11:31:28.118] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-12-26 11:31:58.286] [puff::index::jointLog] [info] ntHll estimated 2628436199 distinct k-mers, setting filter size to 2^36; Threads = 12; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files:; salmon-decoy-sa-index/ref_k31_fixed.fa. **My concern is would it make problem for rest of downstream analysis?. Thanks,; Tima**; #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278:53,Availability,down,downstream,53,"Hi @Tima-Ze,. This should not cause any trouble with downstream analysis. The indexing procedure is simply informing you that these transcripts (about which you are being warned) are shorter than the seed length used for alignment. This means that it simply won't be possible for fragments to align to these transcripts, and so they will always have a 0 abundance in the resulting `quant.sf` files. This isn't a problem, as these transcripts are too short to be measured via RNA-seq anyway. The indexing messages just let you know this in advance. You can safely ignore these warnings for your downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278:594,Availability,down,downstream,594,"Hi @Tima-Ze,. This should not cause any trouble with downstream analysis. The indexing procedure is simply informing you that these transcripts (about which you are being warned) are shorter than the seed length used for alignment. This means that it simply won't be possible for fragments to align to these transcripts, and so they will always have a 0 abundance in the resulting `quant.sf` files. This isn't a problem, as these transcripts are too short to be measured via RNA-seq anyway. The indexing messages just let you know this in advance. You can safely ignore these warnings for your downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278:504,Integrability,message,messages,504,"Hi @Tima-Ze,. This should not cause any trouble with downstream analysis. The indexing procedure is simply informing you that these transcripts (about which you are being warned) are shorter than the seed length used for alignment. This means that it simply won't be possible for fragments to align to these transcripts, and so they will always have a 0 abundance in the resulting `quant.sf` files. This isn't a problem, as these transcripts are too short to be measured via RNA-seq anyway. The indexing messages just let you know this in advance. You can safely ignore these warnings for your downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278:556,Safety,safe,safely,556,"Hi @Tima-Ze,. This should not cause any trouble with downstream analysis. The indexing procedure is simply informing you that these transcripts (about which you are being warned) are shorter than the seed length used for alignment. This means that it simply won't be possible for fragments to align to these transcripts, and so they will always have a 0 abundance in the resulting `quant.sf` files. This isn't a problem, as these transcripts are too short to be measured via RNA-seq anyway. The indexing messages just let you know this in advance. You can safely ignore these warnings for your downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278:100,Usability,simpl,simply,100,"Hi @Tima-Ze,. This should not cause any trouble with downstream analysis. The indexing procedure is simply informing you that these transcripts (about which you are being warned) are shorter than the seed length used for alignment. This means that it simply won't be possible for fragments to align to these transcripts, and so they will always have a 0 abundance in the resulting `quant.sf` files. This isn't a problem, as these transcripts are too short to be measured via RNA-seq anyway. The indexing messages just let you know this in advance. You can safely ignore these warnings for your downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278
https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278:251,Usability,simpl,simply,251,"Hi @Tima-Ze,. This should not cause any trouble with downstream analysis. The indexing procedure is simply informing you that these transcripts (about which you are being warned) are shorter than the seed length used for alignment. This means that it simply won't be possible for fragments to align to these transcripts, and so they will always have a 0 abundance in the resulting `quant.sf` files. This isn't a problem, as these transcripts are too short to be measured via RNA-seq anyway. The indexing messages just let you know this in advance. You can safely ignore these warnings for your downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508:148,Deployability,install,installing,148,"Hi Rich,. The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through [Bioconda](https://bioconda.github.io/). This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; ```. This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508:255,Deployability,install,installation,255,"Hi Rich,. The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through [Bioconda](https://bioconda.github.io/). This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; ```. This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508:526,Integrability,depend,dependencies,526,"Hi Rich,. The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through [Bioconda](https://bioconda.github.io/). This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; ```. This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508:86,Modifiability,portab,portable,86,"Hi Rich,. The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through [Bioconda](https://bioconda.github.io/). This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; ```. This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508:369,Modifiability,config,config,369,"Hi Rich,. The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through [Bioconda](https://bioconda.github.io/). This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; ```. This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508:412,Modifiability,config,config,412,"Hi Rich,. The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through [Bioconda](https://bioconda.github.io/). This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; ```. This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-381997508
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031294:70,Availability,error,error,70,"Rob,; Rob,. Thank you. It worked. I was able to make my index without error messages. Best wishes,; Rich",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031294
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031294:76,Integrability,message,messages,76,"Rob,; Rob,. Thank you. It worked. I was able to make my index without error messages. Best wishes,; Rich",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031294
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768:385,Deployability,install,installing,385,"Rob,. 	I let you know on the forum page, but just ot make sure it worked and I was ; able to index my transcriptome. Thank you!. Best wishes,; Rich; > On Apr 17, 2018, at 9:44 AM, Rob Patro <notifications@github.com> wrote:; > ; > Hi Rich,; > ; > The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through Bioconda. This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:; > ; > $ conda config --add channels conda-forge; > $ conda config --add channels bioconda; > $ conda create -n salmon salmon=0.9.1; > ; > This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > . Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768:461,Deployability,install,installation,461,"Rob,. 	I let you know on the forum page, but just ot make sure it worked and I was ; able to index my transcriptome. Thank you!. Best wishes,; Rich; > On Apr 17, 2018, at 9:44 AM, Rob Patro <notifications@github.com> wrote:; > ; > Hi Rich,; > ; > The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through Bioconda. This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:; > ; > $ conda config --add channels conda-forge; > $ conda config --add channels bioconda; > $ conda create -n salmon salmon=0.9.1; > ; > This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > . Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768:738,Integrability,depend,dependencies,738,"Rob,. 	I let you know on the forum page, but just ot make sure it worked and I was ; able to index my transcriptome. Thank you!. Best wishes,; Rich; > On Apr 17, 2018, at 9:44 AM, Rob Patro <notifications@github.com> wrote:; > ; > Hi Rich,; > ; > The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through Bioconda. This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:; > ; > $ conda config --add channels conda-forge; > $ conda config --add channels bioconda; > $ conda create -n salmon salmon=0.9.1; > ; > This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > . Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768:323,Modifiability,portab,portable,323,"Rob,. 	I let you know on the forum page, but just ot make sure it worked and I was ; able to index my transcriptome. Thank you!. Best wishes,; Rich; > On Apr 17, 2018, at 9:44 AM, Rob Patro <notifications@github.com> wrote:; > ; > Hi Rich,; > ; > The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through Bioconda. This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:; > ; > $ conda config --add channels conda-forge; > $ conda config --add channels bioconda; > $ conda create -n salmon salmon=0.9.1; > ; > This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > . Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768:576,Modifiability,config,config,576,"Rob,. 	I let you know on the forum page, but just ot make sure it worked and I was ; able to index my transcriptome. Thank you!. Best wishes,; Rich; > On Apr 17, 2018, at 9:44 AM, Rob Patro <notifications@github.com> wrote:; > ; > Hi Rich,; > ; > The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through Bioconda. This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:; > ; > $ conda config --add channels conda-forge; > $ conda config --add channels bioconda; > $ conda create -n salmon salmon=0.9.1; > ; > This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > . Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768
https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768:621,Modifiability,config,config,621,"Rob,. 	I let you know on the forum page, but just ot make sure it worked and I was ; able to index my transcriptome. Thank you!. Best wishes,; Rich; > On Apr 17, 2018, at 9:44 AM, Rob Patro <notifications@github.com> wrote:; > ; > Hi Rich,; > ; > The issue with pre-compiled OSX binaries is that they are difficult to make portable across OSX versions. This is why we strongly suggest installing Salmon (especially for OSX) through Bioconda. This greatly eases installation and updating, and doesn't require admin privileges. On OSX, you can try the following:; > ; > $ conda config --add channels conda-forge; > $ conda config --add channels bioconda; > $ conda create -n salmon salmon=0.9.1; > ; > This should take care of all relevant dependencies as well as e.g. library locations and placement. Could you please give this a try and let me know if it works for you?; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > . Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031768
https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243:37,Availability,avail,available,37,"Heya, there are precompiled binaries available which might be easier to install. https://github.com/COMBINE-lab/salmon/releases/download/v0.9.1/Salmon-0.9.1_linux_x86_64.tar.gz is a link to them. Another option would be to use bioconda:. https://bioconda.github.io/. which is awesome if you are just starting out doing RNA-seq, since you won't have to spend time trying to get all of the tools to compile.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243
https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243:128,Availability,down,download,128,"Heya, there are precompiled binaries available which might be easier to install. https://github.com/COMBINE-lab/salmon/releases/download/v0.9.1/Salmon-0.9.1_linux_x86_64.tar.gz is a link to them. Another option would be to use bioconda:. https://bioconda.github.io/. which is awesome if you are just starting out doing RNA-seq, since you won't have to spend time trying to get all of the tools to compile.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243
https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243:72,Deployability,install,install,72,"Heya, there are precompiled binaries available which might be easier to install. https://github.com/COMBINE-lab/salmon/releases/download/v0.9.1/Salmon-0.9.1_linux_x86_64.tar.gz is a link to them. Another option would be to use bioconda:. https://bioconda.github.io/. which is awesome if you are just starting out doing RNA-seq, since you won't have to spend time trying to get all of the tools to compile.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243
https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243:119,Deployability,release,releases,119,"Heya, there are precompiled binaries available which might be easier to install. https://github.com/COMBINE-lab/salmon/releases/download/v0.9.1/Salmon-0.9.1_linux_x86_64.tar.gz is a link to them. Another option would be to use bioconda:. https://bioconda.github.io/. which is awesome if you are just starting out doing RNA-seq, since you won't have to spend time trying to get all of the tools to compile.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243
https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689:48,Availability,mask,masking,48,"I’ve noticed the same thing, and have been hard-masking any repetitive sequences in my pipeline (which I’ve been late to open-source and should be available soon): http://mattshirley.com/uploads/2017/11/2017-11-01_Genome_Informatics.pdf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689
https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689:147,Availability,avail,available,147,"I’ve noticed the same thing, and have been hard-masking any repetitive sequences in my pipeline (which I’ve been late to open-source and should be available soon): http://mattshirley.com/uploads/2017/11/2017-11-01_Genome_Informatics.pdf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689
https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689:87,Deployability,pipeline,pipeline,87,"I’ve noticed the same thing, and have been hard-masking any repetitive sequences in my pipeline (which I’ve been late to open-source and should be available soon): http://mattshirley.com/uploads/2017/11/2017-11-01_Genome_Informatics.pdf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689
https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-386261471:192,Availability,mask,masked,192,"Yes, that is what I started to do as well. ; I generate reads from the transposon sequences and map them with bowtie allowing no missmatches to the transcriptome. Regions that get covered are masked.; Currently I use a read-length of 30 for the transposon masking. How are you doing it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-386261471
https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-386261471:256,Availability,mask,masking,256,"Yes, that is what I started to do as well. ; I generate reads from the transposon sequences and map them with bowtie allowing no missmatches to the transcriptome. Regions that get covered are masked.; Currently I use a read-length of 30 for the transposon masking. How are you doing it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-386261471
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-385753659:110,Availability,mask,masking,110,"Hi,; Thanks for your reply. Yes, this is very much possible that a spurious mapping to a longer transcript is masking the original mapping, I find it extremely interesting from a mapping perspective. ; There are two ways to track down this, if the read file and reference are sharable, I can try to track the mapping artifact, otherwise, I would request you to try [this branch](https://github.com/COMBINE-lab/salmon/tree/selective-alignment-09) of salmon. The build process of the branch is identical with Salmon, and below is the instruction to run it. ; ```. build/src/salmon index -t Nbv5.1_TrPrm_NtCorrect.fasta -t Nbv5.1_TrPrm_NtCorrect_index; build/src/salmon quant -i Nbv5.1_TrPrm_NtCorrect_index -la -r <read file> -o <quant_dir> --softFilter --editDistance 4 --rangeFactorization 4. ```; This branch is not exactly designed for single end data, but I would be interested to see if there is any change. If you can provide me with some example dataset I will push possible bug fixes ASAP.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-385753659
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-385753659:230,Availability,down,down,230,"Hi,; Thanks for your reply. Yes, this is very much possible that a spurious mapping to a longer transcript is masking the original mapping, I find it extremely interesting from a mapping perspective. ; There are two ways to track down this, if the read file and reference are sharable, I can try to track the mapping artifact, otherwise, I would request you to try [this branch](https://github.com/COMBINE-lab/salmon/tree/selective-alignment-09) of salmon. The build process of the branch is identical with Salmon, and below is the instruction to run it. ; ```. build/src/salmon index -t Nbv5.1_TrPrm_NtCorrect.fasta -t Nbv5.1_TrPrm_NtCorrect_index; build/src/salmon quant -i Nbv5.1_TrPrm_NtCorrect_index -la -r <read file> -o <quant_dir> --softFilter --editDistance 4 --rangeFactorization 4. ```; This branch is not exactly designed for single end data, but I would be interested to see if there is any change. If you can provide me with some example dataset I will push possible bug fixes ASAP.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-385753659
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306:232,Availability,down,download,232,"Any updates? I am having a related issue with 0 reads being found by Salmon:; TBX21 transcripts ENST00000177694 and ENST00000581328 both report 0 read counts, but I am confident there are plenty of reads from these transcripts. (1) download sra and fastq-dump, (2) trim_galore (3) fastQC (4) STAR to generate aligned bams (for other analyses) and Salmon in mapping-based mode to get transcript counts. I am using the same transcript annotation for STAR and Salmon. . When I samtools view the aligned bam over the TBX21 region, I get back >4000 paired reads. The majority of the TBX21 reads have flags 99 or 147:; (# of reads) | (flag); 4431 | 147; 12 | 355; 14 | 403; 2 | 419; 4432 | 99. I also confirmed that many of these reads are indeed from the TBX21 spliced transcripts (cross splice junctions). I am running Salmon in mapping-based mode on the unaligned fastqs, and it is picking up exactly 0 reads in these transcripts. salmon index -t hg38_salmon_transcriptome.fa -i salmon_hg38_index --type quasi -k 31; salmon quant -i salmon_hg38_index -l ISR -p 8 -1 SRR1615172_1_val_1.fq.gz -2 SRR1615172_2_val_2.fq.gz -o salmon_quant_SRR1615172. The genome-wide distribution of insert size ranges for this sample are unusual (bi-modal), and this is partly why STAR only mapped 65% of the reads. The other issue with the sample is STAR reports 19% multi-mapped reads, but even so, there are still at least 4000 reads uniquely mapping to TBX21. Attached are:; ### Output from Salmon; [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3199053/salmon_quant.log); [lib_format_counts.json.zip](https://github.com/COMBINE-lab/salmon/files/3199074/lib_format_counts.json.zip); ### Output from STAR; [SRR1615173.Log.final.out.STAR.txt](https://github.com/COMBINE-lab/salmon/files/3199078/SRR1615173.Log.final.out.STAR.txt); ### Output from samtools view over the TBX21 gene start and end (hg38 17:47733244-47746119); [TBX21_reads.txt](https://github.com/COMBINE-lab/salmon/files/3199054/TBX21_reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306:4,Deployability,update,updates,4,"Any updates? I am having a related issue with 0 reads being found by Salmon:; TBX21 transcripts ENST00000177694 and ENST00000581328 both report 0 read counts, but I am confident there are plenty of reads from these transcripts. (1) download sra and fastq-dump, (2) trim_galore (3) fastQC (4) STAR to generate aligned bams (for other analyses) and Salmon in mapping-based mode to get transcript counts. I am using the same transcript annotation for STAR and Salmon. . When I samtools view the aligned bam over the TBX21 region, I get back >4000 paired reads. The majority of the TBX21 reads have flags 99 or 147:; (# of reads) | (flag); 4431 | 147; 12 | 355; 14 | 403; 2 | 419; 4432 | 99. I also confirmed that many of these reads are indeed from the TBX21 spliced transcripts (cross splice junctions). I am running Salmon in mapping-based mode on the unaligned fastqs, and it is picking up exactly 0 reads in these transcripts. salmon index -t hg38_salmon_transcriptome.fa -i salmon_hg38_index --type quasi -k 31; salmon quant -i salmon_hg38_index -l ISR -p 8 -1 SRR1615172_1_val_1.fq.gz -2 SRR1615172_2_val_2.fq.gz -o salmon_quant_SRR1615172. The genome-wide distribution of insert size ranges for this sample are unusual (bi-modal), and this is partly why STAR only mapped 65% of the reads. The other issue with the sample is STAR reports 19% multi-mapped reads, but even so, there are still at least 4000 reads uniquely mapping to TBX21. Attached are:; ### Output from Salmon; [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3199053/salmon_quant.log); [lib_format_counts.json.zip](https://github.com/COMBINE-lab/salmon/files/3199074/lib_format_counts.json.zip); ### Output from STAR; [SRR1615173.Log.final.out.STAR.txt](https://github.com/COMBINE-lab/salmon/files/3199078/SRR1615173.Log.final.out.STAR.txt); ### Output from samtools view over the TBX21 gene start and end (hg38 17:47733244-47746119); [TBX21_reads.txt](https://github.com/COMBINE-lab/salmon/files/3199054/TBX21_reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306:1494,Testability,log,log,1494,"over the TBX21 region, I get back >4000 paired reads. The majority of the TBX21 reads have flags 99 or 147:; (# of reads) | (flag); 4431 | 147; 12 | 355; 14 | 403; 2 | 419; 4432 | 99. I also confirmed that many of these reads are indeed from the TBX21 spliced transcripts (cross splice junctions). I am running Salmon in mapping-based mode on the unaligned fastqs, and it is picking up exactly 0 reads in these transcripts. salmon index -t hg38_salmon_transcriptome.fa -i salmon_hg38_index --type quasi -k 31; salmon quant -i salmon_hg38_index -l ISR -p 8 -1 SRR1615172_1_val_1.fq.gz -2 SRR1615172_2_val_2.fq.gz -o salmon_quant_SRR1615172. The genome-wide distribution of insert size ranges for this sample are unusual (bi-modal), and this is partly why STAR only mapped 65% of the reads. The other issue with the sample is STAR reports 19% multi-mapped reads, but even so, there are still at least 4000 reads uniquely mapping to TBX21. Attached are:; ### Output from Salmon; [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3199053/salmon_quant.log); [lib_format_counts.json.zip](https://github.com/COMBINE-lab/salmon/files/3199074/lib_format_counts.json.zip); ### Output from STAR; [SRR1615173.Log.final.out.STAR.txt](https://github.com/COMBINE-lab/salmon/files/3199078/SRR1615173.Log.final.out.STAR.txt); ### Output from samtools view over the TBX21 gene start and end (hg38 17:47733244-47746119); [TBX21_reads.txt](https://github.com/COMBINE-lab/salmon/files/3199054/TBX21_reads.txt); ### FastQC reports of the two fastqs; [SRR1615173_1_val_1.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199049/SRR1615173_1_val_1.fq_fastqc.zip); [SRR1615173_2_val_2.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199050/SRR1615173_2_val_2.fq_fastqc.zip); ### Output from CollectInsertSizeMetrics; [insert_size_histogram.pdf](https://github.com/COMBINE-lab/salmon/files/3199051/insert_size_histogram.pdf); [insert_size_metrics.txt](https://github.com/COMBINE-lab/salmon/f",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306:1564,Testability,log,log,1564,"00 paired reads. The majority of the TBX21 reads have flags 99 or 147:; (# of reads) | (flag); 4431 | 147; 12 | 355; 14 | 403; 2 | 419; 4432 | 99. I also confirmed that many of these reads are indeed from the TBX21 spliced transcripts (cross splice junctions). I am running Salmon in mapping-based mode on the unaligned fastqs, and it is picking up exactly 0 reads in these transcripts. salmon index -t hg38_salmon_transcriptome.fa -i salmon_hg38_index --type quasi -k 31; salmon quant -i salmon_hg38_index -l ISR -p 8 -1 SRR1615172_1_val_1.fq.gz -2 SRR1615172_2_val_2.fq.gz -o salmon_quant_SRR1615172. The genome-wide distribution of insert size ranges for this sample are unusual (bi-modal), and this is partly why STAR only mapped 65% of the reads. The other issue with the sample is STAR reports 19% multi-mapped reads, but even so, there are still at least 4000 reads uniquely mapping to TBX21. Attached are:; ### Output from Salmon; [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3199053/salmon_quant.log); [lib_format_counts.json.zip](https://github.com/COMBINE-lab/salmon/files/3199074/lib_format_counts.json.zip); ### Output from STAR; [SRR1615173.Log.final.out.STAR.txt](https://github.com/COMBINE-lab/salmon/files/3199078/SRR1615173.Log.final.out.STAR.txt); ### Output from samtools view over the TBX21 gene start and end (hg38 17:47733244-47746119); [TBX21_reads.txt](https://github.com/COMBINE-lab/salmon/files/3199054/TBX21_reads.txt); ### FastQC reports of the two fastqs; [SRR1615173_1_val_1.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199049/SRR1615173_1_val_1.fq_fastqc.zip); [SRR1615173_2_val_2.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199050/SRR1615173_2_val_2.fq_fastqc.zip); ### Output from CollectInsertSizeMetrics; [insert_size_histogram.pdf](https://github.com/COMBINE-lab/salmon/files/3199051/insert_size_histogram.pdf); [insert_size_metrics.txt](https://github.com/COMBINE-lab/salmon/files/3199052/insert_size_metrics.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306:1714,Testability,Log,Log,1714,"00 paired reads. The majority of the TBX21 reads have flags 99 or 147:; (# of reads) | (flag); 4431 | 147; 12 | 355; 14 | 403; 2 | 419; 4432 | 99. I also confirmed that many of these reads are indeed from the TBX21 spliced transcripts (cross splice junctions). I am running Salmon in mapping-based mode on the unaligned fastqs, and it is picking up exactly 0 reads in these transcripts. salmon index -t hg38_salmon_transcriptome.fa -i salmon_hg38_index --type quasi -k 31; salmon quant -i salmon_hg38_index -l ISR -p 8 -1 SRR1615172_1_val_1.fq.gz -2 SRR1615172_2_val_2.fq.gz -o salmon_quant_SRR1615172. The genome-wide distribution of insert size ranges for this sample are unusual (bi-modal), and this is partly why STAR only mapped 65% of the reads. The other issue with the sample is STAR reports 19% multi-mapped reads, but even so, there are still at least 4000 reads uniquely mapping to TBX21. Attached are:; ### Output from Salmon; [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3199053/salmon_quant.log); [lib_format_counts.json.zip](https://github.com/COMBINE-lab/salmon/files/3199074/lib_format_counts.json.zip); ### Output from STAR; [SRR1615173.Log.final.out.STAR.txt](https://github.com/COMBINE-lab/salmon/files/3199078/SRR1615173.Log.final.out.STAR.txt); ### Output from samtools view over the TBX21 gene start and end (hg38 17:47733244-47746119); [TBX21_reads.txt](https://github.com/COMBINE-lab/salmon/files/3199054/TBX21_reads.txt); ### FastQC reports of the two fastqs; [SRR1615173_1_val_1.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199049/SRR1615173_1_val_1.fq_fastqc.zip); [SRR1615173_2_val_2.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199050/SRR1615173_2_val_2.fq_fastqc.zip); ### Output from CollectInsertSizeMetrics; [insert_size_histogram.pdf](https://github.com/COMBINE-lab/salmon/files/3199051/insert_size_histogram.pdf); [insert_size_metrics.txt](https://github.com/COMBINE-lab/salmon/files/3199052/insert_size_metrics.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306:1801,Testability,Log,Log,1801,"00 paired reads. The majority of the TBX21 reads have flags 99 or 147:; (# of reads) | (flag); 4431 | 147; 12 | 355; 14 | 403; 2 | 419; 4432 | 99. I also confirmed that many of these reads are indeed from the TBX21 spliced transcripts (cross splice junctions). I am running Salmon in mapping-based mode on the unaligned fastqs, and it is picking up exactly 0 reads in these transcripts. salmon index -t hg38_salmon_transcriptome.fa -i salmon_hg38_index --type quasi -k 31; salmon quant -i salmon_hg38_index -l ISR -p 8 -1 SRR1615172_1_val_1.fq.gz -2 SRR1615172_2_val_2.fq.gz -o salmon_quant_SRR1615172. The genome-wide distribution of insert size ranges for this sample are unusual (bi-modal), and this is partly why STAR only mapped 65% of the reads. The other issue with the sample is STAR reports 19% multi-mapped reads, but even so, there are still at least 4000 reads uniquely mapping to TBX21. Attached are:; ### Output from Salmon; [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3199053/salmon_quant.log); [lib_format_counts.json.zip](https://github.com/COMBINE-lab/salmon/files/3199074/lib_format_counts.json.zip); ### Output from STAR; [SRR1615173.Log.final.out.STAR.txt](https://github.com/COMBINE-lab/salmon/files/3199078/SRR1615173.Log.final.out.STAR.txt); ### Output from samtools view over the TBX21 gene start and end (hg38 17:47733244-47746119); [TBX21_reads.txt](https://github.com/COMBINE-lab/salmon/files/3199054/TBX21_reads.txt); ### FastQC reports of the two fastqs; [SRR1615173_1_val_1.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199049/SRR1615173_1_val_1.fq_fastqc.zip); [SRR1615173_2_val_2.fq_fastqc.zip](https://github.com/COMBINE-lab/salmon/files/3199050/SRR1615173_2_val_2.fq_fastqc.zip); ### Output from CollectInsertSizeMetrics; [insert_size_histogram.pdf](https://github.com/COMBINE-lab/salmon/files/3199051/insert_size_histogram.pdf); [insert_size_metrics.txt](https://github.com/COMBINE-lab/salmon/files/3199052/insert_size_metrics.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494208884:21,Availability,down,downloaded,21,"Hi @radlinsky,. I've downloaded the read data and am looking into this. In the meantime, I did notice some relevant output from your log. First, when I run with the automatic library type, I get that the most likely library type is `ISF` rather than `ISR`. Second, I note that ~4M fragments are discarded because they produce dovetailing reads. We discard dovetailing reads by default (this was a recent change in default behavior, though it is the same default choice made by e.g. Bowtie2). You can allow these reads to be mapped and quantified by passing salmon the `--allowDovetail` flag during quantification. Does this make any different in the alignments you see for this gene?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494208884
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494208884:133,Testability,log,log,133,"Hi @radlinsky,. I've downloaded the read data and am looking into this. In the meantime, I did notice some relevant output from your log. First, when I run with the automatic library type, I get that the most likely library type is `ISF` rather than `ISR`. Second, I note that ~4M fragments are discarded because they produce dovetailing reads. We discard dovetailing reads by default (this was a recent change in default behavior, though it is the same default choice made by e.g. Bowtie2). You can allow these reads to be mapped and quantified by passing salmon the `--allowDovetail` flag during quantification. Does this make any different in the alignments you see for this gene?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494208884
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488:293,Deployability,configurat,configuration,293,"> Thanks!! Looking into it, replied. Hi,. I am having a similar issue when running salmon 1.4 on stranded single end data. Transcript count is over 4,000 for certain genes when analyzed by STAR, but salmon does not detect the transcript. Is there any newer version of this branch or suggested configuration that I can use to test my data? Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488:293,Modifiability,config,configuration,293,"> Thanks!! Looking into it, replied. Hi,. I am having a similar issue when running salmon 1.4 on stranded single end data. Transcript count is over 4,000 for certain genes when analyzed by STAR, but salmon does not detect the transcript. Is there any newer version of this branch or suggested configuration that I can use to test my data? Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488:215,Safety,detect,detect,215,"> Thanks!! Looking into it, replied. Hi,. I am having a similar issue when running salmon 1.4 on stranded single end data. Transcript count is over 4,000 for certain genes when analyzed by STAR, but salmon does not detect the transcript. Is there any newer version of this branch or suggested configuration that I can use to test my data? Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488:325,Testability,test,test,325,"> Thanks!! Looking into it, replied. Hi,. I am having a similar issue when running salmon 1.4 on stranded single end data. Transcript count is over 4,000 for certain genes when analyzed by STAR, but salmon does not detect the transcript. Is there any newer version of this branch or suggested configuration that I can use to test my data? Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145373488
https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145469445:110,Performance,perform,perform,110,"Hi @farshadf,. What exactly is the difference here (i.e. where are those reads going in salmon)? STAR doesn't perform stranded alignment. You can trying using the `-l U` library flag for salmon to see if it's a strandedness issue. In general, I'd always recommend using the latest version of salmon, which currently is 1.8.0 (though I doubt there would be a difference related to handling of stranded reads here). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-1145469445
https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386273154:317,Testability,log,login,317,"Hi @nazeeefa,. In this case, you need to make sure the relevant path is in your library path. Try the following:. ```; LD_LIBRARY_PATH=path/to/salmondir/lib:$LD_LIBRARY_PATH path/to/salmon quant -t fasta_file -l A -a bam_file -o output_dir; ```. If that works you can make the change to the library path automatic at login by putting . ```; ecport LD_LIBRARY_PATH=path/to/salmondir/lib:$LD_LIBRARY_PATH ; ```; In your `.bashrc` file and then opening a new terminal (assuming you are using a bash compatible shell). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386273154
https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386299893:208,Deployability,install,installing,208,"Hi Nazeeefa,. Is the relevant file `libtbbmalloc_proxy.so.2` actually present in that directory? What are the contents of `path/to/salmondir/lib`? If you are in an environment with bioconda, you can also try installing tbb through that system as well to ensure you have the shared library. Unfortunately, TBB is pretty much the one library that is not possible to link statically. Also, which shell are you using? The syntax for exporting an environment variable is different in different shells.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386299893
https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386299893:454,Modifiability,variab,variable,454,"Hi Nazeeefa,. Is the relevant file `libtbbmalloc_proxy.so.2` actually present in that directory? What are the contents of `path/to/salmondir/lib`? If you are in an environment with bioconda, you can also try installing tbb through that system as well to ensure you have the shared library. Unfortunately, TBB is pretty much the one library that is not possible to link statically. Also, which shell are you using? The syntax for exporting an environment variable is different in different shells.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386299893
https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386827231:25,Deployability,install,installed,25,"Hi Rob,. TBB was already installed. It's the path to TBB files was missing in .bashrc, it seems to work fine now! I am using bash. Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219#issuecomment-386827231
https://github.com/COMBINE-lab/salmon/issues/220#issuecomment-386882962:273,Integrability,wrap,wrapper,273,"Hi @antonkulaga,. Indeed. Sailfish-cir was developed by another group, but it has a procedure for linerizing circular RNAs and quantifying them using Sailfish. I believe it would be nice to see support for Salmon added to the same strategy. I believe their tool contains a wrapper tha calls out to Sailfish with a modified transcriptome index, so that should be fairly easy to port to Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/220#issuecomment-386882962
https://github.com/COMBINE-lab/salmon/issues/220#issuecomment-443369908:13,Deployability,update,updates,13,Any progress/updates on circRNA?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/220#issuecomment-443369908
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:56,Availability,error,error,56,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:682,Availability,ERROR,ERROR,682,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:114,Deployability,pipeline,pipeline,114,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:159,Deployability,upgrade,upgrade,159,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:211,Deployability,upgrade,upgrades,211,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:491,Testability,Log,Logs,491,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:529,Testability,log,logs,529,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883:565,Availability,ERROR,ERROR,565,"Sorry,. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883:42,Deployability,upgrade,upgrade,42,"Sorry,. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883:94,Deployability,upgrade,upgrades,94,"Sorry,. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883:374,Testability,Log,Logs,374,"Sorry,. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883:412,Testability,log,logs,412,"Sorry,. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498342:30,Availability,error,error,30,"hmmmm I re-pasted the updated error twice but it still reverts back to original post?. Malformed key:value pair at line 44017: ""**@PG** ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498342
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498342:22,Deployability,update,updated,22,"hmmmm I re-pasted the updated error twice but it still reverts back to original post?. Malformed key:value pair at line 44017: ""**@PG** ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498342
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610:20,Availability,error,error,20,Strange the updated error message has @PG not @pg,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610:12,Deployability,update,updated,12,Strange the updated error message has @PG not @pg,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610
https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610:26,Integrability,message,message,26,Strange the updated error message has @PG not @pg,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392336913:225,Deployability,release,release,225,"Hi @euduca,. This is a good idea. Currently, there is no easy way to do this apart from hacking the CMake file. If salmon doesnt find jellyfish in a standard location, it just ferches its own copy. Fortunately, in the newest release (scheduled to drop this coming week), we've dropped the dependency on libjellyfish. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392336913
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392336913:234,Energy Efficiency,schedul,scheduled,234,"Hi @euduca,. This is a good idea. Currently, there is no easy way to do this apart from hacking the CMake file. If salmon doesnt find jellyfish in a standard location, it just ferches its own copy. Fortunately, in the newest release (scheduled to drop this coming week), we've dropped the dependency on libjellyfish. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392336913
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392336913:289,Integrability,depend,dependency,289,"Hi @euduca,. This is a good idea. Currently, there is no easy way to do this apart from hacking the CMake file. If salmon doesnt find jellyfish in a standard location, it just ferches its own copy. Fortunately, in the newest release (scheduled to drop this coming week), we've dropped the dependency on libjellyfish. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392336913
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952:84,Deployability,install,install,84,"Hi @rob-p,. thank you for the attention. . I noticed that Salmon tries to fetch and install dependencies. It's just that I tried to install a newer version in my home, but the HPC I'm using does not allow an external connection to the Internet. The installed version is a bit obsolete, so I need to wait for administrators to install the newer version (and usually the wait takes days and I like to settle things for myself. haha). Thank you very much. Best, Duca.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952:132,Deployability,install,install,132,"Hi @rob-p,. thank you for the attention. . I noticed that Salmon tries to fetch and install dependencies. It's just that I tried to install a newer version in my home, but the HPC I'm using does not allow an external connection to the Internet. The installed version is a bit obsolete, so I need to wait for administrators to install the newer version (and usually the wait takes days and I like to settle things for myself. haha). Thank you very much. Best, Duca.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952:249,Deployability,install,installed,249,"Hi @rob-p,. thank you for the attention. . I noticed that Salmon tries to fetch and install dependencies. It's just that I tried to install a newer version in my home, but the HPC I'm using does not allow an external connection to the Internet. The installed version is a bit obsolete, so I need to wait for administrators to install the newer version (and usually the wait takes days and I like to settle things for myself. haha). Thank you very much. Best, Duca.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952:326,Deployability,install,install,326,"Hi @rob-p,. thank you for the attention. . I noticed that Salmon tries to fetch and install dependencies. It's just that I tried to install a newer version in my home, but the HPC I'm using does not allow an external connection to the Internet. The installed version is a bit obsolete, so I need to wait for administrators to install the newer version (and usually the wait takes days and I like to settle things for myself. haha). Thank you very much. Best, Duca.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952
https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952:92,Integrability,depend,dependencies,92,"Hi @rob-p,. thank you for the attention. . I noticed that Salmon tries to fetch and install dependencies. It's just that I tried to install a newer version in my home, but the HPC I'm using does not allow an external connection to the Internet. The installed version is a bit obsolete, so I need to wait for administrators to install the newer version (and usually the wait takes days and I like to settle things for myself. haha). Thank you very much. Best, Duca.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225#issuecomment-392344952
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241:118,Availability,avail,available,118,"Hi @knokknok ,. Thanks for reporting this (and for testing out 0.10.0 so quickly)! Is this read set & reference txome available to try and reproduce this? Also, would it be possible to check if this occurs using the bioconda-packaged release?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241:234,Deployability,release,release,234,"Hi @knokknok ,. Thanks for reporting this (and for testing out 0.10.0 so quickly)! Is this read set & reference txome available to try and reproduce this? Also, would it be possible to check if this occurs using the bioconda-packaged release?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241:51,Testability,test,testing,51,"Hi @knokknok ,. Thanks for reporting this (and for testing out 0.10.0 so quickly)! Is this read set & reference txome available to try and reproduce this? Also, would it be possible to check if this occurs using the bioconda-packaged release?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903:37,Availability,avail,available,37,"> Is this read set & reference txome available to try and reproduce this?. Unfortunately no, it's a generated fasta file (it used to work with 0.9.1 without ""validateMappings"" though). [info] Building 32-bit suffix array (length of generalized text is 462349554); processed 462000000 positions; khash had 208056876 keys. > Also, would it be possible to check if this occurs using the bioconda-packaged release?. Still a seg fault but I now have the following message:; WARNING: Could not associate known library type with read!; WARNING: PE compatibility function called with SE read!; expected: Library format { type:paired end, relative orientation:inward, strandedness:unstranded }, observed: Library format { type:, relative orientation:, strandedness: }; Segmentation fault: 11",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903:424,Availability,fault,fault,424,"> Is this read set & reference txome available to try and reproduce this?. Unfortunately no, it's a generated fasta file (it used to work with 0.9.1 without ""validateMappings"" though). [info] Building 32-bit suffix array (length of generalized text is 462349554); processed 462000000 positions; khash had 208056876 keys. > Also, would it be possible to check if this occurs using the bioconda-packaged release?. Still a seg fault but I now have the following message:; WARNING: Could not associate known library type with read!; WARNING: PE compatibility function called with SE read!; expected: Library format { type:paired end, relative orientation:inward, strandedness:unstranded }, observed: Library format { type:, relative orientation:, strandedness: }; Segmentation fault: 11",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903:773,Availability,fault,fault,773,"> Is this read set & reference txome available to try and reproduce this?. Unfortunately no, it's a generated fasta file (it used to work with 0.9.1 without ""validateMappings"" though). [info] Building 32-bit suffix array (length of generalized text is 462349554); processed 462000000 positions; khash had 208056876 keys. > Also, would it be possible to check if this occurs using the bioconda-packaged release?. Still a seg fault but I now have the following message:; WARNING: Could not associate known library type with read!; WARNING: PE compatibility function called with SE read!; expected: Library format { type:paired end, relative orientation:inward, strandedness:unstranded }, observed: Library format { type:, relative orientation:, strandedness: }; Segmentation fault: 11",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903:402,Deployability,release,release,402,"> Is this read set & reference txome available to try and reproduce this?. Unfortunately no, it's a generated fasta file (it used to work with 0.9.1 without ""validateMappings"" though). [info] Building 32-bit suffix array (length of generalized text is 462349554); processed 462000000 positions; khash had 208056876 keys. > Also, would it be possible to check if this occurs using the bioconda-packaged release?. Still a seg fault but I now have the following message:; WARNING: Could not associate known library type with read!; WARNING: PE compatibility function called with SE read!; expected: Library format { type:paired end, relative orientation:inward, strandedness:unstranded }, observed: Library format { type:, relative orientation:, strandedness: }; Segmentation fault: 11",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903:459,Integrability,message,message,459,"> Is this read set & reference txome available to try and reproduce this?. Unfortunately no, it's a generated fasta file (it used to work with 0.9.1 without ""validateMappings"" though). [info] Building 32-bit suffix array (length of generalized text is 462349554); processed 462000000 positions; khash had 208056876 keys. > Also, would it be possible to check if this occurs using the bioconda-packaged release?. Still a seg fault but I now have the following message:; WARNING: Could not associate known library type with read!; WARNING: PE compatibility function called with SE read!; expected: Library format { type:paired end, relative orientation:inward, strandedness:unstranded }, observed: Library format { type:, relative orientation:, strandedness: }; Segmentation fault: 11",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903:158,Security,validat,validateMappings,158,"> Is this read set & reference txome available to try and reproduce this?. Unfortunately no, it's a generated fasta file (it used to work with 0.9.1 without ""validateMappings"" though). [info] Building 32-bit suffix array (length of generalized text is 462349554); processed 462000000 positions; khash had 208056876 keys. > Also, would it be possible to check if this occurs using the bioconda-packaged release?. Still a seg fault but I now have the following message:; WARNING: Could not associate known library type with read!; WARNING: PE compatibility function called with SE read!; expected: Library format { type:paired end, relative orientation:inward, strandedness:unstranded }, observed: Library format { type:, relative orientation:, strandedness: }; Segmentation fault: 11",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393240942:180,Integrability,synchroniz,synchronized,180,"Hi @knokknok,. Would it be possible to share a small subset of these reads that reproduce the issue? Basic thoughts : does it work without `--validateMappings`? Are the read files synchronized (i.e. are there the same number of left and right reads)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393240942
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393240942:142,Security,validat,validateMappings,142,"Hi @knokknok,. Would it be possible to share a small subset of these reads that reproduce the issue? Basic thoughts : does it work without `--validateMappings`? Are the read files synchronized (i.e. are there the same number of left and right reads)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393240942
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393243827:1313,Availability,Error,Error,1313,"with only the -l A and --useVBOpt options, it processes all the reads but fails later on:. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 230221778, hits per frag: 3.41111. [2018-05-30 19:12:47.976] [jointLog] [info] Thread saw mini-batch with a maximum of 1.48% zero probability fragments; [2018-05-30 19:12:47.985] [jointLog] [info] Thread saw mini-batch with a maximum of 1.48% zero probability fragments; [2018-05-30 19:12:48.029] [jointLog] [info] Thread saw mini-batch with a maximum of 1.46% zero probability fragments; [2018-05-30 19:12:48.068] [jointLog] [info] Thread saw mini-batch with a maximum of 1.44% zero probability fragments; [2018-05-30 19:12:48.396] [jointLog] [info] Computed 425882 rich equivalence classes for further processing; [2018-05-30 19:12:48.396] [jointLog] [info] Counted 61485857 total reads in the equivalence classes; [2018-05-30 19:12:48.399] [jointLog] [info] Mapping rate = 90.4806%. [2018-05-30 19:12:48.399] [jointLog] [info] finished quantifyLibrary(); [2018-05-30 19:12:48.402] [jointLog] [info] Starting optimizer; [2018-05-30 19:12:48.586] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-30 19:12:48.608] [jointLog] [info] iteration = 0 | max rel diff. = 63.2619; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Sorry but I won't be able to look into this more today...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393243827
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393243827:1107,Performance,optimiz,optimizer,1107,"with only the -l A and --useVBOpt options, it processes all the reads but fails later on:. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 230221778, hits per frag: 3.41111. [2018-05-30 19:12:47.976] [jointLog] [info] Thread saw mini-batch with a maximum of 1.48% zero probability fragments; [2018-05-30 19:12:47.985] [jointLog] [info] Thread saw mini-batch with a maximum of 1.48% zero probability fragments; [2018-05-30 19:12:48.029] [jointLog] [info] Thread saw mini-batch with a maximum of 1.46% zero probability fragments; [2018-05-30 19:12:48.068] [jointLog] [info] Thread saw mini-batch with a maximum of 1.44% zero probability fragments; [2018-05-30 19:12:48.396] [jointLog] [info] Computed 425882 rich equivalence classes for further processing; [2018-05-30 19:12:48.396] [jointLog] [info] Counted 61485857 total reads in the equivalence classes; [2018-05-30 19:12:48.399] [jointLog] [info] Mapping rate = 90.4806%. [2018-05-30 19:12:48.399] [jointLog] [info] finished quantifyLibrary(); [2018-05-30 19:12:48.402] [jointLog] [info] Starting optimizer; [2018-05-30 19:12:48.586] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-30 19:12:48.608] [jointLog] [info] iteration = 0 | max rel diff. = 63.2619; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Sorry but I won't be able to look into this more today...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393243827
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393243827:149,Safety,detect,detected,149,"with only the -l A and --useVBOpt options, it processes all the reads but fails later on:. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 230221778, hits per frag: 3.41111. [2018-05-30 19:12:47.976] [jointLog] [info] Thread saw mini-batch with a maximum of 1.48% zero probability fragments; [2018-05-30 19:12:47.985] [jointLog] [info] Thread saw mini-batch with a maximum of 1.48% zero probability fragments; [2018-05-30 19:12:48.029] [jointLog] [info] Thread saw mini-batch with a maximum of 1.46% zero probability fragments; [2018-05-30 19:12:48.068] [jointLog] [info] Thread saw mini-batch with a maximum of 1.44% zero probability fragments; [2018-05-30 19:12:48.396] [jointLog] [info] Computed 425882 rich equivalence classes for further processing; [2018-05-30 19:12:48.396] [jointLog] [info] Counted 61485857 total reads in the equivalence classes; [2018-05-30 19:12:48.399] [jointLog] [info] Mapping rate = 90.4806%. [2018-05-30 19:12:48.399] [jointLog] [info] finished quantifyLibrary(); [2018-05-30 19:12:48.402] [jointLog] [info] Starting optimizer; [2018-05-30 19:12:48.586] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-30 19:12:48.608] [jointLog] [info] iteration = 0 | max rel diff. = 63.2619; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Sorry but I won't be able to look into this more today...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393243827
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393244558:133,Availability,down,down,133,"Sure --- we'll just leave the issue open and when you have a chance we can dig in further. Once I can reproduce the issue, I can dig down to see the underlying cause.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393244558
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482153:320,Security,validat,validateMappings,320,"I have tried to dichotomise my transcript db. The 2nd transcript in the attached file, crashes with the 2x12 paired-end fastq I have tried (ISR or IU). index was generated with:; salmon index -t test.fa --gencode -k 31 -i index. quantification with:; salmon quant -i index -l A -1 /tmp/r1.fastq.gz -2 /tmp/r2.fastq.gz --validateMappings -o test",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482153
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482153:195,Testability,test,test,195,"I have tried to dichotomise my transcript db. The 2nd transcript in the attached file, crashes with the 2x12 paired-end fastq I have tried (ISR or IU). index was generated with:; salmon index -t test.fa --gencode -k 31 -i index. quantification with:; salmon quant -i index -l A -1 /tmp/r1.fastq.gz -2 /tmp/r2.fastq.gz --validateMappings -o test",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482153
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482153:340,Testability,test,test,340,"I have tried to dichotomise my transcript db. The 2nd transcript in the attached file, crashes with the 2x12 paired-end fastq I have tried (ISR or IU). index was generated with:; salmon index -t test.fa --gencode -k 31 -i index. quantification with:; salmon quant -i index -l A -1 /tmp/r1.fastq.gz -2 /tmp/r2.fastq.gz --validateMappings -o test",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482153
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482330:21,Testability,test,test,21,Forgot the file...; [test.fa.gz](https://github.com/COMBINE-lab/salmon/files/2057739/test.fa.gz),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482330
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482330:85,Testability,test,test,85,Forgot the file...; [test.fa.gz](https://github.com/COMBINE-lab/salmon/files/2057739/test.fa.gz),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393482330
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393538186:165,Deployability,upgrade,upgrade,165,"Hi @knokknok ,. Thanks for sharing the data that reproduces this; interesting if it's OSX specific! I'll try and reproduce and dig into this today --- but I have to upgrade my minor version of OSX first.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393538186
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393594278:45,Deployability,patch,patch,45,"I will close this once I'm able to apply the patch for your other issue. At that point, I will bump everything to 0.10.1 and cut a new release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393594278
https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393594278:135,Deployability,release,release,135,"I will close this once I'm able to apply the patch for your other issue. At that point, I will bump everything to 0.10.1 and cut a new release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393594278
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393571565:301,Deployability,hotfix,hotfix,301,"This seems to be a separate issue than the other (and a more informative exception). Once I've resolved the other issue, I would probably try to bug you for a sample that causes this --- though I have a reasonable idea about how to fix it. It would be nice to have the fix for both issues in the same hotfix. To be more specific : this is, as the exception says, a numeric underflow issue when evaluating the digamma function. The solution here is just to bump up the value that is required before evaluating this function. This should be straightforward, but I suspect the issue is also related to this log message:. > [2018-05-31 17:08:11.488] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393571565
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393571565:608,Integrability,message,message,608,"This seems to be a separate issue than the other (and a more informative exception). Once I've resolved the other issue, I would probably try to bug you for a sample that causes this --- though I have a reasonable idea about how to fix it. It would be nice to have the fix for both issues in the same hotfix. To be more specific : this is, as the exception says, a numeric underflow issue when evaluating the digamma function. The solution here is just to bump up the value that is required before evaluating this function. This should be straightforward, but I suspect the issue is also related to this log message:. > [2018-05-31 17:08:11.488] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393571565
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393571565:604,Testability,log,log,604,"This seems to be a separate issue than the other (and a more informative exception). Once I've resolved the other issue, I would probably try to bug you for a sample that causes this --- though I have a reasonable idea about how to fix it. It would be nice to have the fix for both issues in the same hotfix. To be more specific : this is, as the exception says, a numeric underflow issue when evaluating the digamma function. The solution here is just to bump up the value that is required before evaluating this function. This should be straightforward, but I suspect the issue is also related to this log message:. > [2018-05-31 17:08:11.488] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393571565
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393579057:54,Integrability,message,message,54,> but I suspect the issue is also related to this log message. I wondered about that too but other samples gave me 2 and 3 degenerate classes and still passed...,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393579057
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393579057:50,Testability,log,log,50,> but I suspect the issue is also related to this log message. I wondered about that too but other samples gave me 2 and 3 degenerate classes and still passed...,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393579057
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393580320:226,Testability,test,testing,226,"Right --- such classes should be removed (specifically because they can cause such underflow issues). I suspect that I just need to make the bound for evaluation more conservative. I chose the smallest value that worked on my testing machine, but I imagine that when underflow occurs could be slightly different on different machines. I should just find / choose a stricter bound.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393580320
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393595135:248,Deployability,release,release,248,I was able to fix the other bug you encountered (on OSX) --- it should now be fixed in the develop branch with a clean build. That makes this bug my current top priority. I'd like to fix it so I can merge both changes into master and cut a v0.10.1 release. Let me know the best way I can help address this one.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393595135
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770:8,Integrability,wrap,wrapping,8,"I tried wrapping the code around alphaSum but it didn't work.; I also set digammaMin to 1e-9 but no change.; What I find weird is that the following code works... ```cpp; #include <boost/math/special_functions/digamma.hpp>. int main() {; double logNorm = boost::math::digamma(1e-50);; printf(""%f\n"", logNorm);; return logNorm;; }; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770:245,Testability,log,logNorm,245,"I tried wrapping the code around alphaSum but it didn't work.; I also set digammaMin to 1e-9 but no change.; What I find weird is that the following code works... ```cpp; #include <boost/math/special_functions/digamma.hpp>. int main() {; double logNorm = boost::math::digamma(1e-50);; printf(""%f\n"", logNorm);; return logNorm;; }; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770:300,Testability,log,logNorm,300,"I tried wrapping the code around alphaSum but it didn't work.; I also set digammaMin to 1e-9 but no change.; What I find weird is that the following code works... ```cpp; #include <boost/math/special_functions/digamma.hpp>. int main() {; double logNorm = boost::math::digamma(1e-50);; printf(""%f\n"", logNorm);; return logNorm;; }; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770:318,Testability,log,logNorm,318,"I tried wrapping the code around alphaSum but it didn't work.; I also set digammaMin to 1e-9 but no change.; What I find weird is that the following code works... ```cpp; #include <boost/math/special_functions/digamma.hpp>. int main() {; double logNorm = boost::math::digamma(1e-50);; printf(""%f\n"", logNorm);; return logNorm;; }; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393598770
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393606315:134,Availability,error,error,134,"I'll be happy to go ahead an implement this; but the numeric_error exception that is thrown doesn't contain the value that caused the error (just that string that is printed out) `Error in function boost::math::digamma(double): numeric overflow`. The try/catch should be easy to do, but I'm quite interested in how this can even be triggered given that the range check is already being done.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393606315
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393606315:180,Availability,Error,Error,180,"I'll be happy to go ahead an implement this; but the numeric_error exception that is thrown doesn't contain the value that caused the error (just that string that is printed out) `Error in function boost::math::digamma(double): numeric overflow`. The try/catch should be easy to do, but I'm quite interested in how this can even be triggered given that the range check is already being done.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393606315
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393610533:38,Integrability,wrap,wraps,38,"Ok, I pushed a commit to develop that wraps this in try/catch (and also tries to print out the relevant value of the argument from the context). Please let me know if (1) this averts the uncaught exception and (2) what argument to digamma is triggering this strange behavior :)!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393610533
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393621868:195,Availability,Error,Error,195,"[2018-05-31 20:01:46.042] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-31 20:01:46.073] [jointLog] [info] iteration = 0 | max rel diff. = 127.422; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. :-O",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393621868
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393623521:60,Integrability,depend,dependency,60,Could it be coming from some other part of the code or some dependency?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393623521
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182:118,Testability,log,logNorm,118,A quick grep shows these as the only uses of `digamma` in the code:. ```; ../src/CollapsedEMOptimizer.cpp:117: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:126: std::exp(boost::math::digamma(ap) - logNorm);; ../src/CollapsedEMOptimizer.cpp:257: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:270: std::exp(boost::math::digamma(ap) - logNorm);; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182:234,Testability,log,logNorm,234,A quick grep shows these as the only uses of `digamma` in the code:. ```; ../src/CollapsedEMOptimizer.cpp:117: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:126: std::exp(boost::math::digamma(ap) - logNorm);; ../src/CollapsedEMOptimizer.cpp:257: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:270: std::exp(boost::math::digamma(ap) - logNorm);; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182:289,Testability,log,logNorm,289,A quick grep shows these as the only uses of `digamma` in the code:. ```; ../src/CollapsedEMOptimizer.cpp:117: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:126: std::exp(boost::math::digamma(ap) - logNorm);; ../src/CollapsedEMOptimizer.cpp:257: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:270: std::exp(boost::math::digamma(ap) - logNorm);; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182:405,Testability,log,logNorm,405,A quick grep shows these as the only uses of `digamma` in the code:. ```; ../src/CollapsedEMOptimizer.cpp:117: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:126: std::exp(boost::math::digamma(ap) - logNorm);; ../src/CollapsedEMOptimizer.cpp:257: double logNorm = boost::math::digamma(alphaSum);; ../src/CollapsedEMOptimizer.cpp:270: std::exp(boost::math::digamma(ap) - logNorm);; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393628182
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393629501:33,Availability,Error,Error,33,"the fact that this `Exception : [Error in function boost::math::digamma(double): numeric overflow]` is printing out means that it is being caught by the ""catch-all"" exception handling [here](https://github.com/COMBINE-lab/salmon/blob/develop/src/SalmonQuantify.cpp#L2889). Could you also make sure that this thing isn't triggered if you don't pass `--useVBOpt` (where no digamma should be called)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393629501
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624:83,Availability,error,errors,83,"Also, I assumed (according to the documentation) that these underflow and overflow errors inherit from `std::runtime_error`, but I've updated the try/catch with a more generic exception class just in case they are not.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624:134,Deployability,update,updated,134,"Also, I assumed (according to the documentation) that these underflow and overflow errors inherit from `std::runtime_error`, but I've updated the try/catch with a more generic exception class just in case they are not.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624:90,Modifiability,inherit,inherit,90,"Also, I assumed (according to the documentation) that these underflow and overflow errors inherit from `std::runtime_error`, but I've updated the try/catch with a more generic exception class just in case they are not.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393669382:434,Availability,Error,Error,434,"EQVecT means we are in the function with `template <typename EQVecT>`; i is the index of the loop that generates alphaSum; If I printf ""Round"" line 257, I get:; [2018-05-31 22:27:34.996] [jointLog] [info] Starting optimizer; Round; [2018-05-31 22:27:35.226] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; Round; [2018-05-31 22:27:35.257] [jointLog] [info] iteration = 0 | max rel diff. = 127.379; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393669382
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393669382:214,Performance,optimiz,optimizer,214,"EQVecT means we are in the function with `template <typename EQVecT>`; i is the index of the loop that generates alphaSum; If I printf ""Round"" line 257, I get:; [2018-05-31 22:27:34.996] [jointLog] [info] Starting optimizer; Round; [2018-05-31 22:27:35.226] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; Round; [2018-05-31 22:27:35.257] [jointLog] [info] iteration = 0 | max rel diff. = 127.379; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393669382
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:528,Availability,Error,Errors,528,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:620,Availability,Error,Error,620,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:50,Testability,test,test,50,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:75,Testability,test,tests,75,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:85,Testability,Test,Test,85,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:137,Testability,Test,Test,137,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:235,Testability,Test,Test,235,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:333,Testability,Test,Test,333,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:398,Testability,test,tests,398,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:414,Testability,test,tests,414,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:443,Testability,Test,Test,443,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:486,Testability,test,tests,486,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:589,Testability,test,test,589,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:614,Testability,test,test,614,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393675075:629,Availability,Error,Error,629,itNum: 0; itNum: 1; [2018-05-31 22:48:54.566] [jointLog] [info] Computed 583973 rich equivalence classes for further processing; [2018-05-31 22:48:54.566] [jointLog] [info] Counted 59985214 total reads in the equivalence classes; [2018-05-31 22:48:54.609] [jointLog] [info] Mapping rate = 88.2723%. [2018-05-31 22:48:54.609] [jointLog] [info] finished quantifyLibrary(); [2018-05-31 22:48:54.610] [jointLog] [info] Starting optimizer; [2018-05-31 22:48:54.829] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-31 22:48:54.859] [jointLog] [info] iteration = 0 | max rel diff. = 127.38; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393675075
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393675075:424,Performance,optimiz,optimizer,424,itNum: 0; itNum: 1; [2018-05-31 22:48:54.566] [jointLog] [info] Computed 583973 rich equivalence classes for further processing; [2018-05-31 22:48:54.566] [jointLog] [info] Counted 59985214 total reads in the equivalence classes; [2018-05-31 22:48:54.609] [jointLog] [info] Mapping rate = 88.2723%. [2018-05-31 22:48:54.609] [jointLog] [info] finished quantifyLibrary(); [2018-05-31 22:48:54.610] [jointLog] [info] Starting optimizer; [2018-05-31 22:48:54.829] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-31 22:48:54.859] [jointLog] [info] iteration = 0 | max rel diff. = 127.38; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393675075
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:551,Deployability,continuous,continuous,551,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:562,Deployability,integrat,integration,562,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:562,Integrability,integrat,integration,562,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:46,Testability,test,test,46,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:100,Testability,test,test,100,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:114,Testability,test,tests,114,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:124,Testability,Test,Test,124,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:187,Testability,Test,Test,187,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:283,Testability,Test,Test,283,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:381,Testability,Test,Test,381,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:447,Testability,test,tests,447,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:463,Testability,test,tests,463,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:492,Testability,Test,Test,492,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:598,Testability,test,tests,598,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:669,Testability,Test,Test,669,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:752,Testability,Test,Test,752,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:848,Testability,Test,Test,848,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:946,Testability,Test,Test,946,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:1012,Testability,test,tests,1012,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:1028,Testability,test,tests,1028,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:1057,Testability,Test,Test,1057,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:1156,Testability,Test,Testing,1156,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:1190,Testability,log,log,1190,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260:1237,Testability,test,test,1237,"probably unrelated, but also unexpected. Make test on my linux and osx box looks like:. ```; $ make test; Running tests...; Test project /Users/rob/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 0.87 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 0.39 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 1.41 sec; ```. It looks the same on the continuous integration server : . ```; Running tests...; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/COMBINE-lab/salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.13 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 2.55 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.72 sec; 100% tests passed, 0 tests failed out of 3; Total Test time (real) = 4.41 sec; ```. Also, you can look, in the build directory, in the subdirectory `Testing/Temporary/LastTestsFailed.log` which will give details of which specific test failed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393676260
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393679453:4,Testability,Test,Testing,4,cat Testing/Temporary/LastTestsFailed.log; 1:unit_tests,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393679453
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393679453:38,Testability,log,log,38,cat Testing/Temporary/LastTestsFailed.log; 1:unit_tests,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393679453
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687065:12,Testability,log,log,12,ha ... that log isn't particularly interesting --- what happens if you run `./src/unitTests` from the build directory?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687065
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687987:102,Testability,test,tests,102,./src/unitTests; ===============================================================================; All tests passed (108 assertions in 4 test cases),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687987
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687987:120,Testability,assert,assertions,120,./src/unitTests; ===============================================================================; All tests passed (108 assertions in 4 test cases),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687987
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687987:136,Testability,test,test,136,./src/unitTests; ===============================================================================; All tests passed (108 assertions in 4 test cases),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393687987
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393688490:25,Availability,failure,failure,25,hrmmmmm .... so then the failure is stochastic?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393688490
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393689032:57,Testability,test,test,57,Well... `./src/unitTests` seems to always pass and `make test` to always fail...,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393689032
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393690468:18,Deployability,install,install,18,can you try `make install` before `make test`?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393690468
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393690468:40,Testability,test,test,40,can you try `make install` before `make test`?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393690468
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1606,Availability,Error,Errors,1606,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1698,Availability,Error,Error,1698,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:12,Deployability,install,install,12,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:459,Deployability,Install,Install,459,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:486,Deployability,Install,Install,486,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:494,Deployability,configurat,configuration,494,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:510,Deployability,Release,Release,510,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:966,Deployability,Install,Installation,966,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:494,Modifiability,config,configuration,494,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1139,Testability,test,test,1139,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1153,Testability,test,tests,1153,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1163,Testability,Test,Test,1163,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1215,Testability,Test,Test,1215,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1313,Testability,Test,Test,1313,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1411,Testability,Test,Test,1411,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1476,Testability,test,tests,1476,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1492,Testability,test,tests,1492,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1521,Testability,Test,Test,1521,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1564,Testability,test,tests,1564,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1667,Testability,test,test,1667,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1692,Testability,test,test,1692,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393692302:74,Testability,test,test,74,"It must be a different `unitTest` executable that is running, since `make test` is just using CMake to run the same executable in `./src/unitTests`. I'm happy to help debug this further, but I'm currently most interested in how a transcript gets an infinite count after round 0.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393692302
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393842202:162,Availability,avail,avail,162,"> thank you so much for your help today!. Sure, after all it is quite selfish ;-). I have been trying to generate smaller transcript db and fastq files but to no avail (can't make it fail again). However it looks like your test `if (denom <= ::minEQClassWeight)` could be not stringent enough:; invDenom:inf count:1 denom:2.77171e-321 minEQClassWeight:4.94066e-324; invDenom:inf count:1 denom:4.69042e-316 minEQClassWeight:4.94066e-324. These two lines result from:; groupSize: 2; i:0 tid:83966 aux:0.756044 expTheta[tid]:0; i:1 tid:83967 aux:0.243956 expTheta[tid]:7.23806e-321. groupSize: 2; i:0 tid:190925 aux:0.542131 expTheta[tid]:0; i:1 tid:272773 aux:0.457869 expTheta[tid]:6.2423e-316",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393842202
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393842202:223,Testability,test,test,223,"> thank you so much for your help today!. Sure, after all it is quite selfish ;-). I have been trying to generate smaller transcript db and fastq files but to no avail (can't make it fail again). However it looks like your test `if (denom <= ::minEQClassWeight)` could be not stringent enough:; invDenom:inf count:1 denom:2.77171e-321 minEQClassWeight:4.94066e-324; invDenom:inf count:1 denom:4.69042e-316 minEQClassWeight:4.94066e-324. These two lines result from:; groupSize: 2; i:0 tid:83966 aux:0.756044 expTheta[tid]:0; i:1 tid:83967 aux:0.243956 expTheta[tid]:7.23806e-321. groupSize: 2; i:0 tid:190925 aux:0.542131 expTheta[tid]:0; i:1 tid:272773 aux:0.457869 expTheta[tid]:6.2423e-316",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393842202
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393905696:152,Deployability,release,release,152,Awesome! Thanks for checking it out. I think having `denorm_min` become `min` makes sense. I'm gonna push both this and #228 to master and cut a 0.10.1 release (and I'll be sure to thank you in the release notes). I'll close these issues once that release is done.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393905696
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393905696:198,Deployability,release,release,198,Awesome! Thanks for checking it out. I think having `denorm_min` become `min` makes sense. I'm gonna push both this and #228 to master and cut a 0.10.1 release (and I'll be sure to thank you in the release notes). I'll close these issues once that release is done.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393905696
https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393905696:248,Deployability,release,release,248,Awesome! Thanks for checking it out. I think having `denorm_min` become `min` makes sense. I'm gonna push both this and #228 to master and cut a 0.10.1 release (and I'll be sure to thank you in the release notes). I'll close these issues once that release is done.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393905696
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394164828:388,Deployability,install,install,388,"Hi @francicco,. It looks like the problem is that the compiler being used is newer than the linker being used to link bzip2 here (see e.g. [this](https://stackoverflow.com/questions/46058050/unable-to-compile-unrecognized-relocation)). You should try and make sure the appropriate (newer) linker is present in your path before the older one. Another option, of course, would be to simply install salmon through Bioconda, which will take care of such issues for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394164828
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394164828:381,Usability,simpl,simply,381,"Hi @francicco,. It looks like the problem is that the compiler being used is newer than the linker being used to link bzip2 here (see e.g. [this](https://stackoverflow.com/questions/46058050/unable-to-compile-unrecognized-relocation)). You should try and make sure the appropriate (newer) linker is present in your path before the older one. Another option, of course, would be to simply install salmon through Bioconda, which will take care of such issues for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394164828
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744:281,Availability,avail,available,281,"Ho @rob-p,. I changed gcc version so many times, I changed cluster, nothing. I tried with conda and it works, kind of. But apparently the bioconda version the [0.101](https://anaconda.org/bioconda/salmon) and is not the latest:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ```; Anything to be worried?; Thanks; F",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744:323,Availability,avail,available,323,"Ho @rob-p,. I changed gcc version so many times, I changed cluster, nothing. I tried with conda and it works, kind of. But apparently the bioconda version the [0.101](https://anaconda.org/bioconda/salmon) and is not the latest:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ```; Anything to be worried?; Thanks; F",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744:374,Deployability,release,releases,374,"Ho @rob-p,. I changed gcc version so many times, I changed cluster, nothing. I tried with conda and it works, kind of. But apparently the bioconda version the [0.101](https://anaconda.org/bioconda/salmon) and is not the latest:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ```; Anything to be worried?; Thanks; F",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744:449,Deployability,upgrade,upgrade,449,"Ho @rob-p,. I changed gcc version so many times, I changed cluster, nothing. I tried with conda and it works, kind of. But apparently the bioconda version the [0.101](https://anaconda.org/bioconda/salmon) and is not the latest:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ```; Anything to be worried?; Thanks; F",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394452979:58,Modifiability,config,config,58,"Hi @francicco ,. Can you try the following?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.10.1; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394452979
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394452979:101,Modifiability,config,config,101,"Hi @francicco ,. Can you try the following?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.10.1; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394452979
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394462073:150,Availability,fault,fault,150,actually... `processed 3000000 reads in current round/home/lv70640/c7701100/Projects/ZebraFish/ZebFish.Transcriptome.sh: line 104: 19000 Segmentation fault`. It was better before; F,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394462073
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686:196,Availability,error,error,196,"Hi @francicco ,. Thanks for sharing the data. I'm able to re-create the problem and am trying to debug it now. The reason you see this behavior in 0.10.1 but not in 0.8.1 is because in 0.10.1 the error model is enabled by default, while it is not in 0.8.1. If you run the newest salmon with `--noErrorModel` (the default in 0.8.1), your sample runs to completion. However, using the error model helps (which is why I made it the default), so I'm trying to debug what's happening there. I'll keep you posted. One more point worth mentioning. I noticed you are passing a coordinate sorted BAM file. For quantification with salmon, you really should not be passing a coordinate sorted BAM. This is because Salmon expects the alignments to appear in a random order, which is important for how the streaming stochastic variational algorithm learns the auxiliary parameters. Sorting by coordinates biases the models towards the isoforms that appear earliest in the BAM file.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686:383,Availability,error,error,383,"Hi @francicco ,. Thanks for sharing the data. I'm able to re-create the problem and am trying to debug it now. The reason you see this behavior in 0.10.1 but not in 0.8.1 is because in 0.10.1 the error model is enabled by default, while it is not in 0.8.1. If you run the newest salmon with `--noErrorModel` (the default in 0.8.1), your sample runs to completion. However, using the error model helps (which is why I made it the default), so I'm trying to debug what's happening there. I'll keep you posted. One more point worth mentioning. I noticed you are passing a coordinate sorted BAM file. For quantification with salmon, you really should not be passing a coordinate sorted BAM. This is because Salmon expects the alignments to appear in a random order, which is important for how the streaming stochastic variational algorithm learns the auxiliary parameters. Sorting by coordinates biases the models towards the isoforms that appear earliest in the BAM file.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686:836,Usability,learn,learns,836,"Hi @francicco ,. Thanks for sharing the data. I'm able to re-create the problem and am trying to debug it now. The reason you see this behavior in 0.10.1 but not in 0.8.1 is because in 0.10.1 the error model is enabled by default, while it is not in 0.8.1. If you run the newest salmon with `--noErrorModel` (the default in 0.8.1), your sample runs to completion. However, using the error model helps (which is why I made it the default), so I'm trying to debug what's happening there. I'll keep you posted. One more point worth mentioning. I noticed you are passing a coordinate sorted BAM file. For quantification with salmon, you really should not be passing a coordinate sorted BAM. This is because Salmon expects the alignments to appear in a random order, which is important for how the streaming stochastic variational algorithm learns the auxiliary parameters. Sorting by coordinates biases the models towards the isoforms that appear earliest in the BAM file.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031:169,Availability,error,error,169,"Hi @francicco ,. I've dug further, and in addition to these problems with the input file, there was also a specific bug in salmon's processing of the alignments for the error model. Specifically, it was triggered when an alignment ended with a soft-clip of the reference. I have now fixed this issue in the develop branch, and, after some more testing, will push it to a new release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031:375,Deployability,release,release,375,"Hi @francicco ,. I've dug further, and in addition to these problems with the input file, there was also a specific bug in salmon's processing of the alignments for the error model. Specifically, it was triggered when an alignment ended with a soft-clip of the reference. I have now fixed this issue in the develop branch, and, after some more testing, will push it to a new release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031:344,Testability,test,testing,344,"Hi @francicco ,. I've dug further, and in addition to these problems with the input file, there was also a specific bug in salmon's processing of the alignments for the error model. Specifically, it was triggered when an alignment ended with a soft-clip of the reference. I have now fixed this issue in the develop branch, and, after some more testing, will push it to a new release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394912602:172,Availability,error,error,172,"I'm attaching the linux binary with the fix [here](https://github.com/COMBINE-lab/salmon/files/2074498/salmon-latest_linux_x86_64.tar.gz). Can you see if this runs without error for you (after addressing the issues with the duplicate sequences and alignment sort order mentioned above)? If so, I'll cut it as a new release. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394912602
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394912602:315,Deployability,release,release,315,"I'm attaching the linux binary with the fix [here](https://github.com/COMBINE-lab/salmon/files/2074498/salmon-latest_linux_x86_64.tar.gz). Can you see if this runs without error for you (after addressing the issues with the duplicate sequences and alignment sort order mentioned above)? If so, I'll cut it as a new release. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394912602
https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-395790180:39,Deployability,update,updated,39,"Since 0.10.2 is now out (and salmon is updated in bioconda), I'm going to close this issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-395790180
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752048:21,Deployability,install,install,21,"Hi @rbenel,. Did you install via bioconda, or build from source? If you built from source, you have to do a completely clean build (i.e. removing the build directory that existed for the prior installation). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752048
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752048:193,Deployability,install,installation,193,"Hi @rbenel,. Did you install via bioconda, or build from source? If you built from source, you have to do a completely clean build (i.e. removing the build directory that existed for the prior installation). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752048
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752289:2,Availability,down,downloaded,2,"I downloaded the binary, both times.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752289
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905:55,Deployability,upgrade,upgraded,55,Interesting. One thing that changed is that we finally upgraded the Docker image used in our continuous integration server from CentOS5 to CentOS6; I wonder if that might cause some portability issues. Could you try installing via Bioconda to see if that executable gives you the same trouble?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905:93,Deployability,continuous,continuous,93,Interesting. One thing that changed is that we finally upgraded the Docker image used in our continuous integration server from CentOS5 to CentOS6; I wonder if that might cause some portability issues. Could you try installing via Bioconda to see if that executable gives you the same trouble?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905:104,Deployability,integrat,integration,104,Interesting. One thing that changed is that we finally upgraded the Docker image used in our continuous integration server from CentOS5 to CentOS6; I wonder if that might cause some portability issues. Could you try installing via Bioconda to see if that executable gives you the same trouble?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905:216,Deployability,install,installing,216,Interesting. One thing that changed is that we finally upgraded the Docker image used in our continuous integration server from CentOS5 to CentOS6; I wonder if that might cause some portability issues. Could you try installing via Bioconda to see if that executable gives you the same trouble?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905:104,Integrability,integrat,integration,104,Interesting. One thing that changed is that we finally upgraded the Docker image used in our continuous integration server from CentOS5 to CentOS6; I wonder if that might cause some portability issues. Could you try installing via Bioconda to see if that executable gives you the same trouble?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905:182,Modifiability,portab,portability,182,Interesting. One thing that changed is that we finally upgraded the Docker image used in our continuous integration server from CentOS5 to CentOS6; I wonder if that might cause some portability issues. Could you try installing via Bioconda to see if that executable gives you the same trouble?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752905
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394753571:62,Deployability,install,installing,62,"OK, I will try. Do I need to do anything to the binary before installing salmon via bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394753571
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128:35,Deployability,install,installed,35,"Nope; nothing special. Once you've installed conda, you simply do:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.10.1; ```. then it will give you instructions on how to activate the environment to run salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128:81,Modifiability,config,config,81,"Nope; nothing special. Once you've installed conda, you simply do:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.10.1; ```. then it will give you instructions on how to activate the environment to run salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128:124,Modifiability,config,config,124,"Nope; nothing special. Once you've installed conda, you simply do:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.10.1; ```. then it will give you instructions on how to activate the environment to run salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128:56,Usability,simpl,simply,56,"Nope; nothing special. Once you've installed conda, you simply do:. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.10.1; ```. then it will give you instructions on how to activate the environment to run salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394755128
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395002738:19,Deployability,install,installed,19,"OK. I successfully installed conda and entered the salmon env and then created the index (I hope correctly, as I am new to the conda env), but now I want to run my samples on our cluster at the university where I do not have permissions to install from source, and therefore the binary version of salmon is installed there. Will there be an incompatibility problem, if I indexed the trasncriptome on my local computer and run salmon using the binary?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395002738
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395002738:240,Deployability,install,install,240,"OK. I successfully installed conda and entered the salmon env and then created the index (I hope correctly, as I am new to the conda env), but now I want to run my samples on our cluster at the university where I do not have permissions to install from source, and therefore the binary version of salmon is installed there. Will there be an incompatibility problem, if I indexed the trasncriptome on my local computer and run salmon using the binary?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395002738
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395002738:307,Deployability,install,installed,307,"OK. I successfully installed conda and entered the salmon env and then created the index (I hope correctly, as I am new to the conda env), but now I want to run my samples on our cluster at the university where I do not have permissions to install from source, and therefore the binary version of salmon is installed there. Will there be an incompatibility problem, if I indexed the trasncriptome on my local computer and run salmon using the binary?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395002738
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485:165,Availability,Error,Error,165,"Hi @rob-p, ; So I can't update you on if it worked, because the cluster is using the 10.0 version (because we can't install from source), and I ran into this bug, ( Error in function boost::math::digamma<double>(double): numeric overflow] #229) for all of my samples, which you mention in the thread that this was fixed in the 10.1 version. Any idea when the binary for 10.1 will be out?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485:24,Deployability,update,update,24,"Hi @rob-p, ; So I can't update you on if it worked, because the cluster is using the 10.0 version (because we can't install from source), and I ran into this bug, ( Error in function boost::math::digamma<double>(double): numeric overflow] #229) for all of my samples, which you mention in the thread that this was fixed in the 10.1 version. Any idea when the binary for 10.1 will be out?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485:116,Deployability,install,install,116,"Hi @rob-p, ; So I can't update you on if it worked, because the cluster is using the 10.0 version (because we can't install from source), and I ran into this bug, ( Error in function boost::math::digamma<double>(double): numeric overflow] #229) for all of my samples, which you mention in the thread that this was fixed in the 10.1 version. Any idea when the binary for 10.1 will be out?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395121560:107,Deployability,install,installed,107,I can try. I will need to send the executable to the administrator of the cluster and request for it to be installed.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395121560
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395416625:285,Availability,error,error,285,"Hi @rob-p, ; I have successfully run the Salmon analysis, but I should add that the admin of the cluster utilized the executable you sent, but I used conda to install salmon 10.1, the executable you sent me for some reason didn't index the transcriptome correctly, I received the same error I initially started this post for...; Thank you so much for all of your help, I'll post here how it goes. :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395416625
https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395416625:159,Deployability,install,install,159,"Hi @rob-p, ; I have successfully run the Salmon analysis, but I should add that the admin of the cluster utilized the executable you sent, but I used conda to install salmon 10.1, the executable you sent me for some reason didn't index the transcriptome correctly, I received the same error I initially started this post for...; Thank you so much for all of your help, I'll post here how it goes. :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395416625
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:519,Availability,down,downstream,519,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:620,Availability,error,error,620,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:1237,Availability,down,downstream,1237,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:243,Deployability,pipeline,pipeline,243,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:891,Deployability,pipeline,pipeline,891,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:437,Performance,perform,performs,437,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:1226,Performance,perform,performing,1226,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:204,Testability,test,tested,204,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395180151:202,Modifiability,parameteriz,parameterized,202,"@sjackman ,. Thanks for raising this question. I actually think that making the barcode processing phase of alevin a bit more general sounds like an excellent idea. Right now, the barcode processing is parameterized by a class that describes the barcode layout etc. These are represented, basically, as C++ policy classes. However, having a custom policy (specified in e.g. a YAML file or some such) wouldn't be too difficult to do, and might make the barcode processing useful in a larger context. We'd be happy to help implement this and see if it works in your context. One question to resolve first, though (please chime in here @k3yavi) is what assumptions make sense for bar code correction in each datatype. That is, do we expect similar-ish numbers and distributions of barcodes, etc. so that our ""knee-in-the-curve"" heuristics still make sense?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395180151
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:161,Availability,error,errors,161,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:230,Availability,error,errors,230,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:436,Availability,error,errors,436,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:489,Availability,error,errors,489,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:546,Availability,error,errors,546,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:592,Availability,error,errors,592,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:238,Usability,intuit,intuition,238,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411:461,Availability,error,error-correction,461,"I see, we might have to tweak a bit based on the use case for `longranger basic`.; In `v0.10`, alevin should still be able to do CB correction, and attach the corrected CBs to the header of the second file, although the remaining template sequence (128 bases) from the first file might get loss, since `cellranger` was using template sequencing in only one file. Like @rob-p was saying we can work on making this step more generalized, once we confirm that the error-correction model for `cellranger` and `longranger` can be used interchangeably. In theory we can still concatenate the remaining 128 bases into an interleaved format since alevin has hidden options to provide the lengths explicitly but we have not tested this feature extensively. We will keep this at the top of our feature-request list and would inform you as soon as we have a stable version with this feature. Thanks again for the interest !!. re: *interleaved format* -- indeed an interleave format does makes sense and should be the default dumping format, but I believe since the default mode of 10x's `mkfastq` is to dump separate `FASTQ`, we should not use resources to create an interim interleaved format and then consume it downstream (since`FASTQ` itself is not very efficient), instead, in alevin we just consume the two separate `FASTQ` into our own interim data-structure to perform the downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411:1203,Availability,down,downstream,1203,"I see, we might have to tweak a bit based on the use case for `longranger basic`.; In `v0.10`, alevin should still be able to do CB correction, and attach the corrected CBs to the header of the second file, although the remaining template sequence (128 bases) from the first file might get loss, since `cellranger` was using template sequencing in only one file. Like @rob-p was saying we can work on making this step more generalized, once we confirm that the error-correction model for `cellranger` and `longranger` can be used interchangeably. In theory we can still concatenate the remaining 128 bases into an interleaved format since alevin has hidden options to provide the lengths explicitly but we have not tested this feature extensively. We will keep this at the top of our feature-request list and would inform you as soon as we have a stable version with this feature. Thanks again for the interest !!. re: *interleaved format* -- indeed an interleave format does makes sense and should be the default dumping format, but I believe since the default mode of 10x's `mkfastq` is to dump separate `FASTQ`, we should not use resources to create an interim interleaved format and then consume it downstream (since`FASTQ` itself is not very efficient), instead, in alevin we just consume the two separate `FASTQ` into our own interim data-structure to perform the downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411:1370,Availability,down,downstream,1370,"I see, we might have to tweak a bit based on the use case for `longranger basic`.; In `v0.10`, alevin should still be able to do CB correction, and attach the corrected CBs to the header of the second file, although the remaining template sequence (128 bases) from the first file might get loss, since `cellranger` was using template sequencing in only one file. Like @rob-p was saying we can work on making this step more generalized, once we confirm that the error-correction model for `cellranger` and `longranger` can be used interchangeably. In theory we can still concatenate the remaining 128 bases into an interleaved format since alevin has hidden options to provide the lengths explicitly but we have not tested this feature extensively. We will keep this at the top of our feature-request list and would inform you as soon as we have a stable version with this feature. Thanks again for the interest !!. re: *interleaved format* -- indeed an interleave format does makes sense and should be the default dumping format, but I believe since the default mode of 10x's `mkfastq` is to dump separate `FASTQ`, we should not use resources to create an interim interleaved format and then consume it downstream (since`FASTQ` itself is not very efficient), instead, in alevin we just consume the two separate `FASTQ` into our own interim data-structure to perform the downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411:1247,Energy Efficiency,efficient,efficient,1247,"I see, we might have to tweak a bit based on the use case for `longranger basic`.; In `v0.10`, alevin should still be able to do CB correction, and attach the corrected CBs to the header of the second file, although the remaining template sequence (128 bases) from the first file might get loss, since `cellranger` was using template sequencing in only one file. Like @rob-p was saying we can work on making this step more generalized, once we confirm that the error-correction model for `cellranger` and `longranger` can be used interchangeably. In theory we can still concatenate the remaining 128 bases into an interleaved format since alevin has hidden options to provide the lengths explicitly but we have not tested this feature extensively. We will keep this at the top of our feature-request list and would inform you as soon as we have a stable version with this feature. Thanks again for the interest !!. re: *interleaved format* -- indeed an interleave format does makes sense and should be the default dumping format, but I believe since the default mode of 10x's `mkfastq` is to dump separate `FASTQ`, we should not use resources to create an interim interleaved format and then consume it downstream (since`FASTQ` itself is not very efficient), instead, in alevin we just consume the two separate `FASTQ` into our own interim data-structure to perform the downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411:1358,Performance,perform,perform,1358,"I see, we might have to tweak a bit based on the use case for `longranger basic`.; In `v0.10`, alevin should still be able to do CB correction, and attach the corrected CBs to the header of the second file, although the remaining template sequence (128 bases) from the first file might get loss, since `cellranger` was using template sequencing in only one file. Like @rob-p was saying we can work on making this step more generalized, once we confirm that the error-correction model for `cellranger` and `longranger` can be used interchangeably. In theory we can still concatenate the remaining 128 bases into an interleaved format since alevin has hidden options to provide the lengths explicitly but we have not tested this feature extensively. We will keep this at the top of our feature-request list and would inform you as soon as we have a stable version with this feature. Thanks again for the interest !!. re: *interleaved format* -- indeed an interleave format does makes sense and should be the default dumping format, but I believe since the default mode of 10x's `mkfastq` is to dump separate `FASTQ`, we should not use resources to create an interim interleaved format and then consume it downstream (since`FASTQ` itself is not very efficient), instead, in alevin we just consume the two separate `FASTQ` into our own interim data-structure to perform the downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411
https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411:715,Testability,test,tested,715,"I see, we might have to tweak a bit based on the use case for `longranger basic`.; In `v0.10`, alevin should still be able to do CB correction, and attach the corrected CBs to the header of the second file, although the remaining template sequence (128 bases) from the first file might get loss, since `cellranger` was using template sequencing in only one file. Like @rob-p was saying we can work on making this step more generalized, once we confirm that the error-correction model for `cellranger` and `longranger` can be used interchangeably. In theory we can still concatenate the remaining 128 bases into an interleaved format since alevin has hidden options to provide the lengths explicitly but we have not tested this feature extensively. We will keep this at the top of our feature-request list and would inform you as soon as we have a stable version with this feature. Thanks again for the interest !!. re: *interleaved format* -- indeed an interleave format does makes sense and should be the default dumping format, but I believe since the default mode of 10x's `mkfastq` is to dump separate `FASTQ`, we should not use resources to create an interim interleaved format and then consume it downstream (since`FASTQ` itself is not very efficient), instead, in alevin we just consume the two separate `FASTQ` into our own interim data-structure to perform the downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395813028:179,Availability,error,error,179,"Hi @GWW , thanks for showing interest in alevin.; Is it possible to share one of the `fastq` file where you are observing this behavior, just to replicate and debug the source of error ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395813028
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395814714:281,Availability,error,error,281,"I suspect the issue may be the computational cluster, which limits the number or processes an application can solve and the large number of threads alevin is spawning after processing the first 6M reads. Is there an alternative way to limit the number of threads? . I get the same error at 6M barcodes processed with the v2 chemsitry pbmc4k dataset available on the 10X website.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395814714
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395814714:349,Availability,avail,available,349,"I suspect the issue may be the computational cluster, which limits the number or processes an application can solve and the large number of threads alevin is spawning after processing the first 6M reads. Is there an alternative way to limit the number of threads? . I get the same error at 6M barcodes processed with the v2 chemsitry pbmc4k dataset available on the 10X website.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395814714
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395824915:281,Availability,avail,available,281,"I am trying to replicate the issue but unfortunately I am not observing the similar behavior. Alevin should ideally be using 2 threads (at the same time) and the program seems to be crashing at the CB counting stage, which doesn't uses more than 3 threads (no matter the number of available/given threads). Having said that, can you please confirm that you observe the same behavior when you provide say `-p 4` ? Since Alevin has been designed to work in highly parallel environment (within given limits), although it's possible there is a some tricky corner case we might be missing when using 1 thread.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395824915
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395826503:311,Energy Efficiency,allocate,allocate,311,"@GWW,. First, thanks for trying this out and for filing the report. We're eager to reproduce this, figure out what's going on, and fix it. It's theoretically possible to use something like [cgroups](http://man7.org/linux/man-pages/man7/cgroups.7.html) to limit the number of threads that the process could even allocate. However, it really should not be allocating more threads than are being given (+1 for the asynchronous logger thread). Can you please provide some details about the specific OS and version you're running on where you are seeing this behavior?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395826503
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395826503:424,Testability,log,logger,424,"@GWW,. First, thanks for trying this out and for filing the report. We're eager to reproduce this, figure out what's going on, and fix it. It's theoretically possible to use something like [cgroups](http://man7.org/linux/man-pages/man7/cgroups.7.html) to limit the number of threads that the process could even allocate. However, it really should not be allocating more threads than are being given (+1 for the asynchronous logger thread). Can you please provide some details about the specific OS and version you're running on where you are seeing this behavior?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395826503
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:104,Availability,error,error,104,Thanks for the speedy replies. I tried running alevin with 8 threads and it ends up leading to the same error and backtrace. I can see a large number of threads still spawning through GDB. I have had these kinds of issues before with OpenMP and I usually had to specify an environment variable to limit the threads. I compiled salmon with the download boost etc option:. ```; linux-vdso.so.1 (0x00007ffc90379000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f859b069000); libtbbmalloc_proxy.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc_proxy.so.2 (0x00007f859ae66000); libtbbmalloc.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc.so.2 (0x00007f859ac36000); libtbb.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbb.so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enab,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:343,Availability,down,download,343,Thanks for the speedy replies. I tried running alevin with 8 threads and it ends up leading to the same error and backtrace. I can see a large number of threads still spawning through GDB. I have had these kinds of issues before with OpenMP and I usually had to specify an environment variable to limit the threads. I compiled salmon with the download boost etc option:. ```; linux-vdso.so.1 (0x00007ffc90379000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f859b069000); libtbbmalloc_proxy.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc_proxy.so.2 (0x00007f859ae66000); libtbbmalloc.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc.so.2 (0x00007f859ac36000); libtbb.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbb.so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enab,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2806,Availability,avail,available,2806,"O_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2892,Availability,avail,available,2892,"./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd795e7700 (LWP 14279)]; [New Thread 0x7ffcf95e6700 (LWP 14280)]; [New T",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:570,Deployability,install,install,570,Thanks for the speedy replies. I tried running alevin with 8 threads and it ends up leading to the same error and backtrace. I can see a large number of threads still spawning through GDB. I have had these kinds of issues before with OpenMP and I usually had to specify an environment variable to limit the threads. I compiled salmon with the download boost etc option:. ```; linux-vdso.so.1 (0x00007ffc90379000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f859b069000); libtbbmalloc_proxy.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc_proxy.so.2 (0x00007f859ae66000); libtbbmalloc.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc.so.2 (0x00007f859ac36000); libtbb.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbb.so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enab,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:699,Deployability,install,install,699,Thanks for the speedy replies. I tried running alevin with 8 threads and it ends up leading to the same error and backtrace. I can see a large number of threads still spawning through GDB. I have had these kinds of issues before with OpenMP and I usually had to specify an environment variable to limit the threads. I compiled salmon with the download boost etc option:. ```; linux-vdso.so.1 (0x00007ffc90379000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f859b069000); libtbbmalloc_proxy.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc_proxy.so.2 (0x00007f859ae66000); libtbbmalloc.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc.so.2 (0x00007f859ac36000); libtbb.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbb.so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enab,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:816,Deployability,install,install,816,Thanks for the speedy replies. I tried running alevin with 8 threads and it ends up leading to the same error and backtrace. I can see a large number of threads still spawning through GDB. I have had these kinds of issues before with OpenMP and I usually had to specify an environment variable to limit the threads. I compiled salmon with the download boost etc option:. ```; linux-vdso.so.1 (0x00007ffc90379000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f859b069000); libtbbmalloc_proxy.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc_proxy.so.2 (0x00007f859ae66000); libtbbmalloc.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc.so.2 (0x00007f859ac36000); libtbb.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbb.so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enab,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2370,Deployability,configurat,configuration,2370,"so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2502,Deployability,configurat,configuration,2502," /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2943,Deployability,release,releases,2943,"ibthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd795e7700 (LWP 14279)]; [New Thread 0x7ffcf95e6700 (LWP 14280)]; [New Thread 0x7ffc795e5700 (LWP 14281)]; [2018-06-08 13:37:41.419] [alevinLog] [info] Processing barcodes files (if Present",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:3012,Deployability,upgrade,upgrade,3012,"ibthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd795e7700 (LWP 14279)]; [New Thread 0x7ffcf95e6700 (LWP 14280)]; [New Thread 0x7ffc795e5700 (LWP 14281)]; [2018-06-08 13:37:41.419] [alevinLog] [info] Processing barcodes files (if Present",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:1808,Integrability,wrap,wrapper,1808,"so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7ff",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:285,Modifiability,variab,variable,285,Thanks for the speedy replies. I tried running alevin with 8 threads and it ends up leading to the same error and backtrace. I can see a large number of threads still spawning through GDB. I have had these kinds of issues before with OpenMP and I usually had to specify an environment variable to limit the threads. I compiled salmon with the download boost etc option:. ```; linux-vdso.so.1 (0x00007ffc90379000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f859b069000); libtbbmalloc_proxy.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc_proxy.so.2 (0x00007f859ae66000); libtbbmalloc.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc.so.2 (0x00007f859ac36000); libtbb.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbb.so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enab,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:1851,Modifiability,Config,Configured,1851,"so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7ff",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:1870,Modifiability,config,configure,1870,"p.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2370,Modifiability,config,configuration,2370,"so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2502,Modifiability,config,configuration,2502," /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2151,Performance,load,loading,2151,"07f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2191,Performance,load,load,2191,"07f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2239,Performance,load,load,2239,"07f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2294,Performance,load,load-safe-path,2294,"nu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-bas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2471,Performance,load,load,2471," /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2609,Performance,load,loading,2609," #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/trans",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2698,Performance,load,loading,2698,"O_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2196,Safety,safe,safe-path,2196,"07f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2299,Safety,safe,safe-path,2299,"nu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-bas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2476,Safety,safe,safe-path,2476," /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2617,Safety,safe,safe,2617," #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/trans",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2706,Safety,safe,safe,2706,"O_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:4971,Safety,Abort,Aborted,4971,"ents, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd795e7700 (LWP 14279)]; [New Thread 0x7ffcf95e6700 (LWP 14280)]; [New Thread 0x7ffc795e5700 (LWP 14281)]; [2018-06-08 13:37:41.419] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffbf7063700 (LWP 14333)]; [New Thread 0x7ffb77062700 (LWP 14334)]; [New Thread 0x7ffaf7061700 (LWP 14335)]; [New Thread 0x7ffa77060700 (LWP 14336)]; [New Thread 0x7ff9f705f700 (LWP 14337)]; [New Thread 0x7ff97705e700 (LWP 14338)]; [New Thread 0x7ff8f705d700 (LWP 14340)]; [New Thread 0x7ff87705c700 (LWP 14341)]; [New Thread 0x7ff7f705b700 (LWP 14342)]; [New Thread 0x7ff77705a700 (LWP 14343)]; [New Thread 0x7ff6f7059700 (LWP 14344)]; [New Thread 0x7ff677058700 (LWP 14345)]; [New Thread 0x7ff5f7057700 (LWP 14346)]; [Thread 0x7ffbf7063700 (LWP 14333) exited]; [New Thread 0x7ff577056700 (LWP 14347)]; [Thread 0x7ffaf7061700 (LWP 14335) exited]; [New Thread 0x7ff4f7055700 (LWP 14348)]; [Thread 0x7ffa77060700 (LWP 14336) exited]; [New Thread 0x7ff477054700 (LWP 14349)]; terminate called without an active exception; [Thread 0x7ff9f705f700 (LWP 14337) exited]; [Thread 0x7ffb77062700 (LWP 14334) exited]. Program received signal SIGABRT, Aborted.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2437,Security,secur,security,2437," /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2574,Security,secur,security,2574," #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/trans",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:3098,Testability,Log,Logs,3098,"ed by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd795e7700 (LWP 14279)]; [New Thread 0x7ffcf95e6700 (LWP 14280)]; [New Thread 0x7ffc795e5700 (LWP 14281)]; [2018-06-08 13:37:41.419] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffbf7063700 (LWP 14333)]; [New Thread 0x7ffb77062700 (LWP 14334)]; [New Thread 0x7ffaf7061700 (LWP 14335)]; [New Thread 0x7ffa77060700 (LWP 1433",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:3136,Testability,log,logs,3136,"ed by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd795e7700 (LWP 14279)]; [New Thread 0x7ffcf95e6700 (LWP 14280)]; [New Thread 0x7ffc795e5700 (LWP 14281)]; [2018-06-08 13:37:41.419] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffbf7063700 (LWP 14333)]; [New Thread 0x7ffb77062700 (LWP 14334)]; [New Thread 0x7ffaf7061700 (LWP 14335)]; [New Thread 0x7ffa77060700 (LWP 1433",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395842118:276,Availability,alive,alive,276,"I don't know enough about the Alevin code base but I think you are using intel thread buildling blocks. I did notice on [stackoverflow](https://stackoverflow.com/questions/3786408/number-of-threads-used-by-intel-tbb) that . > You must keep the tbb::task_scheduler_init object alive after this, or it will revert back to automatic. Perhaps there's a place where the init object is being destroyed before the different parallelization steps are complete?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395842118
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395843922:108,Usability,pause,pause,108,"Hi @GWW,. Thanks for the link. We'll look into this. In the meantime, I also noticed something that gave me pause. Specifically, in your output, you have:. ```; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ```. Which makes me think that you are using pipe / process substitution to feed the reads to alevin. While this works fine with normal salmon, it's not currently possible with alevin. This is because alevin goes through the barcode file once by itself, and then goes through both the barcode and read files in unison to assign reads to cells using the initial barcode mapping. Thus, the pipe can't be reset to read from the beginning again, which is a problem. Are you, in fact, using process substitution here? Alevin can read directly from gzipped fastq files, so that's not necessary. Could you see if you encounter the issue if you remove the process substitution (if you're using it)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395843922
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395869990:294,Usability,simpl,simply,294,"@k3yavi,. The backtrace seems to suggest the issue is arising from [here](https://github.com/COMBINE-lab/salmon/blob/master/src/Alevin.cpp#L648), and functions called within. Any idea how something untoward could happen with the number of threads being spawned? Also, it looks like here we are simply spawning and joining threads manually --- so we can't blame that on tbb ;P.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395869990
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:479,Availability,avail,available,479,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:548,Energy Efficiency,monitor,monitoring,548,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:632,Energy Efficiency,monitor,monitoring,632,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:81,Performance,concurren,concurrent,81,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:928,Performance,concurren,concurrently,928,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:92,Security,hash,hash,92,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:151,Security,hash,hash,151,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:581,Security,hash,hash,581,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:731,Security,hash,hashmap,731,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:130,Availability,down,download,130,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:26,Deployability,hotfix,hotfix,26,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:220,Deployability,hotfix,hotfix,220,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:269,Deployability,hotfix,hotfix,269,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:208,Security,hash,hash-resize-hotfix,208,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:257,Security,hash,hash-resize-hotfix,257,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:417,Security,hash,hash,417,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:525,Security,hash,hash,525,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:64,Testability,test,testing,64,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395911670:32,Availability,down,down,32,"Thanks for so much for tracking down that issue so quickly! These problems have plagued me for years with different tools. There always seems to be a library that does this. I'll try the patched version this weekend and let you know how it goes. Finally, thanks for pointing out the issue about process substitution issue. I usually have 4-12 fastq files per sample and was following the [Alevin documentation](http://salmon.readthedocs.io/en/latest/alevin.html), which had the gzipped example using process substitution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395911670
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395911670:187,Deployability,patch,patched,187,"Thanks for so much for tracking down that issue so quickly! These problems have plagued me for years with different tools. There always seems to be a library that does this. I'll try the patched version this weekend and let you know how it goes. Finally, thanks for pointing out the issue about process substitution issue. I usually have 4-12 fastq files per sample and was following the [Alevin documentation](http://salmon.readthedocs.io/en/latest/alevin.html), which had the gzipped example using process substitution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395911670
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395912965:44,Deployability,update,updated,44,"Sure, thanks for pointing this out, we have updated the document now !; We are gonna do testing at our end too, but let us know if you have any other issue.; Happy Weekend !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395912965
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395912965:88,Testability,test,testing,88,"Sure, thanks for pointing this out, we have updated the document now !; We are gonna do testing at our end too, but let us know if you have any other issue.; Happy Weekend !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395912965
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:627,Deployability,configurat,configuration,627,"I tried running Alevin again from the new branch and it still seems to be spawning a large number of unexpected threads. Thanks again for all of the help I really appreciate it and I hope you both have a great weekend. ```; GNU gdb (Debian 7.7.1+dfsg-5) 7.7.1; Copyright (C) 2014 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:646,Deployability,configurat,configuration,646,"I tried running Alevin again from the new branch and it still seems to be spawning a large number of unexpected threads. Thanks again for all of the help I really appreciate it and I hope you both have a great weekend. ```; GNU gdb (Debian 7.7.1+dfsg-5) 7.7.1; Copyright (C) 2014 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1939,Deployability,configurat,configuration,1939,"ted to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2071,Deployability,configurat,configuration,2071,"ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2404,Deployability,upgrade,upgrade,2404,"/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-10 16:07:09.798] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2456,Deployability,upgrade,upgrades,2456,"cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-10 16:07:09.798] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffcfcffb700 (LWP 21657)]; [Thread 0x7ffcfcffb700 (LWP 21657) exited]; [New Thread 0x7ffc7cffa700 (LWP 21658)]; [New Thread 0x",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:8698,Integrability,protocol,protocols,8698," std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_expand_simple<std::integral_constant<bool, false>, std::integral_constant<bool, false> >(unsigned long)::{lambda(unsigned long, unsigned long, std::__exception_ptr::exception_ptr&)#1}) (); #7 0x00000000007af2a3 in bool cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_reserve<std::integral_constant<bool, false> >(unsigned long) [clone .constprop.984] (); #8 0x00000000007d3e29 in void initiatePipeline<alevin::protocols::Chromium, boost::program_options::basic_parsed_options<char> >(AlevinOpts<alevin::protocols::Chromium>&, SalmonOpts&, boost::program_options::basic_parsed_options<char>&, boost::program_options::variables_map&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) (); #9 0x00000000007b0935 in salmonBarcoding(int, char**) (); #10 0x000000000065d57c in main (); (gdb); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:8791,Integrability,protocol,protocols,8791," std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_expand_simple<std::integral_constant<bool, false>, std::integral_constant<bool, false> >(unsigned long)::{lambda(unsigned long, unsigned long, std::__exception_ptr::exception_ptr&)#1}) (); #7 0x00000000007af2a3 in bool cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_reserve<std::integral_constant<bool, false> >(unsigned long) [clone .constprop.984] (); #8 0x00000000007d3e29 in void initiatePipeline<alevin::protocols::Chromium, boost::program_options::basic_parsed_options<char> >(AlevinOpts<alevin::protocols::Chromium>&, SalmonOpts&, boost::program_options::basic_parsed_options<char>&, boost::program_options::variables_map&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) (); #9 0x00000000007b0935 in salmonBarcoding(int, char**) (); #10 0x000000000065d57c in main (); (gdb); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:581,Modifiability,config,configured,581,"I tried running Alevin again from the new branch and it still seems to be spawning a large number of unexpected threads. Thanks again for all of the help I really appreciate it and I hope you both have a great weekend. ```; GNU gdb (Debian 7.7.1+dfsg-5) 7.7.1; Copyright (C) 2014 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:627,Modifiability,config,configuration,627,"I tried running Alevin again from the new branch and it still seems to be spawning a large number of unexpected threads. Thanks again for all of the help I really appreciate it and I hope you both have a great weekend. ```; GNU gdb (Debian 7.7.1+dfsg-5) 7.7.1; Copyright (C) 2014 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:646,Modifiability,config,configuration,646,"I tried running Alevin again from the new branch and it still seems to be spawning a large number of unexpected threads. Thanks again for all of the help I really appreciate it and I hope you both have a great weekend. ```; GNU gdb (Debian 7.7.1+dfsg-5) 7.7.1; Copyright (C) 2014 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1939,Modifiability,config,configuration,1939,"ted to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2071,Modifiability,config,configuration,2071,"ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1718,Performance,load,loading,1718," the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1758,Performance,load,load,1758," the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1808,Performance,load,load,1808," the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1863,Performance,load,load-safe-path,1863,"entation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2040,Performance,load,load,2040,"ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2178,Performance,load,loading,2178,"shResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ##",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2267,Performance,load,loading,2267,"/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-10 16:07:09.798] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:5551,Performance,optimiz,optimized,5551,"ff67cfee700 (LWP 21670) exited]; [New Thread 0x7ff57cfec700 (LWP 21672)]; [Thread 0x7ff5fcfed700 (LWP 21671) exited]; [New Thread 0x7ff4fcfeb700 (LWP 21673)]; [Thread 0x7ff57cfec700 (LWP 21672) exited]; [New Thread 0x7ff47cfea700 (LWP 21674)]; [Thread 0x7ff4fcfeb700 (LWP 21673) exited]; [New Thread 0x7ff3fcfe9700 (LWP 21675)]; terminate called without an active exception; [Thread 0x7ff47cfea700 (LWP 21674) exited]; [Thread 0x7ff3fcfe9700 (LWP 21675) exited]. Program received signal SIGABRT, Aborted.; 0x00007fff7e8a7067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a7067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a8448 in __GI_abort () at abort.c:89; #2 0x0000000000c3b76d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000baf9b6 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000bafa01 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x0000000000715f1b in std::vector<std::thread, std::allocator<std::thread> >::~vector() (); #6 0x00000000007bee90 in void cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::c",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1763,Safety,safe,safe,1763," the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:1868,Safety,safe,safe-path,1868,"entation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from /u/user/local/bin/salmon...done.; (gdb) run alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2045,Safety,safe,safe-path,2045,"ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2186,Safety,safe,safe,2186,"shResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ##",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2275,Safety,safe,safe,2275,"/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-10 16:07:09.798] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:5024,Safety,Abort,Aborted,5024,"ead 0x7ff97cff4700 (LWP 21664) exited]; [New Thread 0x7ff87cff2700 (LWP 21666)]; [Thread 0x7ff8fcff3700 (LWP 21665) exited]; [New Thread 0x7ff7fcff1700 (LWP 21667)]; [Thread 0x7ff87cff2700 (LWP 21666) exited]; [New Thread 0x7ff77cff0700 (LWP 21668)]; [Thread 0x7ff7fcff1700 (LWP 21667) exited]; [New Thread 0x7ff6fcfef700 (LWP 21669)]; [Thread 0x7ff77cff0700 (LWP 21668) exited]; [New Thread 0x7ff67cfee700 (LWP 21670)]; [Thread 0x7ff6fcfef700 (LWP 21669) exited]; [New Thread 0x7ff5fcfed700 (LWP 21671)]; [Thread 0x7ff67cfee700 (LWP 21670) exited]; [New Thread 0x7ff57cfec700 (LWP 21672)]; [Thread 0x7ff5fcfed700 (LWP 21671) exited]; [New Thread 0x7ff4fcfeb700 (LWP 21673)]; [Thread 0x7ff57cfec700 (LWP 21672) exited]; [New Thread 0x7ff47cfea700 (LWP 21674)]; [Thread 0x7ff4fcfeb700 (LWP 21673) exited]; [New Thread 0x7ff3fcfe9700 (LWP 21675)]; terminate called without an active exception; [Thread 0x7ff47cfea700 (LWP 21674) exited]; [Thread 0x7ff3fcfe9700 (LWP 21675) exited]. Program received signal SIGABRT, Aborted.; 0x00007fff7e8a7067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a7067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a8448 in __GI_abort () at abort.c:89; #2 0x0000000000c3b76d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000baf9b6 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000bafa01 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x0000000000715f1b in std::vector<std::thread, std::allocator<std::thread> >::~vector() (); #6 0x00000000007bee90 in void cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:5357,Safety,abort,abort,5357,"P 21669)]; [Thread 0x7ff77cff0700 (LWP 21668) exited]; [New Thread 0x7ff67cfee700 (LWP 21670)]; [Thread 0x7ff6fcfef700 (LWP 21669) exited]; [New Thread 0x7ff5fcfed700 (LWP 21671)]; [Thread 0x7ff67cfee700 (LWP 21670) exited]; [New Thread 0x7ff57cfec700 (LWP 21672)]; [Thread 0x7ff5fcfed700 (LWP 21671) exited]; [New Thread 0x7ff4fcfeb700 (LWP 21673)]; [Thread 0x7ff57cfec700 (LWP 21672) exited]; [New Thread 0x7ff47cfea700 (LWP 21674)]; [Thread 0x7ff4fcfeb700 (LWP 21673) exited]; [New Thread 0x7ff3fcfe9700 (LWP 21675)]; terminate called without an active exception; [Thread 0x7ff47cfea700 (LWP 21674) exited]; [Thread 0x7ff3fcfe9700 (LWP 21675) exited]. Program received signal SIGABRT, Aborted.; 0x00007fff7e8a7067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a7067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a8448 in __GI_abort () at abort.c:89; #2 0x0000000000c3b76d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000baf9b6 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000bafa01 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x0000000000715f1b in std::vector<std::thread, std::allocator<std::thread> >::~vector() (); #6 0x00000000007bee90 in void cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2006,Security,secur,security,2006,"ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2143,Security,secur,security,2143,"shResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; Starting program: /u/user/local/bin/salmon alevin -l ISR --chromium -p 4 -o BM_1/alevin -1 ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz -2 ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz --maxHashResizeThreads 2 -i /u/user/ref/cellranger/salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ##",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2556,Testability,Log,Logs,2556,"libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-10 16:07:09.798] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffcfcffb700 (LWP 21657)]; [Thread 0x7ffcfcffb700 (LWP 21657) exited]; [New Thread 0x7ffc7cffa700 (LWP 21658)]; [New Thread 0x7ffbfcff9700 (LWP 21659)]o[Thread 0x7ffc7cffa700 (LWP 21658) exited]; [Thread 0x7ffbfcff9700 (LWP 21659) exited]; [New Thread 0x7ffb7cff8700 (LWP 21660)]; [Thr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627:2592,Testability,log,logs,2592,"libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe; -path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7dbff700 (LWP 21437)]; [Thread 0x7fff7dbff700 (LWP 21437) exited]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [New Thread 0x7ffefcfff700 (LWP 21653)]; Logs will be written to BM_1/alevin/logs; [New Thread 0x7ffe7cffe700 (LWP 21654)]; [New Thread 0x7ffdfcffd700 (LWP 21655)]; [New Thread 0x7ffd7cffc700 (LWP 21656)]; ### salmon (single-cell-based) v0.10.3; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 4 }; ### [ output ] => { BM_1/alevin }; ### [ mates1 ] => { ./BM_1/run1/bm_S10_L001_R1_001.fastq.gz }; ### [ mates2 ] => { ./BM_1/run1/bm_S10_L001_R2_001.fastq.gz }; ### [ maxHashResizeThreads ] => { 2 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-10 16:07:09.798] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffcfcffb700 (LWP 21657)]; [Thread 0x7ffcfcffb700 (LWP 21657) exited]; [New Thread 0x7ffc7cffa700 (LWP 21658)]; [New Thread 0x7ffbfcff9700 (LWP 21659)]o[Thread 0x7ffc7cffa700 (LWP 21658) exited]; [Thread 0x7ffbfcff9700 (LWP 21659) exited]; [New Thread 0x7ffb7cff8700 (LWP 21660)]; [Thr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396078627
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396092938:60,Modifiability,variab,variable,60,It's quite unfortunate that TBB doesn't have an environment variable that can be used to limit the number of threads like openMP does.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396092938
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096:294,Availability,fault,fault,294,"I agree completely with that complaint. Originally, I started using TBB instead of OpenMP because OSX's clang compiler didn't have OpenMP support. It's possible I will revisit this decision in the future, as I think that is no longer the case. On the other hand, this bug looks not to be TBB's fault. I pushed a fix, but then I explicitly resized the hash *before* setting the max thread count. I just pushed an update to this branch --- can you see if that helps?. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096:412,Deployability,update,update,412,"I agree completely with that complaint. Originally, I started using TBB instead of OpenMP because OSX's clang compiler didn't have OpenMP support. It's possible I will revisit this decision in the future, as I think that is no longer the case. On the other hand, this bug looks not to be TBB's fault. I pushed a fix, but then I explicitly resized the hash *before* setting the max thread count. I just pushed an update to this branch --- can you see if that helps?. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096:351,Security,hash,hash,351,"I agree completely with that complaint. Originally, I started using TBB instead of OpenMP because OSX's clang compiler didn't have OpenMP support. It's possible I will revisit this decision in the future, as I think that is no longer the case. On the other hand, this bug looks not to be TBB's fault. I pushed a fix, but then I explicitly resized the hash *before* setting the max thread count. I just pushed an update to this branch --- can you see if that helps?. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325275:108,Deployability,hotfix,hotfix,108,The lack of openMP on osx has been terrible so I completely appreciate not requiring it. It looks like your hotfix solved the threading problems now and Alevin ran to completion for me! . Thanks so much for the speedy replies and fixes!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325275
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325784:57,Availability,down,down,57,"Great; thanks for reporting this and helping us track it down. Please let us know if you run into anything else, or if you have other general feedback / suggestions regarding alevin!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325784
https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325784:142,Usability,feedback,feedback,142,"Great; thanks for reporting this and helping us track it down. Please let us know if you run into anything else, or if you have other general feedback / suggestions regarding alevin!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325784
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060:260,Availability,error,error,260,"Hi @EPunzi ,. There are a couple of options. First, I see you're using an older release of Salmon. I strongly suggest grabbing [the latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.10.2). What you posted here is actually a warning, not an error. What is preventing compilation looks to be a linking error (i.e. your compiler cannot find -lstdc++). If the newest salmon doesn't compile cleanly for the easiest thing to do is to install [through bioconda](https://anaconda.org/bioconda/salmon). Please let me know if either of these are successful, or, if not, what issues you run into. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060:320,Availability,error,error,320,"Hi @EPunzi ,. There are a couple of options. First, I see you're using an older release of Salmon. I strongly suggest grabbing [the latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.10.2). What you posted here is actually a warning, not an error. What is preventing compilation looks to be a linking error (i.e. your compiler cannot find -lstdc++). If the newest salmon doesn't compile cleanly for the easiest thing to do is to install [through bioconda](https://anaconda.org/bioconda/salmon). Please let me know if either of these are successful, or, if not, what issues you run into. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060:80,Deployability,release,release,80,"Hi @EPunzi ,. There are a couple of options. First, I see you're using an older release of Salmon. I strongly suggest grabbing [the latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.10.2). What you posted here is actually a warning, not an error. What is preventing compilation looks to be a linking error (i.e. your compiler cannot find -lstdc++). If the newest salmon doesn't compile cleanly for the easiest thing to do is to install [through bioconda](https://anaconda.org/bioconda/salmon). Please let me know if either of these are successful, or, if not, what issues you run into. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060:139,Deployability,release,release,139,"Hi @EPunzi ,. There are a couple of options. First, I see you're using an older release of Salmon. I strongly suggest grabbing [the latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.10.2). What you posted here is actually a warning, not an error. What is preventing compilation looks to be a linking error (i.e. your compiler cannot find -lstdc++). If the newest salmon doesn't compile cleanly for the easiest thing to do is to install [through bioconda](https://anaconda.org/bioconda/salmon). Please let me know if either of these are successful, or, if not, what issues you run into. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060:186,Deployability,release,releases,186,"Hi @EPunzi ,. There are a couple of options. First, I see you're using an older release of Salmon. I strongly suggest grabbing [the latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.10.2). What you posted here is actually a warning, not an error. What is preventing compilation looks to be a linking error (i.e. your compiler cannot find -lstdc++). If the newest salmon doesn't compile cleanly for the easiest thing to do is to install [through bioconda](https://anaconda.org/bioconda/salmon). Please let me know if either of these are successful, or, if not, what issues you run into. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060:448,Deployability,install,install,448,"Hi @EPunzi ,. There are a couple of options. First, I see you're using an older release of Salmon. I strongly suggest grabbing [the latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.10.2). What you posted here is actually a warning, not an error. What is preventing compilation looks to be a linking error (i.e. your compiler cannot find -lstdc++). If the newest salmon doesn't compile cleanly for the easiest thing to do is to install [through bioconda](https://anaconda.org/bioconda/salmon). Please let me know if either of these are successful, or, if not, what issues you run into. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:89,Availability,error,error,89,"Hi @rob-p ,. I tried both ways. Classic installation (not through bioconda) gave me this error:. ```; In file included from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Core:420:0,; from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Dense:1,; from /usr/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1045,Availability,Error,Error,1045,"bioconda) gave me this error:. ```; In file included from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Core:420:0,; from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Dense:1,; from /usr/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1099,Availability,Error,Error,1099,"luded from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Core:420:0,; from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Dense:1,; from /usr/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1124,Availability,Error,Error,1124,"luded from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Core:420:0,; from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Dense:1,; from /usr/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1706,Availability,Error,Error,1706,"~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /home/federicoplazzi/test_""...) called at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/salmon_runner.pl line 26; Trinity run failed. Must investigate error above.; warning, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Trinity --single ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa"" --output ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out"" --CPU 1 --max",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:2417,Availability,error,error,2417,"igen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /home/federicoplazzi/test_""...) called at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/salmon_runner.pl line 26; Trinity run failed. Must investigate error above.; warning, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Trinity --single ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa"" --output ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out"" --CPU 1 --max_memory 1G --run_as_paired --SS_lib_type F --seqType fa --trinity_complete --full_cleanup failed with ret: 512, going to retry.; succeeded(0), failed(1) 100% completed. We are sorry, commands in file: [FailedCommands] failed. :-(. Error, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/ParaFly -c recursive_trinity.cmds -CPU 4 -v -shuffle died with ret 256 at /usr/local/bin/Trinity line 2581.; main::process_cmd(""/usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/P""...) called at /usr/local/bin/Trinity line 3244; main::run_partitioned_cmds(""recursive_trinity.cmds"") called at /usr/local/bin/Trinity line 2239; ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:3006,Availability,Error,Error,3006,"almon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /home/federicoplazzi/test_""...) called at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/salmon_runner.pl line 26; Trinity run failed. Must investigate error above.; warning, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Trinity --single ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa"" --output ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out"" --CPU 1 --max_memory 1G --run_as_paired --SS_lib_type F --seqType fa --trinity_complete --full_cleanup failed with ret: 512, going to retry.; succeeded(0), failed(1) 100% completed. We are sorry, commands in file: [FailedCommands] failed. :-(. Error, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/ParaFly -c recursive_trinity.cmds -CPU 4 -v -shuffle died with ret 256 at /usr/local/bin/Trinity line 2581.; main::process_cmd(""/usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/P""...) called at /usr/local/bin/Trinity line 3244; main::run_partitioned_cmds(""recursive_trinity.cmds"") called at /usr/local/bin/Trinity line 2239; main::run_recursive_trinity(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/ch""...) called at /usr/local/bin/Trinity line 2001; main::run_chrysalis(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/in""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., 200, 500, ""RF"", ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""...) called at /usr/local/bin/Trinity line 1664; main::run_Trinity() called at /usr/local/bin/Trinity line 1317; eval {...} called at /usr/local/bin/Trinity line 1316. Trini",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:4062,Availability,error,error,4062,"naseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /home/federicoplazzi/test_""...) called at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/salmon_runner.pl line 26; Trinity run failed. Must investigate error above.; warning, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Trinity --single ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa"" --output ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out"" --CPU 1 --max_memory 1G --run_as_paired --SS_lib_type F --seqType fa --trinity_complete --full_cleanup failed with ret: 512, going to retry.; succeeded(0), failed(1) 100% completed. We are sorry, commands in file: [FailedCommands] failed. :-(. Error, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/ParaFly -c recursive_trinity.cmds -CPU 4 -v -shuffle died with ret 256 at /usr/local/bin/Trinity line 2581.; main::process_cmd(""/usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/P""...) called at /usr/local/bin/Trinity line 3244; main::run_partitioned_cmds(""recursive_trinity.cmds"") called at /usr/local/bin/Trinity line 2239; main::run_recursive_trinity(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/ch""...) called at /usr/local/bin/Trinity line 2001; main::run_chrysalis(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/in""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., 200, 500, ""RF"", ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""...) called at /usr/local/bin/Trinity line 1664; main::run_Trinity() called at /usr/local/bin/Trinity line 1317; eval {...} called at /usr/local/bin/Trinity line 1316. Trinity run failed. Must investigate error above.; ```. Do you have any suggestions?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:40,Deployability,install,installation,40,"Hi @rob-p ,. I tried both ways. Classic installation (not through bioconda) gave me this error:. ```; In file included from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Core:420:0,; from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Dense:1,; from /usr/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1151,Deployability,install,installing,1151,"gen3/Eigen/Core:420:0,; from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Dense:1,; from /usr/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Per",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1198,Deployability,install,installs,1198,"r/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /h",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1256,Deployability,install,installing,1256,"r/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /h",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:3066,Modifiability,plugin,plugins,3066,"t (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /home/federicoplazzi/test_""...) called at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/salmon_runner.pl line 26; Trinity run failed. Must investigate error above.; warning, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Trinity --single ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa"" --output ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out"" --CPU 1 --max_memory 1G --run_as_paired --SS_lib_type F --seqType fa --trinity_complete --full_cleanup failed with ret: 512, going to retry.; succeeded(0), failed(1) 100% completed. We are sorry, commands in file: [FailedCommands] failed. :-(. Error, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/ParaFly -c recursive_trinity.cmds -CPU 4 -v -shuffle died with ret 256 at /usr/local/bin/Trinity line 2581.; main::process_cmd(""/usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/P""...) called at /usr/local/bin/Trinity line 3244; main::run_partitioned_cmds(""recursive_trinity.cmds"") called at /usr/local/bin/Trinity line 2239; main::run_recursive_trinity(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/ch""...) called at /usr/local/bin/Trinity line 2001; main::run_chrysalis(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/in""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., 200, 500, ""RF"", ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""...) called at /usr/local/bin/Trinity line 1664; main::run_Trinity() called at /usr/local/bin/Trinity line 1317; eval {...} called at /usr/local/bin/Trinity line 1316. Trinity run failed. Must investigate error above.; ```. D",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:3254,Modifiability,plugin,plugins,3254,"naseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /home/federicoplazzi/test_""...) called at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/salmon_runner.pl line 26; Trinity run failed. Must investigate error above.; warning, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Trinity --single ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa"" --output ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out"" --CPU 1 --max_memory 1G --run_as_paired --SS_lib_type F --seqType fa --trinity_complete --full_cleanup failed with ret: 512, going to retry.; succeeded(0), failed(1) 100% completed. We are sorry, commands in file: [FailedCommands] failed. :-(. Error, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/ParaFly -c recursive_trinity.cmds -CPU 4 -v -shuffle died with ret 256 at /usr/local/bin/Trinity line 2581.; main::process_cmd(""/usr/local/trinityrnaseq-Trinity-v2.6.6/trinity-plugins/BIN/P""...) called at /usr/local/bin/Trinity line 3244; main::run_partitioned_cmds(""recursive_trinity.cmds"") called at /usr/local/bin/Trinity line 2239; main::run_recursive_trinity(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/ch""...) called at /usr/local/bin/Trinity line 2001; main::run_chrysalis(""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/in""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., 200, 500, ""RF"", ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""..., ""/home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/bo""...) called at /usr/local/bin/Trinity line 1664; main::run_Trinity() called at /usr/local/bin/Trinity line 1317; eval {...} called at /usr/local/bin/Trinity line 1316. Trinity run failed. Must investigate error above.; ```. Do you have any suggestions?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:1499,Testability,Assert,Assertion,1499,"lmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/single.fa -o salmon_outdir -p 1 --minAssignedFrags 1; died with ret (6) at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; Process_cmd::process_cmd(""salmon --no-version-check quant -i /home/federicoplazzi/test_""...) called at /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/salmon_runner.pl line 26; Trinity run failed. Must investigate error above.; warning, cmd: /usr/local/trinityrnaseq-Trinity-v2.6.6/util/support_scripts/../../Trinity -",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378:44,Availability,error,error,44,"Hi @EPunzi,. The trinity-based installation error looks quite cryptic. It suggests what to do to fix it, but it seems like something that shouldn't be happening in the first place. I would be happy to see if I could figure out what's going on with the ""manual"" installation. Could you provide more of the compiler output? What you have included above shows a warning, but I can't see what's causing the actual compiler *error* (what compiler & OS version are you using?). Finally, could you let me know if [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled linux-x86-64 binary works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378:420,Availability,error,error,420,"Hi @EPunzi,. The trinity-based installation error looks quite cryptic. It suggests what to do to fix it, but it seems like something that shouldn't be happening in the first place. I would be happy to see if I could figure out what's going on with the ""manual"" installation. Could you provide more of the compiler output? What you have included above shows a warning, but I can't see what's causing the actual compiler *error* (what compiler & OS version are you using?). Finally, could you let me know if [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled linux-x86-64 binary works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378:31,Deployability,install,installation,31,"Hi @EPunzi,. The trinity-based installation error looks quite cryptic. It suggests what to do to fix it, but it seems like something that shouldn't be happening in the first place. I would be happy to see if I could figure out what's going on with the ""manual"" installation. Could you provide more of the compiler output? What you have included above shows a warning, but I can't see what's causing the actual compiler *error* (what compiler & OS version are you using?). Finally, could you let me know if [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled linux-x86-64 binary works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378:261,Deployability,install,installation,261,"Hi @EPunzi,. The trinity-based installation error looks quite cryptic. It suggests what to do to fix it, but it seems like something that shouldn't be happening in the first place. I would be happy to see if I could figure out what's going on with the ""manual"" installation. Could you provide more of the compiler output? What you have included above shows a warning, but I can't see what's causing the actual compiler *error* (what compiler & OS version are you using?). Finally, could you let me know if [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled linux-x86-64 binary works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528:134,Availability,error,error,134,"Hi @rob-p ,. we managed to successfully install Salmon and run Trinity. We compiled Salmon ourselves and we managed to find where the error is located, that is in a Boost file. ; I'm not sure if this information is useful for you, but in order to correctly install Boost, we had to modify the file boost_1_67_0/boost/lockfree/spsc_queue.hpp by adding the line `#include <boost/next_prior.hpp>` among the other inclusions of that file. After editing it and compiling Salmon again, it works properly. Thank you for your support!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528:40,Deployability,install,install,40,"Hi @rob-p ,. we managed to successfully install Salmon and run Trinity. We compiled Salmon ourselves and we managed to find where the error is located, that is in a Boost file. ; I'm not sure if this information is useful for you, but in order to correctly install Boost, we had to modify the file boost_1_67_0/boost/lockfree/spsc_queue.hpp by adding the line `#include <boost/next_prior.hpp>` among the other inclusions of that file. After editing it and compiling Salmon again, it works properly. Thank you for your support!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528:257,Deployability,install,install,257,"Hi @rob-p ,. we managed to successfully install Salmon and run Trinity. We compiled Salmon ourselves and we managed to find where the error is located, that is in a Boost file. ; I'm not sure if this information is useful for you, but in order to correctly install Boost, we had to modify the file boost_1_67_0/boost/lockfree/spsc_queue.hpp by adding the line `#include <boost/next_prior.hpp>` among the other inclusions of that file. After editing it and compiling Salmon again, it works properly. Thank you for your support!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398454333:81,Usability,feedback,feedback,81,"Hi @EPunzi,. I'm glad you were able to get this to work. Thanks for the detailed feedback. This is, indeed, interesting to us. Though, it looks like it's a bug in the Boost build. Could you let me know what OS (& version), and compiler you're using? I can report this upstream to Boost. Thanks again!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398454333
https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398456073:47,Deployability,release,release-,47,"Hi @rob-p ,. I'm using a Centos server, centos-release-7-1.1503.el7.centos.2.8.x86_64, the CMake version required is CMake3 and the compiler is g++ 7.3.1.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398456073
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869:353,Performance,cache,cache,353,"Hi @mathog,. > Is it really the case that Salmon cannot use 1.57.0?. It may be able to. We set the minimum required version to the lowest boost version we use in any of our testing machines where we run regression tests. Currently, this is 1.59.0. If you change the relevant `CMakeLists.txt` line, you *really* need to make sure you clear out the CMake cache. You can do this by removing `CMakeCache.txt` in your build directory, as well as the directory `CMakeFiles`. However, it might be easiest just to remove and remake the entire `build` directory. You may also try passing `-DBoost_NO_SYSTEM_PATHS=Bool:ON` to your cmake command. Finally, note that the build system is probably looking for the static libraries --- you can elide that preference by modifying [this line](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L222). Finally, since salmon uses C++11, it's important that whatever boost you link against exposes a C++11 compatible ABI. Unfortunately, `FindBoost.cmake` is the most finicky of the module finding packages I know about 😦. If you use `-DFETCH_BOOST=TRUE`, then CMake will fetch a recent boost and build the libraries it needs and link them statically. I realize you want to avoid this, so hopefully one of the ideas above will help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869:1217,Safety,avoid,avoid,1217,"Hi @mathog,. > Is it really the case that Salmon cannot use 1.57.0?. It may be able to. We set the minimum required version to the lowest boost version we use in any of our testing machines where we run regression tests. Currently, this is 1.59.0. If you change the relevant `CMakeLists.txt` line, you *really* need to make sure you clear out the CMake cache. You can do this by removing `CMakeCache.txt` in your build directory, as well as the directory `CMakeFiles`. However, it might be easiest just to remove and remake the entire `build` directory. You may also try passing `-DBoost_NO_SYSTEM_PATHS=Bool:ON` to your cmake command. Finally, note that the build system is probably looking for the static libraries --- you can elide that preference by modifying [this line](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L222). Finally, since salmon uses C++11, it's important that whatever boost you link against exposes a C++11 compatible ABI. Unfortunately, `FindBoost.cmake` is the most finicky of the module finding packages I know about 😦. If you use `-DFETCH_BOOST=TRUE`, then CMake will fetch a recent boost and build the libraries it needs and link them statically. I realize you want to avoid this, so hopefully one of the ideas above will help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869:934,Security,expose,exposes,934,"Hi @mathog,. > Is it really the case that Salmon cannot use 1.57.0?. It may be able to. We set the minimum required version to the lowest boost version we use in any of our testing machines where we run regression tests. Currently, this is 1.59.0. If you change the relevant `CMakeLists.txt` line, you *really* need to make sure you clear out the CMake cache. You can do this by removing `CMakeCache.txt` in your build directory, as well as the directory `CMakeFiles`. However, it might be easiest just to remove and remake the entire `build` directory. You may also try passing `-DBoost_NO_SYSTEM_PATHS=Bool:ON` to your cmake command. Finally, note that the build system is probably looking for the static libraries --- you can elide that preference by modifying [this line](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L222). Finally, since salmon uses C++11, it's important that whatever boost you link against exposes a C++11 compatible ABI. Unfortunately, `FindBoost.cmake` is the most finicky of the module finding packages I know about 😦. If you use `-DFETCH_BOOST=TRUE`, then CMake will fetch a recent boost and build the libraries it needs and link them statically. I realize you want to avoid this, so hopefully one of the ideas above will help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869:173,Testability,test,testing,173,"Hi @mathog,. > Is it really the case that Salmon cannot use 1.57.0?. It may be able to. We set the minimum required version to the lowest boost version we use in any of our testing machines where we run regression tests. Currently, this is 1.59.0. If you change the relevant `CMakeLists.txt` line, you *really* need to make sure you clear out the CMake cache. You can do this by removing `CMakeCache.txt` in your build directory, as well as the directory `CMakeFiles`. However, it might be easiest just to remove and remake the entire `build` directory. You may also try passing `-DBoost_NO_SYSTEM_PATHS=Bool:ON` to your cmake command. Finally, note that the build system is probably looking for the static libraries --- you can elide that preference by modifying [this line](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L222). Finally, since salmon uses C++11, it's important that whatever boost you link against exposes a C++11 compatible ABI. Unfortunately, `FindBoost.cmake` is the most finicky of the module finding packages I know about 😦. If you use `-DFETCH_BOOST=TRUE`, then CMake will fetch a recent boost and build the libraries it needs and link them statically. I realize you want to avoid this, so hopefully one of the ideas above will help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869:214,Testability,test,tests,214,"Hi @mathog,. > Is it really the case that Salmon cannot use 1.57.0?. It may be able to. We set the minimum required version to the lowest boost version we use in any of our testing machines where we run regression tests. Currently, this is 1.59.0. If you change the relevant `CMakeLists.txt` line, you *really* need to make sure you clear out the CMake cache. You can do this by removing `CMakeCache.txt` in your build directory, as well as the directory `CMakeFiles`. However, it might be easiest just to remove and remake the entire `build` directory. You may also try passing `-DBoost_NO_SYSTEM_PATHS=Bool:ON` to your cmake command. Finally, note that the build system is probably looking for the static libraries --- you can elide that preference by modifying [this line](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L222). Finally, since salmon uses C++11, it's important that whatever boost you link against exposes a C++11 compatible ABI. Unfortunately, `FindBoost.cmake` is the most finicky of the module finding packages I know about 😦. If you use `-DFETCH_BOOST=TRUE`, then CMake will fetch a recent boost and build the libraries it needs and link them statically. I realize you want to avoid this, so hopefully one of the ideas above will help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869:333,Usability,clear,clear,333,"Hi @mathog,. > Is it really the case that Salmon cannot use 1.57.0?. It may be able to. We set the minimum required version to the lowest boost version we use in any of our testing machines where we run regression tests. Currently, this is 1.59.0. If you change the relevant `CMakeLists.txt` line, you *really* need to make sure you clear out the CMake cache. You can do this by removing `CMakeCache.txt` in your build directory, as well as the directory `CMakeFiles`. However, it might be easiest just to remove and remake the entire `build` directory. You may also try passing `-DBoost_NO_SYSTEM_PATHS=Bool:ON` to your cmake command. Finally, note that the build system is probably looking for the static libraries --- you can elide that preference by modifying [this line](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L222). Finally, since salmon uses C++11, it's important that whatever boost you link against exposes a C++11 compatible ABI. Unfortunately, `FindBoost.cmake` is the most finicky of the module finding packages I know about 😦. If you use `-DFETCH_BOOST=TRUE`, then CMake will fetch a recent boost and build the libraries it needs and link them statically. I realize you want to avoid this, so hopefully one of the ideas above will help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-396781869
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:95,Availability,down,down,95,"Modified the CMakeLists.txt file to use dynamic libraries unconditionally, edited that section down to:. `set (Boost_USE_STATIC_LIBS OFF); `; Changed the CMakeLists.txt to try everything I could think of and then finally force the issue:. ```; set(Boost_ADDITIONAL_VERSIONS ""1.57"" ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""Boost_FOUND 1.57 = ${Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-ve",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3572,Availability,avail,available,3572,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3586,Availability,down,download,3586,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:2790,Deployability,install,install,2790,"ies are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:2859,Deployability,install,install,2859," sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:2970,Deployability,install,install,2970,"pt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great d",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3063,Deployability,install,install,3063,"UPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3138,Deployability,install,install,3138,"rder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends ba",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3183,Deployability,install,install,3183,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3223,Deployability,install,install,3223,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3265,Deployability,install,install,3265,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3333,Deployability,install,install,3333,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3381,Deployability,install,install,3381,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3432,Deployability,update,update,3432,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:455,Integrability,message,message,455,"Modified the CMakeLists.txt file to use dynamic libraries unconditionally, edited that section down to:. `set (Boost_USE_STATIC_LIBS OFF); `; Changed the CMakeLists.txt to try everything I could think of and then finally force the issue:. ```; set(Boost_ADDITIONAL_VERSIONS ""1.57"" ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""Boost_FOUND 1.57 = ${Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-ve",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:604,Integrability,message,message,604,"Modified the CMakeLists.txt file to use dynamic libraries unconditionally, edited that section down to:. `set (Boost_USE_STATIC_LIBS OFF); `; Changed the CMakeLists.txt to try everything I could think of and then finally force the issue:. ```; set(Boost_ADDITIONAL_VERSIONS ""1.57"" ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""Boost_FOUND 1.57 = ${Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-ve",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:655,Integrability,message,message,655,"Modified the CMakeLists.txt file to use dynamic libraries unconditionally, edited that section down to:. `set (Boost_USE_STATIC_LIBS OFF); `; Changed the CMakeLists.txt to try everything I could think of and then finally force the issue:. ```; set(Boost_ADDITIONAL_VERSIONS ""1.57"" ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""Boost_FOUND 1.57 = ${Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-ve",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:706,Integrability,message,message,706,"Modified the CMakeLists.txt file to use dynamic libraries unconditionally, edited that section down to:. `set (Boost_USE_STATIC_LIBS OFF); `; Changed the CMakeLists.txt to try everything I could think of and then finally force the issue:. ```; set(Boost_ADDITIONAL_VERSIONS ""1.57"" ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""Boost_FOUND 1.57 = ${Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-ve",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:776,Integrability,message,message,776,"Modified the CMakeLists.txt file to use dynamic libraries unconditionally, edited that section down to:. `set (Boost_USE_STATIC_LIBS OFF); `; Changed the CMakeLists.txt to try everything I could think of and then finally force the issue:. ```; set(Boost_ADDITIONAL_VERSIONS ""1.57"" ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""Boost_FOUND 1.57 = ${Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-ve",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:2163,Modifiability,variab,variable,2163,"n/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -l",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:2489,Modifiability,variab,variable,2489,"n/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -l",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:4137,Modifiability,extend,extends,4137,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:1477,Testability,log,log,1477,"{Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-un",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:1583,Testability,log,log,1583,"ogram_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:2673,Testability,test,tests,2673,"n, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397029798:382,Integrability,depend,dependencies,382,"Hi @mathog, . You can give ; [this liunux binary](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) a try. It's built on our Drone CI box, which uses CentOS 6. You are absolutely right that Boost is a giant PITA. The recommended way to grab the binary is via [bioconda](https://anaconda.org/bioconda/salmon), since that takes care of libraries, dependencies etc. Please let me know if either of these work for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397029798
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:247,Availability,down,download,247,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:77,Deployability,install,install,77,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:139,Deployability,install,install,139,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:210,Deployability,install,install,210,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:1086,Deployability,install,install,1086,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:336,Testability,test,testing,336,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:905,Testability,log,log,905,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:1002,Testability,log,log,1002,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:1260,Testability,test,test,1260,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:1471,Testability,test,test,1471,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397055192:222,Deployability,install,installed,222,"> Got it working. The ""short"" form for how to do so in Centos 6.9 is:. Awesome!. > Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?. Every library that is not installed on the systems or statically compiled in is placed in the `lib` directory during the install process. So, it should be fine to delete the salmon directory.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397055192
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397055192:317,Deployability,install,install,317,"> Got it working. The ""short"" form for how to do so in Centos 6.9 is:. Awesome!. > Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?. Every library that is not installed on the systems or statically compiled in is placed in the `lib` directory during the install process. So, it should be fine to delete the salmon directory.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397055192
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:625,Availability,error,errors,625,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:272,Deployability,release,release,272,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:310,Performance,load,loading,310,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:24,Testability,test,test,24,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:681,Testability,test,test,681,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:802,Testability,test,test,802,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:892,Testability,test,test,892,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244:113,Deployability,install,installed,113,"I believe this is because unlike the `salmon` target, the unitTests that run when `make test` is executed aren't installed via the `install` command [see e.g.](https://github.com/COMBINE-lab/salmon/blob/master/src/CMakeLists.txt#L312). This is due, I presume, to my naive usage of CMake as it relates to the testing target. I've yet to find a solid resource that explains the ""right way"" to handle this using (modern) CMake. That, of course, goes to your point of the pain of CMake.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244:132,Deployability,install,install,132,"I believe this is because unlike the `salmon` target, the unitTests that run when `make test` is executed aren't installed via the `install` command [see e.g.](https://github.com/COMBINE-lab/salmon/blob/master/src/CMakeLists.txt#L312). This is due, I presume, to my naive usage of CMake as it relates to the testing target. I've yet to find a solid resource that explains the ""right way"" to handle this using (modern) CMake. That, of course, goes to your point of the pain of CMake.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244:88,Testability,test,test,88,"I believe this is because unlike the `salmon` target, the unitTests that run when `make test` is executed aren't installed via the `install` command [see e.g.](https://github.com/COMBINE-lab/salmon/blob/master/src/CMakeLists.txt#L312). This is due, I presume, to my naive usage of CMake as it relates to the testing target. I've yet to find a solid resource that explains the ""right way"" to handle this using (modern) CMake. That, of course, goes to your point of the pain of CMake.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244
https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244:308,Testability,test,testing,308,"I believe this is because unlike the `salmon` target, the unitTests that run when `make test` is executed aren't installed via the `install` command [see e.g.](https://github.com/COMBINE-lab/salmon/blob/master/src/CMakeLists.txt#L312). This is due, I presume, to my naive usage of CMake as it relates to the testing target. I've yet to find a solid resource that explains the ""right way"" to handle this using (modern) CMake. That, of course, goes to your point of the pain of CMake.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397080244
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-397824948:312,Availability,error,error,312,"Hi @Munfred ,; Is it 10x single-cell data ? Also in 10x is it using v2 Chemistry?; The way you are running alevin is specifically for 10x v2 data. If it's v1 you can find how to use alevin in v1 mode [here](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/). ; If it's V2 and you still get this error, then it means either the `Fastq` were not made properly or the reads / CB+UMI pair has to be filtered out. Currently `Alevin` fails if it observe a `Fastq` sequence of length less than 26 (16 CB + 10 UMI), if you think your dataset is from a real sample and follows the 10x `mkfastq` procedure, then we can work on handling these cases internally in Alevin, or another workaround would be to just filter out these set of reads from the Fastq using some external script.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-397824948
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678:136,Deployability,release,release,136,"Hi @Munfred , thanks for all the useful comments and glad to hear that you were able to run alevin successfully. ; I agree, in the next release we can work on adding the flag for ignoring the reads below a certain length.; Regarding the Transcript to gene Mapping file, all `bioawk` script does it to generate a `tsv` file with the first column as transcript name (as present in the reference) and the second column is the relevant gene id to the transcript. We have described the format [here](http://salmon.readthedocs.io/en/latest/alevin.html) but we can also update the tutorial to reflect the same more clearly. I agree with your last point too, we are working on writing a python parser, to parse the binary format and would update the tutorial soon with the relevant code. Thanks again for using our tool and let us know if you have any other feedback / suggestion regarding improving the alevin pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678:563,Deployability,update,update,563,"Hi @Munfred , thanks for all the useful comments and glad to hear that you were able to run alevin successfully. ; I agree, in the next release we can work on adding the flag for ignoring the reads below a certain length.; Regarding the Transcript to gene Mapping file, all `bioawk` script does it to generate a `tsv` file with the first column as transcript name (as present in the reference) and the second column is the relevant gene id to the transcript. We have described the format [here](http://salmon.readthedocs.io/en/latest/alevin.html) but we can also update the tutorial to reflect the same more clearly. I agree with your last point too, we are working on writing a python parser, to parse the binary format and would update the tutorial soon with the relevant code. Thanks again for using our tool and let us know if you have any other feedback / suggestion regarding improving the alevin pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678:731,Deployability,update,update,731,"Hi @Munfred , thanks for all the useful comments and glad to hear that you were able to run alevin successfully. ; I agree, in the next release we can work on adding the flag for ignoring the reads below a certain length.; Regarding the Transcript to gene Mapping file, all `bioawk` script does it to generate a `tsv` file with the first column as transcript name (as present in the reference) and the second column is the relevant gene id to the transcript. We have described the format [here](http://salmon.readthedocs.io/en/latest/alevin.html) but we can also update the tutorial to reflect the same more clearly. I agree with your last point too, we are working on writing a python parser, to parse the binary format and would update the tutorial soon with the relevant code. Thanks again for using our tool and let us know if you have any other feedback / suggestion regarding improving the alevin pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678:903,Deployability,pipeline,pipeline,903,"Hi @Munfred , thanks for all the useful comments and glad to hear that you were able to run alevin successfully. ; I agree, in the next release we can work on adding the flag for ignoring the reads below a certain length.; Regarding the Transcript to gene Mapping file, all `bioawk` script does it to generate a `tsv` file with the first column as transcript name (as present in the reference) and the second column is the relevant gene id to the transcript. We have described the format [here](http://salmon.readthedocs.io/en/latest/alevin.html) but we can also update the tutorial to reflect the same more clearly. I agree with your last point too, we are working on writing a python parser, to parse the binary format and would update the tutorial soon with the relevant code. Thanks again for using our tool and let us know if you have any other feedback / suggestion regarding improving the alevin pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678:608,Usability,clear,clearly,608,"Hi @Munfred , thanks for all the useful comments and glad to hear that you were able to run alevin successfully. ; I agree, in the next release we can work on adding the flag for ignoring the reads below a certain length.; Regarding the Transcript to gene Mapping file, all `bioawk` script does it to generate a `tsv` file with the first column as transcript name (as present in the reference) and the second column is the relevant gene id to the transcript. We have described the format [here](http://salmon.readthedocs.io/en/latest/alevin.html) but we can also update the tutorial to reflect the same more clearly. I agree with your last point too, we are working on writing a python parser, to parse the binary format and would update the tutorial soon with the relevant code. Thanks again for using our tool and let us know if you have any other feedback / suggestion regarding improving the alevin pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678:850,Usability,feedback,feedback,850,"Hi @Munfred , thanks for all the useful comments and glad to hear that you were able to run alevin successfully. ; I agree, in the next release we can work on adding the flag for ignoring the reads below a certain length.; Regarding the Transcript to gene Mapping file, all `bioawk` script does it to generate a `tsv` file with the first column as transcript name (as present in the reference) and the second column is the relevant gene id to the transcript. We have described the format [here](http://salmon.readthedocs.io/en/latest/alevin.html) but we can also update the tutorial to reflect the same more clearly. I agree with your last point too, we are working on writing a python parser, to parse the binary format and would update the tutorial soon with the relevant code. Thanks again for using our tool and let us know if you have any other feedback / suggestion regarding improving the alevin pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-400439678
https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-402570994:35,Deployability,update,updated,35,"Hi @Munfred ,. As promised we have updated the [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/output-format/) to read-in the binary format of the Alevin's output and can now be easily imported without using `--dumpCsvCounts`. If you are interested in looking at code to parse the binary format it can be found [here](https://github.com/k3yavi/vpolo/blob/master/vpolo/alevin/parser.py#L8). Thanks again for the request .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-402570994
https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525:23,Availability,down,download,23,"Hi @kayDaramola ,. The download you will get from the releases page is the source. You will either need to build / compile it from source or, alternatively, install the binary using bioconda (recommended). Finally, you can try [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled binary for Linux, though we are trying to move to bioconda for all binary distribution as it makes support easier by removing a major variable.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525
https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525:54,Deployability,release,releases,54,"Hi @kayDaramola ,. The download you will get from the releases page is the source. You will either need to build / compile it from source or, alternatively, install the binary using bioconda (recommended). Finally, you can try [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled binary for Linux, though we are trying to move to bioconda for all binary distribution as it makes support easier by removing a major variable.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525
https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525:157,Deployability,install,install,157,"Hi @kayDaramola ,. The download you will get from the releases page is the source. You will either need to build / compile it from source or, alternatively, install the binary using bioconda (recommended). Finally, you can try [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled binary for Linux, though we are trying to move to bioconda for all binary distribution as it makes support easier by removing a major variable.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525
https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525:468,Modifiability,variab,variable,468,"Hi @kayDaramola ,. The download you will get from the releases page is the source. You will either need to build / compile it from source or, alternatively, install the binary using bioconda (recommended). Finally, you can try [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled binary for Linux, though we are trying to move to bioconda for all binary distribution as it makes support easier by removing a major variable.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525
https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398579731:82,Availability,fault,fault,82,"Thanks for the reply; I actually tried the one on conda, but it says segmentation fault. I will look at the one you provided, thanks. Kay",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398579731
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400009534:140,Availability,fault,fault,140,"Thanks @Tj-Idowu,. So, indeed, it looks like this is the problem. The mapping is completing, but you seem to be encountering a segmentation fault at the end of the run (before the abundance estimation finishes). Could you tell me what OS and version you're using, and how you installed Salmon? My guess is a binary incompatibility somewhere. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400009534
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400009534:276,Deployability,install,installed,276,"Thanks @Tj-Idowu,. So, indeed, it looks like this is the problem. The mapping is completing, but you seem to be encountering a segmentation fault at the end of the run (before the abundance estimation finishes). Could you tell me what OS and version you're using, and how you installed Salmon? My guess is a binary incompatibility somewhere. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400009534
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400677292:57,Deployability,Release,Release,57,"Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.3 LTS; Release:	16.04; Codename:	xenial. Linux version 4.13.0-45-generic (buildd@lgw01-amd64-011) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9)) #50~16.04.1-Ubuntu SMP. I installed Salmon using the command on https://anaconda.org/bioconda/salmon; ""conda install -c bioconda salmon""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400677292
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400677292:235,Deployability,install,installed,235,"Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.3 LTS; Release:	16.04; Codename:	xenial. Linux version 4.13.0-45-generic (buildd@lgw01-amd64-011) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9)) #50~16.04.1-Ubuntu SMP. I installed Salmon using the command on https://anaconda.org/bioconda/salmon; ""conda install -c bioconda salmon""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400677292
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400677292:318,Deployability,install,install,318,"Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.3 LTS; Release:	16.04; Codename:	xenial. Linux version 4.13.0-45-generic (buildd@lgw01-amd64-011) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9)) #50~16.04.1-Ubuntu SMP. I installed Salmon using the command on https://anaconda.org/bioconda/salmon; ""conda install -c bioconda salmon""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400677292
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476:66,Deployability,install,install,66,"Hi @Tj-Idowu,. Thanks for the details. The fact that the bioconda install is giving problems is disconcerting, as that should be properly linked against all of the correct libraries etc. I do wonder if it might have something to do with all of the package rebuilding and upgrading that has been going on in bioconda. Would you be able to give [this binary](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) a try, and let me know if it works? It was built on our continuous integration server, and should be compatible with a wide variety of different platforms.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476:500,Deployability,continuous,continuous,500,"Hi @Tj-Idowu,. Thanks for the details. The fact that the bioconda install is giving problems is disconcerting, as that should be properly linked against all of the correct libraries etc. I do wonder if it might have something to do with all of the package rebuilding and upgrading that has been going on in bioconda. Would you be able to give [this binary](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) a try, and let me know if it works? It was built on our continuous integration server, and should be compatible with a wide variety of different platforms.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476:511,Deployability,integrat,integration,511,"Hi @Tj-Idowu,. Thanks for the details. The fact that the bioconda install is giving problems is disconcerting, as that should be properly linked against all of the correct libraries etc. I do wonder if it might have something to do with all of the package rebuilding and upgrading that has been going on in bioconda. Would you be able to give [this binary](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) a try, and let me know if it works? It was built on our continuous integration server, and should be compatible with a wide variety of different platforms.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476
https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476:511,Integrability,integrat,integration,511,"Hi @Tj-Idowu,. Thanks for the details. The fact that the bioconda install is giving problems is disconcerting, as that should be properly linked against all of the correct libraries etc. I do wonder if it might have something to do with all of the package rebuilding and upgrading that has been going on in bioconda. Would you be able to give [this binary](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) a try, and let me know if it works? It was built on our continuous integration server, and should be compatible with a wide variety of different platforms.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400679476
https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-399944991:185,Usability,simpl,simply,185,"Hi @mmokrejs ,. I have written [a script](https://github.com/COMBINE-lab/salmon/blob/master/scripts/runner.sh) for users with this need (i.e., running with interleaved FASTQ files). It simply splits the interleaved file into two streams, however, and so won't deal with unsynchronized streams where not all reads are properly paired. Because this solutions is sort of piecemeal, I've not added it to the official documentation. However, full support for interleaved FASTQ files is something I'd be interested in if we can peel off the time to write up proper support. P.S. Thanks for the suggestions on the documentation, I'll go ahead and make the suggested changes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-399944991
https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400057894:99,Usability,clear,clear,99,"Thank you, well I do have valid pairs and remaining singletons in different files, it just was not clear one cannot use a file with interleaved reads. Of course I dropped the file (as an intermediate from the disk as I hoped to keep only the combined, interleaved file with pairs). So I re-created it. BTW, I can recommend `reformat.sh` from https://sourceforge.net/projects/bbmap/ bundle, it is a nice tool to split/reorder/merge FASTQ files. I infer you suggest people to use only pairs and forget the singletons, right? Or, could combine the results of two executions somehow together ...? Maybe not worth the efforts? I have quite a few singleton reads in addition to valid pairs, though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400057894
https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755:160,Energy Efficiency,adapt,adapter,160,"Thanks for the recommendation. I'll definitely take a look at it. It is true that we typically suggest that you drop singletons if they are created during e.g. adapter / quality trimming etc.. However, it is also the case that one really may only want to consider very ""light"" quality trimming for RNA-seq data [as suggested by Matt MacManes](https://www.frontiersin.org/articles/10.3389/fgene.2014.00013/full). . If the trimming leads to the loss of a large number of reads, my initial reaction would be to try an understand why. One could always ""re-synchronize"" the singletons by providing them with fake mates, which would cause them to be mapped and treated as orphans during quantification. However, again, it's probably worth understanding why an experiment ends up with a lot of singletons before going through the trouble of accounting for them.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755
https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755:160,Integrability,adapter,adapter,160,"Thanks for the recommendation. I'll definitely take a look at it. It is true that we typically suggest that you drop singletons if they are created during e.g. adapter / quality trimming etc.. However, it is also the case that one really may only want to consider very ""light"" quality trimming for RNA-seq data [as suggested by Matt MacManes](https://www.frontiersin.org/articles/10.3389/fgene.2014.00013/full). . If the trimming leads to the loss of a large number of reads, my initial reaction would be to try an understand why. One could always ""re-synchronize"" the singletons by providing them with fake mates, which would cause them to be mapped and treated as orphans during quantification. However, again, it's probably worth understanding why an experiment ends up with a lot of singletons before going through the trouble of accounting for them.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755
https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755:552,Integrability,synchroniz,synchronize,552,"Thanks for the recommendation. I'll definitely take a look at it. It is true that we typically suggest that you drop singletons if they are created during e.g. adapter / quality trimming etc.. However, it is also the case that one really may only want to consider very ""light"" quality trimming for RNA-seq data [as suggested by Matt MacManes](https://www.frontiersin.org/articles/10.3389/fgene.2014.00013/full). . If the trimming leads to the loss of a large number of reads, my initial reaction would be to try an understand why. One could always ""re-synchronize"" the singletons by providing them with fake mates, which would cause them to be mapped and treated as orphans during quantification. However, again, it's probably worth understanding why an experiment ends up with a lot of singletons before going through the trouble of accounting for them.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755
https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755:160,Modifiability,adapt,adapter,160,"Thanks for the recommendation. I'll definitely take a look at it. It is true that we typically suggest that you drop singletons if they are created during e.g. adapter / quality trimming etc.. However, it is also the case that one really may only want to consider very ""light"" quality trimming for RNA-seq data [as suggested by Matt MacManes](https://www.frontiersin.org/articles/10.3389/fgene.2014.00013/full). . If the trimming leads to the loss of a large number of reads, my initial reaction would be to try an understand why. One could always ""re-synchronize"" the singletons by providing them with fake mates, which would cause them to be mapped and treated as orphans during quantification. However, again, it's probably worth understanding why an experiment ends up with a lot of singletons before going through the trouble of accounting for them.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240#issuecomment-400061755
https://github.com/COMBINE-lab/salmon/issues/241#issuecomment-400053601:170,Deployability,update,update,170,"Indeed. It looks like the option name changed at some point in the past, but the documentation didn't follow suite. The appropriate long-form option is `--threads`. I'll update this in the docs.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/241#issuecomment-400053601
https://github.com/COMBINE-lab/salmon/issues/242#issuecomment-400056707:40,Usability,feedback,feedback,40,"Hi @mmokrejs,. Thanks again for all the feedback, we'll work on these. I'll mention that (2) is not quite simple as it seems. Specifically, if you write mappings (`--writeMappings, -z`), the implicit file is STDOUT. I believe this has been discussed with @tseemann in the past. This is intentional so that one can immediately pipe that output to e.g. samtools to convert the SAM format to a BAM format. I am open to cleaner solutions that (ideally) don't involve having to write the BAM files directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242#issuecomment-400056707
https://github.com/COMBINE-lab/salmon/issues/242#issuecomment-400056707:106,Usability,simpl,simple,106,"Hi @mmokrejs,. Thanks again for all the feedback, we'll work on these. I'll mention that (2) is not quite simple as it seems. Specifically, if you write mappings (`--writeMappings, -z`), the implicit file is STDOUT. I believe this has been discussed with @tseemann in the past. This is intentional so that one can immediately pipe that output to e.g. samtools to convert the SAM format to a BAM format. I am open to cleaner solutions that (ideally) don't involve having to write the BAM files directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242#issuecomment-400056707
https://github.com/COMBINE-lab/salmon/issues/242#issuecomment-400067553:177,Modifiability,enhance,enhancement,177,I think the longer-term solution is for us to _directly_ support BAM writing. This would obviate the need of passing the output through `samtools`. I will mark this issue as an enhancement to remind us to look into what will be involved in doing that (while we work on addressing the more obvious issues you raise).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242#issuecomment-400067553
https://github.com/COMBINE-lab/salmon/issues/243#issuecomment-400721687:114,Performance,load,loading,114,"One thought might be that on OSX, I think docker sets a very low default RAM limit (2G?). That's insufficient for loading the entire human txome index. You could try [setting this](https://docs.docker.com/docker-for-mac/#advanced) to a larger value (e.g. 6 or 8G should suffice).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243#issuecomment-400721687
https://github.com/COMBINE-lab/salmon/issues/244#issuecomment-401345280:8,Availability,error,error,8,Another error:; There is a whitespace after the last slash. ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/ gencode.v28.pc_transcripts.fa.gz. ```. Corrected; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/gencode.v28.pc_transcripts.fa.gz. ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/244#issuecomment-401345280
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744:166,Deployability,pipeline,pipeline,166,"Hi @Munfred , ; Thanks again for testing Alevin with your dataset. Extrapolating from the log, It indeed looks like a challenging dataset. In default settings Alevin pipeline starts with finding a knee in the curve (which itself is a non-trivial problem) and then use KDE w/ gaussian correction to adjust for the right probability. In your case it looks like knee is overshooting (if true number of CB is 300 ) but more troubling part for me is gaussian correction is coming out 0. Now based on your motivation for using Alevin, I can propose two solutions:. 1. If the motivation is to get gene-level count without worrying about the whitelisted CB prediction then the easiest way is to use external whitelist. Alevin can use external whitelist using flag `--whitelist` and would generate gene level counts for specified list of CB.; 2. If you need full end-to-end run of Alevin, then I propose using command line flag `--dumpFeatures` along with Alevin default. This flag tells Alevin to dump various features, the important one here would be a file named `frequency.txt`, what this file basically tells you is the frequency of all the observed CB in a order. From there we can manually select a knee in the frequency curve and use that as a whitelist. In terms of improving the task for improving the knee selection in Alevin, if you can share the `frequency.txt` file then I can look into what's causing the issue for gaussian correction or the knee selection itself. Thanks again for your interest !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744:649,Safety,predict,prediction,649,"Hi @Munfred , ; Thanks again for testing Alevin with your dataset. Extrapolating from the log, It indeed looks like a challenging dataset. In default settings Alevin pipeline starts with finding a knee in the curve (which itself is a non-trivial problem) and then use KDE w/ gaussian correction to adjust for the right probability. In your case it looks like knee is overshooting (if true number of CB is 300 ) but more troubling part for me is gaussian correction is coming out 0. Now based on your motivation for using Alevin, I can propose two solutions:. 1. If the motivation is to get gene-level count without worrying about the whitelisted CB prediction then the easiest way is to use external whitelist. Alevin can use external whitelist using flag `--whitelist` and would generate gene level counts for specified list of CB.; 2. If you need full end-to-end run of Alevin, then I propose using command line flag `--dumpFeatures` along with Alevin default. This flag tells Alevin to dump various features, the important one here would be a file named `frequency.txt`, what this file basically tells you is the frequency of all the observed CB in a order. From there we can manually select a knee in the frequency curve and use that as a whitelist. In terms of improving the task for improving the knee selection in Alevin, if you can share the `frequency.txt` file then I can look into what's causing the issue for gaussian correction or the knee selection itself. Thanks again for your interest !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744:33,Testability,test,testing,33,"Hi @Munfred , ; Thanks again for testing Alevin with your dataset. Extrapolating from the log, It indeed looks like a challenging dataset. In default settings Alevin pipeline starts with finding a knee in the curve (which itself is a non-trivial problem) and then use KDE w/ gaussian correction to adjust for the right probability. In your case it looks like knee is overshooting (if true number of CB is 300 ) but more troubling part for me is gaussian correction is coming out 0. Now based on your motivation for using Alevin, I can propose two solutions:. 1. If the motivation is to get gene-level count without worrying about the whitelisted CB prediction then the easiest way is to use external whitelist. Alevin can use external whitelist using flag `--whitelist` and would generate gene level counts for specified list of CB.; 2. If you need full end-to-end run of Alevin, then I propose using command line flag `--dumpFeatures` along with Alevin default. This flag tells Alevin to dump various features, the important one here would be a file named `frequency.txt`, what this file basically tells you is the frequency of all the observed CB in a order. From there we can manually select a knee in the frequency curve and use that as a whitelist. In terms of improving the task for improving the knee selection in Alevin, if you can share the `frequency.txt` file then I can look into what's causing the issue for gaussian correction or the knee selection itself. Thanks again for your interest !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744:90,Testability,log,log,90,"Hi @Munfred , ; Thanks again for testing Alevin with your dataset. Extrapolating from the log, It indeed looks like a challenging dataset. In default settings Alevin pipeline starts with finding a knee in the curve (which itself is a non-trivial problem) and then use KDE w/ gaussian correction to adjust for the right probability. In your case it looks like knee is overshooting (if true number of CB is 300 ) but more troubling part for me is gaussian correction is coming out 0. Now based on your motivation for using Alevin, I can propose two solutions:. 1. If the motivation is to get gene-level count without worrying about the whitelisted CB prediction then the easiest way is to use external whitelist. Alevin can use external whitelist using flag `--whitelist` and would generate gene level counts for specified list of CB.; 2. If you need full end-to-end run of Alevin, then I propose using command line flag `--dumpFeatures` along with Alevin default. This flag tells Alevin to dump various features, the important one here would be a file named `frequency.txt`, what this file basically tells you is the frequency of all the observed CB in a order. From there we can manually select a knee in the frequency curve and use that as a whitelist. In terms of improving the task for improving the knee selection in Alevin, if you can share the `frequency.txt` file then I can look into what's causing the issue for gaussian correction or the knee selection itself. Thanks again for your interest !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402547744
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402569828:98,Availability,avail,available,98,"Hi, I had previousl tried using the `--whitelist` option using the 10x barcode whitelist (they're available at `cellranger-2.0.0/cellranger-cs/2.0.0/tenkit/lib/python/tenkit/barcodes/737K-august-2016.txt` and `4M-with-alts-february-2016.txt`). This had the same output as not using them. I just reran alevin with the `--dumpFeatures` flag, attached are the barcodes. I forgot to mention that with cellranger we saw that the knee was very soft, there was no sharp drop, and that might be what's confusing salmon. I had looked at the documentation but did not see a way to manually specify the cutoff. It is also desirable to manually the first few barcodes, because those have abnormally more counts than would be expected. Here's a log-log histogram of the alevin frequency output; ![image](https://user-images.githubusercontent.com/12504176/42296042-b9a944c6-7fa5-11e8-9f33-02a178d249ce.png). [frequency.txt](https://github.com/COMBINE-lab/salmon/files/2164480/frequency.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402569828
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402569828:732,Testability,log,log-log,732,"Hi, I had previousl tried using the `--whitelist` option using the 10x barcode whitelist (they're available at `cellranger-2.0.0/cellranger-cs/2.0.0/tenkit/lib/python/tenkit/barcodes/737K-august-2016.txt` and `4M-with-alts-february-2016.txt`). This had the same output as not using them. I just reran alevin with the `--dumpFeatures` flag, attached are the barcodes. I forgot to mention that with cellranger we saw that the knee was very soft, there was no sharp drop, and that might be what's confusing salmon. I had looked at the documentation but did not see a way to manually specify the cutoff. It is also desirable to manually the first few barcodes, because those have abnormally more counts than would be expected. Here's a log-log histogram of the alevin frequency output; ![image](https://user-images.githubusercontent.com/12504176/42296042-b9a944c6-7fa5-11e8-9f33-02a178d249ce.png). [frequency.txt](https://github.com/COMBINE-lab/salmon/files/2164480/frequency.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402569828
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402571397:105,Usability,clear,clear,105,"Thanks @Munfred for sharing the file. I'll take a look into this. re> whitelist; I should have been more clear about this. I didn't mean to say the full 737k CB, what I meant was using the actual whitelisted CB by cellranger, which are as you say was 300. Usually they are stored in a folder with name `filtered_gene_bc_matrices`, Although you might have to remove `-1` from their name since cellranger adds it to specify the sample index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402571397
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402627049:476,Usability,clear,clearly,476,"Choosing the top 500 barcodes from the `frequency.txt` list worked! Thanks for bringing my attention to that, I had not realized how do the cuttoff manually. You might want to expand a bit more about the `--dumpFeatures` flag in the documentation (https://salmon.readthedocs.io/en/latest/alevin.html) and possibly mention it in the tutorial (https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/). I think using the `features.txt` to pick barcodes should be more clearly advertised, since it's not straightforward with cell ranger and many people will find it useful. . Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402627049
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402759530:80,Deployability,update,update,80,"Glad to hear that it worked for you. Thanks for the suggestions, we will surely update the document soon and be more clear about the manual cutoff.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402759530
https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402759530:117,Usability,clear,clear,117,"Glad to hear that it worked for you. Thanks for the suggestions, we will surely update the document soon and be more clear about the manual cutoff.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402759530
https://github.com/COMBINE-lab/salmon/issues/246#issuecomment-401834462:423,Performance,perform,performed,423,"Hi @AngryMaciek,. You can get either Gibbs samples from the posterior, or bootstrap estimates. To get the former, you pass `--numGibbsSamples <nsamp>` to salmon, and to get the latter, you pass `--numBootstraps <nsamp>`. Either way, samples will be written to a binary, gzipped file in `aux_dir/bootstrap/ bootstraps.gz` (we decided to keep a uniform file name regardless of the sampling type, however the type of sampling performed can be derived from `aux_dir/meta_info.json`). Two things to point out here. First, the binary file format can be converted to TSV if you prefer using [this script](https://github.com/COMBINE-lab/salmon/blob/master/scripts/ConvertBootstrapsToTSV.py). Second, these are samples over the number of reads assigned to the transcripts (not the TPMs directly). However, you could easily convert samples over the number of reads to samples over the TPMs by applying the TPM formula (i.e. TPM_i = 10^6 * (num_reads_i / effective_length_i) / (sum_j (num_reads_j / effective_length_j))).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/246#issuecomment-401834462
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402349013:417,Security,validat,validate,417,"Hi @Hoohm ,; Thanks for the feature request.; Currently `Alevin` do have a hidden feature, where you can explicitly specify the CB and UMI length. Although we have not yet extensively tested these options but in your settings you might have to specify the following command line argument:; ```; --barcodeLength 7 --umiLength 9 --end 5; ```; Please let us know how it works out for you in these settings, it will help validate these options for `Alevin`. PS: Just a quick question for my understanding, is there a specific reason you chose to use the length of the UMI longer than CB in your experiment ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402349013
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402349013:184,Testability,test,tested,184,"Hi @Hoohm ,; Thanks for the feature request.; Currently `Alevin` do have a hidden feature, where you can explicitly specify the CB and UMI length. Although we have not yet extensively tested these options but in your settings you might have to specify the following command line argument:; ```; --barcodeLength 7 --umiLength 9 --end 5; ```; Please let us know how it works out for you in these settings, it will help validate these options for `Alevin`. PS: Just a quick question for my understanding, is there a specific reason you chose to use the length of the UMI longer than CB in your experiment ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402349013
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401:135,Integrability,protocol,protocol,135,"Hi @k3yavi ,; Thanks for the info!. We are working on an optimized version of SCRBseq and one of the problems we had with the original protocol is the minimum distance between the cell barcodes being too low. So we increased the number of bases. The original protocol was 6 bc and 10 umi. We just switched the 7 position from umi to barcode. We use a known whitelist of barcodes since it's a well plate based protocol. We know that any other barcode are not cells. Is there an option for max distance allowed between BC or UMI?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401:259,Integrability,protocol,protocol,259,"Hi @k3yavi ,; Thanks for the info!. We are working on an optimized version of SCRBseq and one of the problems we had with the original protocol is the minimum distance between the cell barcodes being too low. So we increased the number of bases. The original protocol was 6 bc and 10 umi. We just switched the 7 position from umi to barcode. We use a known whitelist of barcodes since it's a well plate based protocol. We know that any other barcode are not cells. Is there an option for max distance allowed between BC or UMI?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401:409,Integrability,protocol,protocol,409,"Hi @k3yavi ,; Thanks for the info!. We are working on an optimized version of SCRBseq and one of the problems we had with the original protocol is the minimum distance between the cell barcodes being too low. So we increased the number of bases. The original protocol was 6 bc and 10 umi. We just switched the 7 position from umi to barcode. We use a known whitelist of barcodes since it's a well plate based protocol. We know that any other barcode are not cells. Is there an option for max distance allowed between BC or UMI?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401:57,Performance,optimiz,optimized,57,"Hi @k3yavi ,; Thanks for the info!. We are working on an optimized version of SCRBseq and one of the problems we had with the original protocol is the minimum distance between the cell barcodes being too low. So we increased the number of bases. The original protocol was 6 bc and 10 umi. We just switched the 7 position from umi to barcode. We use a known whitelist of barcodes since it's a well plate based protocol. We know that any other barcode are not cells. Is there an option for max distance allowed between BC or UMI?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402440401
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751:218,Availability,down,downstream,218,"Hi @Hoohm , ; Thanks for the quick reply and the explanation . I personally am not very well versed in the working of `SCRBseq`. But, as you explained, knowing a set of whitelist CB beforehand is always a plus for the downstream working of the pipeline. Currently, Alevin merge all the observed CB which are 1-edit distance from a known whitelist CB towards the whitelist. The underlying assumption being that the sequencing error (although with low probability) can change CB sequence and we can correct for that. I wonder, is this right to do for your experiment ?. re: >Is there an option for max distance allowed between BC or UMI?; Sorry, but I don't completely understand this question. When you say distance allowed between CB and UMI, do you mean there is a sequence between CB and UMI ( like in in-drop seq)? If that's the case then we might have to tweak a bit in alevin command line flags again. But I suspect what you meant by above statement is -- max distance allowed between CB among themselves. If that's the question then unfortunately we currently allow correcting for only 1-edit distance for both CB and UMI. But if you think more correction is needed by your protocol then we can put this on the feature request list and discuss about working on this on the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751:425,Availability,error,error,425,"Hi @Hoohm , ; Thanks for the quick reply and the explanation . I personally am not very well versed in the working of `SCRBseq`. But, as you explained, knowing a set of whitelist CB beforehand is always a plus for the downstream working of the pipeline. Currently, Alevin merge all the observed CB which are 1-edit distance from a known whitelist CB towards the whitelist. The underlying assumption being that the sequencing error (although with low probability) can change CB sequence and we can correct for that. I wonder, is this right to do for your experiment ?. re: >Is there an option for max distance allowed between BC or UMI?; Sorry, but I don't completely understand this question. When you say distance allowed between CB and UMI, do you mean there is a sequence between CB and UMI ( like in in-drop seq)? If that's the case then we might have to tweak a bit in alevin command line flags again. But I suspect what you meant by above statement is -- max distance allowed between CB among themselves. If that's the question then unfortunately we currently allow correcting for only 1-edit distance for both CB and UMI. But if you think more correction is needed by your protocol then we can put this on the feature request list and discuss about working on this on the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751:244,Deployability,pipeline,pipeline,244,"Hi @Hoohm , ; Thanks for the quick reply and the explanation . I personally am not very well versed in the working of `SCRBseq`. But, as you explained, knowing a set of whitelist CB beforehand is always a plus for the downstream working of the pipeline. Currently, Alevin merge all the observed CB which are 1-edit distance from a known whitelist CB towards the whitelist. The underlying assumption being that the sequencing error (although with low probability) can change CB sequence and we can correct for that. I wonder, is this right to do for your experiment ?. re: >Is there an option for max distance allowed between BC or UMI?; Sorry, but I don't completely understand this question. When you say distance allowed between CB and UMI, do you mean there is a sequence between CB and UMI ( like in in-drop seq)? If that's the case then we might have to tweak a bit in alevin command line flags again. But I suspect what you meant by above statement is -- max distance allowed between CB among themselves. If that's the question then unfortunately we currently allow correcting for only 1-edit distance for both CB and UMI. But if you think more correction is needed by your protocol then we can put this on the feature request list and discuss about working on this on the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751:1284,Deployability,release,release,1284,"Hi @Hoohm , ; Thanks for the quick reply and the explanation . I personally am not very well versed in the working of `SCRBseq`. But, as you explained, knowing a set of whitelist CB beforehand is always a plus for the downstream working of the pipeline. Currently, Alevin merge all the observed CB which are 1-edit distance from a known whitelist CB towards the whitelist. The underlying assumption being that the sequencing error (although with low probability) can change CB sequence and we can correct for that. I wonder, is this right to do for your experiment ?. re: >Is there an option for max distance allowed between BC or UMI?; Sorry, but I don't completely understand this question. When you say distance allowed between CB and UMI, do you mean there is a sequence between CB and UMI ( like in in-drop seq)? If that's the case then we might have to tweak a bit in alevin command line flags again. But I suspect what you meant by above statement is -- max distance allowed between CB among themselves. If that's the question then unfortunately we currently allow correcting for only 1-edit distance for both CB and UMI. But if you think more correction is needed by your protocol then we can put this on the feature request list and discuss about working on this on the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751:1180,Integrability,protocol,protocol,1180,"Hi @Hoohm , ; Thanks for the quick reply and the explanation . I personally am not very well versed in the working of `SCRBseq`. But, as you explained, knowing a set of whitelist CB beforehand is always a plus for the downstream working of the pipeline. Currently, Alevin merge all the observed CB which are 1-edit distance from a known whitelist CB towards the whitelist. The underlying assumption being that the sequencing error (although with low probability) can change CB sequence and we can correct for that. I wonder, is this right to do for your experiment ?. re: >Is there an option for max distance allowed between BC or UMI?; Sorry, but I don't completely understand this question. When you say distance allowed between CB and UMI, do you mean there is a sequence between CB and UMI ( like in in-drop seq)? If that's the case then we might have to tweak a bit in alevin command line flags again. But I suspect what you meant by above statement is -- max distance allowed between CB among themselves. If that's the question then unfortunately we currently allow correcting for only 1-edit distance for both CB and UMI. But if you think more correction is needed by your protocol then we can put this on the feature request list and discuss about working on this on the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-408565409:21,Deployability,release,released,21,"Hey @Hoohm , we have released `v0.11.1` with some fix for the customized length mode. Let us know how it worked out for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-408565409
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-412352707:376,Usability,feedback,feedback,376,"@Hoohm , I believe the custom length options looks good from our end. Feel free to reopen the issue if you face any problem while using alevin in this mode. Re: More customizable options like a regex for extracting CB and UMI is still in development and has been raised in issue #233 and will keep that issue open until we have more generic extraction. . Thanks again for the feedback and useful comments.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-412352707
https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-418803087:64,Integrability,wrap,wrapper,64,How do I apply the custom length settings if I am utilizing the wrapper for v1 10x data? I have v1 data that has a 5bp instead of 10bp UMI but everything else is the same. Can i just add `--umiLength 5`?; Data:; [https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.1.0/cd14_monocytes](url),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-418803087
https://github.com/COMBINE-lab/salmon/issues/248#issuecomment-402909186:169,Testability,test,test,169,"Thank you in advance for developing this amazing thing. . I have some little suggestions. I have little background on algorithm used in salmon, and need to give a quick test on the data. I read through the documents, and it's very difficult for me to understand the rational running behind for some options without reading series of original algorithm papers. I guess some import details are missed in the document, for example, what's the difference of quasi-mapping model and light-weight alignment based model, and how salmon deal with pair end reads that not concordantly aligned. To be honest, it's not very friendly to end-user of this tool, and prevents some of us using it extensively. obenno",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/248#issuecomment-402909186
https://github.com/COMBINE-lab/salmon/issues/249#issuecomment-404220623:504,Usability,simpl,simply,504,"Hi @afkoeppel,. Thanks for reporting this. While I completely understand that this is not the desired behavior, it is the expected behavior. That is, when collapsing duplicates during indexing, the invariant that is maintained is that all sequence-identical transcripts will be ""collapsed"" and a single representative maintained. In practice (i.e. in implementation), the transcript that is maintained is the first one encountered. In the short-term, your suggested solution is the best. That is you can simply remove the non-canonical transcripts from the input fasta file. Alternatively, you could re-order the entries in the file so that the canonical transcript occurs first. In the longer term, I'd be happy to implement a de-duplication procedure that is more aware of the semantics of the transcript names. However, I'd want to figure out how to do this that is agnostic to where the transcripts are coming from (i.e. that doesn't work only for Gencode, human etc., and that does something sensible when the transcripts are e.g. _de novo_ assembled contigs). On that front, I'm completely open to suggestions. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249#issuecomment-404220623
https://github.com/COMBINE-lab/salmon/issues/249#issuecomment-407831888:19,Usability,simpl,simple,19,"Use Gencode is the simple solution. Also Gencode combines coding and non-coding while Ensembl has these as two FASTA files. What I'm thinking is that, `tximeta` can solve this for Ensembl post-hoc by simply renaming the duplicate transcripts after looking up the name of the transcript from the standard chromosome. it won't disrupt the function of `tximeta` because we index the sequence of the txome which doesn't care about the names of the duplicate transcripts",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249#issuecomment-407831888
https://github.com/COMBINE-lab/salmon/issues/249#issuecomment-407831888:200,Usability,simpl,simply,200,"Use Gencode is the simple solution. Also Gencode combines coding and non-coding while Ensembl has these as two FASTA files. What I'm thinking is that, `tximeta` can solve this for Ensembl post-hoc by simply renaming the duplicate transcripts after looking up the name of the transcript from the standard chromosome. it won't disrupt the function of `tximeta` because we index the sequence of the txome which doesn't care about the names of the duplicate transcripts",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249#issuecomment-407831888
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:212,Availability,failure,failure,212,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:338,Availability,error,error,338,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:123,Deployability,configurat,configurations,123,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:853,Deployability,install,installation,853,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:1228,Deployability,install,installing,1228,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:123,Modifiability,config,configurations,123,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:33,Testability,test,test,33,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:93,Testability,test,test,93,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:223,Testability,test,tests,223,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467:62,Availability,fault,fault,62,"Thanks for the fast reply (and detailed explanation). The seg fault is produced regardless of the type (or lack thereof). In case the error below is somehow related to tbb: I haven't had it pre-installed, so the c- / make procedure 'took care of it'. Following output is generated by gdb:. ```Starting program: /usr/local/bin/salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; [New Thread 0x7ffff62b0700 (LWP 17488)]; Version Info: This is the most recent version of Salmon.; [Thread 0x7ffff62b0700 (LWP 17488) exited]. Thread 1 ""salmon"" received signal SIGSEGV, Segmentation fault.; __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; 2951	malloc.c: No such file or directory.; ``` ; and the backtrace:; ```; #0 __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; #1 0x00007ffff79b775d in operator delete[] (ptr=0x7fff00000002); at ../../src/tbbmalloc/proxy.cpp:256; #2 0x0000000000792272 in salmonIndex(int, char**) (); #3 0x000000000065baca in main (); ```. Edit: Similar things happen with conda installation, though the traceback details are slightly different:; `Temporary breakpoint 1 at 0x7ffff6cf2512: file malloc.c, line 2951. `",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467:134,Availability,error,error,134,"Thanks for the fast reply (and detailed explanation). The seg fault is produced regardless of the type (or lack thereof). In case the error below is somehow related to tbb: I haven't had it pre-installed, so the c- / make procedure 'took care of it'. Following output is generated by gdb:. ```Starting program: /usr/local/bin/salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; [New Thread 0x7ffff62b0700 (LWP 17488)]; Version Info: This is the most recent version of Salmon.; [Thread 0x7ffff62b0700 (LWP 17488) exited]. Thread 1 ""salmon"" received signal SIGSEGV, Segmentation fault.; __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; 2951	malloc.c: No such file or directory.; ``` ; and the backtrace:; ```; #0 __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; #1 0x00007ffff79b775d in operator delete[] (ptr=0x7fff00000002); at ../../src/tbbmalloc/proxy.cpp:256; #2 0x0000000000792272 in salmonIndex(int, char**) (); #3 0x000000000065baca in main (); ```. Edit: Similar things happen with conda installation, though the traceback details are slightly different:; `Temporary breakpoint 1 at 0x7ffff6cf2512: file malloc.c, line 2951. `",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467:721,Availability,fault,fault,721,"Thanks for the fast reply (and detailed explanation). The seg fault is produced regardless of the type (or lack thereof). In case the error below is somehow related to tbb: I haven't had it pre-installed, so the c- / make procedure 'took care of it'. Following output is generated by gdb:. ```Starting program: /usr/local/bin/salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; [New Thread 0x7ffff62b0700 (LWP 17488)]; Version Info: This is the most recent version of Salmon.; [Thread 0x7ffff62b0700 (LWP 17488) exited]. Thread 1 ""salmon"" received signal SIGSEGV, Segmentation fault.; __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; 2951	malloc.c: No such file or directory.; ``` ; and the backtrace:; ```; #0 __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; #1 0x00007ffff79b775d in operator delete[] (ptr=0x7fff00000002); at ../../src/tbbmalloc/proxy.cpp:256; #2 0x0000000000792272 in salmonIndex(int, char**) (); #3 0x000000000065baca in main (); ```. Edit: Similar things happen with conda installation, though the traceback details are slightly different:; `Temporary breakpoint 1 at 0x7ffff6cf2512: file malloc.c, line 2951. `",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467:194,Deployability,install,installed,194,"Thanks for the fast reply (and detailed explanation). The seg fault is produced regardless of the type (or lack thereof). In case the error below is somehow related to tbb: I haven't had it pre-installed, so the c- / make procedure 'took care of it'. Following output is generated by gdb:. ```Starting program: /usr/local/bin/salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; [New Thread 0x7ffff62b0700 (LWP 17488)]; Version Info: This is the most recent version of Salmon.; [Thread 0x7ffff62b0700 (LWP 17488) exited]. Thread 1 ""salmon"" received signal SIGSEGV, Segmentation fault.; __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; 2951	malloc.c: No such file or directory.; ``` ; and the backtrace:; ```; #0 __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; #1 0x00007ffff79b775d in operator delete[] (ptr=0x7fff00000002); at ../../src/tbbmalloc/proxy.cpp:256; #2 0x0000000000792272 in salmonIndex(int, char**) (); #3 0x000000000065baca in main (); ```. Edit: Similar things happen with conda installation, though the traceback details are slightly different:; `Temporary breakpoint 1 at 0x7ffff6cf2512: file malloc.c, line 2951. `",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467:1153,Deployability,install,installation,1153,"Thanks for the fast reply (and detailed explanation). The seg fault is produced regardless of the type (or lack thereof). In case the error below is somehow related to tbb: I haven't had it pre-installed, so the c- / make procedure 'took care of it'. Following output is generated by gdb:. ```Starting program: /usr/local/bin/salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; [New Thread 0x7ffff62b0700 (LWP 17488)]; Version Info: This is the most recent version of Salmon.; [Thread 0x7ffff62b0700 (LWP 17488) exited]. Thread 1 ""salmon"" received signal SIGSEGV, Segmentation fault.; __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; 2951	malloc.c: No such file or directory.; ``` ; and the backtrace:; ```; #0 __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; #1 0x00007ffff79b775d in operator delete[] (ptr=0x7fff00000002); at ../../src/tbbmalloc/proxy.cpp:256; #2 0x0000000000792272 in salmonIndex(int, char**) (); #3 0x000000000065baca in main (); ```. Edit: Similar things happen with conda installation, though the traceback details are slightly different:; `Temporary breakpoint 1 at 0x7ffff6cf2512: file malloc.c, line 2951. `",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404297912:41,Deployability,install,installation,41,"> Edit: Similar things happen with conda installation, though the traceback details are slightly different:; Temporary breakpoint 1 at 0x7ffff6cf2512: file malloc.c, line 2951. Ok; *very* interesting. My current best idea is to try and reproduce this on a ubuntu 16.04 docker image. I'll let you know what I find.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404297912
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:171,Deployability,install,install,171,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:440,Deployability,install,install,440,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:944,Deployability,Install,Install,944,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:971,Deployability,Install,Install,971,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:979,Deployability,configurat,configuration,979,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:995,Deployability,Release,Release,995,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1008,Deployability,Install,Installing,1008,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1043,Deployability,Install,Installing,1043,"was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1088,Deployability,Install,Installing,1088," current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1139,Deployability,Install,Installing,1139,"e salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1196,Deployability,Install,Installing,1196,"staden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 10",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1249,Deployability,Install,Installing,1249,"ile_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1296,Deployability,Install,Installing,1296,"ning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salm",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1341,Deployability,Install,Installing,1341,"s, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB V",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1400,Deployability,Install,Installing,1400,"0e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-no",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1442,Deployability,Install,Installing,1442,"all; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1491,Deployability,Install,Installation,1491,"t libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: U",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2542,Deployability,Release,Release,2542,". Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2635,Deployability,install,install,2635,". Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2669,Deployability,install,install,2669,". Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2807,Deployability,install,install,2807,". Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:979,Modifiability,config,configuration,979,"So, on a fresh docker image of ubuntu 16.04.4, I was not able to reproduce this yet. Here is my current output:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xec4): warning: the use of `tempnam' is dangerous, better use `mkstemp'; [100%] Built target salmon; root@e08cc9670e4a:/salmon-0.10.2/build# make install; [ 6%] Built target libdivsufsort; [ 12%] Built target libbz2; [ 17%] Built target liblzma; [ 24%] Built target libcereal; [ 31%] Built target libgff; [ 36%] Built target libbwa; [ 42%] Built target libstadenio; [ 48%] Built target libspdlog; [ 50%] Built target ksw2pp_sse4; [ 52%] Built target alevin_core; [ 55%] Built target ksw2pp_sse2; [ 60%] Built target ksw2pp_basic; [ 60%] Built target ksw2pp; [ 73%] Built target salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2413,Security,secur,security-,2413,"almon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2448,Security,secur,security-,2448,"ing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1863,Testability,test,test,1863,"arget salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, per",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1877,Testability,test,tests,1877,"arget salmon_core; [ 77%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, per",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1887,Testability,Test,Test,1887," target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:1947,Testability,Test,Test,1947,"on; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon-0.10.2/lib; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2043,Testability,Test,Test,2043,"b; -- Installing: /salmon-0.10.2/lib/libtbb.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundati",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2141,Testability,Test,Test,2141," -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so; -- Installing: /salmon-0.10.2/lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2207,Testability,test,tests,2207,"lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2223,Testability,test,tests,2223,"lib/libtbbmalloc.so.2; -- Installing: /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2252,Testability,Test,Test,2252,": /salmon-0.10.2/lib/libtbb.so.2; -- Installing: /salmon-0.10.2/lib/pkgconfig; -- Installing: /salmon-0.10.2/lib/libtbbmalloc_proxy.so.2; -- Installing: /salmon-0.10.2/bin/salmon; -- Installing: /salmon-0.10.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (U",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268:2651,Testability,test,test,2651,". Please ensure the following paths are set properly.; ==========================================================================; Please add /salmon-0.10.2/bin to your PATH; Please add /salmon-0.10.2/lib to your LD_LIBRARY_PATH; ==========================================================================; root@e08cc9670e4a:/salmon-0.10.2/build# make test; Running tests...; Test project /salmon-0.10.2/build; Start 1: unit_tests; 1/3 Test #1: unit_tests ....................... Passed 0.17 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.78 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.59 sec. 100% tests passed, 0 tests failed out of 3. Total Test time (real) = 3.54 sec; root@e08cc9670e4a:/salmon-0.10.2/build# lsb_release -a; LSB Version: core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch; Distributor ID: Ubuntu; Description: Ubuntu 16.04.4 LTS; Release: 16.04; Codename: xenial; ```. I built with:. `$ cmake -DFETCH_BOOST=TRUE .. && make install && make test`. I can also install the boost via apt and see if that makes a difference (though I expect not since it looked like TBB was the issue, and I let cmake install that). We can also check our compiler versions, perhaps. I have : . ```; root@e08cc9670e4a:/salmon-0.10.2/build# g++ --version; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. root@e08cc9670e4a:/salmon-0.10.2/build# gcc --version; gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404306268
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404315458:11,Deployability,update,update,11,"Ok, I will update that with a bioconda install under the Docker image, I am also unable to reproduce the issue. I imagine there must be some other difference causing this issue. Might you be able to try inside a docker image on your environment? This would isolate potential library differences, I think.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404315458
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404315458:39,Deployability,install,install,39,"Ok, I will update that with a bioconda install under the Docker image, I am also unable to reproduce the issue. I imagine there must be some other difference causing this issue. Might you be able to try inside a docker image on your environment? This would isolate potential library differences, I think.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404315458
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:374,Availability,down,download,374,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:718,Availability,Error,Error,718,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:835,Availability,error,error,835,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:1047,Availability,down,download,1047,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:1138,Availability,down,download,1138,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:1148,Availability,Error,Error,1148,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:1292,Availability,Error,Error,1292,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:1363,Availability,Error,Error,1363,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:1400,Availability,error,error,1400,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:73,Deployability,install,install,73,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:104,Deployability,install,install,104,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:223,Deployability,install,install,223,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:1456,Deployability,install,installed,1456,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:824,Integrability,message,message,824,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:363,Performance,Perform,Performing,363,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671:40,Availability,down,download,40,"Hi :). `wget` war already installed (to download the sources in the first place, so this one works). ; After `wget`ing the source files again re-`cmake`-ing them again `make install` did work, not sure what happened there in the first place. Also the tests are passing now. I will try to figure out what is different between the clean docker version and my system setup and will report back as soon as I know more.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671:26,Deployability,install,installed,26,"Hi :). `wget` war already installed (to download the sources in the first place, so this one works). ; After `wget`ing the source files again re-`cmake`-ing them again `make install` did work, not sure what happened there in the first place. Also the tests are passing now. I will try to figure out what is different between the clean docker version and my system setup and will report back as soon as I know more.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671:174,Deployability,install,install,174,"Hi :). `wget` war already installed (to download the sources in the first place, so this one works). ; After `wget`ing the source files again re-`cmake`-ing them again `make install` did work, not sure what happened there in the first place. Also the tests are passing now. I will try to figure out what is different between the clean docker version and my system setup and will report back as soon as I know more.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671:251,Testability,test,tests,251,"Hi :). `wget` war already installed (to download the sources in the first place, so this one works). ; After `wget`ing the source files again re-`cmake`-ing them again `make install` did work, not sure what happened there in the first place. Also the tests are passing now. I will try to figure out what is different between the clean docker version and my system setup and will report back as soon as I know more.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040:88,Deployability,install,installed,88,"All tests pass, hurray!; The solution was to uninstall `libtbb-dev`, which I have prior installed via `apt-get` (it was version 4.4, hence salmon installed a new version while `make`ing). So it seems there was a conflict between the tbb installed via apt-get and salmon itself.; Shall I close the issue or do you need any further info?; Thanks for the help in debugging ;)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040:146,Deployability,install,installed,146,"All tests pass, hurray!; The solution was to uninstall `libtbb-dev`, which I have prior installed via `apt-get` (it was version 4.4, hence salmon installed a new version while `make`ing). So it seems there was a conflict between the tbb installed via apt-get and salmon itself.; Shall I close the issue or do you need any further info?; Thanks for the help in debugging ;)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040:237,Deployability,install,installed,237,"All tests pass, hurray!; The solution was to uninstall `libtbb-dev`, which I have prior installed via `apt-get` (it was version 4.4, hence salmon installed a new version while `make`ing). So it seems there was a conflict between the tbb installed via apt-get and salmon itself.; Shall I close the issue or do you need any further info?; Thanks for the help in debugging ;)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040:4,Testability,test,tests,4,"All tests pass, hurray!; The solution was to uninstall `libtbb-dev`, which I have prior installed via `apt-get` (it was version 4.4, hence salmon installed a new version while `make`ing). So it seems there was a conflict between the tbb installed via apt-get and salmon itself.; Shall I close the issue or do you need any further info?; Thanks for the help in debugging ;)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404546040
https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404547107:277,Availability,down,down,277,"Hi @Beatzekatze,. Thanks for reporting this, and I'm glad you figured this out. I can take care of closing the issue, and I will add this tbb-related issue to the list of things I've seen people encounter for future reference. Thanks for your persistence in helping track this down!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404547107
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404957888:194,Security,hash,hash,194,ls -l /work/yu_liu/resource/salmon_gencodev28_index/; total 2234181; -rw-r--r-- 1 yu_liu data-sci 179889 Jul 13 19:43 duplicate_clusters.tsv; -rw-r--r-- 1 yu_liu data-sci 673607680 Jul 13 19:47 hash.bin; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 header.json; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 indexing.log; -rw-r--r-- 1 yu_liu data-sci 8192 Jul 13 19:47 quasi_index.log; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 refInfo.json; -rw-r--r-- 1 yu_liu data-sci 38621520 Jul 13 19:43 rsd.bin; -rw-r--r-- 1 yu_liu data-sci 1235888364 Jul 13 19:44 sa.bin; -rw-r--r-- 1 yu_liu data-sci 336807483 Jul 13 19:43 txpInfo.bin; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 versionInfo.json,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404957888
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404957888:314,Testability,log,log,314,ls -l /work/yu_liu/resource/salmon_gencodev28_index/; total 2234181; -rw-r--r-- 1 yu_liu data-sci 179889 Jul 13 19:43 duplicate_clusters.tsv; -rw-r--r-- 1 yu_liu data-sci 673607680 Jul 13 19:47 hash.bin; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 header.json; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 indexing.log; -rw-r--r-- 1 yu_liu data-sci 8192 Jul 13 19:47 quasi_index.log; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 refInfo.json; -rw-r--r-- 1 yu_liu data-sci 38621520 Jul 13 19:43 rsd.bin; -rw-r--r-- 1 yu_liu data-sci 1235888364 Jul 13 19:44 sa.bin; -rw-r--r-- 1 yu_liu data-sci 336807483 Jul 13 19:43 txpInfo.bin; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 versionInfo.json,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404957888
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404957888:378,Testability,log,log,378,ls -l /work/yu_liu/resource/salmon_gencodev28_index/; total 2234181; -rw-r--r-- 1 yu_liu data-sci 179889 Jul 13 19:43 duplicate_clusters.tsv; -rw-r--r-- 1 yu_liu data-sci 673607680 Jul 13 19:47 hash.bin; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 header.json; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 indexing.log; -rw-r--r-- 1 yu_liu data-sci 8192 Jul 13 19:47 quasi_index.log; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 refInfo.json; -rw-r--r-- 1 yu_liu data-sci 38621520 Jul 13 19:43 rsd.bin; -rw-r--r-- 1 yu_liu data-sci 1235888364 Jul 13 19:44 sa.bin; -rw-r--r-- 1 yu_liu data-sci 336807483 Jul 13 19:43 txpInfo.bin; -rw-r--r-- 1 yu_liu data-sci 0 Jul 13 19:47 versionInfo.json,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404957888
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959362:75,Availability,error,error,75,"all json files are empty files; When I did the index, it seems there is no error.; ls -lrth *json; -rw-r--r-- 1 yu_liu data-sci ==> 0 <== Jul 13 19:47 header.json; -rw-r--r-- 1 yu_liu data-sci ==>0 <== Jul 13 19:47 refInfo.json; -rw-r--r-- 1 yu_liu data-sci ==>0 <== Jul 13 19:47 versionInfo.json; (base)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959362
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959801:55,Availability,error,error,55,"I see. Well, this is definitely what is leading to the error. The JSON files shouldn't be empty. Can you report the output of `salmon quant` when you were building the index? It seems that the JSON files were not written correctly, which prevents proper loading of the index (and which may be indicative of other parts of the index not being properly written).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959801
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959801:254,Performance,load,loading,254,"I see. Well, this is definitely what is leading to the error. The JSON files shouldn't be empty. Can you report the output of `salmon quant` when you were building the index? It seems that the JSON files were not written correctly, which prevents proper loading of the index (and which may be indicative of other parts of the index not being properly written).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959801
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404960748:10744,Security,hash,hash,10744,"-A clipping); [2018-07-13 21:27:54.013] [jointLog] [warning] Entry with header [ENST00000603693.1|ENSG00000270451.1|OTTHUMG00000184611.3|OTTHUMT00000468945.3|RP11-810K23.14-001|IGHD4OR15-4B|19|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-07-13 21:27:54.013] [jointLog] [warning] Entry with header [ENST00000604838.1|ENSG00000270185.1|OTTHUMG00000184585.2|OTTHUMT00000468915.2|RP11-1360M22.4-001|IGHD1OR15-1B|17|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-07-13 21:27:55.348] [jointLog] [warning] Entry with header [ENST00000579054.1|ENSG00000266416.1|OTTHUMG00000179204.1|OTTHUMT00000445280.1|RP1-66C13.2-001|RP1-66C13.2|28|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-07-13 21:27:56.453] [jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|RP11-157B13.10-001|RP11-157B13.10|28|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 20.6564s. [2018-07-13 21:27:58.139] [jointLog] [warning] Removed 808 transcripts that were sequence duplicates of indexed transcripts.; [2018-07-13 21:27:58.139] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 4 non-ATCG nucleotides; Clipped poly-A tails from 1586 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0133569s; Writing sequence data to file . . . done; Elapsed time: 0.182628s; [info] Building 32-bit suffix array (length of generalized text is 308972089); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 0.513756s; done; Elapsed time: 58.2945s; processed 308000000 positions; khash had 130317526 keys; saving hash to disk . . . done; Elapsed time: 9.6539s; [2018-07-13 21:32:25.842] [jLog] [info] done building index; (salmon)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404960748
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404961325:107,Availability,error,error,107,"the new json files from the latest index build are not empty. and ; salmon quant is running now, so far no error!; Thanks for the quick response!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404961325
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:30,Availability,error,error,30,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:39,Availability,down,download,39,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:108,Availability,error,error,108,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:165,Availability,down,downloaded,165,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:1063,Availability,failure,failure,1063,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:114,Integrability,message,message,114,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:1000,Performance,Load,Loading,1000,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:393,Security,validat,validateMappings,393,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:555,Security,validat,validateMappings,555,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:727,Security,validat,validateMappings,727,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:1053,Testability,assert,assertion,1053,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:274,Availability,mainten,maintenance,274,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:353,Availability,avail,available,353,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:106,Deployability,install,install,106,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:493,Deployability,release,releases,493,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:151,Modifiability,variab,variables,151,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:701,Testability,log,log,701,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:858,Testability,log,logs,858,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:4,Usability,guid,guidohooiveld,4,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:1114,Usability,learn,learns,1114,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405540123:43,Availability,down,download,43,"Thanks Rob!; For both providing the binary download again, and pointing me to MultiQC (meanwhile got a informative QC report). :); Guido",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405540123
https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405540123:131,Usability,Guid,Guido,131,"Thanks Rob!; For both providing the binary download again, and pointing me to MultiQC (meanwhile got a informative QC report). :); Guido",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405540123
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460153:107,Availability,error,error,107,"Hi @habilzare ,; Thanks a lot for using alevin and sharing a subset of the dataset which can reproduce the error effortlessly, it really saves us a lot of time !. If I may ask a quick question, how did we get the file `cell_barcode_seq.txt` for whitelist ?; It looks like the file contains ~50k whitelisted CB, and only a very tiny fraction of them were actually found in the read/seq `Fastq` file. I agree that we can work on putting a more informative error so that user can resolve it by themselves.; The current assumption for alevin for whitelist CB is -- if provided with external whitelist then user is sure of the presence of the CB w/ _good enough_ frequency.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460153
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460153:454,Availability,error,error,454,"Hi @habilzare ,; Thanks a lot for using alevin and sharing a subset of the dataset which can reproduce the error effortlessly, it really saves us a lot of time !. If I may ask a quick question, how did we get the file `cell_barcode_seq.txt` for whitelist ?; It looks like the file contains ~50k whitelisted CB, and only a very tiny fraction of them were actually found in the read/seq `Fastq` file. I agree that we can work on putting a more informative error so that user can resolve it by themselves.; The current assumption for alevin for whitelist CB is -- if provided with external whitelist then user is sure of the presence of the CB w/ _good enough_ frequency.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460153
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460828:185,Deployability,pipeline,pipeline,185,"Thinking more about it, we can actually throw away a whitelisted CB with 0 frequency w/ a warning .; Once we discuss this w/ the alevin team, I'd happy to add this filter to the alevin pipeline . Thanks again @habilzare for pointing this out .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460828
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406462122:261,Deployability,update,update,261,"Hi @k3yavi ,; Thanks for looking at this isssue. The CB whitelist corresponds to a larger study, which includes the cells in these fastq files and many more. I'll rerun with only the 2K-4K cells that are related to this specific sample, and then I send you and update.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406462122
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:292,Availability,error,error,292,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:706,Availability,avail,available,706,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:748,Availability,avail,available,748,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:799,Deployability,release,releases,799,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:868,Deployability,upgrade,upgrade,868,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:2406,Performance,Load,Loading,2406,"t }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-19 22:55:37.675] [alevinLog] [info] Done populating Z matrix; [2018-07-19 22:55:37.683] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 22:55:37.683] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 22:55:37.683] [alevinLog] [info] Used Barcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:2471,Performance,Load,Loading,2471,"list ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-19 22:55:37.675] [alevinLog] [info] Done populating Z matrix; [2018-07-19 22:55:37.683] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 22:55:37.683] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 22:55:37.683] [alevinLog] [info] Used Barcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:2836,Performance,Load,Loading,2836,"55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-19 22:55:37.675] [alevinLog] [info] Done populating Z matrix; [2018-07-19 22:55:37.683] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 22:55:37.683] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 22:55:37.683] [alevinLog] [info] Used Barcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:2904,Performance,Load,Loading,2904,"18-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-19 22:55:37.675] [alevinLog] [info] Done populating Z matrix; [2018-07-19 22:55:37.683] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 22:55:37.683] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 22:55:37.683] [alevinLog] [info] Used Barcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-19 23:03:35.741] [jointLog] [info] finished quantifyLibrary(); [2018-07",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:2975,Performance,Load,Loading,2975,"; [2018-07-19 22:55:37.675] [alevinLog] [info] Done populating Z matrix; [2018-07-19 22:55:37.683] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 22:55:37.683] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 22:55:37.683] [alevinLog] [info] Used Barcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-19 23:03:35.741] [jointLog] [info] finished quantifyLibrary(); [2018-07-19 23:03:35.755] [alevinLog] [info] Starting optimizer. Analyzed 5238 ce",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:3231,Performance,load,loading,3231,"rcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-19 23:03:35.741] [jointLog] [info] finished quantifyLibrary(); [2018-07-19 23:03:35.755] [alevinLog] [info] Starting optimizer. Analyzed 5238 cells (100% of all).; Skipped Barcodes are from High Confidence Region; `$ls -ltrha alevin_output/alevin/`; total 256K; drwxrwx--- 6 zare G-816158 4.0K Jul 19 22:36 ..; -rw-rw---- 1 zare G-816158 960 Jul 19 23:03 alevin.log; drwxrwx--- 2 zare G-816158 4.0K Jul 19 23:03 .; -rw-r",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:3295,Performance,load,loading,3295,"rcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-19 23:03:35.741] [jointLog] [info] finished quantifyLibrary(); [2018-07-19 23:03:35.755] [alevinLog] [info] Starting optimizer. Analyzed 5238 cells (100% of all).; Skipped Barcodes are from High Confidence Region; `$ls -ltrha alevin_output/alevin/`; total 256K; drwxrwx--- 6 zare G-816158 4.0K Jul 19 22:36 ..; -rw-rw---- 1 zare G-816158 960 Jul 19 23:03 alevin.log; drwxrwx--- 2 zare G-816158 4.0K Jul 19 23:03 .; -rw-r",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:3962,Performance,optimiz,optimizer,3962,"493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-19 23:03:35.741] [jointLog] [info] finished quantifyLibrary(); [2018-07-19 23:03:35.755] [alevinLog] [info] Starting optimizer. Analyzed 5238 cells (100% of all).; Skipped Barcodes are from High Confidence Region; `$ls -ltrha alevin_output/alevin/`; total 256K; drwxrwx--- 6 zare G-816158 4.0K Jul 19 22:36 ..; -rw-rw---- 1 zare G-816158 960 Jul 19 23:03 alevin.log; drwxrwx--- 2 zare G-816158 4.0K Jul 19 23:03 .; -rw-rw---- 1 zare G-816158 81K Jul 19 23:03 quants_mat_rows.txt; -rw-rw---- 1 zare G-816158 160K Jul 19 23:03 quants_mat.gz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:3239,Security,hash,hash,3239,"rcodes except Whitelist: 20705; [2018-07-19 22:55:38.386] [jointLog] [info] There is 1 library.; [2018-07-19 22:55:38.493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-19 23:03:35.741] [jointLog] [info] finished quantifyLibrary(); [2018-07-19 23:03:35.755] [alevinLog] [info] Starting optimizer. Analyzed 5238 cells (100% of all).; Skipped Barcodes are from High Confidence Region; `$ls -ltrha alevin_output/alevin/`; total 256K; drwxrwx--- 6 zare G-816158 4.0K Jul 19 22:36 ..; -rw-rw---- 1 zare G-816158 960 Jul 19 23:03 alevin.log; drwxrwx--- 2 zare G-816158 4.0K Jul 19 23:03 .; -rw-r",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:913,Testability,Log,Logs,913,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:951,Testability,log,logs,951,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:4207,Testability,log,log,4207,"493] [jointLog] [info] Loading Quasi index; [2018-07-19 22:55:38.494] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 22:55:38.549] [jointLog] [info] done; [2018-07-19 22:55:38.549] [jointLog] [info] Index contained 179 targets. [2018-07-19 22:55:38.385] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 22:55:38.385] [alevinLog] [info] parsing read library format; [2018-07-19 22:55:38.495] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 22:55:38.498] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 22:55:38.499] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 22:55:38.500] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 22:55:38.501] [stderrLog] [info] Computing transcript lengths; [2018-07-19 22:55:38.501] [stderrLog] [info] Waiting to finish loading hash; processed 87 Million fragmentserrLog] [info] Done loading index; hits: 468892, hits per frag: 0.00535907. [2018-07-19 23:03:35.740] [jointLog] [info] Computed 150 rich equivalence classes for further processing; [2018-07-19 23:03:35.740] [jointLog] [info] Counted 412868 total reads in the equivalence classes ; [2018-07-19 23:03:35.741] [jointLog] [warning] Only 412868 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-19 23:03:35.741] [jointLog] [info] Mapping rate = 0.469385%. [2018-07-19 23:03:35.741] [jointLog] [info] finished quantifyLibrary(); [2018-07-19 23:03:35.755] [alevinLog] [info] Starting optimizer. Analyzed 5238 cells (100% of all).; Skipped Barcodes are from High Confidence Region; `$ls -ltrha alevin_output/alevin/`; total 256K; drwxrwx--- 6 zare G-816158 4.0K Jul 19 22:36 ..; -rw-rw---- 1 zare G-816158 960 Jul 19 23:03 alevin.log; drwxrwx--- 2 zare G-816158 4.0K Jul 19 23:03 .; -rw-rw---- 1 zare G-816158 81K Jul 19 23:03 quants_mat_rows.txt; -rw-rw---- 1 zare G-816158 160K Jul 19 23:03 quants_mat.gz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406648841:814,Availability,error,error,814,"Hi @habilzare ,; re: importing binary format: [this](https://combine-lab.github.io/alevin-tutorial/2018/output-format/) tutorial might help more of how to read the binary output. Specifically, if you are familiar with python then [this](https://github.com/k3yavi/vpolo/blob/master/vpolo/alevin/parser.py#L8) function can be used for importing the binary. However, I reckon that alevin hasn't successfully completed. It looks like one of the whitelisted CB ended up having no read at all after deduplicating. We usually assume it should not happen since a whitelisted CB should have at least some count after deduplicating UMIs, which in your case can happen since the mapping rate looks like is surprisingly low `0.469385%` (is this expected ?). . `Skipped Barcodes are from High Confidence Region` is actually an error, again we need more informative and elegant exit from the pipeline once Alevin fails.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406648841
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406648841:878,Deployability,pipeline,pipeline,878,"Hi @habilzare ,; re: importing binary format: [this](https://combine-lab.github.io/alevin-tutorial/2018/output-format/) tutorial might help more of how to read the binary output. Specifically, if you are familiar with python then [this](https://github.com/k3yavi/vpolo/blob/master/vpolo/alevin/parser.py#L8) function can be used for importing the binary. However, I reckon that alevin hasn't successfully completed. It looks like one of the whitelisted CB ended up having no read at all after deduplicating. We usually assume it should not happen since a whitelisted CB should have at least some count after deduplicating UMIs, which in your case can happen since the mapping rate looks like is surprisingly low `0.469385%` (is this expected ?). . `Skipped Barcodes are from High Confidence Region` is actually an error, again we need more informative and elegant exit from the pipeline once Alevin fails.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406648841
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406657183:253,Deployability,pipeline,pipeline,253,"Slight Correction on the above statement ""It looks like one of the whitelisted CB ended up having no read at all after ~deduplicating~ mapping."" We might have to tweak a bit in the current version of Alevin for use cases like yours where we don't wan't pipeline to fail if the whitelisted CB are either w/ less frequency / mapping rate / deduplication rate.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406657183
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406664115:464,Energy Efficiency,reduce,reduce,464,"Yep that should work too, although a couple of minor things, you might wanna use 10 reads since that's the lower bound. Secondly, those reads should be mapped too, I guess copy the 98 length sequence from the transposons's region. Lastly the UMI, if the UMI sequence overlap w/ already present UMI sequence then it can potentially effect the deduplication of cell having more than 10 counts, you might wanna chose a disjoint UMI sequence *not* in your dataset and reduce the count by 1 in the count matrix since if all newly added UMI are same and get mapped to same gene then it will be deduplicated to 1.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406664115
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407266564:263,Availability,error,error,263,"I wrote the '[make.dummy.fastq()](https://bitbucket.org/habilzare/alzheimer/src/master/code/Habil/utilities/make.dummy.fastq.R) function in R, which addressed the issue as planned in above. . For some of the samples, I got the ""umi indexing of jellyfish failing"" error, which I realized from [this](https://github.com/COMBINE-lab/salmon/issues/237) report must be related to shorter than 26 bps reads. I used trimommatic to exclude those short reads, and finally Alevin produced the count matrix in CSV format for me. Thank you Salmon team!. Minor: The output CSV file has an extra comma at the end of each line, which I ignored in my post-processing step.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407266564
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407618154:105,Deployability,pipeline,pipeline,105,@habilzare Glad to hear that it worked out and thanks for fast and useful moderation from default alevin pipeline. We will work on correcting the suggestions made in the next release of Salmon.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407618154
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407618154:175,Deployability,release,release,175,@habilzare Glad to hear that it worked out and thanks for fast and useful moderation from default alevin pipeline. We will work on correcting the suggestions made in the next release of Salmon.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407618154
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-409553247:361,Availability,error,error,361,"Hi, I have the exact same issue, in that it is quite likely that some barcodes will be empty and I don't obtain any results now.; It seems that you (@k3yavi) closed the feature request when you closed this issue. was that your intention? I'll try to get the work around working, but it would be nice if there is a flag we could set in the future to ignore this error when running salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-409553247
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-410325797:634,Deployability,update,update,634,"Hi @patrickvdb , Thanks for pointing this out.; My impression was there were two issues here:; 1. The presence of whitelist CB w/ 0 frequency. (Subject of this issue).; 2. The presence of whitelist CB w/ 0 mapping reads. The solution of the first problem is pretty straight forward and since it was the subject of the issue I thought closing this one and opening a new w/ the second problem would be better thing to do. ; We are in the process of fixing these two issues and my plan was to open and close a new issue w/ the fix but you are right, either this issue should not have been closed or a new should have been created. We'll update this soon, thanks for bringing this to our attention.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-410325797
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411:73,Availability,avail,available,73,"Just a heads up, issue #266 has been added and the solution is currently available in the source build from the develop branch. We will include this to master with the next planned release of Salmon v0.11.3. Thanks again for the useful feedbacks and comments.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411:181,Deployability,release,release,181,"Just a heads up, issue #266 has been added and the solution is currently available in the source build from the develop branch. We will include this to master with the next planned release of Salmon v0.11.3. Thanks again for the useful feedbacks and comments.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411
https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411:236,Usability,feedback,feedbacks,236,"Just a heads up, issue #266 has been added and the solution is currently available in the source build from the develop branch. We will include this to master with the next planned release of Salmon v0.11.3. Thanks again for the useful feedbacks and comments.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411
https://github.com/COMBINE-lab/salmon/issues/254#issuecomment-407465114:17,Performance,cache,cache,17,"No worries. The ""cache"" is one of the most annoying parts of CMake as a build system ;P.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254#issuecomment-407465114
https://github.com/COMBINE-lab/salmon/issues/254#issuecomment-407465438:4,Performance,cache,cache,4,The cache and find_package system have both given me more headaches than they have saved I think.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254#issuecomment-407465438
https://github.com/COMBINE-lab/salmon/issues/255#issuecomment-628760746:274,Integrability,depend,depending,274,"Hi @uros-sipetic,. RSEM _does not_ collapse duplicates. This means that it will return quantification estimates for all of the sequence identical transcripts separately. A common scenario may be that it will split the abundances evenly, but this may not always be the case, depending on e.g. the initialization of the EM algorithm etc. The easiest way to try and compare the estimates as closely as possible would probably be to use the `duplicate_clusters.tsv` file produced by salmon to explicitly collapse (add up) the abundances of the duplicate transcripts from the RSEM quantifications before comparing. As always, we'd be interested to hear if you find anything interesting!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255#issuecomment-628760746
https://github.com/COMBINE-lab/salmon/issues/255#issuecomment-628881630:1153,Availability,error,error,1153,"Here's what I got; For a single sample, analyzed both with RSEM (with STAR aligner) and with Salmon in SA mode with collapsed duplicates, on GRCh38 FASTA and ensembl91 GTF, here are the TPM values for some ~30 transcripts that Salmon collapsed: ; <img width=""642"" alt=""Screen Shot 2020-05-14 at 11 01 51 PM"" src=""https://user-images.githubusercontent.com/16819349/81985764-f4578c00-9636-11ea-9ba9-72360d78418d.png"">. Note: RSEM reported the same TPM values for all duplicate transcripts that Salmon collapsed. ; So in the table above, there's Salmons TPM and RSEM TPMs for that single transcript, and the total TPM when adding all collapsed transcripts. Now, I know that different approaches are used here (alignment with STAR + EM in RSEM, versus Selective Alignment in Salmon), and that some TPM values will be different.; But from based on some of the 'similar' values from this table, I could gather that the situation is just as you described @rob-p, i.e. where the Salmon_TPM and the RSEM_TPM_total columns are in similar values, I assume that these are the transcripts for which both RSEM and Salmon reported similar expressions. EDIT: Added the error column to the attached image",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255#issuecomment-628881630
https://github.com/COMBINE-lab/salmon/issues/256#issuecomment-407874226:283,Availability,down,down,283,"Hi @microsat2018,. If you provide some details about what OS you are running on I may be able to try and create a compatible executable. Are you able to run docker images in your environment? If so, a quicker option may be to use Docker or uDocker (completely in user space) to pull down the Docker image for the latest Salmon from [Docker Hub](https://hub.docker.com/r/combinelab/salmon/tags/). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/256#issuecomment-407874226
https://github.com/COMBINE-lab/salmon/pull/257#issuecomment-408428738:104,Deployability,patch,patch,104,Thanks @patrickvdb! I'm re-basing on this branch because this will be merged into master soon for a new patch release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/257#issuecomment-408428738
https://github.com/COMBINE-lab/salmon/pull/257#issuecomment-408428738:110,Deployability,release,release,110,Thanks @patrickvdb! I'm re-basing on this branch because this will be merged into master soon for a new patch release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/257#issuecomment-408428738
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390:112,Deployability,pipeline,pipeline,112,"Hi @pophipi ,; Thanks for reporting the issue.; It looks like a bug has creeped in while merging the `drop-seq` pipeline to alevin [here](https://github.com/COMBINE-lab/salmon/blob/ad4f74a4e3d7424bcd0ec0c1ec2af300dcbffc44/src/AlevinUtils.cpp#L47-L48).; If it's an urgent requirement you can swap the above two lines by: . ```; umi = read.substr(pt.barcodeLength, pt.umiLength);; return true;; ```. If it's too much trouble to compile from source, we will release a version w/ the hot-fix by today/tomorrow and would update you soon.; Thanks again !. P.S: I was curious how did the `chromium` pipeline went through, since the length requirement of 10x based pipeline is longer and it should break much earlier. The experiment you forwarded above seems to have 25 length bases for CB+UMI sequences. I wonder has any of the Drop-seq guideline changed? I was in the impression it was 12 base CB and 8 base UMI if not, then `--dropseq` flag would not be ideal thing to use since it will just use 20 bases out of 25 present in the fastq files.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390:455,Deployability,release,release,455,"Hi @pophipi ,; Thanks for reporting the issue.; It looks like a bug has creeped in while merging the `drop-seq` pipeline to alevin [here](https://github.com/COMBINE-lab/salmon/blob/ad4f74a4e3d7424bcd0ec0c1ec2af300dcbffc44/src/AlevinUtils.cpp#L47-L48).; If it's an urgent requirement you can swap the above two lines by: . ```; umi = read.substr(pt.barcodeLength, pt.umiLength);; return true;; ```. If it's too much trouble to compile from source, we will release a version w/ the hot-fix by today/tomorrow and would update you soon.; Thanks again !. P.S: I was curious how did the `chromium` pipeline went through, since the length requirement of 10x based pipeline is longer and it should break much earlier. The experiment you forwarded above seems to have 25 length bases for CB+UMI sequences. I wonder has any of the Drop-seq guideline changed? I was in the impression it was 12 base CB and 8 base UMI if not, then `--dropseq` flag would not be ideal thing to use since it will just use 20 bases out of 25 present in the fastq files.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390:516,Deployability,update,update,516,"Hi @pophipi ,; Thanks for reporting the issue.; It looks like a bug has creeped in while merging the `drop-seq` pipeline to alevin [here](https://github.com/COMBINE-lab/salmon/blob/ad4f74a4e3d7424bcd0ec0c1ec2af300dcbffc44/src/AlevinUtils.cpp#L47-L48).; If it's an urgent requirement you can swap the above two lines by: . ```; umi = read.substr(pt.barcodeLength, pt.umiLength);; return true;; ```. If it's too much trouble to compile from source, we will release a version w/ the hot-fix by today/tomorrow and would update you soon.; Thanks again !. P.S: I was curious how did the `chromium` pipeline went through, since the length requirement of 10x based pipeline is longer and it should break much earlier. The experiment you forwarded above seems to have 25 length bases for CB+UMI sequences. I wonder has any of the Drop-seq guideline changed? I was in the impression it was 12 base CB and 8 base UMI if not, then `--dropseq` flag would not be ideal thing to use since it will just use 20 bases out of 25 present in the fastq files.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390:592,Deployability,pipeline,pipeline,592,"Hi @pophipi ,; Thanks for reporting the issue.; It looks like a bug has creeped in while merging the `drop-seq` pipeline to alevin [here](https://github.com/COMBINE-lab/salmon/blob/ad4f74a4e3d7424bcd0ec0c1ec2af300dcbffc44/src/AlevinUtils.cpp#L47-L48).; If it's an urgent requirement you can swap the above two lines by: . ```; umi = read.substr(pt.barcodeLength, pt.umiLength);; return true;; ```. If it's too much trouble to compile from source, we will release a version w/ the hot-fix by today/tomorrow and would update you soon.; Thanks again !. P.S: I was curious how did the `chromium` pipeline went through, since the length requirement of 10x based pipeline is longer and it should break much earlier. The experiment you forwarded above seems to have 25 length bases for CB+UMI sequences. I wonder has any of the Drop-seq guideline changed? I was in the impression it was 12 base CB and 8 base UMI if not, then `--dropseq` flag would not be ideal thing to use since it will just use 20 bases out of 25 present in the fastq files.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390:657,Deployability,pipeline,pipeline,657,"Hi @pophipi ,; Thanks for reporting the issue.; It looks like a bug has creeped in while merging the `drop-seq` pipeline to alevin [here](https://github.com/COMBINE-lab/salmon/blob/ad4f74a4e3d7424bcd0ec0c1ec2af300dcbffc44/src/AlevinUtils.cpp#L47-L48).; If it's an urgent requirement you can swap the above two lines by: . ```; umi = read.substr(pt.barcodeLength, pt.umiLength);; return true;; ```. If it's too much trouble to compile from source, we will release a version w/ the hot-fix by today/tomorrow and would update you soon.; Thanks again !. P.S: I was curious how did the `chromium` pipeline went through, since the length requirement of 10x based pipeline is longer and it should break much earlier. The experiment you forwarded above seems to have 25 length bases for CB+UMI sequences. I wonder has any of the Drop-seq guideline changed? I was in the impression it was 12 base CB and 8 base UMI if not, then `--dropseq` flag would not be ideal thing to use since it will just use 20 bases out of 25 present in the fastq files.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390:830,Usability,guid,guideline,830,"Hi @pophipi ,; Thanks for reporting the issue.; It looks like a bug has creeped in while merging the `drop-seq` pipeline to alevin [here](https://github.com/COMBINE-lab/salmon/blob/ad4f74a4e3d7424bcd0ec0c1ec2af300dcbffc44/src/AlevinUtils.cpp#L47-L48).; If it's an urgent requirement you can swap the above two lines by: . ```; umi = read.substr(pt.barcodeLength, pt.umiLength);; return true;; ```. If it's too much trouble to compile from source, we will release a version w/ the hot-fix by today/tomorrow and would update you soon.; Thanks again !. P.S: I was curious how did the `chromium` pipeline went through, since the length requirement of 10x based pipeline is longer and it should break much earlier. The experiment you forwarded above seems to have 25 length bases for CB+UMI sequences. I wonder has any of the Drop-seq guideline changed? I was in the impression it was 12 base CB and 8 base UMI if not, then `--dropseq` flag would not be ideal thing to use since it will just use 20 bases out of 25 present in the fastq files.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408168390
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408179330:396,Deployability,pipeline,pipeline,396,"hi @k3yavi,. Thanks for your help! I'm glad it's a quick fix. As for the dataset, I am not sure why the read length is 25bp. The [paper I pulled it from](https://www.ncbi.nlm.nih.gov/pubmed/29545397) stated that they used the standard DropSeq protocol and did not seem to mention and changes in CB and UMI length. In the case that they did change those lengths, what options can I use to set the pipeline?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408179330
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408179330:243,Integrability,protocol,protocol,243,"hi @k3yavi,. Thanks for your help! I'm glad it's a quick fix. As for the dataset, I am not sure why the read length is 25bp. The [paper I pulled it from](https://www.ncbi.nlm.nih.gov/pubmed/29545397) stated that they used the standard DropSeq protocol and did not seem to mention and changes in CB and UMI length. In the case that they did change those lengths, what options can I use to set the pipeline?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408179330
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408191888:323,Testability,test,testing,323,"We might have to go through the paper and the dropseq guidelines to check what really changed.; You might wanna check https://github.com/COMBINE-lab/salmon/issues/247, we actually have a hidden option to do customized umi/CB length options, however this goes into a little more unexplored territory and requires a bit more testing. We'd appreciate your feedback if you happen to run this mode.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408191888
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408191888:54,Usability,guid,guidelines,54,"We might have to go through the paper and the dropseq guidelines to check what really changed.; You might wanna check https://github.com/COMBINE-lab/salmon/issues/247, we actually have a hidden option to do customized umi/CB length options, however this goes into a little more unexplored territory and requires a bit more testing. We'd appreciate your feedback if you happen to run this mode.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408191888
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408191888:353,Usability,feedback,feedback,353,"We might have to go through the paper and the dropseq guidelines to check what really changed.; You might wanna check https://github.com/COMBINE-lab/salmon/issues/247, we actually have a hidden option to do customized umi/CB length options, however this goes into a little more unexplored territory and requires a bit more testing. We'd appreciate your feedback if you happen to run this mode.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408191888
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408565258:23,Deployability,release,released,23,"hey @pophipi , we have released `v0.11.1` with the fix.; Thanks for reporting this issue. Also, I tried running the `dropseq` mode for Alevin w/ the data you forwarded but it looks like the mapping rate is too low. I am not sure how to interpret the data, but just for sanity `Alevin` mapping rate is ~70% in the original Macosko et. al. paper. We will keep looking for the updates in DropSeq pipeline feel free to reopen this issue or create a new one regarding the low mapping rate if you find out the right location of UMI and CB in the dataset or trouble using #247 .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408565258
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408565258:374,Deployability,update,updates,374,"hey @pophipi , we have released `v0.11.1` with the fix.; Thanks for reporting this issue. Also, I tried running the `dropseq` mode for Alevin w/ the data you forwarded but it looks like the mapping rate is too low. I am not sure how to interpret the data, but just for sanity `Alevin` mapping rate is ~70% in the original Macosko et. al. paper. We will keep looking for the updates in DropSeq pipeline feel free to reopen this issue or create a new one regarding the low mapping rate if you find out the right location of UMI and CB in the dataset or trouble using #247 .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408565258
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408565258:393,Deployability,pipeline,pipeline,393,"hey @pophipi , we have released `v0.11.1` with the fix.; Thanks for reporting this issue. Also, I tried running the `dropseq` mode for Alevin w/ the data you forwarded but it looks like the mapping rate is too low. I am not sure how to interpret the data, but just for sanity `Alevin` mapping rate is ~70% in the original Macosko et. al. paper. We will keep looking for the updates in DropSeq pipeline feel free to reopen this issue or create a new one regarding the low mapping rate if you find out the right location of UMI and CB in the dataset or trouble using #247 .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-408565258
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-415101431:81,Integrability,protocol,protocol,81,"@k3yavi To follow up on this dataset:; The reads were generated using a modified protocol with a 9bp barcode followed by an 8bp UMI. I used the custom length mode to align this data and alignment rate went up to about 45%. I tried the alignment using DropSeq Tools and STAR and got similar alignment rates, so I think the custom length alignment is working properly. I may try using some other reference databases instead of GRCh38.p12 to see if alignment improves. Otherwise it may just be an issue regarding the dataset itself.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-415101431
https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-415102037:80,Usability,feedback,feedbacks,80,"Glad to hear that, let us know if you need any other help or have suggestions / feedbacks to improve Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258#issuecomment-415102037
https://github.com/COMBINE-lab/salmon/issues/259#issuecomment-408574511:159,Deployability,configurat,configuration,159,"Hi @lparsons,. Thanks for bringing this to our attention. There are just too many different places to remember to bump the version. This one was in the Python configuration script for the ReadTheDocs pages. Anyway, I've finally properly scripted the ""version_bump"" process, so this should happen automatically in the future (and is fixes as of 0.11.1). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/259#issuecomment-408574511
https://github.com/COMBINE-lab/salmon/issues/259#issuecomment-408574511:159,Modifiability,config,configuration,159,"Hi @lparsons,. Thanks for bringing this to our attention. There are just too many different places to remember to bump the version. This one was in the Python configuration script for the ReadTheDocs pages. Anyway, I've finally properly scripted the ""version_bump"" process, so this should happen automatically in the future (and is fixes as of 0.11.1). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/259#issuecomment-408574511
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478288:106,Deployability,release,releases,106,I want the salmon binary package for MacOSX too like bowtie2 does. https://github.com/BenLangmead/bowtie2/releases; > bowtie2-2.3.4.1-linux-x86_64.zip; > bowtie2-2.3.4.1-macos-x86_64.zip,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478288
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640:251,Availability,down,down,251,"Hi @junaruga , Although the above attached binary has been mistakenly named as for linux it should work with MacOsx Sierra. The current recommended way of installing salmon is through bioconda or docker, but unfortunately currently bioconda system is down for MacOsx releases. You can try using docker if the above binary doesn't works for you. Let us know how it goes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640:155,Deployability,install,installing,155,"Hi @junaruga , Although the above attached binary has been mistakenly named as for linux it should work with MacOsx Sierra. The current recommended way of installing salmon is through bioconda or docker, but unfortunately currently bioconda system is down for MacOsx releases. You can try using docker if the above binary doesn't works for you. Let us know how it goes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640:267,Deployability,release,releases,267,"Hi @junaruga , Although the above attached binary has been mistakenly named as for linux it should work with MacOsx Sierra. The current recommended way of installing salmon is through bioconda or docker, but unfortunately currently bioconda system is down for MacOsx releases. You can try using docker if the above binary doesn't works for you. Let us know how it goes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:92,Availability,down,downloaded,92,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:163,Availability,down,downloaded,163,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:257,Availability,down,download,257,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:399,Availability,down,download,399,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:195,Deployability,release,release,195,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:248,Deployability,release,releases,248,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:390,Deployability,release,releases,390,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:620,Deployability,install,install,620,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036:134,Availability,error,error,134,"Cool, glad to hear that the above binary works for you. The binary on the release page was for linux that's why you were getting that error. As we progress, I'll keep updating the version for Macosx here, until the conda build is fixed for Osx. Also I've update the name of the file above just to avoid the confusion, thanks for the tip .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036:74,Deployability,release,release,74,"Cool, glad to hear that the above binary works for you. The binary on the release page was for linux that's why you were getting that error. As we progress, I'll keep updating the version for Macosx here, until the conda build is fixed for Osx. Also I've update the name of the file above just to avoid the confusion, thanks for the tip .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036:255,Deployability,update,update,255,"Cool, glad to hear that the above binary works for you. The binary on the release page was for linux that's why you were getting that error. As we progress, I'll keep updating the version for Macosx here, until the conda build is fixed for Osx. Also I've update the name of the file above just to avoid the confusion, thanks for the tip .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036
https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036:297,Safety,avoid,avoid,297,"Cool, glad to hear that the above binary works for you. The binary on the release page was for linux that's why you were getting that error. As we progress, I'll keep updating the version for Macosx here, until the conda build is fixed for Osx. Also I've update the name of the file above just to avoid the confusion, thanks for the tip .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:6339,Availability,fault,fault,6339,y fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.80% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.72% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.64% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.84% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.967] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.978] [jointLog] [info] Thread saw mini-batch with a maximum of 1.76% zero probability fragments; [2018-07-27 16:51:48.009] [jointLog] [info] Thread saw mini-batch with a maximum of 1.64% zero probability fragments; [2018-07-27 16:51:48.042] [jointLog] [info] Thread saw mini-batch with a maximum of 1.66% zero probability fragments; [2018-07-27 16:51:48.047] [jointLog] [info] Thread saw mini-batch with a maximum of 1.86% zero probability fragments; [2018-07-27 16:51:48.088] [jointLog] [info] Thread saw mini-batch with a maximum of 1.74% zero probability fragments; [2018-07-27 16:51:48.089] [jointLog] [info] Thread saw mini-batch with a maximum of 1.84% zero probability fragments; [2018-07-27 16:51:48.118] [jointLog] [info] Thread saw mini-batch with a maximum of 1.90% zero probability fragments. [2018-07-27 16:51:48.473] [jointLog] [info] Computed 457276 rich equivalence classes for further processing; [2018-07-27 16:51:48.473] [jointLog] [info] Counted 179109410 total reads in the equivalence classes . [2018-07-27 16:51:48.491] [jointLog] [info] Mapping rate = 74.748%. [2018-07-27 16:51:48.491] [jointLog] [info] finished quantifyLibrary(); [2018-07-27 16:51:48.507] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped). ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1254,Performance,Load,Loading,1254,"## salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R2_001.fastq.gz }; ### [ threads ] => { 32 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1319,Performance,Load,Loading,1319,"command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R2_001.fastq.gz }; ### [ threads ] => { 32 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1392,Performance,Load,Loading,1392,"riptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R2_001.fastq.gz }; ### [ threads ] => { 32 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [joint",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1460,Performance,Load,Loading,1460,"/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R2_001.fastq.gz }; ### [ threads ] => { 32 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probabi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1531,Performance,Load,Loading,1531,"_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R2_001.fastq.gz }; ### [ threads ] => { 32 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1790,Performance,load,loading,1790,"sh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.74% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.76% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-bat",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1854,Performance,load,loading,1854,"cs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.74% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.76% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.72% zero probability fragments; [2018-07-27 16:5",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:6315,Performance,optimiz,optimizer,6315,y fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.80% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.72% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.64% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.84% zero probability fragments; [2018-07-27 16:51:47.948] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.967] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.978] [jointLog] [info] Thread saw mini-batch with a maximum of 1.76% zero probability fragments; [2018-07-27 16:51:48.009] [jointLog] [info] Thread saw mini-batch with a maximum of 1.64% zero probability fragments; [2018-07-27 16:51:48.042] [jointLog] [info] Thread saw mini-batch with a maximum of 1.66% zero probability fragments; [2018-07-27 16:51:48.047] [jointLog] [info] Thread saw mini-batch with a maximum of 1.86% zero probability fragments; [2018-07-27 16:51:48.088] [jointLog] [info] Thread saw mini-batch with a maximum of 1.74% zero probability fragments; [2018-07-27 16:51:48.089] [jointLog] [info] Thread saw mini-batch with a maximum of 1.84% zero probability fragments; [2018-07-27 16:51:48.118] [jointLog] [info] Thread saw mini-batch with a maximum of 1.90% zero probability fragments. [2018-07-27 16:51:48.473] [jointLog] [info] Computed 457276 rich equivalence classes for further processing; [2018-07-27 16:51:48.473] [jointLog] [info] Counted 179109410 total reads in the equivalence classes . [2018-07-27 16:51:48.491] [jointLog] [info] Mapping rate = 74.748%. [2018-07-27 16:51:48.491] [jointLog] [info] finished quantifyLibrary(); [2018-07-27 16:51:48.507] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped). ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:2053,Safety,detect,detected,2053," ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.74% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.76% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.72% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.74% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probabi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:1798,Security,hash,hash,1798,"sh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. processed 239500000 fragmentsintLog] [info] Automatically detected most likely library type as ISR; hits: 651420499, hits per frag: 2.72282[2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.70% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.68% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.74% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-batch with a maximum of 1.76% zero probability fragments; [2018-07-27 16:51:47.947] [jointLog] [info] Thread saw mini-bat",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:822,Testability,Log,Logs,822,"Sorry, I shouldn't have used that sample as an example. That's just the first of many, and there was some issue causing a super low mapping rate. Here is another example:. ```; Processing sample RHM5942; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R2_001.fastq.gz }; ### [ threads ] => { 32 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. proces",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898:933,Testability,log,logs,933,"Sorry, I shouldn't have used that sample as an example. That's just the first of many, and there was some issue causing a super low mapping rate. Here is another example:. ```; Processing sample RHM5942; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/RHM5942/RHM5942_R2_001.fastq.gz }; ### [ threads ] => { 32 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/RHM5942/logs; [2018-07-27 16:24:55.658] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-27 16:24:55.658] [jointLog] [info] parsing read library format; [2018-07-27 16:24:55.658] [jointLog] [info] There is 1 library.; [2018-07-27 16:25:01.242] [jointLog] [info] Loading Quasi index; [2018-07-27 16:25:01.242] [jointLog] [info] Loading 32-bit quasi index; [2018-07-27 16:25:01.243] [stderrLog] [info] Loading Suffix Array ; [2018-07-27 16:25:42.630] [stderrLog] [info] Loading Transcript Info ; [2018-07-27 16:25:45.683] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-27 16:25:47.834] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-27 16:25:48.128] [stderrLog] [info] Computing transcript lengths; [2018-07-27 16:25:48.200] [stderrLog] [info] Waiting to finish loading hash; [2018-07-27 16:25:48.331] [stderrLog] [info] Done loading index; [2018-07-27 16:25:48.331] [jointLog] [info] done; [2018-07-27 16:25:48.331] [jointLog] [info] Index contained 203027 targets. proces",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409427898
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409428971:119,Availability,error,error,119,"Ok, so this mapping rate looks perfectly normal. Can you share some of these reads so I can see if I can reproduce the error on my end? Also, do you see this issue when / if you use the pre-compiled binary included on the GitHub release page (i.e. just to make sure the problem isn't specific to the bioconda executable)?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409428971
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409428971:229,Deployability,release,release,229,"Ok, so this mapping rate looks perfectly normal. Can you share some of these reads so I can see if I can reproduce the error on my end? Also, do you see this issue when / if you use the pre-compiled binary included on the GitHub release page (i.e. just to make sure the problem isn't specific to the bioconda executable)?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409428971
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436618:117,Availability,error,error,117,"I am having trouble with this. I'm at the cmake step and don't really know what I'm doing wrong but keep getting the error:. `CMake Error: The source directory ""/home/csijcs/salmon-0.11.1-linux_x86_64/build"" does not appear to contain CMakeLists.txt`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436618
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436618:132,Availability,Error,Error,132,"I am having trouble with this. I'm at the cmake step and don't really know what I'm doing wrong but keep getting the error:. `CMake Error: The source directory ""/home/csijcs/salmon-0.11.1-linux_x86_64/build"" does not appear to contain CMakeLists.txt`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436618
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938:198,Availability,down,downloading,198,"It looks like you are issuing . `$cmake .` . rather than . `$cmake ..`. when trying to perform the cmake step. If you could build from source, that would be great. However, I was suggesting you try downloading [this](; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.1/salmon-0.11.1-linux_x86_64.tar.gz) pre-compiled linux binary and running that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938:266,Availability,down,download,266,"It looks like you are issuing . `$cmake .` . rather than . `$cmake ..`. when trying to perform the cmake step. If you could build from source, that would be great. However, I was suggesting you try downloading [this](; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.1/salmon-0.11.1-linux_x86_64.tar.gz) pre-compiled linux binary and running that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938:257,Deployability,release,releases,257,"It looks like you are issuing . `$cmake .` . rather than . `$cmake ..`. when trying to perform the cmake step. If you could build from source, that would be great. However, I was suggesting you try downloading [this](; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.1/salmon-0.11.1-linux_x86_64.tar.gz) pre-compiled linux binary and running that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938:87,Performance,perform,perform,87,"It looks like you are issuing . `$cmake .` . rather than . `$cmake ..`. when trying to perform the cmake step. If you could build from source, that would be great. However, I was suggesting you try downloading [this](; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.1/salmon-0.11.1-linux_x86_64.tar.gz) pre-compiled linux binary and running that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409439396:21,Integrability,rout,route,21,Appears to work that route. Thanks!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409439396
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409779737:75,Availability,error,error,75,"Sure thing, thanks for your help. It's entirely possible the issue is user error, rather than something wrong with the bioconda build. I had to install and run in a py3 env, since our server defaults to py2. Not sure if that's related, but I've used successfully in the past one a server with py3 as the default.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409779737
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409779737:144,Deployability,install,install,144,"Sure thing, thanks for your help. It's entirely possible the issue is user error, rather than something wrong with the bioconda build. I had to install and run in a py3 env, since our server defaults to py2. Not sure if that's related, but I've used successfully in the past one a server with py3 as the default.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409779737
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634:98,Availability,error,error,98,"Hi, I am running salmon-1.9.0, but in quant bulk mode for rat from *.bam files it stops with this error `Segmentation fault (core dumped)`. --threads 10 and 10 cpu (each core is 5.3 GB) are allocated for this job. Thanks for your solution(s) in advance!. Hi again, I found this issue is related to multiple bam input files which I've done by -a parameter with a (space-separated) list of these files. It is fixed now if just run salmon per file individually.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634:118,Availability,fault,fault,118,"Hi, I am running salmon-1.9.0, but in quant bulk mode for rat from *.bam files it stops with this error `Segmentation fault (core dumped)`. --threads 10 and 10 cpu (each core is 5.3 GB) are allocated for this job. Thanks for your solution(s) in advance!. Hi again, I found this issue is related to multiple bam input files which I've done by -a parameter with a (space-separated) list of these files. It is fixed now if just run salmon per file individually.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634:190,Energy Efficiency,allocate,allocated,190,"Hi, I am running salmon-1.9.0, but in quant bulk mode for rat from *.bam files it stops with this error `Segmentation fault (core dumped)`. --threads 10 and 10 cpu (each core is 5.3 GB) are allocated for this job. Thanks for your solution(s) in advance!. Hi again, I found this issue is related to multiple bam input files which I've done by -a parameter with a (space-separated) list of these files. It is fixed now if just run salmon per file individually.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-2411953965:12,Availability,error,error,12,"I have this error too. ```; root@10a5cddfd8c6:/mnt/experiments/Bebee-2015-Esrps/data# salmon quant -p 20 -t /mnt/genome/GRCm39.primary_assembly.genome.fa --quiet -l A \; 5976_Aligned.sortedByCoord.out.bam bam/SRR1725977_> -a bam/SRR1725976_Aligned.sortedByCoord.out.bam bam/SRR1725977_Aligned.sortedByCoord.out.bam bam/SRR1725983_Aligned.sortedByCoord.out.bam bam/SRR1725984_Aligned.sortedByCoord.out.bam \; > -o salmon_bam/; Version Server Response: Not Found; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""bam/SRR1725976_Aligned.sortedByCoord.out.bam"", fasta = ""/mnt/genome/GRCm39.primary_assembly.genome.fa"" . . .done. processed 83000000 reads in current roundSegmentation fault; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-2411953965
https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-2411953965:844,Availability,fault,fault,844,"I have this error too. ```; root@10a5cddfd8c6:/mnt/experiments/Bebee-2015-Esrps/data# salmon quant -p 20 -t /mnt/genome/GRCm39.primary_assembly.genome.fa --quiet -l A \; 5976_Aligned.sortedByCoord.out.bam bam/SRR1725977_> -a bam/SRR1725976_Aligned.sortedByCoord.out.bam bam/SRR1725977_Aligned.sortedByCoord.out.bam bam/SRR1725983_Aligned.sortedByCoord.out.bam bam/SRR1725984_Aligned.sortedByCoord.out.bam \; > -o salmon_bam/; Version Server Response: Not Found; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""bam/SRR1725976_Aligned.sortedByCoord.out.bam"", fasta = ""/mnt/genome/GRCm39.primary_assembly.genome.fa"" . . .done. processed 83000000 reads in current roundSegmentation fault; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-2411953965
https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345:77,Availability,avail,available,77,"Hi @rbenel,. This message is just salmon letting you know a newer version is available. The installed version should function perfectly fine. If you really want to avoid the message, you can pass `--no-version-check` *before* the salmon command; e.g.:. ` salmon --no-version-check index ...`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345
https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345:92,Deployability,install,installed,92,"Hi @rbenel,. This message is just salmon letting you know a newer version is available. The installed version should function perfectly fine. If you really want to avoid the message, you can pass `--no-version-check` *before* the salmon command; e.g.:. ` salmon --no-version-check index ...`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345
https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345:18,Integrability,message,message,18,"Hi @rbenel,. This message is just salmon letting you know a newer version is available. The installed version should function perfectly fine. If you really want to avoid the message, you can pass `--no-version-check` *before* the salmon command; e.g.:. ` salmon --no-version-check index ...`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345
https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345:174,Integrability,message,message,174,"Hi @rbenel,. This message is just salmon letting you know a newer version is available. The installed version should function perfectly fine. If you really want to avoid the message, you can pass `--no-version-check` *before* the salmon command; e.g.:. ` salmon --no-version-check index ...`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345
https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345:164,Safety,avoid,avoid,164,"Hi @rbenel,. This message is just salmon letting you know a newer version is available. The installed version should function perfectly fine. If you really want to avoid the message, you can pass `--no-version-check` *before* the salmon command; e.g.:. ` salmon --no-version-check index ...`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345
https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722:433,Availability,down,download,433,"Hi,. Juugii, the problem seems to be stemming from the fact that, although you are using clang, you don't have lib++, or the development headers it provides installed. Thus, clang is failing to find the basic c++ library includes that it needs. The easiest way to get salmon is to install the latest version for Linux via Bioconda, or to use the docker image of the latest release (from dockethub) `combinelab/salmon:latest`, or, to download the pre-compiled Linux binary from the release page. If you really wish to compile from source, you could try installing libc++ and the development directories or, perhaps more easily, switching your compiler to GCC.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722
https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722:157,Deployability,install,installed,157,"Hi,. Juugii, the problem seems to be stemming from the fact that, although you are using clang, you don't have lib++, or the development headers it provides installed. Thus, clang is failing to find the basic c++ library includes that it needs. The easiest way to get salmon is to install the latest version for Linux via Bioconda, or to use the docker image of the latest release (from dockethub) `combinelab/salmon:latest`, or, to download the pre-compiled Linux binary from the release page. If you really wish to compile from source, you could try installing libc++ and the development directories or, perhaps more easily, switching your compiler to GCC.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722
https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722:281,Deployability,install,install,281,"Hi,. Juugii, the problem seems to be stemming from the fact that, although you are using clang, you don't have lib++, or the development headers it provides installed. Thus, clang is failing to find the basic c++ library includes that it needs. The easiest way to get salmon is to install the latest version for Linux via Bioconda, or to use the docker image of the latest release (from dockethub) `combinelab/salmon:latest`, or, to download the pre-compiled Linux binary from the release page. If you really wish to compile from source, you could try installing libc++ and the development directories or, perhaps more easily, switching your compiler to GCC.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722
https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722:373,Deployability,release,release,373,"Hi,. Juugii, the problem seems to be stemming from the fact that, although you are using clang, you don't have lib++, or the development headers it provides installed. Thus, clang is failing to find the basic c++ library includes that it needs. The easiest way to get salmon is to install the latest version for Linux via Bioconda, or to use the docker image of the latest release (from dockethub) `combinelab/salmon:latest`, or, to download the pre-compiled Linux binary from the release page. If you really wish to compile from source, you could try installing libc++ and the development directories or, perhaps more easily, switching your compiler to GCC.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722
https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722:481,Deployability,release,release,481,"Hi,. Juugii, the problem seems to be stemming from the fact that, although you are using clang, you don't have lib++, or the development headers it provides installed. Thus, clang is failing to find the basic c++ library includes that it needs. The easiest way to get salmon is to install the latest version for Linux via Bioconda, or to use the docker image of the latest release (from dockethub) `combinelab/salmon:latest`, or, to download the pre-compiled Linux binary from the release page. If you really wish to compile from source, you could try installing libc++ and the development directories or, perhaps more easily, switching your compiler to GCC.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722
https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722:552,Deployability,install,installing,552,"Hi,. Juugii, the problem seems to be stemming from the fact that, although you are using clang, you don't have lib++, or the development headers it provides installed. Thus, clang is failing to find the basic c++ library includes that it needs. The easiest way to get salmon is to install the latest version for Linux via Bioconda, or to use the docker image of the latest release (from dockethub) `combinelab/salmon:latest`, or, to download the pre-compiled Linux binary from the release page. If you really wish to compile from source, you could try installing libc++ and the development directories or, perhaps more easily, switching your compiler to GCC.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722
https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410243577:251,Deployability,install,install,251,"Hi rob,; Thanks for the very fast and detailed answer. It is not trivial to use a recent GCC on CentOS 7, I was trying to work around with clang. I'll try to add libc++.; I have some issues with salmon-0.11.1 on both precompiled binaries or bionconda install, that's why I. I'll post as a separate issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410243577
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410255823:352,Safety,avoid,avoid,352,"Dear @juugii,. Thanks for reporting these. Regarding . (1) : Yes, it is possible to skip the version check. Simply place `--no-version-check` before any command. For example:. ```; salmon --no-version-check index <... parameters for indexing>; ```. and . ```; salmon --no-version-check quant <... parameters for quantification>; ```; This will let you avoid the network timeout. Regarding issue (2), it's difficult to say what's happening without seeing the data. I'm looping in @k3yavi to help take a look into this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410255823
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410255823:370,Safety,timeout,timeout,370,"Dear @juugii,. Thanks for reporting these. Regarding . (1) : Yes, it is possible to skip the version check. Simply place `--no-version-check` before any command. For example:. ```; salmon --no-version-check index <... parameters for indexing>; ```. and . ```; salmon --no-version-check quant <... parameters for quantification>; ```; This will let you avoid the network timeout. Regarding issue (2), it's difficult to say what's happening without seeing the data. I'm looping in @k3yavi to help take a look into this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410255823
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410255823:108,Usability,Simpl,Simply,108,"Dear @juugii,. Thanks for reporting these. Regarding . (1) : Yes, it is possible to skip the version check. Simply place `--no-version-check` before any command. For example:. ```; salmon --no-version-check index <... parameters for indexing>; ```. and . ```; salmon --no-version-check quant <... parameters for quantification>; ```; This will let you avoid the network timeout. Regarding issue (2), it's difficult to say what's happening without seeing the data. I'm looping in @k3yavi to help take a look into this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410255823
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410321746:154,Availability,error,error,154,"Hi @juugii , it looks like you are using 10x data and you might need `--chromium` flag to tell alevin the type of datasets. Although it should have given error message much before starting reading the CB. I'll look into this but can you please confirm if you have given the flag to alevin or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410321746
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410321746:160,Integrability,message,message,160,"Hi @juugii , it looks like you are using 10x data and you might need `--chromium` flag to tell alevin the type of datasets. Although it should have given error message much before starting reading the CB. I'll look into this but can you please confirm if you have given the flag to alevin or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410321746
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:283,Availability,down,downloads,283,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:345,Availability,down,downloads,345,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:680,Availability,down,downloads,680,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:762,Availability,down,downloads,762,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:1193,Availability,error,error,1193,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:1371,Availability,error,error,1371,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:457,Testability,Log,Logs,457,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:495,Testability,log,logs,495,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801:80,Availability,error,error,80,"I am assuming you gave the `--chromium` to `pbmc_4k` data too and it's throwing error, since the above log doesn't seems to have it. I am puzzled because it should have complained much before starting reading the fastq. Can you please try the following command: ; ```; salmon alevin -p 10 -lISR --chromium --no-version-check -1 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801:337,Availability,down,downloads,337,"I am assuming you gave the `--chromium` to `pbmc_4k` data too and it's throwing error, since the above log doesn't seems to have it. I am puzzled because it should have complained much before starting reading the fastq. Can you please try the following command: ; ```; salmon alevin -p 10 -lISR --chromium --no-version-check -1 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801:398,Availability,down,downloads,398,"I am assuming you gave the `--chromium` to `pbmc_4k` data too and it's throwing error, since the above log doesn't seems to have it. I am puzzled because it should have complained much before starting reading the fastq. Can you please try the following command: ; ```; salmon alevin -p 10 -lISR --chromium --no-version-check -1 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801:103,Testability,log,log,103,"I am assuming you gave the `--chromium` to `pbmc_4k` data too and it's throwing error, since the above log doesn't seems to have it. I am puzzled because it should have complained much before starting reading the fastq. Can you please try the following command: ; ```; salmon alevin -p 10 -lISR --chromium --no-version-check -1 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030:90,Availability,error,error,90,"Sorry if I wasn't clear. I did try with and without the --chromium; option, with the same error. I just have try the exact command you provided (including the --chromium; flag), with option in the same order. The command log is then:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. Now it seems to work. I'll tell you if the whole alignment is; successfull when it will end. Note that when I use the --chromium flag earlier in the command, ie:. salmon --no-version-check --chromium alevin -p 10 -lISR -1 [...]. The log contains:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ ] => { alevin }; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030:439,Availability,down,downloads,439,"Sorry if I wasn't clear. I did try with and without the --chromium; option, with the same error. I just have try the exact command you provided (including the --chromium; flag), with option in the same order. The command log is then:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. Now it seems to work. I'll tell you if the whole alignment is; successfull when it will end. Note that when I use the --chromium flag earlier in the command, ie:. salmon --no-version-check --chromium alevin -p 10 -lISR -1 [...]. The log contains:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ ] => { alevin }; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030:521,Availability,down,downloads,521,"Sorry if I wasn't clear. I did try with and without the --chromium; option, with the same error. I just have try the exact command you provided (including the --chromium; flag), with option in the same order. The command log is then:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. Now it seems to work. I'll tell you if the whole alignment is; successfull when it will end. Note that when I use the --chromium flag earlier in the command, ie:. salmon --no-version-check --chromium alevin -p 10 -lISR -1 [...]. The log contains:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ ] => { alevin }; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030:221,Testability,log,log,221,"Sorry if I wasn't clear. I did try with and without the --chromium; option, with the same error. I just have try the exact command you provided (including the --chromium; flag), with option in the same order. The command log is then:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. Now it seems to work. I'll tell you if the whole alignment is; successfull when it will end. Note that when I use the --chromium flag earlier in the command, ie:. salmon --no-version-check --chromium alevin -p 10 -lISR -1 [...]. The log contains:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ ] => { alevin }; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030:920,Testability,log,log,920,"Sorry if I wasn't clear. I did try with and without the --chromium; option, with the same error. I just have try the exact command you provided (including the --chromium; flag), with option in the same order. The command log is then:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. Now it seems to work. I'll tell you if the whole alignment is; successfull when it will end. Note that when I use the --chromium flag earlier in the command, ie:. salmon --no-version-check --chromium alevin -p 10 -lISR -1 [...]. The log contains:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ ] => { alevin }; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030:18,Usability,clear,clear,18,"Sorry if I wasn't clear. I did try with and without the --chromium; option, with the same error. I just have try the exact command you provided (including the --chromium; flag), with option in the same order. The command log is then:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. Now it seems to work. I'll tell you if the whole alignment is; successfull when it will end. Note that when I use the --chromium flag earlier in the command, ie:. salmon --no-version-check --chromium alevin -p 10 -lISR -1 [...]. The log contains:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ ] => { alevin }; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209:44,Availability,error,error,44,"I realize my mistake, I was confused by the error message.; Pseudoaligment seems to work now. [...]; [2018-08-03 20:13:23.083] [jointLog] [info] Computed 312565 rich; equivalence classes for further processing; [2018-08-03 20:13:23.083] [jointLog] [info] Counted 120065952 total; reads in the equivalence classes; [2018-08-03 20:13:23.084] [jointLog] [warning] Found 9775 reads with `N`; in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-03 20:13:23.084] [jointLog] [info] Mapping rate = 63.2442%. [2018-08-03 20:13:23.084] [jointLog] [info] finished quantifyLibrary(); [2018-08-03 20:13:26.208] [alevinLog] [info] Starting optimizer. ERROR: Txp to Gene Map not found for 203027 transcripts. Exiting(salmon). I just have a problem with my tx2gene file. Here is the head of my file:. ENST00000013125	MAP4K5; ENST00000215368	EFNA2; ENST00000200453	PPP1R15A; ENST00000202028	EPB41L1; ENST00000204679	GNPTG; ENST00000175506	ASNS; ENST00000215574	CDC34; ENST00000167106	VASH1; ENST00000074304	INPP4A; ENST00000055077	RFC2. The transcript ID is probably not consistent with the one from the; alevin output. However, I used to perform some pseudo-alignments using; salmon on bulk RNAseq with the same transcriptome references and the; same tx2gene file that I used here (postprocessed using R) and it work.; What could be wrong here? Could you provide me with an example of the; tx2gene file needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209:691,Availability,ERROR,ERROR,691,"I realize my mistake, I was confused by the error message.; Pseudoaligment seems to work now. [...]; [2018-08-03 20:13:23.083] [jointLog] [info] Computed 312565 rich; equivalence classes for further processing; [2018-08-03 20:13:23.083] [jointLog] [info] Counted 120065952 total; reads in the equivalence classes; [2018-08-03 20:13:23.084] [jointLog] [warning] Found 9775 reads with `N`; in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-03 20:13:23.084] [jointLog] [info] Mapping rate = 63.2442%. [2018-08-03 20:13:23.084] [jointLog] [info] finished quantifyLibrary(); [2018-08-03 20:13:26.208] [alevinLog] [info] Starting optimizer. ERROR: Txp to Gene Map not found for 203027 transcripts. Exiting(salmon). I just have a problem with my tx2gene file. Here is the head of my file:. ENST00000013125	MAP4K5; ENST00000215368	EFNA2; ENST00000200453	PPP1R15A; ENST00000202028	EPB41L1; ENST00000204679	GNPTG; ENST00000175506	ASNS; ENST00000215574	CDC34; ENST00000167106	VASH1; ENST00000074304	INPP4A; ENST00000055077	RFC2. The transcript ID is probably not consistent with the one from the; alevin output. However, I used to perform some pseudo-alignments using; salmon on bulk RNAseq with the same transcriptome references and the; same tx2gene file that I used here (postprocessed using R) and it work.; What could be wrong here? Could you provide me with an example of the; tx2gene file needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209:50,Integrability,message,message,50,"I realize my mistake, I was confused by the error message.; Pseudoaligment seems to work now. [...]; [2018-08-03 20:13:23.083] [jointLog] [info] Computed 312565 rich; equivalence classes for further processing; [2018-08-03 20:13:23.083] [jointLog] [info] Counted 120065952 total; reads in the equivalence classes; [2018-08-03 20:13:23.084] [jointLog] [warning] Found 9775 reads with `N`; in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-03 20:13:23.084] [jointLog] [info] Mapping rate = 63.2442%. [2018-08-03 20:13:23.084] [jointLog] [info] finished quantifyLibrary(); [2018-08-03 20:13:26.208] [alevinLog] [info] Starting optimizer. ERROR: Txp to Gene Map not found for 203027 transcripts. Exiting(salmon). I just have a problem with my tx2gene file. Here is the head of my file:. ENST00000013125	MAP4K5; ENST00000215368	EFNA2; ENST00000200453	PPP1R15A; ENST00000202028	EPB41L1; ENST00000204679	GNPTG; ENST00000175506	ASNS; ENST00000215574	CDC34; ENST00000167106	VASH1; ENST00000074304	INPP4A; ENST00000055077	RFC2. The transcript ID is probably not consistent with the one from the; alevin output. However, I used to perform some pseudo-alignments using; salmon on bulk RNAseq with the same transcriptome references and the; same tx2gene file that I used here (postprocessed using R) and it work.; What could be wrong here? Could you provide me with an example of the; tx2gene file needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209:680,Performance,optimiz,optimizer,680,"I realize my mistake, I was confused by the error message.; Pseudoaligment seems to work now. [...]; [2018-08-03 20:13:23.083] [jointLog] [info] Computed 312565 rich; equivalence classes for further processing; [2018-08-03 20:13:23.083] [jointLog] [info] Counted 120065952 total; reads in the equivalence classes; [2018-08-03 20:13:23.084] [jointLog] [warning] Found 9775 reads with `N`; in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-03 20:13:23.084] [jointLog] [info] Mapping rate = 63.2442%. [2018-08-03 20:13:23.084] [jointLog] [info] finished quantifyLibrary(); [2018-08-03 20:13:26.208] [alevinLog] [info] Starting optimizer. ERROR: Txp to Gene Map not found for 203027 transcripts. Exiting(salmon). I just have a problem with my tx2gene file. Here is the head of my file:. ENST00000013125	MAP4K5; ENST00000215368	EFNA2; ENST00000200453	PPP1R15A; ENST00000202028	EPB41L1; ENST00000204679	GNPTG; ENST00000175506	ASNS; ENST00000215574	CDC34; ENST00000167106	VASH1; ENST00000074304	INPP4A; ENST00000055077	RFC2. The transcript ID is probably not consistent with the one from the; alevin output. However, I used to perform some pseudo-alignments using; salmon on bulk RNAseq with the same transcriptome references and the; same tx2gene file that I used here (postprocessed using R) and it work.; What could be wrong here? Could you provide me with an example of the; tx2gene file needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209:1176,Performance,perform,perform,1176,"I realize my mistake, I was confused by the error message.; Pseudoaligment seems to work now. [...]; [2018-08-03 20:13:23.083] [jointLog] [info] Computed 312565 rich; equivalence classes for further processing; [2018-08-03 20:13:23.083] [jointLog] [info] Counted 120065952 total; reads in the equivalence classes; [2018-08-03 20:13:23.084] [jointLog] [warning] Found 9775 reads with `N`; in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-03 20:13:23.084] [jointLog] [info] Mapping rate = 63.2442%. [2018-08-03 20:13:23.084] [jointLog] [info] finished quantifyLibrary(); [2018-08-03 20:13:26.208] [alevinLog] [info] Starting optimizer. ERROR: Txp to Gene Map not found for 203027 transcripts. Exiting(salmon). I just have a problem with my tx2gene file. Here is the head of my file:. ENST00000013125	MAP4K5; ENST00000215368	EFNA2; ENST00000200453	PPP1R15A; ENST00000202028	EPB41L1; ENST00000204679	GNPTG; ENST00000175506	ASNS; ENST00000215574	CDC34; ENST00000167106	VASH1; ENST00000074304	INPP4A; ENST00000055077	RFC2. The transcript ID is probably not consistent with the one from the; alevin output. However, I used to perform some pseudo-alignments using; salmon on bulk RNAseq with the same transcriptome references and the; same tx2gene file that I used here (postprocessed using R) and it work.; What could be wrong here? Could you provide me with an example of the; tx2gene file needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410346357:450,Availability,error,error,450,"Yes, for gencode the tsv file would like as following:; ```; ENST00000456328.2 ENSG00000223972.5; ENST00000450305.2 ENSG00000223972.5; ENST00000488147.1 ENSG00000227232.5; ENST00000619216.1 ENSG00000278267.1; ENST00000473358.1 ENSG00000243485.5; ENST00000469289.1 ENSG00000243485.5; ENST00000607096.1 ENSG00000284332.1; ENST00000417324.1 ENSG00000237613.2; ENST00000461467.1 ENSG00000237613.2; ENST00000606857.1 ENSG00000268020.3; ```; Basically the error is popping because it is not able to map the name of the transcript in your reference `fasta` file to the name of the transcript in the `tsv` file.; How does head of the `fasta` looks like or ; ```; grep ""^>"" /path/to/fasta | head ; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410346357
https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410351113:855,Availability,error,error,855,"Yes, in the gtf file, I don't have any .[0-9] (transcript version); suffixes for the transcripts, while I have some on the fasta file; header. So it is the fasta feature identifier extracted from the header; that is used, not the transcript_id (without its suffix) from the gtf; file ? I'll rebuild a correct tx2gene file then. Le 03/08/2018 à 20:59, Avi Srivastava a écrit :; > Yes, for gencode the tsv file would like as following:; > ```; > ENST00000456328.2 ENSG00000223972.5; > ENST00000450305.2 ENSG00000223972.5; > ENST00000488147.1 ENSG00000227232.5; > ENST00000619216.1 ENSG00000278267.1; > ENST00000473358.1 ENSG00000243485.5; > ENST00000469289.1 ENSG00000243485.5; > ENST00000607096.1 ENSG00000284332.1; > ENST00000417324.1 ENSG00000237613.2; > ENST00000461467.1 ENSG00000237613.2; > ENST00000606857.1 ENSG00000268020.3; > ```; > Basically the error is popping because it is not able to map the name of the transcript in your reference `fasta` file to the name of the transcript in the `tsv` file.; > How does head of the `fasta` looks like or ; > ```; > grep ""^>"" /path/to/fasta | head ; > ```; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410351113
https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951:15,Availability,error,error,15,I got the same error and a segmentation fault while processing single-read data using salmon 0.10.2. My command was:; `salmon quant -i <transcripts_index_folder> -l A -r <some_R1.fastq> -o <output_quant_folder>`; Are Salmon working on this since August?. Update: Using Salmon version 0.11.4 solved the issue for me.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951
https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951:40,Availability,fault,fault,40,I got the same error and a segmentation fault while processing single-read data using salmon 0.10.2. My command was:; `salmon quant -i <transcripts_index_folder> -l A -r <some_R1.fastq> -o <output_quant_folder>`; Are Salmon working on this since August?. Update: Using Salmon version 0.11.4 solved the issue for me.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951
https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951:255,Deployability,Update,Update,255,I got the same error and a segmentation fault while processing single-read data using salmon 0.10.2. My command was:; `salmon quant -i <transcripts_index_folder> -l A -r <some_R1.fastq> -o <output_quant_folder>`; Are Salmon working on this since August?. Update: Using Salmon version 0.11.4 solved the issue for me.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951
https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-412352265:134,Availability,avail,available,134,"A series of commit till 409e7508194176f596e394e18a4dd59c88d46def, adds a new mode activated with `--debug` command line flag. Will be available for use with the next planned release of Salmon v0.11.3 later this month.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-412352265
https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-412352265:174,Deployability,release,release,174,"A series of commit till 409e7508194176f596e394e18a4dd59c88d46def, adds a new mode activated with `--debug` command line flag. Will be available for use with the next planned release of Salmon v0.11.3 later this month.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-412352265
https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-416974627:47,Deployability,release,release,47,"@rob-p once you have time, we should cut out a release for `0.11.3`, #281 can also be solved using `--debug` mode.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-416974627
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414163553:416,Deployability,release,release,416,"Hi @juugii ,; Thanks for the suggestion and it indeed makes sense to report a metric like sequencing saturation. However, a couple of comments before we try to work on this metric. Even though Alevin uses transcript based method to get the UMI count, it does not resolve the ambiguity at transcript level instead we only resolve collision at transcript level and report gene level counts (at least in current stable release of Alevin v11.2). Having said that the definition of sequence saturation you are suggesting:; > the fraction of duplicated reads from unique transcripts that are sequenced at least 2 times. My understanding is that the sequence saturation (at least in 10x based definition) is based on UMI not on reads. Can you please give a small example of your suggestion ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414163553
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344:1449,Availability,redundant,redundant,1449,"Sorry if I wasn't clear. Also, maybe I am trying to bluntly transpose a; metric that comes from alignment-based quantification. Yes, sequencing; saturation relies on UMI, using the transcript reads associated to the UMIs. I am not sure to understand the difference between resolving ambiguity; or collision at the transcript level, with the evaluation of sequencing; saturation in mind. To be more precise, I am not sure to see how it; could be a problem in this computation. But I am probably missing an; important point?. The idea of quasi-mapping as I understand is identifying the transcripts; from which the reads could have originated, generating a quantification.; For the sequencing saturation, we don't really need to know where the; read align on the transcript sequence, we just want to know that the; read comes from one single transcript, a unique UMI. So if I am right,; it is possible to summarize this quantification at the level of UMIs,; and have an idea of the duplication level of the transcripts that have; been tagged with UMIs. From what I understand, this is where alevin; perform the deduplication computation to have a correct idea of the; transcript amount when UMI are added, prior amplifications resulting; from the RT/PCR steps. So I was imagining it could be possible to take the gene quantifications; from (de)duplicated UMIs, gene quantifications from unique UMIs, using; them to have an idea of the amount/ratio of redundant information in the; sequencing data, producing a metric very similar to the seq sat from the; 10x definition.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344:1097,Performance,perform,perform,1097,"Sorry if I wasn't clear. Also, maybe I am trying to bluntly transpose a; metric that comes from alignment-based quantification. Yes, sequencing; saturation relies on UMI, using the transcript reads associated to the UMIs. I am not sure to understand the difference between resolving ambiguity; or collision at the transcript level, with the evaluation of sequencing; saturation in mind. To be more precise, I am not sure to see how it; could be a problem in this computation. But I am probably missing an; important point?. The idea of quasi-mapping as I understand is identifying the transcripts; from which the reads could have originated, generating a quantification.; For the sequencing saturation, we don't really need to know where the; read align on the transcript sequence, we just want to know that the; read comes from one single transcript, a unique UMI. So if I am right,; it is possible to summarize this quantification at the level of UMIs,; and have an idea of the duplication level of the transcripts that have; been tagged with UMIs. From what I understand, this is where alevin; perform the deduplication computation to have a correct idea of the; transcript amount when UMI are added, prior amplifications resulting; from the RT/PCR steps. So I was imagining it could be possible to take the gene quantifications; from (de)duplicated UMIs, gene quantifications from unique UMIs, using; them to have an idea of the amount/ratio of redundant information in the; sequencing data, producing a metric very similar to the seq sat from the; 10x definition.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344:1449,Safety,redund,redundant,1449,"Sorry if I wasn't clear. Also, maybe I am trying to bluntly transpose a; metric that comes from alignment-based quantification. Yes, sequencing; saturation relies on UMI, using the transcript reads associated to the UMIs. I am not sure to understand the difference between resolving ambiguity; or collision at the transcript level, with the evaluation of sequencing; saturation in mind. To be more precise, I am not sure to see how it; could be a problem in this computation. But I am probably missing an; important point?. The idea of quasi-mapping as I understand is identifying the transcripts; from which the reads could have originated, generating a quantification.; For the sequencing saturation, we don't really need to know where the; read align on the transcript sequence, we just want to know that the; read comes from one single transcript, a unique UMI. So if I am right,; it is possible to summarize this quantification at the level of UMIs,; and have an idea of the duplication level of the transcripts that have; been tagged with UMIs. From what I understand, this is where alevin; perform the deduplication computation to have a correct idea of the; transcript amount when UMI are added, prior amplifications resulting; from the RT/PCR steps. So I was imagining it could be possible to take the gene quantifications; from (de)duplicated UMIs, gene quantifications from unique UMIs, using; them to have an idea of the amount/ratio of redundant information in the; sequencing data, producing a metric very similar to the seq sat from the; 10x definition.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344:18,Usability,clear,clear,18,"Sorry if I wasn't clear. Also, maybe I am trying to bluntly transpose a; metric that comes from alignment-based quantification. Yes, sequencing; saturation relies on UMI, using the transcript reads associated to the UMIs. I am not sure to understand the difference between resolving ambiguity; or collision at the transcript level, with the evaluation of sequencing; saturation in mind. To be more precise, I am not sure to see how it; could be a problem in this computation. But I am probably missing an; important point?. The idea of quasi-mapping as I understand is identifying the transcripts; from which the reads could have originated, generating a quantification.; For the sequencing saturation, we don't really need to know where the; read align on the transcript sequence, we just want to know that the; read comes from one single transcript, a unique UMI. So if I am right,; it is possible to summarize this quantification at the level of UMIs,; and have an idea of the duplication level of the transcripts that have; been tagged with UMIs. From what I understand, this is where alevin; perform the deduplication computation to have a correct idea of the; transcript amount when UMI are added, prior amplifications resulting; from the RT/PCR steps. So I was imagining it could be possible to take the gene quantifications; from (de)duplicated UMIs, gene quantifications from unique UMIs, using; them to have an idea of the amount/ratio of redundant information in the; sequencing data, producing a metric very similar to the seq sat from the; 10x definition.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626:1344,Availability,redundant,redundant,1344,"MI count **but** I had to bring that part into the discussion as it was mentioned that you wanted to compare different deduplication strategies. I think your suggestion makes sense and mostly aligns with the definition being used by 10x [here](https://kb.10xgenomics.com/hc/en-us/articles/115003646912-How-is-sequencing-saturation-calculated-). Although note they have changed the definition with the new version of the software. Anyhow, the *short answer* to the question of how can we generate that in Alevin environment is -- by post processing the dumpFeatures output of the Alevin run. _long answer_: The difference lies in the term deduplication and the strategy used to perform it. Basically the fundamental unit for deduplication in 10x as mentioned in the link above is a tuple of `(valid cell-barcode, valid UMI, gene) `, while that's not exactly true for us. We can certainly generate it but it does not aligns with the theory of Alevin's deduplication Algorithm. Having said that, I also like your idea of using:; > the gene quantifications from (de)duplicated UMIs, gene quantifications from unique UMIs, using them to have an idea of the amount/ratio of redundant information. However, the above definition reflect more of the duplication rate (at least in terms of the definition defined in *Alevin* manuscript [here](https://www.biorxiv.org/content/early/2018/06/01/335000)) than sequence saturation. **NOTE** the quoted definition was actually the 10x definition of sequence saturation too before it was changed, at least in my understanding. If you need the deduplication rate of each cell you can get that by using `--dumpFeature` flag in the Alevin run and look for file `featureDump.txt`. There will be a dump of multiple features w/ each CB but the second (starting from 0) column of the file gives you the duplication rate of each CB. Hope that helps, I totally understand your suggestion and would like to include @rob-p into this too if he has more comments/insights on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626:853,Performance,perform,perform,853,"Hi @juugii ,; Thanks for the very important and interesting discussion.; You are right, for the calculation of sequence saturation one *might* not need the exact deduplicated UMI count **but** I had to bring that part into the discussion as it was mentioned that you wanted to compare different deduplication strategies. I think your suggestion makes sense and mostly aligns with the definition being used by 10x [here](https://kb.10xgenomics.com/hc/en-us/articles/115003646912-How-is-sequencing-saturation-calculated-). Although note they have changed the definition with the new version of the software. Anyhow, the *short answer* to the question of how can we generate that in Alevin environment is -- by post processing the dumpFeatures output of the Alevin run. _long answer_: The difference lies in the term deduplication and the strategy used to perform it. Basically the fundamental unit for deduplication in 10x as mentioned in the link above is a tuple of `(valid cell-barcode, valid UMI, gene) `, while that's not exactly true for us. We can certainly generate it but it does not aligns with the theory of Alevin's deduplication Algorithm. Having said that, I also like your idea of using:; > the gene quantifications from (de)duplicated UMIs, gene quantifications from unique UMIs, using them to have an idea of the amount/ratio of redundant information. However, the above definition reflect more of the duplication rate (at least in terms of the definition defined in *Alevin* manuscript [here](https://www.biorxiv.org/content/early/2018/06/01/335000)) than sequence saturation. **NOTE** the quoted definition was actually the 10x definition of sequence saturation too before it was changed, at least in my understanding. If you need the deduplication rate of each cell you can get that by using `--dumpFeature` flag in the Alevin run and look for file `featureDump.txt`. There will be a dump of multiple features w/ each CB but the second (starting from 0) column of the file gives you ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626
https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626:1344,Safety,redund,redundant,1344,"MI count **but** I had to bring that part into the discussion as it was mentioned that you wanted to compare different deduplication strategies. I think your suggestion makes sense and mostly aligns with the definition being used by 10x [here](https://kb.10xgenomics.com/hc/en-us/articles/115003646912-How-is-sequencing-saturation-calculated-). Although note they have changed the definition with the new version of the software. Anyhow, the *short answer* to the question of how can we generate that in Alevin environment is -- by post processing the dumpFeatures output of the Alevin run. _long answer_: The difference lies in the term deduplication and the strategy used to perform it. Basically the fundamental unit for deduplication in 10x as mentioned in the link above is a tuple of `(valid cell-barcode, valid UMI, gene) `, while that's not exactly true for us. We can certainly generate it but it does not aligns with the theory of Alevin's deduplication Algorithm. Having said that, I also like your idea of using:; > the gene quantifications from (de)duplicated UMIs, gene quantifications from unique UMIs, using them to have an idea of the amount/ratio of redundant information. However, the above definition reflect more of the duplication rate (at least in terms of the definition defined in *Alevin* manuscript [here](https://www.biorxiv.org/content/early/2018/06/01/335000)) than sequence saturation. **NOTE** the quoted definition was actually the 10x definition of sequence saturation too before it was changed, at least in my understanding. If you need the deduplication rate of each cell you can get that by using `--dumpFeature` flag in the Alevin run and look for file `featureDump.txt`. There will be a dump of multiple features w/ each CB but the second (starting from 0) column of the file gives you the duplication rate of each CB. Hope that helps, I totally understand your suggestion and would like to include @rob-p into this too if he has more comments/insights on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626
https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-413045028:67,Availability,fault,faults,67,"I apologize, I misread one of the previous threads on segmentation faults. Upon downloading and running the precompiled linux binary provided in this thread https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938 the program ran to completion. Sorry for that!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-413045028
https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-413045028:80,Availability,down,downloading,80,"I apologize, I misread one of the previous threads on segmentation faults. Upon downloading and running the precompiled linux binary provided in this thread https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938 the program ran to completion. Sorry for that!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-413045028
https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-415828393:201,Deployability,install,installs,201,FWIW I'm experiencing this same behavior (`salmon quant` segfaults with 0.9.1 & 0.11.2 from bioconda) on my SLURM cluster. Ref #271 . @NatPRoach If you ever end up figuring out a solution for bioconda installs for this please let me know!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-415828393
https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-2118895156:13,Deployability,install,installed,13,Successfully installed and ran salmon on Arch Linux using the AUR binary package. Works great[link](https://aur.archlinux.org/packages/salmon),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-2118895156
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:829,Availability,robust,robust,829,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:399,Deployability,pipeline,pipeline,399,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:171,Integrability,protocol,protocols,171,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:256,Integrability,protocol,protocols,256,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:468,Integrability,protocol,protocols,468,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:229,Modifiability,extend,extending,229,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:115,Usability,learn,learning,115,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-416324900:354,Deployability,update,updated,354,"Hey @PeteHaitch ,; I think currently there is no direct way to tell Alevin to use CB and UMI in reverse order and you might have to hack a bit for that. Although it should not be too hard to do that. Specifically, the `extractBarcodes` and `extractUMI` function [here](https://github.com/COMBINE-lab/salmon/blob/master/src/AlevinUtils.cpp#L44) has to be updated with a new generic type (`celseq` may be). Let us know if it works out for you otherwise I can take a look into this sometime next week.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-416324900
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418570247:563,Deployability,pipeline,pipeline,563,"Hi @PeteHaitch ,; I have just pushed a potentially testable version in Alevin for cel-seq2 ( activated by `--celseq` command line flag ), although to make it work the develop branch has to compiled from source.; A couple of points to note:; * I assumed the the length of both CB and UMI to be 6 as in the original cel-seq2 paper.; * The deduplication algorithm is still same as default and nothing has been changed in the part. Please let us know how it works out for you and if at all it's useful / comparable to the output generated by the traditional cel-seq2 pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418570247
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418570247:51,Testability,test,testable,51,"Hi @PeteHaitch ,; I have just pushed a potentially testable version in Alevin for cel-seq2 ( activated by `--celseq` command line flag ), although to make it work the develop branch has to compiled from source.; A couple of points to note:; * I assumed the the length of both CB and UMI to be 6 as in the original cel-seq2 paper.; * The deduplication algorithm is still same as default and nothing has been changed in the part. Please let us know how it works out for you and if at all it's useful / comparable to the output generated by the traditional cel-seq2 pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418570247
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418579796:211,Energy Efficiency,adapt,adapted,211,"Oh, I should've pushed my PR sooner!; Thanks!; I'll take a look how it compares to what I did. ; One thing to note is that it'd be useful to be able to specify the length of the CB - we use 8 bp in our slightly-adapted CEL-Seq2 protocol.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418579796
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418579796:228,Integrability,protocol,protocol,228,"Oh, I should've pushed my PR sooner!; Thanks!; I'll take a look how it compares to what I did. ; One thing to note is that it'd be useful to be able to specify the length of the CB - we use 8 bp in our slightly-adapted CEL-Seq2 protocol.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418579796
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418579796:211,Modifiability,adapt,adapted,211,"Oh, I should've pushed my PR sooner!; Thanks!; I'll take a look how it compares to what I did. ; One thing to note is that it'd be useful to be able to specify the length of the CB - we use 8 bp in our slightly-adapted CEL-Seq2 protocol.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418579796
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418580112:151,Integrability,protocol,protocol,151,"Hi @PeteHaitch! I agree with @PeteHaitch here --- I think we should provide an easy way to specify custom cb & umi parameters paired with a particular protocol. For 10x v2, since it's a very standard commercial protocol, I think simply having a `--chromium` flag is probably OK. But we should make it easy for ppl to tweak their CB & UMI lengths.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418580112
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418580112:211,Integrability,protocol,protocol,211,"Hi @PeteHaitch! I agree with @PeteHaitch here --- I think we should provide an easy way to specify custom cb & umi parameters paired with a particular protocol. For 10x v2, since it's a very standard commercial protocol, I think simply having a `--chromium` flag is probably OK. But we should make it easy for ppl to tweak their CB & UMI lengths.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418580112
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418580112:229,Usability,simpl,simply,229,"Hi @PeteHaitch! I agree with @PeteHaitch here --- I think we should provide an easy way to specify custom cb & umi parameters paired with a particular protocol. For 10x v2, since it's a very standard commercial protocol, I think simply having a `--chromium` flag is probably OK. But we should make it easy for ppl to tweak their CB & UMI lengths.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418580112
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038:196,Deployability,release,release,196,"@PeteHaitch Thanks for making the pull request and correcting the barcode length for the celseq2 protocol. We'll review it soon and merge it to the develop (which will be merged to master in next release). @rob-p I think we already have that capability of specifying the CB and UMI length, it's just CelSeq2 was little difference in the *order* of them. Basically the flags like `--chromium` or any other protocols are wrapper around using the standard CB and UMI lengths. If one wants a customization we can always use `--umiLength` and `--barcodeLength`. I am thinking of tweaking the `--end` part of the `struct` to select the order of the CB and UMI which incase of CelSeq2 is reverse.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038:97,Integrability,protocol,protocol,97,"@PeteHaitch Thanks for making the pull request and correcting the barcode length for the celseq2 protocol. We'll review it soon and merge it to the develop (which will be merged to master in next release). @rob-p I think we already have that capability of specifying the CB and UMI length, it's just CelSeq2 was little difference in the *order* of them. Basically the flags like `--chromium` or any other protocols are wrapper around using the standard CB and UMI lengths. If one wants a customization we can always use `--umiLength` and `--barcodeLength`. I am thinking of tweaking the `--end` part of the `struct` to select the order of the CB and UMI which incase of CelSeq2 is reverse.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038:405,Integrability,protocol,protocols,405,"@PeteHaitch Thanks for making the pull request and correcting the barcode length for the celseq2 protocol. We'll review it soon and merge it to the develop (which will be merged to master in next release). @rob-p I think we already have that capability of specifying the CB and UMI length, it's just CelSeq2 was little difference in the *order* of them. Basically the flags like `--chromium` or any other protocols are wrapper around using the standard CB and UMI lengths. If one wants a customization we can always use `--umiLength` and `--barcodeLength`. I am thinking of tweaking the `--end` part of the `struct` to select the order of the CB and UMI which incase of CelSeq2 is reverse.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038:419,Integrability,wrap,wrapper,419,"@PeteHaitch Thanks for making the pull request and correcting the barcode length for the celseq2 protocol. We'll review it soon and merge it to the develop (which will be merged to master in next release). @rob-p I think we already have that capability of specifying the CB and UMI length, it's just CelSeq2 was little difference in the *order* of them. Basically the flags like `--chromium` or any other protocols are wrapper around using the standard CB and UMI lengths. If one wants a customization we can always use `--umiLength` and `--barcodeLength`. I am thinking of tweaking the `--end` part of the `struct` to select the order of the CB and UMI which incase of CelSeq2 is reverse.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418772038
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418789461:146,Integrability,protocol,protocols,146,"latest commit https://github.com/COMBINE-lab/salmon/commit/093b5a98e16cab7c3934c0a7c222549644c39728 will generalize the `write_fastq` for all the protocols. @PeteHaitch Thanks again for making the pull request, do let us know how does the quantified matrix looks at the end for the Cel-Seq2 protocol or what more we can do in Alevin to help improve the results. Closing this issue for now but feel free to open it again if have any other problem.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418789461
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418789461:291,Integrability,protocol,protocol,291,"latest commit https://github.com/COMBINE-lab/salmon/commit/093b5a98e16cab7c3934c0a7c222549644c39728 will generalize the `write_fastq` for all the protocols. @PeteHaitch Thanks again for making the pull request, do let us know how does the quantified matrix looks at the end for the Cel-Seq2 protocol or what more we can do in Alevin to help improve the results. Closing this issue for now but feel free to open it again if have any other problem.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418789461
https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418863611:77,Performance,perform,perform,77,"Thanks, @k3yavi! ; I'll be sure to share my experience and any comparisons I perform.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-418863611
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775:401,Availability,avail,available,401,"Hi scott,. Thank you for the detailed report. Im trying to reproduce the issue. So far, i have been unable to reproduce the issue on an ubuntu 16.04 or OSX box with either 0.11.1 or 0.9.1. My next test is to try on an ubuntu 14.04 docker container. I'm afraid there may be a system library issue involved. Could you try upgrading via bioconda as well to see if that helps? The latest linux release is available on bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775:390,Deployability,release,release,390,"Hi scott,. Thank you for the detailed report. Im trying to reproduce the issue. So far, i have been unable to reproduce the issue on an ubuntu 16.04 or OSX box with either 0.11.1 or 0.9.1. My next test is to try on an ubuntu 14.04 docker container. I'm afraid there may be a system library issue involved. Could you try upgrading via bioconda as well to see if that helps? The latest linux release is available on bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775:197,Testability,test,test,197,"Hi scott,. Thank you for the detailed report. Im trying to reproduce the issue. So far, i have been unable to reproduce the issue on an ubuntu 16.04 or OSX box with either 0.11.1 or 0.9.1. My next test is to try on an ubuntu 14.04 docker container. I'm afraid there may be a system library issue involved. Could you try upgrading via bioconda as well to see if that helps? The latest linux release is available on bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413883226:79,Deployability,install,installation,79,@rob-p Thanks for your quick reply! I'll try this out with a more recent conda installation of salmon and report back,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413883226
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123:31,Deployability,update,update,31,"@rob-p I've taken the time to [update salmon to 0.11.2 in it's respective Galaxy Tool wrapper](https://github.com/bgruening/galaxytools/pull/778) and am still seeing the `salmon quant` segfault when running through SLURM. . bioconda installs of salmon 0.9.1 & 0.11.2 run to completion outside of SLURM on the same machine. I've seen that #268 was opened and closed recently, but I don't have the liberty to resolve the salmon dependency outside of conda (at least very easily/in a timely fashion). Update: Have since filed https://github.com/bioconda/bioconda-recipes/issues/10662",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123:233,Deployability,install,installs,233,"@rob-p I've taken the time to [update salmon to 0.11.2 in it's respective Galaxy Tool wrapper](https://github.com/bgruening/galaxytools/pull/778) and am still seeing the `salmon quant` segfault when running through SLURM. . bioconda installs of salmon 0.9.1 & 0.11.2 run to completion outside of SLURM on the same machine. I've seen that #268 was opened and closed recently, but I don't have the liberty to resolve the salmon dependency outside of conda (at least very easily/in a timely fashion). Update: Have since filed https://github.com/bioconda/bioconda-recipes/issues/10662",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123:498,Deployability,Update,Update,498,"@rob-p I've taken the time to [update salmon to 0.11.2 in it's respective Galaxy Tool wrapper](https://github.com/bgruening/galaxytools/pull/778) and am still seeing the `salmon quant` segfault when running through SLURM. . bioconda installs of salmon 0.9.1 & 0.11.2 run to completion outside of SLURM on the same machine. I've seen that #268 was opened and closed recently, but I don't have the liberty to resolve the salmon dependency outside of conda (at least very easily/in a timely fashion). Update: Have since filed https://github.com/bioconda/bioconda-recipes/issues/10662",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123:86,Integrability,wrap,wrapper,86,"@rob-p I've taken the time to [update salmon to 0.11.2 in it's respective Galaxy Tool wrapper](https://github.com/bgruening/galaxytools/pull/778) and am still seeing the `salmon quant` segfault when running through SLURM. . bioconda installs of salmon 0.9.1 & 0.11.2 run to completion outside of SLURM on the same machine. I've seen that #268 was opened and closed recently, but I don't have the liberty to resolve the salmon dependency outside of conda (at least very easily/in a timely fashion). Update: Have since filed https://github.com/bioconda/bioconda-recipes/issues/10662",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123:426,Integrability,depend,dependency,426,"@rob-p I've taken the time to [update salmon to 0.11.2 in it's respective Galaxy Tool wrapper](https://github.com/bgruening/galaxytools/pull/778) and am still seeing the `salmon quant` segfault when running through SLURM. . bioconda installs of salmon 0.9.1 & 0.11.2 run to completion outside of SLURM on the same machine. I've seen that #268 was opened and closed recently, but I don't have the liberty to resolve the salmon dependency outside of conda (at least very easily/in a timely fashion). Update: Have since filed https://github.com/bioconda/bioconda-recipes/issues/10662",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415831123
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415887826:78,Availability,error,error,78,Maybe SLURM is killing your job because of too less memory allocation and the error message is just really wired?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415887826
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415887826:84,Integrability,message,message,84,Maybe SLURM is killing your job because of too less memory allocation and the error message is just really wired?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415887826
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:1288,Availability,error,error,1288,"0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=25000`**; - `scontrol show job 94`; ```; JobId=94 Name=g990_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901667 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:32 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T15:36:41 EligibleTime=2018-08-27T15:36:41; StartTime=2018-08-27T15:36:41 EndTime=2018-08-27T15:44:13; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:21595; ReqNodeList=(null) ExcNodeList=(null); NodeList=w19; BatchHost=w19; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=100000`**; - `scontrol show job 98`; ```; JobId=98 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) Group",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:1407,Availability,fault,fault,1407,"mon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901667 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:32 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T15:36:41 EligibleTime=2018-08-27T15:36:41; StartTime=2018-08-27T15:36:41 EndTime=2018-08-27T15:44:13; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:21595; ReqNodeList=(null) ExcNodeList=(null); NodeList=w19; BatchHost=w19; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=100000`**; - `scontrol show job 98`; ```; JobId=98 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901663 Account=(null) QOS=(null); JobState=RUNNING Reason=None Dependency=(null); Requeue=1 Restart",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:2040,Availability,error,error,2040," ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=100000`**; - `scontrol show job 98`; ```; JobId=98 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901663 Account=(null) QOS=(null); JobState=RUNNING Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:08:19 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:06:23 EligibleTime=2018-08-27T20:06:23; StartTime=2018-08-27T20:06:23 EndTime=Unknown; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:2236; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mn",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:3088,Availability,error,error,3088,"``. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=100000`**; - `scontrol show job 98`; ```; JobId=98 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901663 Account=(null) QOS=(null); JobState=RUNNING Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:08:19 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:06:23 EligibleTime=2018-08-27T20:06:23; StartTime=2018-08-27T20:06:23 EndTime=Unknown; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:2236; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/994; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/994/tool_script.sh: line 50: 7495 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:14:23 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:3207,Availability,fault,fault,3207,"8 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901663 Account=(null) QOS=(null); JobState=RUNNING Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:08:19 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:06:23 EligibleTime=2018-08-27T20:06:23; StartTime=2018-08-27T20:06:23 EndTime=Unknown; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:2236; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/994; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/994/tool_script.sh: line 50: 7495 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:14:23 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependenc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:3857,Availability,error,error,3857,"MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/994; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/994/tool_script.sh: line 50: 7495 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:14:23 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:36 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:20:26 EligibleTime=2018-08-27T20:20:26; StartTime=2018-08-27T20:20:26 EndTime=2018-08-27T20:28:02; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:7975; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Comma",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:4928,Availability,error,error,4928,"3 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:36 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:20:26 EligibleTime=2018-08-27T20:20:26; StartTime=2018-08-27T20:20:26 EndTime=2018-08-27T20:28:02; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:7975; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/995; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/995/tool_script.sh: line 50: 9700 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:27:57 ip-172-31-16-139 kernel: [ 2949.318784] traps: salmon[9700] general protection ip:7fb66057cdca sp:7ffe1bf3a900 error:0 in libtbb.so.2[7fb66055a000+37000]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:5047,Availability,fault,fault,5047,"3 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:36 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:20:26 EligibleTime=2018-08-27T20:20:26; StartTime=2018-08-27T20:20:26 EndTime=2018-08-27T20:28:02; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:7975; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/995; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/995/tool_script.sh: line 50: 9700 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:27:57 ip-172-31-16-139 kernel: [ 2949.318784] traps: salmon[9700] general protection ip:7fb66057cdca sp:7ffe1bf3a900 error:0 in libtbb.so.2[7fb66055a000+37000]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:5697,Availability,error,error,5697,"3 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:36 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:20:26 EligibleTime=2018-08-27T20:20:26; StartTime=2018-08-27T20:20:26 EndTime=2018-08-27T20:28:02; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:7975; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/995; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/995/tool_script.sh: line 50: 9700 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:27:57 ip-172-31-16-139 kernel: [ 2949.318784] traps: salmon[9700] general protection ip:7fb66057cdca sp:7ffe1bf3a900 error:0 in libtbb.so.2[7fb66055a000+37000]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:60,Deployability,configurat,configurations,60,"@bgruening So I've tried some runs today with higher memory configurations and can still reproduce the segfault. I'm going to continue on and try to write up a reproducer for @dpryan79 [here](https://github.com/bioconda/bioconda-recipes/issues/10662#issuecomment-415967622). **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=25000`**; - `scontrol show job 94`; ```; JobId=94 Name=g990_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901667 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:32 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T15:36:41 EligibleTime=2018-08-27T15:36:41; StartTime=2018-08-27T15:36:41 EndTime=2018-08-27T15:44:13; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:21595; ReqNodeList=(null) ExcNodeList=(null); NodeList=w19; BatchHost=w19; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a i",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:564,Integrability,Depend,Dependency,564,"@bgruening So I've tried some runs today with higher memory configurations and can still reproduce the segfault. I'm going to continue on and try to write up a reproducer for @dpryan79 [here](https://github.com/bioconda/bioconda-recipes/issues/10662#issuecomment-415967622). **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=25000`**; - `scontrol show job 94`; ```; JobId=94 Name=g990_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901667 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:32 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T15:36:41 EligibleTime=2018-08-27T15:36:41; StartTime=2018-08-27T15:36:41 EndTime=2018-08-27T15:44:13; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:21595; ReqNodeList=(null) ExcNodeList=(null); NodeList=w19; BatchHost=w19; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a i",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:2377,Integrability,Depend,Dependency,2377,"65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=100000`**; - `scontrol show job 98`; ```; JobId=98 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901663 Account=(null) QOS=(null); JobState=RUNNING Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:08:19 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:06:23 EligibleTime=2018-08-27T20:06:23; StartTime=2018-08-27T20:06:23 EndTime=Unknown; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:2236; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/994; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/994/tool_script.sh: line 50: 7495 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:4204,Integrability,Depend,Dependency,4204,"-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:14:23 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:36 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:20:26 EligibleTime=2018-08-27T20:20:26; StartTime=2018-08-27T20:20:26 EndTime=2018-08-27T20:28:02; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:7975; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/995; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/995/tool_script.sh: line 50: 9700 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxMo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:60,Modifiability,config,configurations,60,"@bgruening So I've tried some runs today with higher memory configurations and can still reproduce the segfault. I'm going to continue on and try to write up a reproducer for @dpryan79 [here](https://github.com/bioconda/bioconda-recipes/issues/10662#issuecomment-415967622). **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=25000`**; - `scontrol show job 94`; ```; JobId=94 Name=g990_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901667 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:32 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T15:36:41 EligibleTime=2018-08-27T15:36:41; StartTime=2018-08-27T15:36:41 EndTime=2018-08-27T15:44:13; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:21595; ReqNodeList=(null) ExcNodeList=(null); NodeList=w19; BatchHost=w19; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a i",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416383307:659,Deployability,install,install,659,"I can't reproduce this using 0.11.2 on Galaxy (18.05, not that that should matter) with a slurm (17.02.9) cluster. I've tried using both 20 cores and 1 core (in case something weird is going on with the threading) and both run fine. I used our cluster default of 6GB per core, which is overkill for this job. My guess is that the same tbb version is getting used in each version of salmon you're trying and that it got corrupted at some point. Are you spinning up a new CloudMan instance for these runs or are you restarting a saved instance? If you're not starting a brand new instance then try that, then you can avoid using the same possibly corrupted tbb install.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416383307
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416383307:615,Safety,avoid,avoid,615,"I can't reproduce this using 0.11.2 on Galaxy (18.05, not that that should matter) with a slurm (17.02.9) cluster. I've tried using both 20 cores and 1 core (in case something weird is going on with the threading) and both run fine. I used our cluster default of 6GB per core, which is overkill for this job. My guess is that the same tbb version is getting used in each version of salmon you're trying and that it got corrupted at some point. Are you spinning up a new CloudMan instance for these runs or are you restarting a saved instance? If you're not starting a brand new instance then try that, then you can avoid using the same possibly corrupted tbb install.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416383307
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-562764577:26,Availability,down,down,26,"Did this ever get tracked down? we are having a situation where salmon seems to segfault whenever using slurm (this time it's `salmon index` that segfaults, though). wondering if you figured out a solution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-562764577
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:26,Availability,fault,fault,26,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:166,Availability,fault,fault,166,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:1581,Availability,fault,fault,1581,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:78,Deployability,install,installed,78,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:490,Safety,timeout,timeout,490,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:807,Testability,Log,Logs,807,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:836,Testability,log,logs,836,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358:1015,Availability,down,down,1015,"Hi @izaakm,. This segfault is unlikely related to the issue here, since that happened in ""mapping mode"" (salmon performing mapping itself), and yours is happening in alignment-based mode (you're feeding SAM files to salmon). Does it fail to occur when you provide _either_ of the SAM files to salmon? That is, does it run to completion with both `data/processed/bwa-mem/SRR10571655.sam` and `data/processed/bwa-mem/SRR10571656.sam` individually? Also, what if you combine them via a pipe (i.e. something like):. ```; ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a <(cat data/processed/bwa-mem/SRR10571655.sam <(samtools view data/processed/bwa-mem/SRR10571656.sam)) -o _tmp/ ; ```. the double redirect is just to make sure the header isn't included in the second sam file. Also, is the reference that you are passing to the `-t` option identical to the one with which bwa-mem was run? If the problem persists, we might need the sam/bam files to track it down further, since I imagine it may be data-dependent. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358:1060,Integrability,depend,dependent,1060,"Hi @izaakm,. This segfault is unlikely related to the issue here, since that happened in ""mapping mode"" (salmon performing mapping itself), and yours is happening in alignment-based mode (you're feeding SAM files to salmon). Does it fail to occur when you provide _either_ of the SAM files to salmon? That is, does it run to completion with both `data/processed/bwa-mem/SRR10571655.sam` and `data/processed/bwa-mem/SRR10571656.sam` individually? Also, what if you combine them via a pipe (i.e. something like):. ```; ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a <(cat data/processed/bwa-mem/SRR10571655.sam <(samtools view data/processed/bwa-mem/SRR10571656.sam)) -o _tmp/ ; ```. the double redirect is just to make sure the header isn't included in the second sam file. Also, is the reference that you are passing to the `-t` option identical to the one with which bwa-mem was run? If the problem persists, we might need the sam/bam files to track it down further, since I imagine it may be data-dependent. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358:112,Performance,perform,performing,112,"Hi @izaakm,. This segfault is unlikely related to the issue here, since that happened in ""mapping mode"" (salmon performing mapping itself), and yours is happening in alignment-based mode (you're feeding SAM files to salmon). Does it fail to occur when you provide _either_ of the SAM files to salmon? That is, does it run to completion with both `data/processed/bwa-mem/SRR10571655.sam` and `data/processed/bwa-mem/SRR10571656.sam` individually? Also, what if you combine them via a pipe (i.e. something like):. ```; ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a <(cat data/processed/bwa-mem/SRR10571655.sam <(samtools view data/processed/bwa-mem/SRR10571656.sam)) -o _tmp/ ; ```. the double redirect is just to make sure the header isn't included in the second sam file. Also, is the reference that you are passing to the `-t` option identical to the one with which bwa-mem was run? If the problem persists, we might need the sam/bam files to track it down further, since I imagine it may be data-dependent. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707347734:111,Integrability,message,message,111,"It does run with each of the two files separately, but when I try the command with the double redirect I get a message like the one below for many/all[?] of the sequences in the reference and quant.sf is empty (except the header). ```; [2020-10-12 17:05:47.406] [jointLog] [warning] Transcript XM_024446103.1 appears in the reference but did not appear in the BAM; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707347734
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707349051:118,Usability,simpl,simply,118,"That is interesting. The attempt in the double redirect was to include all alignment records from the second sam file simply concatenated to the first. Assuming the SAM files contain the same header, this should be OK (simply another way to treat them as a single input). However this warning suggests that there were references in the file passed to `-t` that did not have a corresponding entry in the SAM file. Yet, with the redirect, the first sam file should contain the full header. I don't have a clear understanding of why this would happen yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707349051
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707349051:219,Usability,simpl,simply,219,"That is interesting. The attempt in the double redirect was to include all alignment records from the second sam file simply concatenated to the first. Assuming the SAM files contain the same header, this should be OK (simply another way to treat them as a single input). However this warning suggests that there were references in the file passed to `-t` that did not have a corresponding entry in the SAM file. Yet, with the redirect, the first sam file should contain the full header. I don't have a clear understanding of why this would happen yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707349051
https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707349051:503,Usability,clear,clear,503,"That is interesting. The attempt in the double redirect was to include all alignment records from the second sam file simply concatenated to the first. Assuming the SAM files contain the same header, this should be OK (simply another way to treat them as a single input). However this warning suggests that there were references in the file passed to `-t` that did not have a corresponding entry in the SAM file. Yet, with the redirect, the first sam file should contain the full header. I don't have a clear understanding of why this would happen yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707349051
https://github.com/COMBINE-lab/salmon/pull/273#issuecomment-414320321:112,Deployability,release,release,112,"I'm rebasing this since it's easier to put it directly into develop (which is merged into master prior to every release) than to pull into master and cherry pick. However, since this is just relevant to a single file, I might cherry pick to master as well anyway ;P.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273#issuecomment-414320321
https://github.com/COMBINE-lab/salmon/pull/273#issuecomment-414358792:483,Testability,log,log,483,"@rob-p thank you for the merging!. Okay, maybe when I want to send a pull-request, it looks better to `develop` branch in general. > However, since this is just relevant to a single file, I might cherry pick to master as well anyway ;P. I might see it on master branch too. How about below questions? Do you agree?. > * I want to replace current case gcc-7 to latest version gcc-8 if you like. > * There are commented out area at the bottom of .travis.yml. However as we can run git log -p .travis.yml to check past modification, shall we remove the commented out ""whitelist"" area?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273#issuecomment-414358792
https://github.com/COMBINE-lab/salmon/issues/274#issuecomment-414416572:1124,Availability,avail,available,1124,"Hi @pophipi ,; We are in process of documenting the details of these files generated by using flag `--dumpFeatures`.; However, for your use case of getting alignment rate, there are two ways to get it in Alevin system. First you have to run Aleivn with the flag `--dumpFeatures` but since you have the file `filtered_cb_frequency.txt` I think you already have specified this flag in your run of the dataset. The relevant files you need for generating alignment rate would be following:. 1. *filtered_cb_frequency.txt*: A *tsv* file with the first column as the Cellular Barcode(CB) id and the second column has the frequency of the CB after sequence correction.; 2. *MappedUmi.txt*: A *tsv* file with the first column as the Cellular Barcode(CB) id and the second column has the number of reads confidently mapped to the provided reference transcriptome. Both the file should have same number of rows (i.e. CB), although the order can be different. To get the Alignment rate you might have to divide the value of each CB in the second file by the value in the first file i.e. the Number of mapped reads over total number of available reads for that CB. The second and more easier way is (although version bounded i.e. if you have latest version of Salmon (v11.2)), then if you run alevin with `--dumpFeatures` flag it will also generate a file called `featureDump.txt`. This file has multiple feature entries although the relevant one (the alignment rate) in case of yours would be the first one. Hope that helps. Let us know if you need more help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/274#issuecomment-414416572
https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-415634849:99,Security,access,access,99,"Hi @junaruga,. Sorry for the slow reply; I was on vacation the beginning of this week, so internet access has been touch-and-go. Anyway, the hanging of the `unit_tests` seems a problem to me. They should all complete very quickly, and the fact that it is hanging there suggests to me something else is going wrong.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-415634849
https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416087043:88,Testability,log,log,88,I wonder if there is any output from the `unit_tests` that are hanging. Does the travis log provide anything?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416087043
https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416155226:258,Deployability,hotfix,hotfix,258,"I did not see any output. That's the reason why the test stopped with the timeout.; Ref: https://travis-ci.org/COMBINE-lab/salmon/builds/419012959. Here is my commit on this PR. You can do cherry-pick to check it.; https://github.com/junaruga/salmon/commits/hotfix/develop-unrecognized-cxx-std-14_3. If you add `--verbose` or `--debug` to the `ctest`, you might see something?. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process --verbose --debug; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416155226
https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416155226:74,Safety,timeout,timeout,74,"I did not see any output. That's the reason why the test stopped with the timeout.; Ref: https://travis-ci.org/COMBINE-lab/salmon/builds/419012959. Here is my commit on this PR. You can do cherry-pick to check it.; https://github.com/junaruga/salmon/commits/hotfix/develop-unrecognized-cxx-std-14_3. If you add `--verbose` or `--debug` to the `ctest`, you might see something?. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process --verbose --debug; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416155226
https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416155226:52,Testability,test,test,52,"I did not see any output. That's the reason why the test stopped with the timeout.; Ref: https://travis-ci.org/COMBINE-lab/salmon/builds/419012959. Here is my commit on this PR. You can do cherry-pick to check it.; https://github.com/junaruga/salmon/commits/hotfix/develop-unrecognized-cxx-std-14_3. If you add `--verbose` or `--debug` to the `ctest`, you might see something?. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process --verbose --debug; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416155226
https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416348427:396,Usability,clear,clear,396,"Hi @junaruga --- so, I cherry picked your changes into develop (thanks again!) and did some more exploring. It looks like `jemalloc` is to blame for the unitTests hanging on the travis server. I modified `unitTests` to not link against `jemalloc` (but still linked salmon against it), and everything passes. I did see some potentially related issues on the `jemalloc` github issues, but it's not clear _exactly_ what is causing this behavior.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416348427
https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416356167:92,Testability,test,test,92,@rob-p alright! Thank you for the report! I will take note of it.; Congrats for passing the test!; Feel free to close this pull-request :),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276#issuecomment-416356167
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-415572366:216,Availability,error,error,216,"Looks like --no-version-check does the job of avoiding this warning, however, make it is better to just make a command for version check instead of forcing users to do --no-version-check all the time to silence this error?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-415572366
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-415572366:46,Safety,avoid,avoiding,46,"Looks like --no-version-check does the job of avoiding this warning, however, make it is better to just make a command for version check instead of forcing users to do --no-version-check all the time to silence this error?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-415572366
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-440346529:22,Availability,error,error,22,I am getting the same error on the latest binary distro. I am running CentOS Linux 7 (Core).; Does this affect the performance?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-440346529
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-440346529:115,Performance,perform,performance,115,I am getting the same error on the latest binary distro. I am running CentOS Linux 7 (Core).; Does this affect the performance?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-440346529
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-447030871:11,Availability,error,error,11,"I got this error and was surprised to find the cause. I've added `--no-version-check` now, but I agree the default of phone-home behaviour is not great.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-447030871
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032:655,Deployability,upgrade,upgrades,655,"I was trying to troubleshoot the contemplation period of salmon with monitoring utilities and just stumbled upon this issue upon submitting my own. The failed version check gets buried by the spew of warnings for too short/long transcripts for hg38 mrna.fna in my case. The current behaviour is particularly irritating as I assumed, that `salmon index -h` just runs into a loop accidentally. The check takes multiple minutes to timeout. I am behind a proxy. Please remove the version check by default, as this is not common behaviour of command line tools or anticipated by the user. Or at least please add a verbose message before checking ""Checking for upgrades online..."".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032:69,Energy Efficiency,monitor,monitoring,69,"I was trying to troubleshoot the contemplation period of salmon with monitoring utilities and just stumbled upon this issue upon submitting my own. The failed version check gets buried by the spew of warnings for too short/long transcripts for hg38 mrna.fna in my case. The current behaviour is particularly irritating as I assumed, that `salmon index -h` just runs into a loop accidentally. The check takes multiple minutes to timeout. I am behind a proxy. Please remove the version check by default, as this is not common behaviour of command line tools or anticipated by the user. Or at least please add a verbose message before checking ""Checking for upgrades online..."".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032:617,Integrability,message,message,617,"I was trying to troubleshoot the contemplation period of salmon with monitoring utilities and just stumbled upon this issue upon submitting my own. The failed version check gets buried by the spew of warnings for too short/long transcripts for hg38 mrna.fna in my case. The current behaviour is particularly irritating as I assumed, that `salmon index -h` just runs into a loop accidentally. The check takes multiple minutes to timeout. I am behind a proxy. Please remove the version check by default, as this is not common behaviour of command line tools or anticipated by the user. Or at least please add a verbose message before checking ""Checking for upgrades online..."".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032
https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032:428,Safety,timeout,timeout,428,"I was trying to troubleshoot the contemplation period of salmon with monitoring utilities and just stumbled upon this issue upon submitting my own. The failed version check gets buried by the spew of warnings for too short/long transcripts for hg38 mrna.fna in my case. The current behaviour is particularly irritating as I assumed, that `salmon index -h` just runs into a loop accidentally. The check takes multiple minutes to timeout. I am behind a proxy. Please remove the version check by default, as this is not common behaviour of command line tools or anticipated by the user. Or at least please add a verbose message before checking ""Checking for upgrades online..."".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-474388032
https://github.com/COMBINE-lab/salmon/issues/278#issuecomment-513041200:4,Deployability,update,updates,4,"Any updates on this, I agree with @antonkulaga that there should be some examples in the docs on how to use quantmerge",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/278#issuecomment-513041200
https://github.com/COMBINE-lab/salmon/issues/278#issuecomment-516709978:6,Deployability,update,updates,6,"> Any updates on this, I agree with @antonkulaga that there should be some examples in the docs on how to use quantmerge. Have you solved it? I also need help",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/278#issuecomment-516709978
https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-415993406:146,Security,validat,validateMappings,146,"Ok, more interesting information. I just pushed a fix for this that will put 0 instead of NAN and output a warning. But I ran this sample with `--validateMappings` introduced a few versions ago, and it seems *none* of the reads map there. This means the orphans that are mapping must be doing so poorly, and `--validateMappings` is taking care of this by getting rid of those reads. With that flag, _none_ of the reads map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-415993406
https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-415993406:311,Security,validat,validateMappings,311,"Ok, more interesting information. I just pushed a fix for this that will put 0 instead of NAN and output a warning. But I ran this sample with `--validateMappings` introduced a few versions ago, and it seems *none* of the reads map there. This means the orphans that are mapping must be doing so poorly, and `--validateMappings` is taking care of this by getting rid of those reads. With that flag, _none_ of the reads map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-415993406
https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-416381103:131,Availability,avail,available,131,"Both the originally-reported issue (form @kurtwheeler) and the request by @Miserlou are now implemented in develop, and so will be available in the next release, so I'm going to close this issue for now.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-416381103
https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-416381103:153,Deployability,release,release,153,"Both the originally-reported issue (form @kurtwheeler) and the request by @Miserlou are now implemented in develop, and so will be available in the next release, so I'm going to close this issue for now.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-416381103
https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420:174,Availability,error,error,174,"Hi @pophipi ,; Thanks for the interesting question, but unfortunately in the current version of Alevin you can't tweak the mismatch rate option although based on the type of error/noise in the reads you can try reducing the size of the k from default 31 to something smaller and see if it helps. We are working on tweaking the mapping algorithm for Alevin allowing mismatches but it's still in testing phase and has not been integrated yet. We'll let you know as soon as we have version supporting that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420
https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420:425,Deployability,integrat,integrated,425,"Hi @pophipi ,; Thanks for the interesting question, but unfortunately in the current version of Alevin you can't tweak the mismatch rate option although based on the type of error/noise in the reads you can try reducing the size of the k from default 31 to something smaller and see if it helps. We are working on tweaking the mapping algorithm for Alevin allowing mismatches but it's still in testing phase and has not been integrated yet. We'll let you know as soon as we have version supporting that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420
https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420:425,Integrability,integrat,integrated,425,"Hi @pophipi ,; Thanks for the interesting question, but unfortunately in the current version of Alevin you can't tweak the mismatch rate option although based on the type of error/noise in the reads you can try reducing the size of the k from default 31 to something smaller and see if it helps. We are working on tweaking the mapping algorithm for Alevin allowing mismatches but it's still in testing phase and has not been integrated yet. We'll let you know as soon as we have version supporting that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420
https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420:394,Testability,test,testing,394,"Hi @pophipi ,; Thanks for the interesting question, but unfortunately in the current version of Alevin you can't tweak the mismatch rate option although based on the type of error/noise in the reads you can try reducing the size of the k from default 31 to something smaller and see if it helps. We are working on tweaking the mapping algorithm for Alevin allowing mismatches but it's still in testing phase and has not been integrated yet. We'll let you know as soon as we have version supporting that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420
https://github.com/COMBINE-lab/salmon/issues/281#issuecomment-417164716:24,Deployability,release,release,24,"Hey @mahogny , ; Newest release: [0.11.3](https://github.com/COMBINE-lab/salmon/tree/v0.11.3) should fix the above issue. feel free to reopen this issue if you face any problems.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281#issuecomment-417164716
https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904:244,Availability,error,error,244,"Hi @jeremymsimon,. So I'm trying to think about what issues _could_ be reasonably dealt with here. . 1) If the length of the sequence in the BAM header and the sequence provided in the FASTA file are different, this seems like a very difficult error to recover from since records can then contain alignments to bases about which we don't know. 2) If the same transcript appears multiple times in the input BAM header, but with different lengths, this also seems a difficult situation to allow. Exact duplicates are one thing, but I'm not sure if sequences ever appear with the same name but different lengths. If so, I'm thinking this would be a hard error. So, I think at least one situation we could reasonably deal with is that the input FASTA file contains multiple entries with the same name (and same length / sequence). In this case, we could retain only one of them, and document / log the fact that multiple identical entries were present in the input. Of course, there would still be an issue if we had a mismatch as with your example STAR input, where STAR concatenated all 3 occurences of an identical transcript. Are there other cases you can think of where it would make sense to somehow deal with the issue in salmon and continue with processing (perhaps with some extra warnings / log info)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904
https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904:253,Availability,recover,recover,253,"Hi @jeremymsimon,. So I'm trying to think about what issues _could_ be reasonably dealt with here. . 1) If the length of the sequence in the BAM header and the sequence provided in the FASTA file are different, this seems like a very difficult error to recover from since records can then contain alignments to bases about which we don't know. 2) If the same transcript appears multiple times in the input BAM header, but with different lengths, this also seems a difficult situation to allow. Exact duplicates are one thing, but I'm not sure if sequences ever appear with the same name but different lengths. If so, I'm thinking this would be a hard error. So, I think at least one situation we could reasonably deal with is that the input FASTA file contains multiple entries with the same name (and same length / sequence). In this case, we could retain only one of them, and document / log the fact that multiple identical entries were present in the input. Of course, there would still be an issue if we had a mismatch as with your example STAR input, where STAR concatenated all 3 occurences of an identical transcript. Are there other cases you can think of where it would make sense to somehow deal with the issue in salmon and continue with processing (perhaps with some extra warnings / log info)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904
https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904:651,Availability,error,error,651,"Hi @jeremymsimon,. So I'm trying to think about what issues _could_ be reasonably dealt with here. . 1) If the length of the sequence in the BAM header and the sequence provided in the FASTA file are different, this seems like a very difficult error to recover from since records can then contain alignments to bases about which we don't know. 2) If the same transcript appears multiple times in the input BAM header, but with different lengths, this also seems a difficult situation to allow. Exact duplicates are one thing, but I'm not sure if sequences ever appear with the same name but different lengths. If so, I'm thinking this would be a hard error. So, I think at least one situation we could reasonably deal with is that the input FASTA file contains multiple entries with the same name (and same length / sequence). In this case, we could retain only one of them, and document / log the fact that multiple identical entries were present in the input. Of course, there would still be an issue if we had a mismatch as with your example STAR input, where STAR concatenated all 3 occurences of an identical transcript. Are there other cases you can think of where it would make sense to somehow deal with the issue in salmon and continue with processing (perhaps with some extra warnings / log info)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904
https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904:253,Safety,recover,recover,253,"Hi @jeremymsimon,. So I'm trying to think about what issues _could_ be reasonably dealt with here. . 1) If the length of the sequence in the BAM header and the sequence provided in the FASTA file are different, this seems like a very difficult error to recover from since records can then contain alignments to bases about which we don't know. 2) If the same transcript appears multiple times in the input BAM header, but with different lengths, this also seems a difficult situation to allow. Exact duplicates are one thing, but I'm not sure if sequences ever appear with the same name but different lengths. If so, I'm thinking this would be a hard error. So, I think at least one situation we could reasonably deal with is that the input FASTA file contains multiple entries with the same name (and same length / sequence). In this case, we could retain only one of them, and document / log the fact that multiple identical entries were present in the input. Of course, there would still be an issue if we had a mismatch as with your example STAR input, where STAR concatenated all 3 occurences of an identical transcript. Are there other cases you can think of where it would make sense to somehow deal with the issue in salmon and continue with processing (perhaps with some extra warnings / log info)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904
https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904:890,Testability,log,log,890,"Hi @jeremymsimon,. So I'm trying to think about what issues _could_ be reasonably dealt with here. . 1) If the length of the sequence in the BAM header and the sequence provided in the FASTA file are different, this seems like a very difficult error to recover from since records can then contain alignments to bases about which we don't know. 2) If the same transcript appears multiple times in the input BAM header, but with different lengths, this also seems a difficult situation to allow. Exact duplicates are one thing, but I'm not sure if sequences ever appear with the same name but different lengths. If so, I'm thinking this would be a hard error. So, I think at least one situation we could reasonably deal with is that the input FASTA file contains multiple entries with the same name (and same length / sequence). In this case, we could retain only one of them, and document / log the fact that multiple identical entries were present in the input. Of course, there would still be an issue if we had a mismatch as with your example STAR input, where STAR concatenated all 3 occurences of an identical transcript. Are there other cases you can think of where it would make sense to somehow deal with the issue in salmon and continue with processing (perhaps with some extra warnings / log info)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904
https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904:1297,Testability,log,log,1297,"Hi @jeremymsimon,. So I'm trying to think about what issues _could_ be reasonably dealt with here. . 1) If the length of the sequence in the BAM header and the sequence provided in the FASTA file are different, this seems like a very difficult error to recover from since records can then contain alignments to bases about which we don't know. 2) If the same transcript appears multiple times in the input BAM header, but with different lengths, this also seems a difficult situation to allow. Exact duplicates are one thing, but I'm not sure if sequences ever appear with the same name but different lengths. If so, I'm thinking this would be a hard error. So, I think at least one situation we could reasonably deal with is that the input FASTA file contains multiple entries with the same name (and same length / sequence). In this case, we could retain only one of them, and document / log the fact that multiple identical entries were present in the input. Of course, there would still be an issue if we had a mismatch as with your example STAR input, where STAR concatenated all 3 occurences of an identical transcript. Are there other cases you can think of where it would make sense to somehow deal with the issue in salmon and continue with processing (perhaps with some extra warnings / log info)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904
https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418812548:186,Safety,avoid,avoid,186,"Yes, this would be possible. My main concern would be how different upstream tools handle this. We know STAR sums the lengths of the repeats --- does HISAT / BBMap etc.? I would like to avoid having too many special cases that are tied in with certain tools. I'm not completely opposed to having a few special cases, so long as there are only a few ;P.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418812548
https://github.com/COMBINE-lab/salmon/issues/283#issuecomment-433157082:492,Availability,down,down,492,"Hey @antonkulaga ,; Sorry for the late reply. Somehow, this one got lost somewhere in the mids of all the other issues.; Thanks for the heads-up and a very nice suggestion. ; I think they have included Alevin in the form of salmon [here](https://www.scrna-tools.org/tools.html#salmon). But we do see your point it could be confusing because of the names, we'll see what can be done in terms of including Alevin too. I am closing this issue for now and would update here if any changes happen down the line.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/283#issuecomment-433157082
https://github.com/COMBINE-lab/salmon/issues/283#issuecomment-433157082:458,Deployability,update,update,458,"Hey @antonkulaga ,; Sorry for the late reply. Somehow, this one got lost somewhere in the mids of all the other issues.; Thanks for the heads-up and a very nice suggestion. ; I think they have included Alevin in the form of salmon [here](https://www.scrna-tools.org/tools.html#salmon). But we do see your point it could be confusing because of the names, we'll see what can be done in terms of including Alevin too. I am closing this issue for now and would update here if any changes happen down the line.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/283#issuecomment-433157082
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393:650,Availability,error,error,650,"HI @gianfilippo ,; I think #245 might help understanding the problem better.; Specifically to answer your questions, I am guessing `737K-august-2016.txt` is all the set of Cellular Barcodes(CB) being whitelisted by 10xGenomics protocol while in Alevin when you are giving external whitelist it assumes that the user is pretty confident about the presence of *all* the given CBs in their experiment. for example if you want to compare Alevin and cellranger apple to apple then you might have to give the `barcodes.tsv`(usually is present along with the `mtx` file) generated by the cellranger. (after removing `-1` from the CB names). ; `[alevinLog] [error] Barcode not found in frequency table`: This error means some of the CB given externally through the whitelist command seems to have no reads at all which violates the above assumption, you can potentially skip this error by using `--debug` flag with alevin (only if have version v0.11.3) but this mode has is yet to be extensively tested.; In case where you don't externally give whitelist CB, Alevin uses knee and KDE based method to identify the cutoff on the knee (and later correct for it) of the CB distribution. Based on your specific dataset it is possible that the method might be overshooting and aggressively identifying less number of clusters. If you can share the log and some part of your data then we can take a look what's going on. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393:701,Availability,error,error,701,"HI @gianfilippo ,; I think #245 might help understanding the problem better.; Specifically to answer your questions, I am guessing `737K-august-2016.txt` is all the set of Cellular Barcodes(CB) being whitelisted by 10xGenomics protocol while in Alevin when you are giving external whitelist it assumes that the user is pretty confident about the presence of *all* the given CBs in their experiment. for example if you want to compare Alevin and cellranger apple to apple then you might have to give the `barcodes.tsv`(usually is present along with the `mtx` file) generated by the cellranger. (after removing `-1` from the CB names). ; `[alevinLog] [error] Barcode not found in frequency table`: This error means some of the CB given externally through the whitelist command seems to have no reads at all which violates the above assumption, you can potentially skip this error by using `--debug` flag with alevin (only if have version v0.11.3) but this mode has is yet to be extensively tested.; In case where you don't externally give whitelist CB, Alevin uses knee and KDE based method to identify the cutoff on the knee (and later correct for it) of the CB distribution. Based on your specific dataset it is possible that the method might be overshooting and aggressively identifying less number of clusters. If you can share the log and some part of your data then we can take a look what's going on. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393:872,Availability,error,error,872,"HI @gianfilippo ,; I think #245 might help understanding the problem better.; Specifically to answer your questions, I am guessing `737K-august-2016.txt` is all the set of Cellular Barcodes(CB) being whitelisted by 10xGenomics protocol while in Alevin when you are giving external whitelist it assumes that the user is pretty confident about the presence of *all* the given CBs in their experiment. for example if you want to compare Alevin and cellranger apple to apple then you might have to give the `barcodes.tsv`(usually is present along with the `mtx` file) generated by the cellranger. (after removing `-1` from the CB names). ; `[alevinLog] [error] Barcode not found in frequency table`: This error means some of the CB given externally through the whitelist command seems to have no reads at all which violates the above assumption, you can potentially skip this error by using `--debug` flag with alevin (only if have version v0.11.3) but this mode has is yet to be extensively tested.; In case where you don't externally give whitelist CB, Alevin uses knee and KDE based method to identify the cutoff on the knee (and later correct for it) of the CB distribution. Based on your specific dataset it is possible that the method might be overshooting and aggressively identifying less number of clusters. If you can share the log and some part of your data then we can take a look what's going on. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393:227,Integrability,protocol,protocol,227,"HI @gianfilippo ,; I think #245 might help understanding the problem better.; Specifically to answer your questions, I am guessing `737K-august-2016.txt` is all the set of Cellular Barcodes(CB) being whitelisted by 10xGenomics protocol while in Alevin when you are giving external whitelist it assumes that the user is pretty confident about the presence of *all* the given CBs in their experiment. for example if you want to compare Alevin and cellranger apple to apple then you might have to give the `barcodes.tsv`(usually is present along with the `mtx` file) generated by the cellranger. (after removing `-1` from the CB names). ; `[alevinLog] [error] Barcode not found in frequency table`: This error means some of the CB given externally through the whitelist command seems to have no reads at all which violates the above assumption, you can potentially skip this error by using `--debug` flag with alevin (only if have version v0.11.3) but this mode has is yet to be extensively tested.; In case where you don't externally give whitelist CB, Alevin uses knee and KDE based method to identify the cutoff on the knee (and later correct for it) of the CB distribution. Based on your specific dataset it is possible that the method might be overshooting and aggressively identifying less number of clusters. If you can share the log and some part of your data then we can take a look what's going on. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393:988,Testability,test,tested,988,"HI @gianfilippo ,; I think #245 might help understanding the problem better.; Specifically to answer your questions, I am guessing `737K-august-2016.txt` is all the set of Cellular Barcodes(CB) being whitelisted by 10xGenomics protocol while in Alevin when you are giving external whitelist it assumes that the user is pretty confident about the presence of *all* the given CBs in their experiment. for example if you want to compare Alevin and cellranger apple to apple then you might have to give the `barcodes.tsv`(usually is present along with the `mtx` file) generated by the cellranger. (after removing `-1` from the CB names). ; `[alevinLog] [error] Barcode not found in frequency table`: This error means some of the CB given externally through the whitelist command seems to have no reads at all which violates the above assumption, you can potentially skip this error by using `--debug` flag with alevin (only if have version v0.11.3) but this mode has is yet to be extensively tested.; In case where you don't externally give whitelist CB, Alevin uses knee and KDE based method to identify the cutoff on the knee (and later correct for it) of the CB distribution. Based on your specific dataset it is possible that the method might be overshooting and aggressively identifying less number of clusters. If you can share the log and some part of your data then we can take a look what's going on. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393:1334,Testability,log,log,1334,"HI @gianfilippo ,; I think #245 might help understanding the problem better.; Specifically to answer your questions, I am guessing `737K-august-2016.txt` is all the set of Cellular Barcodes(CB) being whitelisted by 10xGenomics protocol while in Alevin when you are giving external whitelist it assumes that the user is pretty confident about the presence of *all* the given CBs in their experiment. for example if you want to compare Alevin and cellranger apple to apple then you might have to give the `barcodes.tsv`(usually is present along with the `mtx` file) generated by the cellranger. (after removing `-1` from the CB names). ; `[alevinLog] [error] Barcode not found in frequency table`: This error means some of the CB given externally through the whitelist command seems to have no reads at all which violates the above assumption, you can potentially skip this error by using `--debug` flag with alevin (only if have version v0.11.3) but this mode has is yet to be extensively tested.; In case where you don't externally give whitelist CB, Alevin uses knee and KDE based method to identify the cutoff on the knee (and later correct for it) of the CB distribution. Based on your specific dataset it is possible that the method might be overshooting and aggressively identifying less number of clusters. If you can share the log and some part of your data then we can take a look what's going on. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098:172,Testability,log,log,172,"Hi,. thanks for the prompt reply and suggestions. I rerun it as you suggested, using the cellranger generated barcode file and it looks much better now. I am attaching the log files. How much of the FASTQ files would you need ?. Thanks; [salmon_quant.log.txt](https://github.com/COMBINE-lab/salmon/files/2343857/salmon_quant.log.txt); [alevin.log.txt](https://github.com/COMBINE-lab/salmon/files/2343858/alevin.log.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098:251,Testability,log,log,251,"Hi,. thanks for the prompt reply and suggestions. I rerun it as you suggested, using the cellranger generated barcode file and it looks much better now. I am attaching the log files. How much of the FASTQ files would you need ?. Thanks; [salmon_quant.log.txt](https://github.com/COMBINE-lab/salmon/files/2343857/salmon_quant.log.txt); [alevin.log.txt](https://github.com/COMBINE-lab/salmon/files/2343858/alevin.log.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098:325,Testability,log,log,325,"Hi,. thanks for the prompt reply and suggestions. I rerun it as you suggested, using the cellranger generated barcode file and it looks much better now. I am attaching the log files. How much of the FASTQ files would you need ?. Thanks; [salmon_quant.log.txt](https://github.com/COMBINE-lab/salmon/files/2343857/salmon_quant.log.txt); [alevin.log.txt](https://github.com/COMBINE-lab/salmon/files/2343858/alevin.log.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098:343,Testability,log,log,343,"Hi,. thanks for the prompt reply and suggestions. I rerun it as you suggested, using the cellranger generated barcode file and it looks much better now. I am attaching the log files. How much of the FASTQ files would you need ?. Thanks; [salmon_quant.log.txt](https://github.com/COMBINE-lab/salmon/files/2343857/salmon_quant.log.txt); [alevin.log.txt](https://github.com/COMBINE-lab/salmon/files/2343858/alevin.log.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098:411,Testability,log,log,411,"Hi,. thanks for the prompt reply and suggestions. I rerun it as you suggested, using the cellranger generated barcode file and it looks much better now. I am attaching the log files. How much of the FASTQ files would you need ?. Thanks; [salmon_quant.log.txt](https://github.com/COMBINE-lab/salmon/files/2343857/salmon_quant.log.txt); [alevin.log.txt](https://github.com/COMBINE-lab/salmon/files/2343858/alevin.log.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417970098
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418130349:37,Testability,log,logs,37,"Hi @gianfilippo ,; it looks like the logs which you forwarded are for externally given whitelists, can you rerun alevin w/o that?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418130349
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261:44,Testability,log,log,44,"Hi,. sorry about it. Here they are. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2346583/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2346584/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261:108,Testability,log,log,108,"Hi,. sorry about it. Here they are. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2346583/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2346584/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261:128,Testability,log,log,128,"Hi,. sorry about it. Here they are. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2346583/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2346584/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261:198,Testability,log,log,198,"Hi,. sorry about it. Here they are. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2346583/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2346584/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418196261
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418813606:302,Availability,robust,robust,302,"Hi @gianfilippo ,; Thanks for forwarding the logs.; It does look like Alevin knee selection is over-shooting and allowing only ~250 cells as a whitelist.; Although not very frequent but we do have observed this behavior with Alevin knee selection in couple of other experiments and are working on more robust thresholding. I am closing this issue regarding the barcode frequency but will open a new one regarding the aggressive thresholding and would tag you in too, in case you wan't to track.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418813606
https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418813606:45,Testability,log,logs,45,"Hi @gianfilippo ,; Thanks for forwarding the logs.; It does look like Alevin knee selection is over-shooting and allowing only ~250 cells as a whitelist.; Although not very frequent but we do have observed this behavior with Alevin knee selection in couple of other experiments and are working on more robust thresholding. I am closing this issue regarding the barcode frequency but will open a new one regarding the aggressive thresholding and would tag you in too, in case you wan't to track.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418813606
https://github.com/COMBINE-lab/salmon/issues/286#issuecomment-419195164:27,Integrability,depend,dependencies,27,"Hi @bounlu,. None of these dependencies are explicitly declared for the salmon build. In fact, salmon is one of the packages already migrated to the new conda build 3 system. Could you please raise this issue over in the bioconda repository?. Thanks!. Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286#issuecomment-419195164
https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713:98,Deployability,release,release,98,"HI @mfansler ,; Thanks for asking the very important question.; Alevin is primarily (till current release) designed to work with 3'-tagged end, droplet based sequencing where the primary assumption is that most of the reads would ideally be sequenced from the 3'-end of the molecule. Although, Salmon is a transcript quantification tool for *bulk* RNA-seq but we believe in singe-cell (3'-tagged) sequencing, generating quantification at transcript level is fundamentally hard problem to solve. Specifically, one of the reason is, a lot of transcripts share the terminal exon, and the features like length effect which are used in bulk RNA-seq to resolve ambiguity is not directly usable in single-cell for resolving the transcript ambiguity making the problem hard.; It's possible in the future that assays are designed to help incorporate more information e.g. sequencing from both 5' or 3' end sequencing or use SMART-seq2 which sequence the full molecule. In latter case people have been using Salmon as-is for generating the transcript level quantification. . _In summary_: We believe it's a trade-off based on your use case i.e. if you wan't to generate transcript level counts then most-likely single cell protocols which sequence from the full length of the molecules like smart-seq2 is better suited but if the motivation is to get higher number of cell coverage w/ decent gene-level molecule counts that's where 3'-end tagged end sequencing protocols shines most. _One Liner_; Alevin generates only gene-level counts for droplet based sequencing (til latest release v0.11.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713
https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713:1568,Deployability,release,release,1568,"HI @mfansler ,; Thanks for asking the very important question.; Alevin is primarily (till current release) designed to work with 3'-tagged end, droplet based sequencing where the primary assumption is that most of the reads would ideally be sequenced from the 3'-end of the molecule. Although, Salmon is a transcript quantification tool for *bulk* RNA-seq but we believe in singe-cell (3'-tagged) sequencing, generating quantification at transcript level is fundamentally hard problem to solve. Specifically, one of the reason is, a lot of transcripts share the terminal exon, and the features like length effect which are used in bulk RNA-seq to resolve ambiguity is not directly usable in single-cell for resolving the transcript ambiguity making the problem hard.; It's possible in the future that assays are designed to help incorporate more information e.g. sequencing from both 5' or 3' end sequencing or use SMART-seq2 which sequence the full molecule. In latter case people have been using Salmon as-is for generating the transcript level quantification. . _In summary_: We believe it's a trade-off based on your use case i.e. if you wan't to generate transcript level counts then most-likely single cell protocols which sequence from the full length of the molecules like smart-seq2 is better suited but if the motivation is to get higher number of cell coverage w/ decent gene-level molecule counts that's where 3'-end tagged end sequencing protocols shines most. _One Liner_; Alevin generates only gene-level counts for droplet based sequencing (til latest release v0.11.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713
https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713:1213,Integrability,protocol,protocols,1213,"HI @mfansler ,; Thanks for asking the very important question.; Alevin is primarily (till current release) designed to work with 3'-tagged end, droplet based sequencing where the primary assumption is that most of the reads would ideally be sequenced from the 3'-end of the molecule. Although, Salmon is a transcript quantification tool for *bulk* RNA-seq but we believe in singe-cell (3'-tagged) sequencing, generating quantification at transcript level is fundamentally hard problem to solve. Specifically, one of the reason is, a lot of transcripts share the terminal exon, and the features like length effect which are used in bulk RNA-seq to resolve ambiguity is not directly usable in single-cell for resolving the transcript ambiguity making the problem hard.; It's possible in the future that assays are designed to help incorporate more information e.g. sequencing from both 5' or 3' end sequencing or use SMART-seq2 which sequence the full molecule. In latter case people have been using Salmon as-is for generating the transcript level quantification. . _In summary_: We believe it's a trade-off based on your use case i.e. if you wan't to generate transcript level counts then most-likely single cell protocols which sequence from the full length of the molecules like smart-seq2 is better suited but if the motivation is to get higher number of cell coverage w/ decent gene-level molecule counts that's where 3'-end tagged end sequencing protocols shines most. _One Liner_; Alevin generates only gene-level counts for droplet based sequencing (til latest release v0.11.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713
https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713:1451,Integrability,protocol,protocols,1451,"HI @mfansler ,; Thanks for asking the very important question.; Alevin is primarily (till current release) designed to work with 3'-tagged end, droplet based sequencing where the primary assumption is that most of the reads would ideally be sequenced from the 3'-end of the molecule. Although, Salmon is a transcript quantification tool for *bulk* RNA-seq but we believe in singe-cell (3'-tagged) sequencing, generating quantification at transcript level is fundamentally hard problem to solve. Specifically, one of the reason is, a lot of transcripts share the terminal exon, and the features like length effect which are used in bulk RNA-seq to resolve ambiguity is not directly usable in single-cell for resolving the transcript ambiguity making the problem hard.; It's possible in the future that assays are designed to help incorporate more information e.g. sequencing from both 5' or 3' end sequencing or use SMART-seq2 which sequence the full molecule. In latter case people have been using Salmon as-is for generating the transcript level quantification. . _In summary_: We believe it's a trade-off based on your use case i.e. if you wan't to generate transcript level counts then most-likely single cell protocols which sequence from the full length of the molecules like smart-seq2 is better suited but if the motivation is to get higher number of cell coverage w/ decent gene-level molecule counts that's where 3'-end tagged end sequencing protocols shines most. _One Liner_; Alevin generates only gene-level counts for droplet based sequencing (til latest release v0.11.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713
https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713:681,Usability,usab,usable,681,"HI @mfansler ,; Thanks for asking the very important question.; Alevin is primarily (till current release) designed to work with 3'-tagged end, droplet based sequencing where the primary assumption is that most of the reads would ideally be sequenced from the 3'-end of the molecule. Although, Salmon is a transcript quantification tool for *bulk* RNA-seq but we believe in singe-cell (3'-tagged) sequencing, generating quantification at transcript level is fundamentally hard problem to solve. Specifically, one of the reason is, a lot of transcripts share the terminal exon, and the features like length effect which are used in bulk RNA-seq to resolve ambiguity is not directly usable in single-cell for resolving the transcript ambiguity making the problem hard.; It's possible in the future that assays are designed to help incorporate more information e.g. sequencing from both 5' or 3' end sequencing or use SMART-seq2 which sequence the full molecule. In latter case people have been using Salmon as-is for generating the transcript level quantification. . _In summary_: We believe it's a trade-off based on your use case i.e. if you wan't to generate transcript level counts then most-likely single cell protocols which sequence from the full length of the molecules like smart-seq2 is better suited but if the motivation is to get higher number of cell coverage w/ decent gene-level molecule counts that's where 3'-end tagged end sequencing protocols shines most. _One Liner_; Alevin generates only gene-level counts for droplet based sequencing (til latest release v0.11.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/287#issuecomment-420627713
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420069005:115,Deployability,release,release,115,"Hi @outpaddling,. The only point of pulling from the fork of jemalloc is only to ensure the stability of the URL / release tag. That is, no modifications are made to the corresponding point release of jemalloc. This is not necessarily true for _all forks_ (e.g. we used to rely on some files of a fork from BWA where some things were heavily modified, though that whole fork is no longer part of the build process). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420069005
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420069005:190,Deployability,release,release,190,"Hi @outpaddling,. The only point of pulling from the fork of jemalloc is only to ensure the stability of the URL / release tag. That is, no modifications are made to the corresponding point release of jemalloc. This is not necessarily true for _all forks_ (e.g. we used to rely on some files of a fork from BWA where some things were heavily modified, though that whole fork is no longer part of the build process). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420069005
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420335374:292,Deployability,release,release,292,"Interesting... So you're concerned that; [https://github.com/jemalloc/jemalloc/archive/5.1.0.tar.gz](https://github.com/jemalloc/jemalloc/archive/5.1.0.tar.gz); could change at some point? I'm not an expert on Github internals, but I would assume there are some safeguards against changes to release distfiles.; Thanks,; Jason",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420335374
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420335374:262,Safety,safe,safeguards,262,"Interesting... So you're concerned that; [https://github.com/jemalloc/jemalloc/archive/5.1.0.tar.gz](https://github.com/jemalloc/jemalloc/archive/5.1.0.tar.gz); could change at some point? I'm not an expert on Github internals, but I would assume there are some safeguards against changes to release distfiles.; Thanks,; Jason",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420335374
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510:90,Deployability,release,release,90,"While I definitely trust the jemalloc devs, I do know that such things are possible, as a release is simply associated with a tagged commit, which _can_ be changed via a forced update to the tags. I know because, in my early days using git + GitHub, I did such a foolish thing. So, while I'm sure that the jemalloc devs wouldn't change the file associated with a tag, and while there are safeguards (e.g. check that the file we get matches the SHA of what we expect), simply pulling from a fork is a convenient way to handle this ""generally"" (for packages not as production-quality as jemalloc, or where the developers might not have tagged a release corresponding to what we need). I completely understand that you don't want to link against a standard jemalloc if we compile some strange version with custom modifications. However, here, we simply want to use the vanilla jemalloc. In fact, when salmon is built under bioconda, this is exactly what we do (we link against the conda jemalloc >= 5.1.0).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510:177,Deployability,update,update,177,"While I definitely trust the jemalloc devs, I do know that such things are possible, as a release is simply associated with a tagged commit, which _can_ be changed via a forced update to the tags. I know because, in my early days using git + GitHub, I did such a foolish thing. So, while I'm sure that the jemalloc devs wouldn't change the file associated with a tag, and while there are safeguards (e.g. check that the file we get matches the SHA of what we expect), simply pulling from a fork is a convenient way to handle this ""generally"" (for packages not as production-quality as jemalloc, or where the developers might not have tagged a release corresponding to what we need). I completely understand that you don't want to link against a standard jemalloc if we compile some strange version with custom modifications. However, here, we simply want to use the vanilla jemalloc. In fact, when salmon is built under bioconda, this is exactly what we do (we link against the conda jemalloc >= 5.1.0).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510:643,Deployability,release,release,643,"While I definitely trust the jemalloc devs, I do know that such things are possible, as a release is simply associated with a tagged commit, which _can_ be changed via a forced update to the tags. I know because, in my early days using git + GitHub, I did such a foolish thing. So, while I'm sure that the jemalloc devs wouldn't change the file associated with a tag, and while there are safeguards (e.g. check that the file we get matches the SHA of what we expect), simply pulling from a fork is a convenient way to handle this ""generally"" (for packages not as production-quality as jemalloc, or where the developers might not have tagged a release corresponding to what we need). I completely understand that you don't want to link against a standard jemalloc if we compile some strange version with custom modifications. However, here, we simply want to use the vanilla jemalloc. In fact, when salmon is built under bioconda, this is exactly what we do (we link against the conda jemalloc >= 5.1.0).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510:388,Safety,safe,safeguards,388,"While I definitely trust the jemalloc devs, I do know that such things are possible, as a release is simply associated with a tagged commit, which _can_ be changed via a forced update to the tags. I know because, in my early days using git + GitHub, I did such a foolish thing. So, while I'm sure that the jemalloc devs wouldn't change the file associated with a tag, and while there are safeguards (e.g. check that the file we get matches the SHA of what we expect), simply pulling from a fork is a convenient way to handle this ""generally"" (for packages not as production-quality as jemalloc, or where the developers might not have tagged a release corresponding to what we need). I completely understand that you don't want to link against a standard jemalloc if we compile some strange version with custom modifications. However, here, we simply want to use the vanilla jemalloc. In fact, when salmon is built under bioconda, this is exactly what we do (we link against the conda jemalloc >= 5.1.0).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510:101,Usability,simpl,simply,101,"While I definitely trust the jemalloc devs, I do know that such things are possible, as a release is simply associated with a tagged commit, which _can_ be changed via a forced update to the tags. I know because, in my early days using git + GitHub, I did such a foolish thing. So, while I'm sure that the jemalloc devs wouldn't change the file associated with a tag, and while there are safeguards (e.g. check that the file we get matches the SHA of what we expect), simply pulling from a fork is a convenient way to handle this ""generally"" (for packages not as production-quality as jemalloc, or where the developers might not have tagged a release corresponding to what we need). I completely understand that you don't want to link against a standard jemalloc if we compile some strange version with custom modifications. However, here, we simply want to use the vanilla jemalloc. In fact, when salmon is built under bioconda, this is exactly what we do (we link against the conda jemalloc >= 5.1.0).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510:468,Usability,simpl,simply,468,"While I definitely trust the jemalloc devs, I do know that such things are possible, as a release is simply associated with a tagged commit, which _can_ be changed via a forced update to the tags. I know because, in my early days using git + GitHub, I did such a foolish thing. So, while I'm sure that the jemalloc devs wouldn't change the file associated with a tag, and while there are safeguards (e.g. check that the file we get matches the SHA of what we expect), simply pulling from a fork is a convenient way to handle this ""generally"" (for packages not as production-quality as jemalloc, or where the developers might not have tagged a release corresponding to what we need). I completely understand that you don't want to link against a standard jemalloc if we compile some strange version with custom modifications. However, here, we simply want to use the vanilla jemalloc. In fact, when salmon is built under bioconda, this is exactly what we do (we link against the conda jemalloc >= 5.1.0).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510:843,Usability,simpl,simply,843,"While I definitely trust the jemalloc devs, I do know that such things are possible, as a release is simply associated with a tagged commit, which _can_ be changed via a forced update to the tags. I know because, in my early days using git + GitHub, I did such a foolish thing. So, while I'm sure that the jemalloc devs wouldn't change the file associated with a tag, and while there are safeguards (e.g. check that the file we get matches the SHA of what we expect), simply pulling from a fork is a convenient way to handle this ""generally"" (for packages not as production-quality as jemalloc, or where the developers might not have tagged a release corresponding to what we need). I completely understand that you don't want to link against a standard jemalloc if we compile some strange version with custom modifications. However, here, we simply want to use the vanilla jemalloc. In fact, when salmon is built under bioconda, this is exactly what we do (we link against the conda jemalloc >= 5.1.0).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420339510
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097:204,Deployability,install,installs,204,"Thanks, I was good with linking against external jemalloc after your first reply. Mainly interested in knowing the details of your concern, so thanks for elaborating. We use pkgsrc for most of our CentOS installs, and now I feel safe using devel/jemalloc as a dependency. We also use FreeBSD, and in this case, I just patched out the dependency altogether, since jemalloc is FreeBSD's default allocator. Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097:318,Deployability,patch,patched,318,"Thanks, I was good with linking against external jemalloc after your first reply. Mainly interested in knowing the details of your concern, so thanks for elaborating. We use pkgsrc for most of our CentOS installs, and now I feel safe using devel/jemalloc as a dependency. We also use FreeBSD, and in this case, I just patched out the dependency altogether, since jemalloc is FreeBSD's default allocator. Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097:260,Integrability,depend,dependency,260,"Thanks, I was good with linking against external jemalloc after your first reply. Mainly interested in knowing the details of your concern, so thanks for elaborating. We use pkgsrc for most of our CentOS installs, and now I feel safe using devel/jemalloc as a dependency. We also use FreeBSD, and in this case, I just patched out the dependency altogether, since jemalloc is FreeBSD's default allocator. Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097:334,Integrability,depend,dependency,334,"Thanks, I was good with linking against external jemalloc after your first reply. Mainly interested in knowing the details of your concern, so thanks for elaborating. We use pkgsrc for most of our CentOS installs, and now I feel safe using devel/jemalloc as a dependency. We also use FreeBSD, and in this case, I just patched out the dependency altogether, since jemalloc is FreeBSD's default allocator. Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097:229,Safety,safe,safe,229,"Thanks, I was good with linking against external jemalloc after your first reply. Mainly interested in knowing the details of your concern, so thanks for elaborating. We use pkgsrc for most of our CentOS installs, and now I feel safe using devel/jemalloc as a dependency. We also use FreeBSD, and in this case, I just patched out the dependency altogether, since jemalloc is FreeBSD's default allocator. Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420343097
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:238,Availability,down,downloaded,238,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:368,Availability,down,downloads,368,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:484,Availability,down,downloads,484,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:119,Deployability,install,installed,119,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:181,Deployability,patch,patch,181,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:502,Deployability,patch,patching,502,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:765,Deployability,install,install,765,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:129,Integrability,depend,dependencies,129,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:773,Integrability,depend,dependencies,773,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:469,Safety,avoid,avoid,469,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:417,Security,secur,security,417,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:69,Availability,error,error,69,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:257,Availability,error,error,257,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:394,Availability,error,error,394,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:585,Availability,error,error,585,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:679,Availability,error,errors,679,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:762,Deployability,update,updated,762,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:507,Testability,test,testing,507,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:342,Usability,clear,clear,342,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420553174:77,Availability,error,error,77,"Hi @rob-p,. Thanks for the tip, using `--noErrorModel` indeed got rid of the error messages. Also, any advice regarding the best practices using salmon on nanopore data are welcome. Best,; Botond",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420553174
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420553174:83,Integrability,message,messages,83,"Hi @rob-p,. Thanks for the tip, using `--noErrorModel` indeed got rid of the error messages. Also, any advice regarding the best practices using salmon on nanopore data are welcome. Best,; Botond",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420553174
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220:33,Availability,error,error,33,"I attempted to use the new --ont error model that has been developed for Salmon but am getting the same error mentioned here. **To Reproduce**. Which version of salmon was used?; salmon version: salmon 1.5.1, minimap2 version: 2.20-r1061; How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; Which reference (e.g. transcriptome) was used?; Custom generated transcriptome (Stringtie2, merged with ensembl release 104 Hg38); Which read files were used?; Nanopore reads.; Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l MSF -a {input.bam} -o {output.tsv_dir} --ont; Desktop (please complete the following information):; Ubuntu 20.04.2 LTS",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220:104,Availability,error,error,104,"I attempted to use the new --ont error model that has been developed for Salmon but am getting the same error mentioned here. **To Reproduce**. Which version of salmon was used?; salmon version: salmon 1.5.1, minimap2 version: 2.20-r1061; How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; Which reference (e.g. transcriptome) was used?; Custom generated transcriptome (Stringtie2, merged with ensembl release 104 Hg38); Which read files were used?; Nanopore reads.; Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l MSF -a {input.bam} -o {output.tsv_dir} --ont; Desktop (please complete the following information):; Ubuntu 20.04.2 LTS",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220:275,Availability,down,downloaded,275,"I attempted to use the new --ont error model that has been developed for Salmon but am getting the same error mentioned here. **To Reproduce**. Which version of salmon was used?; salmon version: salmon 1.5.1, minimap2 version: 2.20-r1061; How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; Which reference (e.g. transcriptome) was used?; Custom generated transcriptome (Stringtie2, merged with ensembl release 104 Hg38); Which read files were used?; Nanopore reads.; Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l MSF -a {input.bam} -o {output.tsv_dir} --ont; Desktop (please complete the following information):; Ubuntu 20.04.2 LTS",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220:254,Deployability,install,installed,254,"I attempted to use the new --ont error model that has been developed for Salmon but am getting the same error mentioned here. **To Reproduce**. Which version of salmon was used?; salmon version: salmon 1.5.1, minimap2 version: 2.20-r1061; How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; Which reference (e.g. transcriptome) was used?; Custom generated transcriptome (Stringtie2, merged with ensembl release 104 Hg38); Which read files were used?; Nanopore reads.; Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l MSF -a {input.bam} -o {output.tsv_dir} --ont; Desktop (please complete the following information):; Ubuntu 20.04.2 LTS",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220:318,Deployability,Install,Installed,318,"I attempted to use the new --ont error model that has been developed for Salmon but am getting the same error mentioned here. **To Reproduce**. Which version of salmon was used?; salmon version: salmon 1.5.1, minimap2 version: 2.20-r1061; How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; Which reference (e.g. transcriptome) was used?; Custom generated transcriptome (Stringtie2, merged with ensembl release 104 Hg38); Which read files were used?; Nanopore reads.; Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l MSF -a {input.bam} -o {output.tsv_dir} --ont; Desktop (please complete the following information):; Ubuntu 20.04.2 LTS",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220:459,Deployability,release,release,459,"I attempted to use the new --ont error model that has been developed for Salmon but am getting the same error mentioned here. **To Reproduce**. Which version of salmon was used?; salmon version: salmon 1.5.1, minimap2 version: 2.20-r1061; How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; Which reference (e.g. transcriptome) was used?; Custom generated transcriptome (Stringtie2, merged with ensembl release 104 Hg38); Which read files were used?; Nanopore reads.; Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l MSF -a {input.bam} -o {output.tsv_dir} --ont; Desktop (please complete the following information):; Ubuntu 20.04.2 LTS",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:369,Availability,fault,fault,369,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:863,Availability,Error,Error,863,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:881,Availability,ERROR,ERROR,881,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:1111,Availability,error,error,1111,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:644,Performance,perform,performed,644,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:554,Security,Validat,ValidateSamFile,554,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:604,Security,Validat,ValidateSamFile,604,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:623,Security,validat,validation,623,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:687,Security,validat,validations,687,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305
https://github.com/COMBINE-lab/salmon/issues/290#issuecomment-424523688:70,Usability,clear,clear,70,"Hi @TSL-RamKrishna,. Thanks for the report. However, it's not exactly clear to me how this is related specifically to salmon. Generally, if the libm you have is _newer_ than the one salmon was built with, you should be OK. So, one option would be to simply remove the `libm.so.6` from the salmon `lib` directory and see what happens.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290#issuecomment-424523688
https://github.com/COMBINE-lab/salmon/issues/290#issuecomment-424523688:250,Usability,simpl,simply,250,"Hi @TSL-RamKrishna,. Thanks for the report. However, it's not exactly clear to me how this is related specifically to salmon. Generally, if the libm you have is _newer_ than the one salmon was built with, you should be OK. So, one option would be to simply remove the `libm.so.6` from the salmon `lib` directory and see what happens.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290#issuecomment-424523688
https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420619144:118,Availability,error,error,118,"Hi @dbrg77 ,; Thanks for raising the issue and the very interesting future direction.; A quick question regarding the error, can you please check if the length of _all_ the externally given whitelisted CB are of length 16 ?. Extracting the CB/UMI from bcl or generalizing the input format for PE is indeed in our todo list. Specially with the introduction of combinatorial barcoding of single cells, as you said, the information might be in multiple files and has to be extracted right. It's definitely in our priority list and one would hope to support this in future. However, if your use case is different from above then we should definitely chat about that in little more details.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420619144
https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198:1087,Availability,avail,available,1087,"Hi @k3yavi , thank you for the reply. Yes, you are right, it seems the problem is indeed in the whitelist `known_cb.txt`. However, I cannot seem to find out what exactly is going on with the file. When I wrote a python script to check the length of each cell barcode in `known_cb.txt`, _all_ of them are 16 bp long. This is the python script:. ```; $ cat print_length.py; with open('known_cb.txt') as fh:; for i in fh:; print(len(i)); ```. since each line has 16 bp barcode and a `\n` character, it outputs 17, which is expected. However, when I used `awk` to check the length, I expected `awk` to output 16, but it actually output 17:. ```; $ awk '{print length($0);}' known_cb.txt | head -2; 17; 17; ```. There might be some hidden characters that I missed. Any idea what's going?. Now, I have cleaned the `known_cb.txt`, and `alevin` runs without problem. For combinatorial indexing, good to known that it will be supported in future. I guess depending on assays, it needs to be a bit more flexible than the current options. The current options have only `--chromium` and `--dropseq` available. However, there are a few different combinatorial indexing assays. For `sci-RNA-seq`, the cell barcodes are within `I1.fastq`, `I2.fastq` and `R1.fastq`. Only `R2.fastq` is useful for gene quantification. For `sci-ATAC-seq`, the cell barcodes (this is just my educational guess) are within `I1.fastq` and `I2.fastq`, and both `R1.fastq` and `R2.fastq` contain useful information from the genome. For other plate-based method, there will be well barcodes and plate barcodes, which could be located in any of those 4 fastq files depends on the design. The cell barcodes will be a combination of well barcodes and plate barcodes. Thank you very much for the help. Regards,; Xi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198
https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198:946,Integrability,depend,depending,946,"Hi @k3yavi , thank you for the reply. Yes, you are right, it seems the problem is indeed in the whitelist `known_cb.txt`. However, I cannot seem to find out what exactly is going on with the file. When I wrote a python script to check the length of each cell barcode in `known_cb.txt`, _all_ of them are 16 bp long. This is the python script:. ```; $ cat print_length.py; with open('known_cb.txt') as fh:; for i in fh:; print(len(i)); ```. since each line has 16 bp barcode and a `\n` character, it outputs 17, which is expected. However, when I used `awk` to check the length, I expected `awk` to output 16, but it actually output 17:. ```; $ awk '{print length($0);}' known_cb.txt | head -2; 17; 17; ```. There might be some hidden characters that I missed. Any idea what's going?. Now, I have cleaned the `known_cb.txt`, and `alevin` runs without problem. For combinatorial indexing, good to known that it will be supported in future. I guess depending on assays, it needs to be a bit more flexible than the current options. The current options have only `--chromium` and `--dropseq` available. However, there are a few different combinatorial indexing assays. For `sci-RNA-seq`, the cell barcodes are within `I1.fastq`, `I2.fastq` and `R1.fastq`. Only `R2.fastq` is useful for gene quantification. For `sci-ATAC-seq`, the cell barcodes (this is just my educational guess) are within `I1.fastq` and `I2.fastq`, and both `R1.fastq` and `R2.fastq` contain useful information from the genome. For other plate-based method, there will be well barcodes and plate barcodes, which could be located in any of those 4 fastq files depends on the design. The cell barcodes will be a combination of well barcodes and plate barcodes. Thank you very much for the help. Regards,; Xi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198
https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198:1624,Integrability,depend,depends,1624,"Hi @k3yavi , thank you for the reply. Yes, you are right, it seems the problem is indeed in the whitelist `known_cb.txt`. However, I cannot seem to find out what exactly is going on with the file. When I wrote a python script to check the length of each cell barcode in `known_cb.txt`, _all_ of them are 16 bp long. This is the python script:. ```; $ cat print_length.py; with open('known_cb.txt') as fh:; for i in fh:; print(len(i)); ```. since each line has 16 bp barcode and a `\n` character, it outputs 17, which is expected. However, when I used `awk` to check the length, I expected `awk` to output 16, but it actually output 17:. ```; $ awk '{print length($0);}' known_cb.txt | head -2; 17; 17; ```. There might be some hidden characters that I missed. Any idea what's going?. Now, I have cleaned the `known_cb.txt`, and `alevin` runs without problem. For combinatorial indexing, good to known that it will be supported in future. I guess depending on assays, it needs to be a bit more flexible than the current options. The current options have only `--chromium` and `--dropseq` available. However, there are a few different combinatorial indexing assays. For `sci-RNA-seq`, the cell barcodes are within `I1.fastq`, `I2.fastq` and `R1.fastq`. Only `R2.fastq` is useful for gene quantification. For `sci-ATAC-seq`, the cell barcodes (this is just my educational guess) are within `I1.fastq` and `I2.fastq`, and both `R1.fastq` and `R2.fastq` contain useful information from the genome. For other plate-based method, there will be well barcodes and plate barcodes, which could be located in any of those 4 fastq files depends on the design. The cell barcodes will be a combination of well barcodes and plate barcodes. Thank you very much for the help. Regards,; Xi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198
https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198:993,Modifiability,flexible,flexible,993,"Hi @k3yavi , thank you for the reply. Yes, you are right, it seems the problem is indeed in the whitelist `known_cb.txt`. However, I cannot seem to find out what exactly is going on with the file. When I wrote a python script to check the length of each cell barcode in `known_cb.txt`, _all_ of them are 16 bp long. This is the python script:. ```; $ cat print_length.py; with open('known_cb.txt') as fh:; for i in fh:; print(len(i)); ```. since each line has 16 bp barcode and a `\n` character, it outputs 17, which is expected. However, when I used `awk` to check the length, I expected `awk` to output 16, but it actually output 17:. ```; $ awk '{print length($0);}' known_cb.txt | head -2; 17; 17; ```. There might be some hidden characters that I missed. Any idea what's going?. Now, I have cleaned the `known_cb.txt`, and `alevin` runs without problem. For combinatorial indexing, good to known that it will be supported in future. I guess depending on assays, it needs to be a bit more flexible than the current options. The current options have only `--chromium` and `--dropseq` available. However, there are a few different combinatorial indexing assays. For `sci-RNA-seq`, the cell barcodes are within `I1.fastq`, `I2.fastq` and `R1.fastq`. Only `R2.fastq` is useful for gene quantification. For `sci-ATAC-seq`, the cell barcodes (this is just my educational guess) are within `I1.fastq` and `I2.fastq`, and both `R1.fastq` and `R2.fastq` contain useful information from the genome. For other plate-based method, there will be well barcodes and plate barcodes, which could be located in any of those 4 fastq files depends on the design. The cell barcodes will be a combination of well barcodes and plate barcodes. Thank you very much for the help. Regards,; Xi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198
https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420812116:153,Availability,error,error,153,"HI @dbrg77 ,. Thanks for the tips on sci-seq and sci-car seq. We have put both in our todo list and would let you know once we have a stable version. re error: I am not sure why would there be an extra count under `awk`, although based on the editor/environment I think they sometimes use `\r\n` as the newline operator but don't trust me on this one it's just a hunch. I am closing this issue for now, feel free to open it if you have any other question.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420812116
https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-421432387:59,Availability,failure,failures,59,You can see the added cmake file lint test case as allowed failures on Travis here.; It's good to see how the `cmakelint` works.; https://travis-ci.org/COMBINE-lab/salmon/builds/427929967,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-421432387
https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-421432387:38,Testability,test,test,38,You can see the added cmake file lint test case as allowed failures on Travis here.; It's good to see how the `cmakelint` works.; https://travis-ci.org/COMBINE-lab/salmon/builds/427929967,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-421432387
https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-424512831:164,Energy Efficiency,green,green,164,"@rob-p thanks for merging! I wish the Travis CI's lint task helps to fix the warnings, and keep the consistent format of `cmake` files!; Eventually we will see the green color passing the lint check on the Travis CI page :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-424512831
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:53,Deployability,update,updated,53,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:92,Deployability,pipeline,pipeline,92,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:213,Deployability,update,updated,213,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:557,Deployability,Update,Update,557,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:388,Integrability,wrap,wrapper,388,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:525,Integrability,wrap,wrapper,525,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:533,Integrability,wrap,wrapper,533,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746:688,Integrability,wrap,wrapper,688,"Hi @pophipi ,; Sorry for the late response.; We have updated some of the steps for the `v1` pipeline and the relevant How to [document](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) has been updated too. Please refer to the tutorial and let us know if you still face the problem. Specifically in your case you might have to do the following things: ; * compile the `wrapper.cpp` file in `salmon/scripts/v1_10x` folder with the command:; ```; g++ -std=c++11 -O3 -I \<PATH TO SALMON INCLUDE DIRECTORY\>-o wrapper wrapper.cpp -lz; ```; * Update the `run.sh` file [here](https://github.com/COMBINE-lab/salmon/blob/master/scripts/v1_10x/run.sh#L17) with the path to the `wrapper` binary created in the above step.; * Use following command to run alevin in v1 mode:; ```; ./run.sh salmon alevin -l ISR -b ./reads/ --gemcode -i ./index_15_pc -p 10 -o ./alevin_15_pc --tgMap ./txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422198746
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422564822:133,Performance,optimiz,optimizer,133,"@k3yavi That seems to have fixed it, but I did get a warning at the end:. ```; [2018-09-18 15:18:46.675] [alevinLog] [info] Finished optimizer; [2018-09-18 15:18:46.697] [jointLog] [warning] NOTE: Read Lib [./read-I1_si-AGGGACTG_lane-001-chunk-001.fastq.gz, ./read-I1_si-AGGGACTG_lane-002-chunk-000.fastq.gz, ./read-I1_si-AGGGACTG_lane-003-chunk-003.fastq.gz, ./read-I1_si-AGGGACTG_lane-004-chunk-002.fastq.gz, ./read-I1_si-CCTCTAAC_lane-001-chunk-001.fastq.gz, ./read-I1_si-CCTCTAAC_lane-002-chunk-000.fastq.gz, ./read-I1_si-CCTCTAAC_lane-003-chunk-003.fastq.gz, ./read-I1_si-CCTCTAAC_lane-004-chunk-002.fastq.gz, ./read-I1_si-GACAGGCT_lane-001-chunk-001.fastq.gz, ./read-I1_si-GACAGGCT_lane-002-chunk-000.fastq.gz, ./read-I1_si-GACAGGCT_lane-003-chunk-003.fastq.gz, ./read-I1_si-GACAGGCT_lane-004-chunk-002.fastq.gz, ./read-I1_si-TTATCTGA_lane-001-chunk-001.fastq.gz, ./read-I1_si-TTATCTGA_lane-002-chunk-000.fastq.gz, ./read-I1_si-TTATCTGA_lane-003-chunk-003.fastq.gz, ./read-I1_si-TTATCTGA_lane-004-chunk-002.fastq.gz] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: ../../alevin_15_pc/lib_format_counts.json for details; ```; Is this ok to ignore?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422564822
https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422618229:335,Integrability,protocol,protocols,335,"can you share the contents of the file `../../alevin_15_pc/lib_format_counts.json` ?; Basically what it's saying is that the assumption made to explicitly define the library type in the command line flag i.e. `-lISR` which means that the library is stranded and the reads are coming from the reverse strand is getting violated. In 10x protocols we generally expects that the read follow the `ISR` standard but it looks like some 5% of the reads are not following this property and that's what Alevin is complaining. It is possible since this is v1, we might expect some non-trivial fraction of reads to be non-stranded but too hard to say .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294#issuecomment-422618229
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421369284:15,Availability,fault,fault,15,![segmentation fault](https://user-images.githubusercontent.com/32517940/45555058-bd97f580-b805-11e8-8432-5d13c989bb3f.png),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421369284
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376023:91,Deployability,install,installed,91,"Hi @mcfwoodruff,. Sorry to see you're encountering this issue. Can you let me know how you installed Salmon? Did you compile it from source, or install it via bioconda? My best guess is that some binary incompatibility is what's causing the segfault.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376023
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376023:144,Deployability,install,install,144,"Hi @mcfwoodruff,. Sorry to see you're encountering this issue. Can you let me know how you installed Salmon? Did you compile it from source, or install it via bioconda? My best guess is that some binary incompatibility is what's causing the segfault.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376023
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376969:51,Deployability,install,installed,51,"Hi @rob-p . Thanks for the quick reply. Salmon was installed through bioconda. I'm pretty new to working in the console, but these are the commands I used:. `$ conda config --add channels conda-forge`; `$ conda config --add channels bioconda`; `$ conda create -n salmon salmon`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376969
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376969:166,Modifiability,config,config,166,"Hi @rob-p . Thanks for the quick reply. Salmon was installed through bioconda. I'm pretty new to working in the console, but these are the commands I used:. `$ conda config --add channels conda-forge`; `$ conda config --add channels bioconda`; `$ conda create -n salmon salmon`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376969
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376969:211,Modifiability,config,config,211,"Hi @rob-p . Thanks for the quick reply. Salmon was installed through bioconda. I'm pretty new to working in the console, but these are the commands I used:. `$ conda config --add channels conda-forge`; `$ conda config --add channels bioconda`; `$ conda create -n salmon salmon`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421376969
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421393355:84,Deployability,install,install,84,"Thanks @mcfwoodruff,. The good news is I was able to reproduce this using the conda install in my OSX environment. I can also verify that using a salmon executable compiled on this machine itself, the segfault goes away. This means there is probably some binary incompatibility issue with the specific versions of the libraries being used / pulled in under bioconda. I'll see if I can dig deeper (and maybe also provide a pre-compiled binary from OSX to see if that works for you).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421393355
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796:47,Availability,fault,faults,47,"Jumping on this thread. I received similar Seg faults with conda install on OSX. I tried the binary you posted, but receive this error when I try to execute. dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/dnb14/Documents/salmon_0.11.4-pre_OSX/./bin/salmon; Reason: image not found; Trace/BPT trap: 5",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796:129,Availability,error,error,129,"Jumping on this thread. I received similar Seg faults with conda install on OSX. I tried the binary you posted, but receive this error when I try to execute. dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/dnb14/Documents/salmon_0.11.4-pre_OSX/./bin/salmon; Reason: image not found; Trace/BPT trap: 5",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796:65,Deployability,install,install,65,"Jumping on this thread. I received similar Seg faults with conda install on OSX. I tried the binary you posted, but receive this error when I try to execute. dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/dnb14/Documents/salmon_0.11.4-pre_OSX/./bin/salmon; Reason: image not found; Trace/BPT trap: 5",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796:176,Performance,load,loaded,176,"Jumping on this thread. I received similar Seg faults with conda install on OSX. I tried the binary you posted, but receive this error when I try to execute. dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/dnb14/Documents/salmon_0.11.4-pre_OSX/./bin/salmon; Reason: image not found; Trace/BPT trap: 5",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421408534:44,Availability,error,error,44,"If so, I also received an 'image not found' error",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421408534
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421417111:459,Integrability,wrap,wrapper,459,"Hi @davidnboone and @mcfwoodruff,. So, I should have mentioned that if you want to use the pre-compiled binary I provide, you have to put the `lib` folder in your path. One way to accomplish this is to run salmon as follows:. ```; DYLD_FALLBACK_LIBRARY_PATH=<path_to_salmon_folder>/lib <path_to_salmon_folder>/bin/salmon ; ```; Where `<path_to_salmon_folder>` is simply the top-level directory where you decompressed salmon. You can, of course, make a little wrapper script to make launching it less ugly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421417111
https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421417111:363,Usability,simpl,simply,363,"Hi @davidnboone and @mcfwoodruff,. So, I should have mentioned that if you want to use the pre-compiled binary I provide, you have to put the `lib` folder in your path. One way to accomplish this is to run salmon as follows:. ```; DYLD_FALLBACK_LIBRARY_PATH=<path_to_salmon_folder>/lib <path_to_salmon_folder>/bin/salmon ; ```; Where `<path_to_salmon_folder>` is simply the top-level directory where you decompressed salmon. You can, of course, make a little wrapper script to make launching it less ugly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421417111
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422878261:404,Deployability,release,release,404,"Hi @Toseph,. Thank you for the detailed report. I am actually surprised that it agreed to compile, since the CMake file should check for GCC >= 5.2 (https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L102). The reason for that check is that this is the version of GCC we have on our CI servers, and GCC 5 is, I believe, the first C++14 feature-complete version of GCC. Nonetheless, the gcc release pages suggest that 4.9 does support polymorphic lambdas. What concerns me though is that your backtrace has references to e.g. `/usr/include/c++/4.8.2/bits/unique_ptr.h:262:16`. GCC 4.8.2 is _not_ C++14 compatible, and does not support polymorphic lambdas. Do you have any idea why the compiler might be looking into headers included from GCC 4.8.2?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422878261
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422878261:448,Modifiability,polymorphi,polymorphic,448,"Hi @Toseph,. Thank you for the detailed report. I am actually surprised that it agreed to compile, since the CMake file should check for GCC >= 5.2 (https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L102). The reason for that check is that this is the version of GCC we have on our CI servers, and GCC 5 is, I believe, the first C++14 feature-complete version of GCC. Nonetheless, the gcc release pages suggest that 4.9 does support polymorphic lambdas. What concerns me though is that your backtrace has references to e.g. `/usr/include/c++/4.8.2/bits/unique_ptr.h:262:16`. GCC 4.8.2 is _not_ C++14 compatible, and does not support polymorphic lambdas. Do you have any idea why the compiler might be looking into headers included from GCC 4.8.2?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422878261
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422878261:648,Modifiability,polymorphi,polymorphic,648,"Hi @Toseph,. Thank you for the detailed report. I am actually surprised that it agreed to compile, since the CMake file should check for GCC >= 5.2 (https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L102). The reason for that check is that this is the version of GCC we have on our CI servers, and GCC 5 is, I believe, the first C++14 feature-complete version of GCC. Nonetheless, the gcc release pages suggest that 4.9 does support polymorphic lambdas. What concerns me though is that your backtrace has references to e.g. `/usr/include/c++/4.8.2/bits/unique_ptr.h:262:16`. GCC 4.8.2 is _not_ C++14 compatible, and does not support polymorphic lambdas. Do you have any idea why the compiler might be looking into headers included from GCC 4.8.2?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422878261
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645:84,Deployability,update,updated,84,"Hi Rob, . Thanks for the quick reply. I'm looking into it and will try this with an updated install of GCC >= 5.2.; The system default gcc is 4.8.5 but I set it to use a different install using environment modules to load gcc-4.9.2 but some environment variables may not have been set correctly, hence why the build file switches to a lower-version GCC but it isn't clear why it looks for 4.8.2 despite that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645:92,Deployability,install,install,92,"Hi Rob, . Thanks for the quick reply. I'm looking into it and will try this with an updated install of GCC >= 5.2.; The system default gcc is 4.8.5 but I set it to use a different install using environment modules to load gcc-4.9.2 but some environment variables may not have been set correctly, hence why the build file switches to a lower-version GCC but it isn't clear why it looks for 4.8.2 despite that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645:180,Deployability,install,install,180,"Hi Rob, . Thanks for the quick reply. I'm looking into it and will try this with an updated install of GCC >= 5.2.; The system default gcc is 4.8.5 but I set it to use a different install using environment modules to load gcc-4.9.2 but some environment variables may not have been set correctly, hence why the build file switches to a lower-version GCC but it isn't clear why it looks for 4.8.2 despite that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645:253,Modifiability,variab,variables,253,"Hi Rob, . Thanks for the quick reply. I'm looking into it and will try this with an updated install of GCC >= 5.2.; The system default gcc is 4.8.5 but I set it to use a different install using environment modules to load gcc-4.9.2 but some environment variables may not have been set correctly, hence why the build file switches to a lower-version GCC but it isn't clear why it looks for 4.8.2 despite that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645:217,Performance,load,load,217,"Hi Rob, . Thanks for the quick reply. I'm looking into it and will try this with an updated install of GCC >= 5.2.; The system default gcc is 4.8.5 but I set it to use a different install using environment modules to load gcc-4.9.2 but some environment variables may not have been set correctly, hence why the build file switches to a lower-version GCC but it isn't clear why it looks for 4.8.2 despite that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645:366,Usability,clear,clear,366,"Hi Rob, . Thanks for the quick reply. I'm looking into it and will try this with an updated install of GCC >= 5.2.; The system default gcc is 4.8.5 but I set it to use a different install using environment modules to load gcc-4.9.2 but some environment variables may not have been set correctly, hence why the build file switches to a lower-version GCC but it isn't clear why it looks for 4.8.2 despite that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-422891645
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567:383,Availability,error,errors,383,"Feel free to close out this thread. I was able to set my user up with the salmon binary running 0.11 instead! . I wasn't able to address where GCC was being set exactly between the CMakelist and Makefile. I did manage to install it from source using ""source /opt/rh/devtools-3"" to invoke gcc-4.9.2, but that installation binary did not run and raised additional GCC library mismatch errors due to the system running 4.8.5, even though 4.9.2 was used to compile it. Sorry for the lengthy posts in any case!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567:221,Deployability,install,install,221,"Feel free to close out this thread. I was able to set my user up with the salmon binary running 0.11 instead! . I wasn't able to address where GCC was being set exactly between the CMakelist and Makefile. I did manage to install it from source using ""source /opt/rh/devtools-3"" to invoke gcc-4.9.2, but that installation binary did not run and raised additional GCC library mismatch errors due to the system running 4.8.5, even though 4.9.2 was used to compile it. Sorry for the lengthy posts in any case!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567:308,Deployability,install,installation,308,"Feel free to close out this thread. I was able to set my user up with the salmon binary running 0.11 instead! . I wasn't able to address where GCC was being set exactly between the CMakelist and Makefile. I did manage to install it from source using ""source /opt/rh/devtools-3"" to invoke gcc-4.9.2, but that installation binary did not run and raised additional GCC library mismatch errors due to the system running 4.8.5, even though 4.9.2 was used to compile it. Sorry for the lengthy posts in any case!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567
https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423785031:275,Deployability,release,release,275,"Glad to hear you were able to find a solution! I'm not sure why your environment kept getting corrupted with the pre-C++14 compiler, but if you run into that issue again in the future, we can revisit. For the time being, using the binaries (we create one for each new tagged release) should work out fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423785031
https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513:607,Availability,down,down,607,"Hi @OnlyHigh,. Indeed, the _default_ behavior of salmon is to de-duplicate transcripts (to avoid that behavior and allow salmon to index duplicate transcripts, you need to pass the `--keepDuplicates` flag to the indexer). When it does this, it will log the duplicate transcripts in the index. If you look in the directory containing the salmon index, you will find a file called `duplicate_clusters.tsv`. This is a 2 column TSV file with a row for each transcript that was collapsed during indexing. The first column says which retained transcript was identical to the collapsed transcript. We do not write down the specific sequence of these transcripts, but with the original fasta file on which the index was built, you can easily extract this. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513
https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513:91,Safety,avoid,avoid,91,"Hi @OnlyHigh,. Indeed, the _default_ behavior of salmon is to de-duplicate transcripts (to avoid that behavior and allow salmon to index duplicate transcripts, you need to pass the `--keepDuplicates` flag to the indexer). When it does this, it will log the duplicate transcripts in the index. If you look in the directory containing the salmon index, you will find a file called `duplicate_clusters.tsv`. This is a 2 column TSV file with a row for each transcript that was collapsed during indexing. The first column says which retained transcript was identical to the collapsed transcript. We do not write down the specific sequence of these transcripts, but with the original fasta file on which the index was built, you can easily extract this. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513
https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513:249,Testability,log,log,249,"Hi @OnlyHigh,. Indeed, the _default_ behavior of salmon is to de-duplicate transcripts (to avoid that behavior and allow salmon to index duplicate transcripts, you need to pass the `--keepDuplicates` flag to the indexer). When it does this, it will log the duplicate transcripts in the index. If you look in the directory containing the salmon index, you will find a file called `duplicate_clusters.tsv`. This is a 2 column TSV file with a row for each transcript that was collapsed during indexing. The first column says which retained transcript was identical to the collapsed transcript. We do not write down the specific sequence of these transcripts, but with the original fasta file on which the index was built, you can easily extract this. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429465245:105,Deployability,release,release-,105,"Hi Rob,. A colleague did the alignment, using some really old Ensembl version (ftp://ftp.ensembl.org/pub/release-79/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz). For the example I gave I used the current version, which should be +/- the same (ftp://ftp.ensembl.org/pub/release-94/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz). Thanks!. Jim",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429465245
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429465245:284,Deployability,release,release-,284,"Hi Rob,. A colleague did the alignment, using some really old Ensembl version (ftp://ftp.ensembl.org/pub/release-79/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz). For the example I gave I used the current version, which should be +/- the same (ftp://ftp.ensembl.org/pub/release-94/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz). Thanks!. Jim",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429465245
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429497594:56,Testability,log,log,56,"Hi James,. Surprisingly, it looks like I don't actually log exactly the version of salmon used in the index. In the index directory, the `header.json` will give you some info. It will tell you the *index* version, but many versions of salmon can correspond to the same *index* version. The info in that file might help to discriminate a little bit. Can you try *indexing* with v0.10.2 (the one you are aligning with)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429497594
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429498684:356,Availability,down,downloading,356,"Hi Rob,. Thanks to both you and Jim for helping with this, since I'm the one who actually need some help. I've tried indexed using v0.11.0 then the latest version. Both, with the same transcriptome you tried doesn't result in duplicates when I grep ""ENST00000617214.2"". Telling me I'm getting a different result from your grep. I don't know why. I will be downloading the latest version of the human transcriptome and using latest salmon to index, and I should see these duplicate transcripts in the duplicate clusters file, like you did, likely resolving my issue. We had older data which is why I used an older version of the human transcriptome, which I will not be doing anymore. I'll keep you posted and thanks for the help!. Regards,. Bill Edelman",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429498684
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429499670:690,Availability,down,downloading,690,"Hi Bill,. You probably shouldn't be including the transcript version number (the; trailing . 2) when using grep, to be safe. It's possible that you could; have a different transcript version so there isn't any profit in being so; exact. Jim. On Fri, Oct 12, 2018, 9:03 PM wedelma <notifications@github.com> wrote:. > Hi Rob,; >; > Thanks to both you and Jim for helping with this, since I'm the one who; > actually need some help. I've tried indexed using v0.11.0 then the latest; > version. Both, with the same transcriptome you tried doesn't result in; > duplicates when I grep ""ENST00000617214.2"". Telling me I'm getting a; > different result from your grep. I don't know why. I will be downloading; > the latest version of the human transcriptome and using latest salmon to; > index, and I should see these duplicate transcripts in the duplicate; > clusters file, like you did, likely resolving my issue. We had older data; > which is why I used an older version of the human transcriptome, which I; > will not be doing anymore. I'll keep you posted and thanks for the help!; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429498684>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AFqmvIVbfG6l9DaQQiKnkYPO1UGGQQ90ks5ukTvAgaJpZM4XaDfK>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429499670
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429499670:119,Safety,safe,safe,119,"Hi Bill,. You probably shouldn't be including the transcript version number (the; trailing . 2) when using grep, to be safe. It's possible that you could; have a different transcript version so there isn't any profit in being so; exact. Jim. On Fri, Oct 12, 2018, 9:03 PM wedelma <notifications@github.com> wrote:. > Hi Rob,; >; > Thanks to both you and Jim for helping with this, since I'm the one who; > actually need some help. I've tried indexed using v0.11.0 then the latest; > version. Both, with the same transcriptome you tried doesn't result in; > duplicates when I grep ""ENST00000617214.2"". Telling me I'm getting a; > different result from your grep. I don't know why. I will be downloading; > the latest version of the human transcriptome and using latest salmon to; > index, and I should see these duplicate transcripts in the duplicate; > clusters file, like you did, likely resolving my issue. We had older data; > which is why I used an older version of the human transcriptome, which I; > will not be doing anymore. I'll keep you posted and thanks for the help!; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429498684>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AFqmvIVbfG6l9DaQQiKnkYPO1UGGQQ90ks5ukTvAgaJpZM4XaDfK>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429499670
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783:404,Availability,down,downloaded,404,"Right I've been checking it without the trailing character as well, I changed to leaving that out. . Oddly, my index doesn't have the decimals at all, just continuous ENSTxx, unlike the examples you and Rob provided. I redownloaded the new release, same result. No duplicate in my grep query, which would lead to getting the quant for both transcripts. Not being filtered by salmon as duplicates. I also downloaded the same version in Rob's example above, indexed with latest salmon, with the same result. At a loss right now. I don't know why this is.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783:156,Deployability,continuous,continuous,156,"Right I've been checking it without the trailing character as well, I changed to leaving that out. . Oddly, my index doesn't have the decimals at all, just continuous ENSTxx, unlike the examples you and Rob provided. I redownloaded the new release, same result. No duplicate in my grep query, which would lead to getting the quant for both transcripts. Not being filtered by salmon as duplicates. I also downloaded the same version in Rob's example above, indexed with latest salmon, with the same result. At a loss right now. I don't know why this is.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783:240,Deployability,release,release,240,"Right I've been checking it without the trailing character as well, I changed to leaving that out. . Oddly, my index doesn't have the decimals at all, just continuous ENSTxx, unlike the examples you and Rob provided. I redownloaded the new release, same result. No duplicate in my grep query, which would lead to getting the quant for both transcripts. Not being filtered by salmon as duplicates. I also downloaded the same version in Rob's example above, indexed with latest salmon, with the same result. At a loss right now. I don't know why this is.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502024:44,Testability,log,log,44,"Hi Bill,. Strange indeed! Can you share the log salmon made during indexing and the `duplicate_clusters.tsv` file you do get?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502024
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502243:76,Testability,log,log,76,Here is the duplicate clusters (extension edited for uploading as .txt) and log. ; [quasi_index.log](https://github.com/COMBINE-lab/salmon/files/2474978/quasi_index.log). [duplicate_clusters (copy).txt](https://github.com/COMBINE-lab/salmon/files/2474977/duplicate_clusters.copy.txt),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502243
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502243:96,Testability,log,log,96,Here is the duplicate clusters (extension edited for uploading as .txt) and log. ; [quasi_index.log](https://github.com/COMBINE-lab/salmon/files/2474978/quasi_index.log). [duplicate_clusters (copy).txt](https://github.com/COMBINE-lab/salmon/files/2474977/duplicate_clusters.copy.txt),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502243
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502243:165,Testability,log,log,165,Here is the duplicate clusters (extension edited for uploading as .txt) and log. ; [quasi_index.log](https://github.com/COMBINE-lab/salmon/files/2474978/quasi_index.log). [duplicate_clusters (copy).txt](https://github.com/COMBINE-lab/salmon/files/2474977/duplicate_clusters.copy.txt),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429502243
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429503523:469,Deployability,release,release-,469,"Hi Bill,. One thing I noticed is that your log says :; ```; [2018-10-12 18:13:10.808] [jointLog] [warning] Removed 7582 transcripts that were sequence duplicates of indexed transcripts.; ```. while my run said:. ```; [2018-10-12 17:29:14.651] [jointLog] [warning] Removed 11851 transcripts that were sequence duplicates of indexed transcripts.; ```. that's a non-trivial difference in number. My run was from the fasta file using *this* link (ftp://ftp.ensembl.org/pub/release-94/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz). Was yours the same? Digging into the _other_ version now to see if I can find anything.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429503523
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429503523:43,Testability,log,log,43,"Hi Bill,. One thing I noticed is that your log says :; ```; [2018-10-12 18:13:10.808] [jointLog] [warning] Removed 7582 transcripts that were sequence duplicates of indexed transcripts.; ```. while my run said:. ```; [2018-10-12 17:29:14.651] [jointLog] [warning] Removed 11851 transcripts that were sequence duplicates of indexed transcripts.; ```. that's a non-trivial difference in number. My run was from the fasta file using *this* link (ftp://ftp.ensembl.org/pub/release-94/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz). Was yours the same? Digging into the _other_ version now to see if I can find anything.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429503523
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429504101:85,Deployability,release,release-,85,"Ok, in fact, when I check with the ""older"" reference (from ftp://ftp.ensembl.org/pub/release-79/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz), I get that these transcripts are _not_ duplicates of each other. To verify it's not salmon's problem, I also checked with [seqkit's rmdup command](https://bioinf.shenwei.me/seqkit/usage/#rmdup), and, in fact, in the older cdna file, these transcripts appear to have distinct sequence.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429504101
https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429506265:1148,Availability,down,down,1148,"Hi James,. Indeed! No problem. Looking at the older annotation, it seems that the transcripts have slightly different lengths:. ```; >ENST00000617214 ensembl:known chromosome:GRCh38:CHR_HSCHR8_8_CTG1:1973878:2006943:1 gene:ENSG00000273645 gene_biotype:protein_coding transcript_biotype:protein_coding. >ENST00000320248 ensembl_havana_transcript:known chromosome:GRCh38:8:1973878:2006936:1 gene:ENSG00000176595 gene_biotype:protein_coding transcript_biotype:protein_coding; ```. I don't know if that's the _only_ difference between them or if they are spliced differently in the middle etc. Both salmon and seqkit only check for *exact* sequence duplication. If you wanted to try to dig more into what might be causing the differences you might consider `<salmon_quant_folder>/aux_info/ambig_info.tsv` which lists the transcripts in the same order as `quant.sf` but gives for each the number of uniquely mapping reads and the total number of potential reads. You could see if the unique evidence for the txps changes between conditions. However, given that Ensembl has changed their mind about these guys, maybe that's not a rabbit hole worth going down. Anyway, glad I could help!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429506265
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432468434:108,Deployability,upgrade,upgrade,108,"Thanks for reporting this. It seems there is an osx bioconda issue (likely related to their massive backend upgrade). Hopefully we can fix this upstream in the next release. I. The meantime, can you see if [this](https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz) OSX binary works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432468434
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432468434:165,Deployability,release,release,165,"Thanks for reporting this. It seems there is an osx bioconda issue (likely related to their massive backend upgrade). Hopefully we can fix this upstream in the next release. I. The meantime, can you see if [this](https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz) OSX binary works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432468434
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726:106,Availability,error,error,106,"Thank you! After unzipping and putting in my path and trying to run “salmon –version” I get the following error:. dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. Is that something you have seen before?. From: Rob Patro <notifications@github.com>; Reply-To: COMBINE-lab/salmon <reply@reply.github.com>; Date: Tuesday, October 23, 2018 at 8:25 PM; To: COMBINE-lab/salmon <salmon@noreply.github.com>; Cc: dougbarrows <dbarrows@mail.rockefeller.edu>, Author <author@noreply.github.com>; Subject: Re: [COMBINE-lab/salmon] Segmentation fault 11 with bioconda build (#303). Thanks for reporting this. It seems there is an osx bioconda issue (likely related to their massive backend upgrade). Hopefully we can fix this upstream in the next release. I. The meantime, can you see if this<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_files_2383948_salmon-5F0.11.4-2Dpre-5FOSX.tar.gz&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=40WTo4E4Odm5ZPLtYzGnDNBOb05l6L5woT7ke2vQ1L4&e=> OSX binary works for you?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_issues_303-23issuecomment-2D432468434&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=2d8a8eiQ0LuIlgyxoiTnsiwesaQ16X9sju0l7tT1WAw&e=>, or mute the thread<https://",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726:939,Availability,fault,fault,939,"Thank you! After unzipping and putting in my path and trying to run “salmon –version” I get the following error:. dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. Is that something you have seen before?. From: Rob Patro <notifications@github.com>; Reply-To: COMBINE-lab/salmon <reply@reply.github.com>; Date: Tuesday, October 23, 2018 at 8:25 PM; To: COMBINE-lab/salmon <salmon@noreply.github.com>; Cc: dougbarrows <dbarrows@mail.rockefeller.edu>, Author <author@noreply.github.com>; Subject: Re: [COMBINE-lab/salmon] Segmentation fault 11 with bioconda build (#303). Thanks for reporting this. It seems there is an osx bioconda issue (likely related to their massive backend upgrade). Hopefully we can fix this upstream in the next release. I. The meantime, can you see if this<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_files_2383948_salmon-5F0.11.4-2Dpre-5FOSX.tar.gz&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=40WTo4E4Odm5ZPLtYzGnDNBOb05l6L5woT7ke2vQ1L4&e=> OSX binary works for you?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_issues_303-23issuecomment-2D432468434&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=2d8a8eiQ0LuIlgyxoiTnsiwesaQ16X9sju0l7tT1WAw&e=>, or mute the thread<https://",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726:1084,Deployability,upgrade,upgrade,1084,"th and trying to run “salmon –version” I get the following error:. dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. Is that something you have seen before?. From: Rob Patro <notifications@github.com>; Reply-To: COMBINE-lab/salmon <reply@reply.github.com>; Date: Tuesday, October 23, 2018 at 8:25 PM; To: COMBINE-lab/salmon <salmon@noreply.github.com>; Cc: dougbarrows <dbarrows@mail.rockefeller.edu>, Author <author@noreply.github.com>; Subject: Re: [COMBINE-lab/salmon] Segmentation fault 11 with bioconda build (#303). Thanks for reporting this. It seems there is an osx bioconda issue (likely related to their massive backend upgrade). Hopefully we can fix this upstream in the next release. I. The meantime, can you see if this<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_files_2383948_salmon-5F0.11.4-2Dpre-5FOSX.tar.gz&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=40WTo4E4Odm5ZPLtYzGnDNBOb05l6L5woT7ke2vQ1L4&e=> OSX binary works for you?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_issues_303-23issuecomment-2D432468434&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=2d8a8eiQ0LuIlgyxoiTnsiwesaQ16X9sju0l7tT1WAw&e=>, or mute the thread<https://urldefense.proofpoint.com/v2/url?u=https-3A__gi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726:1141,Deployability,release,release,1141,"azy symbol binding failed: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. Is that something you have seen before?. From: Rob Patro <notifications@github.com>; Reply-To: COMBINE-lab/salmon <reply@reply.github.com>; Date: Tuesday, October 23, 2018 at 8:25 PM; To: COMBINE-lab/salmon <salmon@noreply.github.com>; Cc: dougbarrows <dbarrows@mail.rockefeller.edu>, Author <author@noreply.github.com>; Subject: Re: [COMBINE-lab/salmon] Segmentation fault 11 with bioconda build (#303). Thanks for reporting this. It seems there is an osx bioconda issue (likely related to their massive backend upgrade). Hopefully we can fix this upstream in the next release. I. The meantime, can you see if this<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_files_2383948_salmon-5F0.11.4-2Dpre-5FOSX.tar.gz&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=40WTo4E4Odm5ZPLtYzGnDNBOb05l6L5woT7ke2vQ1L4&e=> OSX binary works for you?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_issues_303-23issuecomment-2D432468434&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=2d8a8eiQ0LuIlgyxoiTnsiwesaQ16X9sju0l7tT1WAw&e=>, or mute the thread<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AYXm7zC7E77igQqcLnRZ1ABIhoVmQ9n",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432662209:21,Availability,error,error,21,"I still had the same error on that computer after following the instructions on the other thread. However, that computer is a bit older (OS 10.11.3), and when I used that OSX binary on my newer computer in lab (OS 10.13.4) it is working perfectly well so far. Thank you!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432662209
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-444971786:93,Availability,avail,available,93,Hi @dougbarrows --- just wanted to inform you that v0.12.0 has been released and is now also available via bioconda for both linux and osx. The osx segfault issue has been resolved.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-444971786
https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-444971786:68,Deployability,release,released,68,Hi @dougbarrows --- just wanted to inform you that v0.12.0 has been released and is now also available via bioconda for both linux and osx. The osx segfault issue has been resolved.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-444971786
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:1635,Availability,down,downstream,1635,"observe the coverage bias in them. I'd suggest can you please try subsampling randomly across the full `Fastq` if you haven't tried that already.; * `re: subsampling coefficient:` If you are looking for per-CB level mapping rate for your sample that would be very easy to calculate, although getting one number for the full sample might be little tricky since the mapping rate might have large variance across the sample, but it would be an interesting plot to generate, do let us know how it looks in your case.; If you run Alevin with `--dumpFeatures` flag, alevin will generate a file `featureDump.txt`, whose first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:1842,Availability,down,downstream,1842,"ry easy to calculate, although getting one number for the full sample might be little tricky since the mapping rate might have large variance across the sample, but it would be an interesting plot to generate, do let us know how it looks in your case.; If you run Alevin with `--dumpFeatures` flag, alevin will generate a file `featureDump.txt`, whose first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:1972,Availability,down,downstream,1972,"t to generate, do let us know how it looks in your case.; If you run Alevin with `--dumpFeatures` flag, alevin will generate a file `featureDump.txt`, whose first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to inc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2449,Availability,avail,available,2449," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2760,Availability,down,downstream,2760," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:1501,Deployability,pipeline,pipeline,1501,"observe the coverage bias in them. I'd suggest can you please try subsampling randomly across the full `Fastq` if you haven't tried that already.; * `re: subsampling coefficient:` If you are looking for per-CB level mapping rate for your sample that would be very easy to calculate, although getting one number for the full sample might be little tricky since the mapping rate might have large variance across the sample, but it would be an interesting plot to generate, do let us know how it looks in your case.; If you run Alevin with `--dumpFeatures` flag, alevin will generate a file `featureDump.txt`, whose first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2195,Deployability,upgrade,upgrade,2195," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2358,Deployability,release,release,2358," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2421,Deployability,release,release,2421," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2833,Deployability,pipeline,pipeline,2833," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:1947,Performance,perform,perform,1947,"t to generate, do let us know how it looks in your case.; If you run Alevin with `--dumpFeatures` flag, alevin will generate a file `featureDump.txt`, whose first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to inc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2673,Performance,perform,perform,2673," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:360,Usability,simpl,simply,360,"Hi @juugii ,; Thanks a lot for starting an interesting discussion related to Alevin. It does sound really interesting. If I may, I'd like to ask a couple of questions before going deeper into your questions. ; * When you say you try subsampling the `Fastq`, did you sample randomly across the full `Fastq` or chose the top X reads. One can imagine that if you simply, sample just the top X reads and the `Fastq` has not been generated in random order then a certain subset of CB will get all the reads and you'd still observe the coverage bias in them. I'd suggest can you please try subsampling randomly across the full `Fastq` if you haven't tried that already.; * `re: subsampling coefficient:` If you are looking for per-CB level mapping rate for your sample that would be very easy to calculate, although getting one number for the full sample might be little tricky since the mapping rate might have large variance across the sample, but it would be an interesting plot to generate, do let us know how it looks in your case.; If you run Alevin with `--dumpFeatures` flag, alevin will generate a file `featureDump.txt`, whose first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:1053,Availability,down,downstream,1053," subsampling the Fastq, did you sample randomly across the full Fastq or chose the top X reads. Yes, I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction be",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:1184,Availability,down,downstream,1184," I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction before/during/after the alevin quantification, in a way similar to what cellranger do with STAR. Alter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:1258,Availability,down,downstream,1258,"coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction before/during/after the alevin quantification, in a way similar to what cellranger do with STAR. Alternatively, could a subsampling covariate be added to the probalistic quantification model of alevin (if I understand it well), in sor",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:685,Deployability,pipeline,pipeline,685,"Hi @k3yavi,; Many thanks for you prompt answer, once again. >When you say you try subsampling the Fastq, did you sample randomly across the full Fastq or chose the top X reads. Yes, I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:865,Integrability,depend,depending,865,"Hi @k3yavi,; Many thanks for you prompt answer, once again. >When you say you try subsampling the Fastq, did you sample randomly across the full Fastq or chose the top X reads. Yes, I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:1729,Integrability,message,message,1729,"expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction before/during/after the alevin quantification, in a way similar to what cellranger do with STAR. Alternatively, could a subsampling covariate be added to the probalistic quantification model of alevin (if I understand it well), in sort that such a discrepency bewteen samples would be corrected?. I did look at the mappedUMI file:. ![image](https://user-images.githubusercontent.com/34892073/47551835-85ef9380-d903-11e8-893f-2a684576437b.png). So an option you would recommend is to simply compute the subsampling coefficient for a median ratio bewteen samples? I am expecting quite uneven distributions/variance in the mappedUMI between samples (partly due to a huge difference in term of proliferation that occur with a fraction of cells",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:188,Performance,perform,perform,188,"Hi @k3yavi,; Many thanks for you prompt answer, once again. >When you say you try subsampling the Fastq, did you sample randomly across the full Fastq or chose the top X reads. Yes, I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:477,Usability,simpl,simple,477,"Hi @k3yavi,; Many thanks for you prompt answer, once again. >When you say you try subsampling the Fastq, did you sample randomly across the full Fastq or chose the top X reads. Yes, I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:715,Usability,clear,clearly,715,"Hi @k3yavi,; Many thanks for you prompt answer, once again. >When you say you try subsampling the Fastq, did you sample randomly across the full Fastq or chose the top X reads. Yes, I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:1611,Usability,simpl,simply,1611," >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction before/during/after the alevin quantification, in a way similar to what cellranger do with STAR. Alternatively, could a subsampling covariate be added to the probalistic quantification model of alevin (if I understand it well), in sort that such a discrepency bewteen samples would be corrected?. I did look at the mappedUMI file:. ![image](https://user-images.githubusercontent.com/34892073/47551835-85ef9380-d903-11e8-893f-2a684576437b.png). So an option you would recommend is to simply compute the subsampling coefficient for ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:2562,Usability,simpl,simply,2562,"w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction before/during/after the alevin quantification, in a way similar to what cellranger do with STAR. Alternatively, could a subsampling covariate be added to the probalistic quantification model of alevin (if I understand it well), in sort that such a discrepency bewteen samples would be corrected?. I did look at the mappedUMI file:. ![image](https://user-images.githubusercontent.com/34892073/47551835-85ef9380-d903-11e8-893f-2a684576437b.png). So an option you would recommend is to simply compute the subsampling coefficient for a median ratio bewteen samples? I am expecting quite uneven distributions/variance in the mappedUMI between samples (partly due to a huge difference in term of proliferation that occur with a fraction of cells in only one sample). Still, cellranger aggregate correct it nicely. Thanks again for your prompt answer and comments.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155:524,Availability,down,downstream,524,"Thanks @juugii for the detailed response and clarifying my doubts.; It surely is possible to lose some information when projecting the data on lower dimensional space since none of the methods, CCA and MNN, are lossless. I do see your point and would like to understand more about the depth normalization problem you are facing with different experiments. . I tried to search the algorithm used by cellranger to aggregate the counts and it looks like the following:; * As I was saying earlier aggregation step was happening downstream of count/quantification of the gene count matrix, at least in cellranger pipeline.; > When doing large studies involving multiple biological samples (or multiple libraries or replicates of the same sample), it is best to run cellranger count on each of the libraries individually, and then pool the results using cellranger aggr. * It looks like they have three different modes to normalize the libraries; > There are three normalization modes:; mapped: (default) Subsample reads from higher-depth libraries until they all have an equal number of confidently mapped reads per cell.; raw: Subsample reads from higher-depth libraries until they all have an equal number of total (i.e. raw, mapping-independent) reads per cell.; none: Do not normalize at all. * Although it's not clear, what do they mean by `equal number of confidently mapped reads per cell`, does it mean median reads per cell ? Like you tried to show in the above plot the distribution can be very uneven. But the part that troubles me more is once `count` information has been generated it has lost the read level information, since we have deduplicated them, then how do they use the read counts to normalize. Unless that is dumped too, not clear. Quoting your text from above:; > Alternatively, could a subsampling covariate be added to the probabilistic quantification model of alevin. I think we can definitely work on correcting the subsampling bias in the probabilistic model of Alevin but we",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155:608,Deployability,pipeline,pipeline,608,"Thanks @juugii for the detailed response and clarifying my doubts.; It surely is possible to lose some information when projecting the data on lower dimensional space since none of the methods, CCA and MNN, are lossless. I do see your point and would like to understand more about the depth normalization problem you are facing with different experiments. . I tried to search the algorithm used by cellranger to aggregate the counts and it looks like the following:; * As I was saying earlier aggregation step was happening downstream of count/quantification of the gene count matrix, at least in cellranger pipeline.; > When doing large studies involving multiple biological samples (or multiple libraries or replicates of the same sample), it is best to run cellranger count on each of the libraries individually, and then pool the results using cellranger aggr. * It looks like they have three different modes to normalize the libraries; > There are three normalization modes:; mapped: (default) Subsample reads from higher-depth libraries until they all have an equal number of confidently mapped reads per cell.; raw: Subsample reads from higher-depth libraries until they all have an equal number of total (i.e. raw, mapping-independent) reads per cell.; none: Do not normalize at all. * Although it's not clear, what do they mean by `equal number of confidently mapped reads per cell`, does it mean median reads per cell ? Like you tried to show in the above plot the distribution can be very uneven. But the part that troubles me more is once `count` information has been generated it has lost the read level information, since we have deduplicated them, then how do they use the read counts to normalize. Unless that is dumped too, not clear. Quoting your text from above:; > Alternatively, could a subsampling covariate be added to the probabilistic quantification model of alevin. I think we can definitely work on correcting the subsampling bias in the probabilistic model of Alevin but we",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155:1312,Usability,clear,clear,1312,"ellranger to aggregate the counts and it looks like the following:; * As I was saying earlier aggregation step was happening downstream of count/quantification of the gene count matrix, at least in cellranger pipeline.; > When doing large studies involving multiple biological samples (or multiple libraries or replicates of the same sample), it is best to run cellranger count on each of the libraries individually, and then pool the results using cellranger aggr. * It looks like they have three different modes to normalize the libraries; > There are three normalization modes:; mapped: (default) Subsample reads from higher-depth libraries until they all have an equal number of confidently mapped reads per cell.; raw: Subsample reads from higher-depth libraries until they all have an equal number of total (i.e. raw, mapping-independent) reads per cell.; none: Do not normalize at all. * Although it's not clear, what do they mean by `equal number of confidently mapped reads per cell`, does it mean median reads per cell ? Like you tried to show in the above plot the distribution can be very uneven. But the part that troubles me more is once `count` information has been generated it has lost the read level information, since we have deduplicated them, then how do they use the read counts to normalize. Unless that is dumped too, not clear. Quoting your text from above:; > Alternatively, could a subsampling covariate be added to the probabilistic quantification model of alevin. I think we can definitely work on correcting the subsampling bias in the probabilistic model of Alevin but we might need a little more understanding of what's going on with the cellranger and why your way of aggregation is not working as intended. Unfortunately, I think we have to dig deeper into the cellranger codebase to really understand that and if possible, might need some subset of the relevant data to replicate your issue and work on improving that. Also, I am wondering, what's your way of check",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155:1745,Usability,clear,clear,1745,"ples (or multiple libraries or replicates of the same sample), it is best to run cellranger count on each of the libraries individually, and then pool the results using cellranger aggr. * It looks like they have three different modes to normalize the libraries; > There are three normalization modes:; mapped: (default) Subsample reads from higher-depth libraries until they all have an equal number of confidently mapped reads per cell.; raw: Subsample reads from higher-depth libraries until they all have an equal number of total (i.e. raw, mapping-independent) reads per cell.; none: Do not normalize at all. * Although it's not clear, what do they mean by `equal number of confidently mapped reads per cell`, does it mean median reads per cell ? Like you tried to show in the above plot the distribution can be very uneven. But the part that troubles me more is once `count` information has been generated it has lost the read level information, since we have deduplicated them, then how do they use the read counts to normalize. Unless that is dumped too, not clear. Quoting your text from above:; > Alternatively, could a subsampling covariate be added to the probabilistic quantification model of alevin. I think we can definitely work on correcting the subsampling bias in the probabilistic model of Alevin but we might need a little more understanding of what's going on with the cellranger and why your way of aggregation is not working as intended. Unfortunately, I think we have to dig deeper into the cellranger codebase to really understand that and if possible, might need some subset of the relevant data to replicate your issue and work on improving that. Also, I am wondering, what's your way of checking the batch effect and comparing Alevin and Cellranger aggregation? Just a guess, the tSNE plots of the two samples are separating out very clearly, if possible if you can share the figures and the analysis (may be a notebook) to us, we can help and investigate more thoroughly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155:2541,Usability,clear,clearly,2541,"ples (or multiple libraries or replicates of the same sample), it is best to run cellranger count on each of the libraries individually, and then pool the results using cellranger aggr. * It looks like they have three different modes to normalize the libraries; > There are three normalization modes:; mapped: (default) Subsample reads from higher-depth libraries until they all have an equal number of confidently mapped reads per cell.; raw: Subsample reads from higher-depth libraries until they all have an equal number of total (i.e. raw, mapping-independent) reads per cell.; none: Do not normalize at all. * Although it's not clear, what do they mean by `equal number of confidently mapped reads per cell`, does it mean median reads per cell ? Like you tried to show in the above plot the distribution can be very uneven. But the part that troubles me more is once `count` information has been generated it has lost the read level information, since we have deduplicated them, then how do they use the read counts to normalize. Unless that is dumped too, not clear. Quoting your text from above:; > Alternatively, could a subsampling covariate be added to the probabilistic quantification model of alevin. I think we can definitely work on correcting the subsampling bias in the probabilistic model of Alevin but we might need a little more understanding of what's going on with the cellranger and why your way of aggregation is not working as intended. Unfortunately, I think we have to dig deeper into the cellranger codebase to really understand that and if possible, might need some subset of the relevant data to replicate your issue and work on improving that. Also, I am wondering, what's your way of checking the batch effect and comparing Alevin and Cellranger aggregation? Just a guess, the tSNE plots of the two samples are separating out very clearly, if possible if you can share the figures and the analysis (may be a notebook) to us, we can help and investigate more thoroughly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433593259:254,Testability,test,test,254,"Hi @juugii ,. I tried to simulate the coverage/depth bias by subsampling a fraction of the data and then correcting it using a very trivial approach, which seems to be working fine, at least for the dataset I simulated. It would be great if you can also test the same on your dataset too and let us know how it looks for your use case. The gist of the notebook can be found [here](https://gist.github.com/k3yavi/55be0c0c660f1c0034f2d11df31bec00).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433593259
https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-435356841:433,Integrability,depend,depending,433,"Thanks a lot @k3yavi for the code.; It doesn't seems to work, I don't think it normalize in a proper way: genes that are highly expressed (RPS/L, ACTB, B2M, etc...) are much more duplicated during the PCR than lowly expressed genes. So lots of reads, but less much counts after quantification (and summarization at the UMI level). So if one sequences deeply any sample, it would affect in a very uneven way both the cells and genes, depending on the level of transcriptional activity of the cell (cycling...) and the level of expression of a given gene. Then subsampling the fastq files before any quantification would be more fair, what do you think?. You can also see the notes on:; https://github.com/theislab/scanpy/pull/340",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-435356841
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193:667,Integrability,protocol,protocols,667,"Hi @tomsing1 ,; Apologies for the slow response, I was out of country for a while. Thanks for your kind words and starting a very interesting suggestion.; It’s fascinating to see, how methods being used in single-cell RNA-seq is coming full circle back to the bulk RNA-seq experiments. We have to do some more digging to say clearly about the caveats of using Alevin with the mentioned 3’ bulk RNA-seq experiments but given the understanding from the picture of the shared image we don’t see any obvious show stoppers; although below mentioned concerns should be kept in mind while using Alevin for bulk data deduplication:. Alevin solves the problem pretty well for protocols where fragmentation of the cDNA molecule happens post PCR amplification. There might be some concerns about over-deduplication of the UMI if fragmenation happens before amplification. Although in current form, Illumina sample index can be given as an external whitelist to Alevin but user should be aware that Alevin performs a sequence correction step before starting any optimizations.; Alevin is designed for droplets based protocols, where one end of Paired end read is just the CB/UMI (i.e. no read sequence) and therefore Alevin can’t optimally use the full paired end information of the bulk 3' protocol if its both end has read-sequence for example the ambiguous mapping resolution based on a previously/empirically known approximate fragment length. We would be more than happy to help/discuss, how does the results look in bulk 3’ tagged protocols or if you have particular suggestions about what improvements can be done in Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193:1104,Integrability,protocol,protocols,1104,"Hi @tomsing1 ,; Apologies for the slow response, I was out of country for a while. Thanks for your kind words and starting a very interesting suggestion.; It’s fascinating to see, how methods being used in single-cell RNA-seq is coming full circle back to the bulk RNA-seq experiments. We have to do some more digging to say clearly about the caveats of using Alevin with the mentioned 3’ bulk RNA-seq experiments but given the understanding from the picture of the shared image we don’t see any obvious show stoppers; although below mentioned concerns should be kept in mind while using Alevin for bulk data deduplication:. Alevin solves the problem pretty well for protocols where fragmentation of the cDNA molecule happens post PCR amplification. There might be some concerns about over-deduplication of the UMI if fragmenation happens before amplification. Although in current form, Illumina sample index can be given as an external whitelist to Alevin but user should be aware that Alevin performs a sequence correction step before starting any optimizations.; Alevin is designed for droplets based protocols, where one end of Paired end read is just the CB/UMI (i.e. no read sequence) and therefore Alevin can’t optimally use the full paired end information of the bulk 3' protocol if its both end has read-sequence for example the ambiguous mapping resolution based on a previously/empirically known approximate fragment length. We would be more than happy to help/discuss, how does the results look in bulk 3’ tagged protocols or if you have particular suggestions about what improvements can be done in Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193:1279,Integrability,protocol,protocol,1279,"Hi @tomsing1 ,; Apologies for the slow response, I was out of country for a while. Thanks for your kind words and starting a very interesting suggestion.; It’s fascinating to see, how methods being used in single-cell RNA-seq is coming full circle back to the bulk RNA-seq experiments. We have to do some more digging to say clearly about the caveats of using Alevin with the mentioned 3’ bulk RNA-seq experiments but given the understanding from the picture of the shared image we don’t see any obvious show stoppers; although below mentioned concerns should be kept in mind while using Alevin for bulk data deduplication:. Alevin solves the problem pretty well for protocols where fragmentation of the cDNA molecule happens post PCR amplification. There might be some concerns about over-deduplication of the UMI if fragmenation happens before amplification. Although in current form, Illumina sample index can be given as an external whitelist to Alevin but user should be aware that Alevin performs a sequence correction step before starting any optimizations.; Alevin is designed for droplets based protocols, where one end of Paired end read is just the CB/UMI (i.e. no read sequence) and therefore Alevin can’t optimally use the full paired end information of the bulk 3' protocol if its both end has read-sequence for example the ambiguous mapping resolution based on a previously/empirically known approximate fragment length. We would be more than happy to help/discuss, how does the results look in bulk 3’ tagged protocols or if you have particular suggestions about what improvements can be done in Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193:1525,Integrability,protocol,protocols,1525,"Hi @tomsing1 ,; Apologies for the slow response, I was out of country for a while. Thanks for your kind words and starting a very interesting suggestion.; It’s fascinating to see, how methods being used in single-cell RNA-seq is coming full circle back to the bulk RNA-seq experiments. We have to do some more digging to say clearly about the caveats of using Alevin with the mentioned 3’ bulk RNA-seq experiments but given the understanding from the picture of the shared image we don’t see any obvious show stoppers; although below mentioned concerns should be kept in mind while using Alevin for bulk data deduplication:. Alevin solves the problem pretty well for protocols where fragmentation of the cDNA molecule happens post PCR amplification. There might be some concerns about over-deduplication of the UMI if fragmenation happens before amplification. Although in current form, Illumina sample index can be given as an external whitelist to Alevin but user should be aware that Alevin performs a sequence correction step before starting any optimizations.; Alevin is designed for droplets based protocols, where one end of Paired end read is just the CB/UMI (i.e. no read sequence) and therefore Alevin can’t optimally use the full paired end information of the bulk 3' protocol if its both end has read-sequence for example the ambiguous mapping resolution based on a previously/empirically known approximate fragment length. We would be more than happy to help/discuss, how does the results look in bulk 3’ tagged protocols or if you have particular suggestions about what improvements can be done in Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193:994,Performance,perform,performs,994,"Hi @tomsing1 ,; Apologies for the slow response, I was out of country for a while. Thanks for your kind words and starting a very interesting suggestion.; It’s fascinating to see, how methods being used in single-cell RNA-seq is coming full circle back to the bulk RNA-seq experiments. We have to do some more digging to say clearly about the caveats of using Alevin with the mentioned 3’ bulk RNA-seq experiments but given the understanding from the picture of the shared image we don’t see any obvious show stoppers; although below mentioned concerns should be kept in mind while using Alevin for bulk data deduplication:. Alevin solves the problem pretty well for protocols where fragmentation of the cDNA molecule happens post PCR amplification. There might be some concerns about over-deduplication of the UMI if fragmenation happens before amplification. Although in current form, Illumina sample index can be given as an external whitelist to Alevin but user should be aware that Alevin performs a sequence correction step before starting any optimizations.; Alevin is designed for droplets based protocols, where one end of Paired end read is just the CB/UMI (i.e. no read sequence) and therefore Alevin can’t optimally use the full paired end information of the bulk 3' protocol if its both end has read-sequence for example the ambiguous mapping resolution based on a previously/empirically known approximate fragment length. We would be more than happy to help/discuss, how does the results look in bulk 3’ tagged protocols or if you have particular suggestions about what improvements can be done in Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193:1050,Performance,optimiz,optimizations,1050,"Hi @tomsing1 ,; Apologies for the slow response, I was out of country for a while. Thanks for your kind words and starting a very interesting suggestion.; It’s fascinating to see, how methods being used in single-cell RNA-seq is coming full circle back to the bulk RNA-seq experiments. We have to do some more digging to say clearly about the caveats of using Alevin with the mentioned 3’ bulk RNA-seq experiments but given the understanding from the picture of the shared image we don’t see any obvious show stoppers; although below mentioned concerns should be kept in mind while using Alevin for bulk data deduplication:. Alevin solves the problem pretty well for protocols where fragmentation of the cDNA molecule happens post PCR amplification. There might be some concerns about over-deduplication of the UMI if fragmenation happens before amplification. Although in current form, Illumina sample index can be given as an external whitelist to Alevin but user should be aware that Alevin performs a sequence correction step before starting any optimizations.; Alevin is designed for droplets based protocols, where one end of Paired end read is just the CB/UMI (i.e. no read sequence) and therefore Alevin can’t optimally use the full paired end information of the bulk 3' protocol if its both end has read-sequence for example the ambiguous mapping resolution based on a previously/empirically known approximate fragment length. We would be more than happy to help/discuss, how does the results look in bulk 3’ tagged protocols or if you have particular suggestions about what improvements can be done in Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193:325,Usability,clear,clearly,325,"Hi @tomsing1 ,; Apologies for the slow response, I was out of country for a while. Thanks for your kind words and starting a very interesting suggestion.; It’s fascinating to see, how methods being used in single-cell RNA-seq is coming full circle back to the bulk RNA-seq experiments. We have to do some more digging to say clearly about the caveats of using Alevin with the mentioned 3’ bulk RNA-seq experiments but given the understanding from the picture of the shared image we don’t see any obvious show stoppers; although below mentioned concerns should be kept in mind while using Alevin for bulk data deduplication:. Alevin solves the problem pretty well for protocols where fragmentation of the cDNA molecule happens post PCR amplification. There might be some concerns about over-deduplication of the UMI if fragmenation happens before amplification. Although in current form, Illumina sample index can be given as an external whitelist to Alevin but user should be aware that Alevin performs a sequence correction step before starting any optimizations.; Alevin is designed for droplets based protocols, where one end of Paired end read is just the CB/UMI (i.e. no read sequence) and therefore Alevin can’t optimally use the full paired end information of the bulk 3' protocol if its both end has read-sequence for example the ambiguous mapping resolution based on a previously/empirically known approximate fragment length. We would be more than happy to help/discuss, how does the results look in bulk 3’ tagged protocols or if you have particular suggestions about what improvements can be done in Alevin.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193
https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-446171558:91,Safety,avoid,avoid,91,"I am also interested in this approach. I have paired-end bulk-RNAseq with UMIs in order to avoid duplicates. I have three fastq's per sample : 1 UMI, 2 and 3 paired-end FASTQ My aim is if I can use alevin in this way. salmon alevin -l ISR -1 UMI.fq.gz -2 Sample_read_1.fq.gz Sample_read_2.fq.gz. Thanks in advance",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-446171558
https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196:109,Availability,down,downloaded,109,"Hi all,. bit of a manual workaround, but for each missing package I searched anaconda https://anaconda.org/, downloaded the package manually from downloads then installed the latest build of salmon using . conda install -c bioconda/label/main salmon. Hope this helps",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196
https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196:146,Availability,down,downloads,146,"Hi all,. bit of a manual workaround, but for each missing package I searched anaconda https://anaconda.org/, downloaded the package manually from downloads then installed the latest build of salmon using . conda install -c bioconda/label/main salmon. Hope this helps",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196
https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196:161,Deployability,install,installed,161,"Hi all,. bit of a manual workaround, but for each missing package I searched anaconda https://anaconda.org/, downloaded the package manually from downloads then installed the latest build of salmon using . conda install -c bioconda/label/main salmon. Hope this helps",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196
https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196:212,Deployability,install,install,212,"Hi all,. bit of a manual workaround, but for each missing package I searched anaconda https://anaconda.org/, downloaded the package manually from downloads then installed the latest build of salmon using . conda install -c bioconda/label/main salmon. Hope this helps",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925:68,Availability,error,error,68,"Hi Nate,. Can you tell me / do you know how boost was compiled? The error you're getting looks like what happens when the version of boost against which salmon is attempting to link was not built with >= C++11. Basically, the newest version of salmon requires C++14 (which GCC 8 obviously supports). However, there are binary incompatibilities between pre-C++11 and post-C++11 code libraries. So, whatever version of boost you link against must have been compiled with at least `--std=c++11`. One option is to let salmon fetch and build boost for you by putting `-DFETCH_BOOST=TRUE` in the cmake configuration flags when calling `cmake`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925:596,Deployability,configurat,configuration,596,"Hi Nate,. Can you tell me / do you know how boost was compiled? The error you're getting looks like what happens when the version of boost against which salmon is attempting to link was not built with >= C++11. Basically, the newest version of salmon requires C++14 (which GCC 8 obviously supports). However, there are binary incompatibilities between pre-C++11 and post-C++11 code libraries. So, whatever version of boost you link against must have been compiled with at least `--std=c++11`. One option is to let salmon fetch and build boost for you by putting `-DFETCH_BOOST=TRUE` in the cmake configuration flags when calling `cmake`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925:596,Modifiability,config,configuration,596,"Hi Nate,. Can you tell me / do you know how boost was compiled? The error you're getting looks like what happens when the version of boost against which salmon is attempting to link was not built with >= C++11. Basically, the newest version of salmon requires C++14 (which GCC 8 obviously supports). However, there are binary incompatibilities between pre-C++11 and post-C++11 code libraries. So, whatever version of boost you link against must have been compiled with at least `--std=c++11`. One option is to let salmon fetch and build boost for you by putting `-DFETCH_BOOST=TRUE` in the cmake configuration flags when calling `cmake`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:204,Availability,error,error,204,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:1100,Availability,ERROR,ERROR,1100,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:1657,Availability,Error,Error,1657,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:1709,Availability,Error,Error,1709,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:1734,Availability,Error,Error,1734,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:530,Deployability,configurat,configuration,530,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:624,Deployability,configurat,configuration,624,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:269,Modifiability,config,configure,269,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:530,Modifiability,config,configuration,530,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:555,Modifiability,config,config,555,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:624,Modifiability,config,configuration,624,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:653,Modifiability,config,config,653,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:258,Performance,Perform,Performing,258,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:936,Performance,Perform,Performing,936,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:1338,Performance,load,load,1338,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:391,Safety,Detect,Detecting,391,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:424,Safety,Detect,Detecting,424,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:742,Usability,guid,guide,742,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449:1188,Availability,error,error,1188,"Greetings,; I recently ran across this problem. In my invocation, I noticed that the boost build process was running with a b2 command which looked like:. cd /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0 && CC=/opt/local/stow/gcc-8.1.0/bin/gcc CXX=/opt/local/stow/gcc-8.1.0/bin/g++ /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=/opt/local/stow/gcc-8.1.0/bin/gcc toolset=/opt/local/stow/gcc-8.1.0/bin/gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/include -L/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/lib"" link=static install. and was generated in the file:; CMakeFiles/libboost.dir/build.make. which I then edited to ensure that all the toolset entries were set to 'toolset=gcc'.; Rerunning the make then passed without error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449:863,Deployability,install,install,863,"Greetings,; I recently ran across this problem. In my invocation, I noticed that the boost build process was running with a b2 command which looked like:. cd /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0 && CC=/opt/local/stow/gcc-8.1.0/bin/gcc CXX=/opt/local/stow/gcc-8.1.0/bin/g++ /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=/opt/local/stow/gcc-8.1.0/bin/gcc toolset=/opt/local/stow/gcc-8.1.0/bin/gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/include -L/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/lib"" link=static install. and was generated in the file:; CMakeFiles/libboost.dir/build.make. which I then edited to ensure that all the toolset entries were set to 'toolset=gcc'.; Rerunning the make then passed without error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449:960,Deployability,install,install,960,"Greetings,; I recently ran across this problem. In my invocation, I noticed that the boost build process was running with a b2 command which looked like:. cd /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0 && CC=/opt/local/stow/gcc-8.1.0/bin/gcc CXX=/opt/local/stow/gcc-8.1.0/bin/g++ /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=/opt/local/stow/gcc-8.1.0/bin/gcc toolset=/opt/local/stow/gcc-8.1.0/bin/gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/include -L/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/lib"" link=static install. and was generated in the file:; CMakeFiles/libboost.dir/build.make. which I then edited to ensure that all the toolset entries were set to 'toolset=gcc'.; Rerunning the make then passed without error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449
https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449:985,Deployability,install,install,985,"Greetings,; I recently ran across this problem. In my invocation, I noticed that the boost build process was running with a b2 command which looked like:. cd /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0 && CC=/opt/local/stow/gcc-8.1.0/bin/gcc CXX=/opt/local/stow/gcc-8.1.0/bin/g++ /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=/opt/local/stow/gcc-8.1.0/bin/gcc toolset=/opt/local/stow/gcc-8.1.0/bin/gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/include -L/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/lib"" link=static install. and was generated in the file:; CMakeFiles/libboost.dir/build.make. which I then edited to ensure that all the toolset entries were set to 'toolset=gcc'.; Rerunning the make then passed without error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449
https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-439527284:390,Integrability,protocol,protocols,390,"Hi @mojakab ,; Thanks for your interest in Alevin. Currently most of our research efforts have gone into developing Alevin for droplet based 3' tag sequencing like 10x chromium and DropSeq. Although similar but Cel-Seq2 relies on a different cell isolation step which can potentially create assay specific bias between the experiments. Basically Alevin is designed to work with single-cell protocols which follows the following criteria:; * Droplet based cell isolation.; * 3' tag sequencing.; * Fragmentation post Amplification. We have similar such request in https://github.com/COMBINE-lab/salmon/issues/269, where the user was able to use Alevin with Cel-Seq2 but currently we have not explored the full potential of Alevin with Cel-Seq2 and might require more careful consideration. If you happen to use Alevin on Cel-Seq2 data we'd appreciate your feedback based on your experience.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-439527284
https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-439527284:854,Usability,feedback,feedback,854,"Hi @mojakab ,; Thanks for your interest in Alevin. Currently most of our research efforts have gone into developing Alevin for droplet based 3' tag sequencing like 10x chromium and DropSeq. Although similar but Cel-Seq2 relies on a different cell isolation step which can potentially create assay specific bias between the experiments. Basically Alevin is designed to work with single-cell protocols which follows the following criteria:; * Droplet based cell isolation.; * 3' tag sequencing.; * Fragmentation post Amplification. We have similar such request in https://github.com/COMBINE-lab/salmon/issues/269, where the user was able to use Alevin with Cel-Seq2 but currently we have not explored the full potential of Alevin with Cel-Seq2 and might require more careful consideration. If you happen to use Alevin on Cel-Seq2 data we'd appreciate your feedback based on your experience.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-439527284
https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804:191,Energy Efficiency,adapt,adapter,191,"Hi @k3yavi, ; I just re-read this post and I believe that in the CEL-Seq2 protocol, read_1 has first the UMI and then the CB and then polyT... because the sequencing starts with the Illumina adapter (see image below from paper). . Thanks!; ![13059_2016_938_fig1_html](https://user-images.githubusercontent.com/39304679/49376447-edbda900-f70f-11e8-85d7-b86b15c477d5.gif)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804
https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804:74,Integrability,protocol,protocol,74,"Hi @k3yavi, ; I just re-read this post and I believe that in the CEL-Seq2 protocol, read_1 has first the UMI and then the CB and then polyT... because the sequencing starts with the Illumina adapter (see image below from paper). . Thanks!; ![13059_2016_938_fig1_html](https://user-images.githubusercontent.com/39304679/49376447-edbda900-f70f-11e8-85d7-b86b15c477d5.gif)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804
https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804:191,Integrability,adapter,adapter,191,"Hi @k3yavi, ; I just re-read this post and I believe that in the CEL-Seq2 protocol, read_1 has first the UMI and then the CB and then polyT... because the sequencing starts with the Illumina adapter (see image below from paper). . Thanks!; ![13059_2016_938_fig1_html](https://user-images.githubusercontent.com/39304679/49376447-edbda900-f70f-11e8-85d7-b86b15c477d5.gif)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804
https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804:191,Modifiability,adapt,adapter,191,"Hi @k3yavi, ; I just re-read this post and I believe that in the CEL-Seq2 protocol, read_1 has first the UMI and then the CB and then polyT... because the sequencing starts with the Illumina adapter (see image below from paper). . Thanks!; ![13059_2016_938_fig1_html](https://user-images.githubusercontent.com/39304679/49376447-edbda900-f70f-11e8-85d7-b86b15c477d5.gif)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/311#issuecomment-443709804
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:62,Availability,avail,available,62,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:208,Availability,failure,failure,208,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:46,Deployability,release,released,46,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:85,Deployability,release,release,85,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:373,Deployability,install,install,373,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:439,Deployability,release,release,439,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:228,Testability,test,tests,228,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:350,Testability,test,test,350,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:39,Availability,fault,fault,39,"I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. Details below:. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. The output is below. If I run the bash shell on all the A. thaliana samples it produces the same seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:307,Availability,fault,fault,307,"I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. Details below:. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. The output is below. If I run the bash shell on all the A. thaliana samples it produces the same seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:391,Availability,fault,fault,391,"I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. Details below:. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. The output is below. If I run the bash shell on all the A. thaliana samples it produces the same seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:2268,Availability,fault,fault,2268,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:851,Deployability,upgrade,upgrade,851,"I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. Details below:. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. The output is below. If I run the bash shell on all the A. thaliana samples it produces the same seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:903,Deployability,upgrade,upgrades,903,"I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. Details below:. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. The output is below. If I run the bash shell on all the A. thaliana samples it produces the same seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:1671,Performance,Load,Loading,1671,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:1736,Performance,Load,Loading,1736,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:1809,Performance,Load,Loading,1809,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:1877,Performance,Load,Loading,1877,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:1948,Performance,Load,Loading,1948,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:2207,Performance,load,loading,2207,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:2215,Security,hash,hash,2215,"e next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:1303,Testability,Log,Logs,1303,"e seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_i",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:1350,Testability,log,logs,1350,"e seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_i",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017:45,Deployability,install,install,45,"Hi @michael-brent ,. Did you, by any chance, install via bioconda? There is a known issue with the bioconda build on OSX. Can you try [this](https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz) pre-compiled binary in the meantime to see if it works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779:96,Availability,down,downloaded,96,"Hi,. Yes, I did install with bioconda. Thanks for the link to the precompiled; version, which I downloaded and unzipped. I'm sorry to be so ignorant (my; unix knowledge is 25 years out of date) but how/where should I install; this?. Also, currently ""which salmon"" gives me the bioconda version. I guess I; will need to add the path to the precompiled version on the end of my PATH; environment variable?. Thanks,; Michael. On Sat, Nov 24, 2018 at 3:51 PM Rob Patro <notifications@github.com> wrote:. > Hi @michael-brent <https://github.com/michael-brent> ,; >; > Did you, by any chance, install via bioconda? There is a known issue with; > the bioconda build on OSX. Can you try this; > <https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz>; > pre-compiled binary in the meantime to see if it works for you?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ArM27mCF3NQcGVuZHpU3-8mb2_6WI7NIks5uyb9egaJpZM4YxmdA>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779:16,Deployability,install,install,16,"Hi,. Yes, I did install with bioconda. Thanks for the link to the precompiled; version, which I downloaded and unzipped. I'm sorry to be so ignorant (my; unix knowledge is 25 years out of date) but how/where should I install; this?. Also, currently ""which salmon"" gives me the bioconda version. I guess I; will need to add the path to the precompiled version on the end of my PATH; environment variable?. Thanks,; Michael. On Sat, Nov 24, 2018 at 3:51 PM Rob Patro <notifications@github.com> wrote:. > Hi @michael-brent <https://github.com/michael-brent> ,; >; > Did you, by any chance, install via bioconda? There is a known issue with; > the bioconda build on OSX. Can you try this; > <https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz>; > pre-compiled binary in the meantime to see if it works for you?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ArM27mCF3NQcGVuZHpU3-8mb2_6WI7NIks5uyb9egaJpZM4YxmdA>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779:217,Deployability,install,install,217,"Hi,. Yes, I did install with bioconda. Thanks for the link to the precompiled; version, which I downloaded and unzipped. I'm sorry to be so ignorant (my; unix knowledge is 25 years out of date) but how/where should I install; this?. Also, currently ""which salmon"" gives me the bioconda version. I guess I; will need to add the path to the precompiled version on the end of my PATH; environment variable?. Thanks,; Michael. On Sat, Nov 24, 2018 at 3:51 PM Rob Patro <notifications@github.com> wrote:. > Hi @michael-brent <https://github.com/michael-brent> ,; >; > Did you, by any chance, install via bioconda? There is a known issue with; > the bioconda build on OSX. Can you try this; > <https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz>; > pre-compiled binary in the meantime to see if it works for you?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ArM27mCF3NQcGVuZHpU3-8mb2_6WI7NIks5uyb9egaJpZM4YxmdA>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779:587,Deployability,install,install,587,"Hi,. Yes, I did install with bioconda. Thanks for the link to the precompiled; version, which I downloaded and unzipped. I'm sorry to be so ignorant (my; unix knowledge is 25 years out of date) but how/where should I install; this?. Also, currently ""which salmon"" gives me the bioconda version. I guess I; will need to add the path to the precompiled version on the end of my PATH; environment variable?. Thanks,; Michael. On Sat, Nov 24, 2018 at 3:51 PM Rob Patro <notifications@github.com> wrote:. > Hi @michael-brent <https://github.com/michael-brent> ,; >; > Did you, by any chance, install via bioconda? There is a known issue with; > the bioconda build on OSX. Can you try this; > <https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz>; > pre-compiled binary in the meantime to see if it works for you?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ArM27mCF3NQcGVuZHpU3-8mb2_6WI7NIks5uyb9egaJpZM4YxmdA>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779:394,Modifiability,variab,variable,394,"Hi,. Yes, I did install with bioconda. Thanks for the link to the precompiled; version, which I downloaded and unzipped. I'm sorry to be so ignorant (my; unix knowledge is 25 years out of date) but how/where should I install; this?. Also, currently ""which salmon"" gives me the bioconda version. I guess I; will need to add the path to the precompiled version on the end of my PATH; environment variable?. Thanks,; Michael. On Sat, Nov 24, 2018 at 3:51 PM Rob Patro <notifications@github.com> wrote:. > Hi @michael-brent <https://github.com/michael-brent> ,; >; > Did you, by any chance, install via bioconda? There is a known issue with; > the bioconda build on OSX. Can you try this; > <https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz>; > pre-compiled binary in the meantime to see if it works for you?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ArM27mCF3NQcGVuZHpU3-8mb2_6WI7NIks5uyb9egaJpZM4YxmdA>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442681558:143,Availability,fault,fault,143,I am also running the same MacOS 10.12.6 and having a similar issue. I cannot get the provided binary to work either. I still get segmentation fault. The index seems to build but quantifying any samples is where I receive 'segmentation fault: 11'. Thanks for any advice.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442681558
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442681558:236,Availability,fault,fault,236,I am also running the same MacOS 10.12.6 and having a similar issue. I cannot get the provided binary to work either. I still get segmentation fault. The index seems to build but quantifying any samples is where I receive 'segmentation fault: 11'. Thanks for any advice.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442681558
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442682181:71,Security,access,access,71,Hi @egreen2 : It could have to do with the MacOS version. I don't have access to a 10.12 box. We can try and build a version on an older OSX and see if that works for you (generally MacOS apps are not backward compatible). @k3yavi --- what version of MacOS are you running?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442682181
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442682687:58,Deployability,upgrade,upgraded,58,"Yea I looked into `10.12.6`, it looks like Sierra. I just upgraded to mojave. I can ask somebody in the lab tomorrow if they have Sierra to compile and make a binary .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442682687
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442904994:11,Deployability,upgrade,upgrade,11,I can also upgrade my 10.12.6 Sierra to Mojave if you have a working binary for that. Let me know. Thanks so much.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442904994
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442944958:28,Deployability,upgrade,upgrade,28,"That would be great. I will upgrade to Mojave now. I don't know if it is helpful, but the last binary of Salmon I could get to work on MacOS 10.12.6 was the provided Salmon-0.8.2_macOX_10.12.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442944958
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-444970458:89,Availability,avail,available,89,Hi @egreen2 --- just wanted to inform you that v0.12.0 has been released and is now also available via bioconda for both linux and osx. The osx segfault issue has been resolved.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-444970458
https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-444970458:64,Deployability,release,released,64,Hi @egreen2 --- just wanted to inform you that v0.12.0 has been released and is now also available via bioconda for both linux and osx. The osx segfault issue has been resolved.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-444970458
https://github.com/COMBINE-lab/salmon/issues/319#issuecomment-442180390:133,Performance,load,loading,133,"I think the idea of using memory-mapped IO might be useful, similar to bowtie2's `--mm` option. However, are you sure it's the index loading that's the issue? You may want to look into staging the salmon index on some local scratch space on your compute nodes as the bandwidth will be much greater than your network storage. Additionally, I tend to see IO saturation over our NFS pool from just streaming the FASTQ data to salmon, so you might still be screwed even if you take care of the index IO contribution. Your machines should likely be caching the index in RAM (if you have enough of it) after one access, but you can use a tool to force caching of the index file if you really want (https://serverfault.com/questions/43383/caching-preloading-files-on-linux-into-ram).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/319#issuecomment-442180390
https://github.com/COMBINE-lab/salmon/issues/319#issuecomment-442180390:606,Security,access,access,606,"I think the idea of using memory-mapped IO might be useful, similar to bowtie2's `--mm` option. However, are you sure it's the index loading that's the issue? You may want to look into staging the salmon index on some local scratch space on your compute nodes as the bandwidth will be much greater than your network storage. Additionally, I tend to see IO saturation over our NFS pool from just streaming the FASTQ data to salmon, so you might still be screwed even if you take care of the index IO contribution. Your machines should likely be caching the index in RAM (if you have enough of it) after one access, but you can use a tool to force caching of the index file if you really want (https://serverfault.com/questions/43383/caching-preloading-files-on-linux-into-ram).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/319#issuecomment-442180390
https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444990544:135,Deployability,release,release,135,"@Miserlou : I was assuming that this is actually the predecessor of #323, which is still open (@k3yavi, can we remove ""fixed in latest release"" tag, until we know?).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444990544
https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444994980:44,Availability,error,error,44,"@Miserlou : it's also worth noting that the error message preceding the segfault in #323 is coming from the library (libstaden) that we use to parse SAM/BAM files. So, it's something where I think we will need a BAM that exhibits whatever triggers that behavior.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444994980
https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444994980:50,Integrability,message,message,50,"@Miserlou : it's also worth noting that the error message preceding the segfault in #323 is coming from the library (libstaden) that we use to parse SAM/BAM files. So, it's something where I think we will need a BAM that exhibits whatever triggers that behavior.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444994980
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442529011:129,Performance,load,loaded,129,"Hi @Miserlou,. It looks like the index was not written completely / successfully. Do you have a (binary) copy of the index being loaded? . --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442529011
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442542353:26,Security,access,accessions,26,"Hm, that could be it. All accessions that are having this problem with `851443704` bytes are `/home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short`. . Here's that TXI: https://s3.amazonaws.com/data-refinery-s3-transcriptome-index-circleci-prod/MUS_MUSCULUS_TRANSCRIPTOME_SHORT.tar.gz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442542353
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442557809:27,Performance,load,load,27,"Hrmm, I seem to be able to load and map against that index (though I'm testing with the latest develop version). Is there anything specific about the machines / vms where this is failing versus succeeding?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442557809
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442557809:71,Testability,test,testing,71,"Hrmm, I seem to be able to load and map against that index (though I'm testing with the latest develop version). Is there anything specific about the machines / vms where this is failing versus succeeding?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442557809
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984:68,Availability,error,error,68,"Salmon is version 0.9.1. This is happening for lots of samples, the error message is always `Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]` regardless of the fastq files that are provided. . Nothing else too special is going on. It doesn't seem to have this problem with other indexes. Can you try to load and map again with 0.9.1?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984:74,Integrability,message,message,74,"Salmon is version 0.9.1. This is happening for lots of samples, the error message is always `Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]` regardless of the fastq files that are provided. . Nothing else too special is going on. It doesn't seem to have this problem with other indexes. Can you try to load and map again with 0.9.1?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984:334,Performance,load,load,334,"Salmon is version 0.9.1. This is happening for lots of samples, the error message is always `Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]` regardless of the fastq files that are provided. . Nothing else too special is going on. It doesn't seem to have this problem with other indexes. Can you try to load and map again with 0.9.1?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442570917:24,Availability,avail,available,24,"Could the amount of RAM available cause this problem? (Although they should have quite a lot available, much more than the size of this index file.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442570917
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442570917:93,Availability,avail,available,93,"Could the amount of RAM available cause this problem? (Although they should have quite a lot available, much more than the size of this index file.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442570917
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442610783:222,Usability,simpl,simply,222,"Also - the problem does not happen for Danio rerio indexes, which were created on the same machine. We have also had successes with Homo sap. _short_, but not Homo sap. _long_. Is it possible that some of the indexes were simply corrupted during creation? Although you're able to map to the index I provided above. I have no idea.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442610783
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022:40,Availability,error,error,40,"Actually, homo sap long is causing this error, homo sap short is causing the related JSON error (`rapidjson internal assertion failure: IsObject()`)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022:90,Availability,error,error,90,"Actually, homo sap long is causing this error, homo sap short is causing the related JSON error (`rapidjson internal assertion failure: IsObject()`)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022:127,Availability,failure,failure,127,"Actually, homo sap long is causing this error, homo sap short is causing the related JSON error (`rapidjson internal assertion failure: IsObject()`)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022:117,Testability,assert,assertion,117,"Actually, homo sap long is causing this error, homo sap short is causing the related JSON error (`rapidjson internal assertion failure: IsObject()`)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478:490,Performance,load,loaded,490,"Ok, so even v0.9.1, on my machine at least, is not seeing this issue for your index. Can you tell me something about the host OS (VM) on the systems where it is failing?. To answer your other questions, by ""size of the types"" I mean e.g. if you are switching to a 32-bit processor or alternative architecture (very unlikely). One other thought is to try it ""interactively"" on a similar instance. Could it be some sort of issue where the file is being accessed before it has been completely loaded / moved to the target machine? Can you run some sort of checksum validation on the machine before attempting to load the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478:609,Performance,load,load,609,"Ok, so even v0.9.1, on my machine at least, is not seeing this issue for your index. Can you tell me something about the host OS (VM) on the systems where it is failing?. To answer your other questions, by ""size of the types"" I mean e.g. if you are switching to a 32-bit processor or alternative architecture (very unlikely). One other thought is to try it ""interactively"" on a similar instance. Could it be some sort of issue where the file is being accessed before it has been completely loaded / moved to the target machine? Can you run some sort of checksum validation on the machine before attempting to load the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478:451,Security,access,accessed,451,"Ok, so even v0.9.1, on my machine at least, is not seeing this issue for your index. Can you tell me something about the host OS (VM) on the systems where it is failing?. To answer your other questions, by ""size of the types"" I mean e.g. if you are switching to a 32-bit processor or alternative architecture (very unlikely). One other thought is to try it ""interactively"" on a similar instance. Could it be some sort of issue where the file is being accessed before it has been completely loaded / moved to the target machine? Can you run some sort of checksum validation on the machine before attempting to load the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478:553,Security,checksum,checksum,553,"Ok, so even v0.9.1, on my machine at least, is not seeing this issue for your index. Can you tell me something about the host OS (VM) on the systems where it is failing?. To answer your other questions, by ""size of the types"" I mean e.g. if you are switching to a 32-bit processor or alternative architecture (very unlikely). One other thought is to try it ""interactively"" on a similar instance. Could it be some sort of issue where the file is being accessed before it has been completely loaded / moved to the target machine? Can you run some sort of checksum validation on the machine before attempting to load the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478
https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478:562,Security,validat,validation,562,"Ok, so even v0.9.1, on my machine at least, is not seeing this issue for your index. Can you tell me something about the host OS (VM) on the systems where it is failing?. To answer your other questions, by ""size of the types"" I mean e.g. if you are switching to a 32-bit processor or alternative architecture (very unlikely). One other thought is to try it ""interactively"" on a similar instance. Could it be some sort of issue where the file is being accessed before it has been completely loaded / moved to the target machine? Can you run some sort of checksum validation on the machine before attempting to load the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442681478
https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442547014:5,Availability,error,error,5,This error is only happening for HOMO_SAPIENS and no other organisms. Related TXI:; https://s3.amazonaws.com/data-refinery-s3-transcriptome-index-circleci-prod/HOMO_SAPIENS_TRANSCRIPTOME_LONG.tar.gz,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442547014
https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280:214,Availability,ERROR,ERROR,214,"It's possible this is [related to the other issue](https://github.com/COMBINE-lab/salmon/issues/321), since I'm also seeing:. ```; 2018-11-28 18:01:19,745 i-05ef169a0611966c7 data_refinery_workers.processors.utils ERROR [pipeline_applied: SALMON] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_405995/SRR2963482_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_405995/SRR2963482_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_405995/SRR2963482_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_405995/SRR2963482_output/logs; [2018-11-28 18:01:15.711] [jointLog] [info] parsing read library format; [2018-11-28 18:01:15.711] [jointLog] [info] There is 1 library.; [2018-11-28 18:01:15.761] [stderrLog] [info] Loading Suffix Array; [2018-11-28 18:01:15.761] [jointLog] [info] Loading Quasi index; [2018-11-28 18:01:15.761] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 1176099240 bytes from input stream! Read 872415224]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280
https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280:1169,Performance,Load,Loading,1169,"It's possible this is [related to the other issue](https://github.com/COMBINE-lab/salmon/issues/321), since I'm also seeing:. ```; 2018-11-28 18:01:19,745 i-05ef169a0611966c7 data_refinery_workers.processors.utils ERROR [pipeline_applied: SALMON] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_405995/SRR2963482_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_405995/SRR2963482_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_405995/SRR2963482_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_405995/SRR2963482_output/logs; [2018-11-28 18:01:15.711] [jointLog] [info] parsing read library format; [2018-11-28 18:01:15.711] [jointLog] [info] There is 1 library.; [2018-11-28 18:01:15.761] [stderrLog] [info] Loading Suffix Array; [2018-11-28 18:01:15.761] [jointLog] [info] Loading Quasi index; [2018-11-28 18:01:15.761] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 1176099240 bytes from input stream! Read 872415224]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280
https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280:1235,Performance,Load,Loading,1235,"It's possible this is [related to the other issue](https://github.com/COMBINE-lab/salmon/issues/321), since I'm also seeing:. ```; 2018-11-28 18:01:19,745 i-05ef169a0611966c7 data_refinery_workers.processors.utils ERROR [pipeline_applied: SALMON] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_405995/SRR2963482_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_405995/SRR2963482_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_405995/SRR2963482_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_405995/SRR2963482_output/logs; [2018-11-28 18:01:15.711] [jointLog] [info] parsing read library format; [2018-11-28 18:01:15.711] [jointLog] [info] There is 1 library.; [2018-11-28 18:01:15.761] [stderrLog] [info] Loading Suffix Array; [2018-11-28 18:01:15.761] [jointLog] [info] Loading Quasi index; [2018-11-28 18:01:15.761] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 1176099240 bytes from input stream! Read 872415224]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280
https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280:1300,Performance,Load,Loading,1300,"It's possible this is [related to the other issue](https://github.com/COMBINE-lab/salmon/issues/321), since I'm also seeing:. ```; 2018-11-28 18:01:19,745 i-05ef169a0611966c7 data_refinery_workers.processors.utils ERROR [pipeline_applied: SALMON] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_405995/SRR2963482_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_405995/SRR2963482_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_405995/SRR2963482_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_405995/SRR2963482_output/logs; [2018-11-28 18:01:15.711] [jointLog] [info] parsing read library format; [2018-11-28 18:01:15.711] [jointLog] [info] There is 1 library.; [2018-11-28 18:01:15.761] [stderrLog] [info] Loading Suffix Array; [2018-11-28 18:01:15.761] [jointLog] [info] Loading Quasi index; [2018-11-28 18:01:15.761] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 1176099240 bytes from input stream! Read 872415224]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280
https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280:895,Testability,Log,Logs,895,"It's possible this is [related to the other issue](https://github.com/COMBINE-lab/salmon/issues/321), since I'm also seeing:. ```; 2018-11-28 18:01:19,745 i-05ef169a0611966c7 data_refinery_workers.processors.utils ERROR [pipeline_applied: SALMON] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_405995/SRR2963482_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_405995/SRR2963482_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_405995/SRR2963482_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_405995/SRR2963482_output/logs; [2018-11-28 18:01:15.711] [jointLog] [info] parsing read library format; [2018-11-28 18:01:15.711] [jointLog] [info] There is 1 library.; [2018-11-28 18:01:15.761] [stderrLog] [info] Loading Suffix Array; [2018-11-28 18:01:15.761] [jointLog] [info] Loading Quasi index; [2018-11-28 18:01:15.761] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 1176099240 bytes from input stream! Read 872415224]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280
https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280:980,Testability,log,logs,980,"It's possible this is [related to the other issue](https://github.com/COMBINE-lab/salmon/issues/321), since I'm also seeing:. ```; 2018-11-28 18:01:19,745 i-05ef169a0611966c7 data_refinery_workers.processors.utils ERROR [pipeline_applied: SALMON] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_405995/SRR2963482_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_405995/SRR2963482_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_405995/SRR2963482_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_405995/SRR2963482_output/logs; [2018-11-28 18:01:15.711] [jointLog] [info] parsing read library format; [2018-11-28 18:01:15.711] [jointLog] [info] There is 1 library.; [2018-11-28 18:01:15.761] [stderrLog] [info] Loading Suffix Array; [2018-11-28 18:01:15.761] [jointLog] [info] Loading Quasi index; [2018-11-28 18:01:15.761] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 1176099240 bytes from input stream! Read 872415224]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442575438:146,Integrability,interface,interface,146,"Hi Paul,. Did you reply to the github issue via e-mail and attach it there? In that case, it won't show up. If you post a response via the github interface, you can just drag and drop the file into the text box to have it uploaded.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442575438
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747:19,Availability,error,error,19,"Hi @phickner,. The error message seems to be coming from the library we use to parse the BAM file (https://github.com/jkbonfield/io_lib/blob/master/io_lib/bam.c#L329). Is it possible that somehow the BAM itself is ill-formed? Maybe as determined by [picard ValidateSamFile](https://broadinstitute.github.io/picard/command-line-overview.html#ValidateSamFile) or some such?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747:25,Integrability,message,message,25,"Hi @phickner,. The error message seems to be coming from the library we use to parse the BAM file (https://github.com/jkbonfield/io_lib/blob/master/io_lib/bam.c#L329). Is it possible that somehow the BAM itself is ill-formed? Maybe as determined by [picard ValidateSamFile](https://broadinstitute.github.io/picard/command-line-overview.html#ValidateSamFile) or some such?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747:257,Security,Validat,ValidateSamFile,257,"Hi @phickner,. The error message seems to be coming from the library we use to parse the BAM file (https://github.com/jkbonfield/io_lib/blob/master/io_lib/bam.c#L329). Is it possible that somehow the BAM itself is ill-formed? Maybe as determined by [picard ValidateSamFile](https://broadinstitute.github.io/picard/command-line-overview.html#ValidateSamFile) or some such?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747:341,Security,Validat,ValidateSamFile,341,"Hi @phickner,. The error message seems to be coming from the library we use to parse the BAM file (https://github.com/jkbonfield/io_lib/blob/master/io_lib/bam.c#L329). Is it possible that somehow the BAM itself is ill-formed? Maybe as determined by [picard ValidateSamFile](https://broadinstitute.github.io/picard/command-line-overview.html#ValidateSamFile) or some such?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450573944:19,Deployability,update,update,19,"Hi @phickner,. Any update on this? How does the BAM file look under ValidateSamFile or some such?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450573944
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450573944:68,Security,Validat,ValidateSamFile,68,"Hi @phickner,. Any update on this? How does the BAM file look under ValidateSamFile or some such?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450573944
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450704257:165,Deployability,update,update,165,"My issue was resolved. Thanks. On Sun, Dec 30, 2018 at 12:07 PM Rob Patro <notifications@github.com> wrote:. > Hi @phickner <https://github.com/phickner>,; >; > Any update on this? How does the BAM file look under ValidateSamFile or; > some such?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450573944>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APvI3l_civHZCPEisrvMD2azctC_EEM1ks5u-PLngaJpZM4Y4K_L>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450704257
https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450704257:214,Security,Validat,ValidateSamFile,214,"My issue was resolved. Thanks. On Sun, Dec 30, 2018 at 12:07 PM Rob Patro <notifications@github.com> wrote:. > Hi @phickner <https://github.com/phickner>,; >; > Any update on this? How does the BAM file look under ValidateSamFile or; > some such?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450573944>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APvI3l_civHZCPEisrvMD2azctC_EEM1ks5u-PLngaJpZM4Y4K_L>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-450704257
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599:57,Deployability,upgrade,upgrades,57,"HI @jamesrhowe ,; A couple of things, we have made major upgrades into Alevin with the release `v0.12.0` and would be releasing soon and it would take care of the problems you are facing.; We are still working on improving the tutorials and guide for using Alevin but for 10xV3 we added a new flag into `0.12.0` since the UMI length has increased; with the command line flag `--chromiumV3`. You might have to swap `--chromium` with `--chromiumV3`. I'd let you know once we release the latest version otherwise if you can compile from source, compiling `develop` should do the job for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599:87,Deployability,release,release,87,"HI @jamesrhowe ,; A couple of things, we have made major upgrades into Alevin with the release `v0.12.0` and would be releasing soon and it would take care of the problems you are facing.; We are still working on improving the tutorials and guide for using Alevin but for 10xV3 we added a new flag into `0.12.0` since the UMI length has increased; with the command line flag `--chromiumV3`. You might have to swap `--chromium` with `--chromiumV3`. I'd let you know once we release the latest version otherwise if you can compile from source, compiling `develop` should do the job for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599:473,Deployability,release,release,473,"HI @jamesrhowe ,; A couple of things, we have made major upgrades into Alevin with the release `v0.12.0` and would be releasing soon and it would take care of the problems you are facing.; We are still working on improving the tutorials and guide for using Alevin but for 10xV3 we added a new flag into `0.12.0` since the UMI length has increased; with the command line flag `--chromiumV3`. You might have to swap `--chromium` with `--chromiumV3`. I'd let you know once we release the latest version otherwise if you can compile from source, compiling `develop` should do the job for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599:241,Usability,guid,guide,241,"HI @jamesrhowe ,; A couple of things, we have made major upgrades into Alevin with the release `v0.12.0` and would be releasing soon and it would take care of the problems you are facing.; We are still working on improving the tutorials and guide for using Alevin but for 10xV3 we added a new flag into `0.12.0` since the UMI length has increased; with the command line flag `--chromiumV3`. You might have to swap `--chromium` with `--chromiumV3`. I'd let you know once we release the latest version otherwise if you can compile from source, compiling `develop` should do the job for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443218599
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443237933:145,Availability,down,downstream,145,"Not a problem @roryk , yes in my understanding of v3 things directly effecting Alevin is just the Umi length increment. Other noticeable changes downstream of Alevin I have observed and seen some comments from @LTLA would be:; * Read length changes from 98 to 91; * The output format of cellranger has changed, [this](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/matrices) might give full overview.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443237933
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443237933:387,Deployability,pipeline,pipelines,387,"Not a problem @roryk , yes in my understanding of v3 things directly effecting Alevin is just the Umi length increment. Other noticeable changes downstream of Alevin I have observed and seen some comments from @LTLA would be:; * Read length changes from 98 to 91; * The output format of cellranger has changed, [this](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/matrices) might give full overview.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443237933
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443354098:51,Deployability,install,install,51,"Thanks, that's super helpful!. I've been trying to install and compile from source using; `; git clone https://github.com/COMBINE-lab/salmon.git --branch develop; cd salmon; mkdir build; cd build; cmake ..; make install; `. but it's not working. I might just have to wait until the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443354098
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443354098:212,Deployability,install,install,212,"Thanks, that's super helpful!. I've been trying to install and compile from source using; `; git clone https://github.com/COMBINE-lab/salmon.git --branch develop; cd salmon; mkdir build; cd build; cmake ..; make install; `. but it's not working. I might just have to wait until the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443354098
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443354098:287,Deployability,release,release,287,"Thanks, that's super helpful!. I've been trying to install and compile from source using; `; git clone https://github.com/COMBINE-lab/salmon.git --branch develop; cd salmon; mkdir build; cd build; cmake ..; make install; `. but it's not working. I might just have to wait until the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443354098
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193:96,Availability,outage,outage,96,"Hi @jamesrhowe ,; We are still working on the release, but there seems to be a bioconda wide PR outage and not sure how much time it's gonna take for them to resolve it.; In the meantime you can use [this](https://drive.google.com/file/d/143RwsFpVYghr_DFv_4vuvbGmSlt3zlcW/view?usp=sharing) binary which should resolve your problem. We'd let you know once salmon is ready to be installed from bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193:46,Deployability,release,release,46,"Hi @jamesrhowe ,; We are still working on the release, but there seems to be a bioconda wide PR outage and not sure how much time it's gonna take for them to resolve it.; In the meantime you can use [this](https://drive.google.com/file/d/143RwsFpVYghr_DFv_4vuvbGmSlt3zlcW/view?usp=sharing) binary which should resolve your problem. We'd let you know once salmon is ready to be installed from bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193:377,Deployability,install,installed,377,"Hi @jamesrhowe ,; We are still working on the release, but there seems to be a bioconda wide PR outage and not sure how much time it's gonna take for them to resolve it.; In the meantime you can use [this](https://drive.google.com/file/d/143RwsFpVYghr_DFv_4vuvbGmSlt3zlcW/view?usp=sharing) binary which should resolve your problem. We'd let you know once salmon is ready to be installed from bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-444756149:26,Deployability,release,released,26,"Hi @jamesrhowe ,; We just released v0.12.0 and is updated on bioconda. It should solve your problem now.; Feel free to reopen this issue if you still face any problem.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-444756149
https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-444756149:50,Deployability,update,updated,50,"Hi @jamesrhowe ,; We just released v0.12.0 and is updated on bioconda. It should solve your problem now.; Feel free to reopen this issue if you still face any problem.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-444756149
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443514886:228,Deployability,install,install,228,"Now I am, and I still have the issue.. ; `git clone -b develop https://github.com/COMBINE-lab/salmon`; `git branch -l`; `* develop`. and then I just followed the tutorial: ; ```; cd salmon; mkdir build; cd build; cmake ..; make install; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443514886
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443515116:11,Availability,error,error,11,what's the error you are getting @rbenel ?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443515116
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443516685:103,Testability,test,tests,103,A couple of more questions just to understand the problem since I double checked it's passing our unit tests. * Can you try `./salmon alevin --help` to check if the `--celseq2` is present in the help of the created binary ?; * Can you please share the command you are using to run alevin ?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443516685
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:929,Availability,down,downstream,929,"1) So `--celseq2` isn't there, I had initially checked here, to make sure that there wasn't something wrong with my command.. ; ```; alevin; ==========; salmon-based processing of single-cell RNA-seq data. alevin options:. mapping input options:; -l [ --libType ] arg Format string describing the library ; type; -i [ --index ] arg salmon index; -r [ --unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:1385,Availability,down,downstream,1385,"--unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes. (Default: 100000); --tgMap arg transcript to gene map tsv file; ```; 2) `salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex_develop/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv`. **The tsv I created myself (with tximport), but I don't think that is the issue here...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:1702,Availability,down,downstream,1702,"--unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes. (Default: 100000); --tgMap arg transcript to gene map tsv file; ```; 2) `salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex_develop/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv`. **The tsv I created myself (with tximport), but I don't think that is the issue here...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:587,Deployability,pipeline,pipeline,587,"1) So `--celseq2` isn't there, I had initially checked here, to make sure that there wasn't something wrong with my command.. ; ```; alevin; ==========; salmon-based processing of single-cell RNA-seq data. alevin options:. mapping input options:; -l [ --libType ] arg Format string describing the library ; type; -i [ --index ] arg salmon index; -r [ --unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:687,Integrability,protocol,protocol,687,"1) So `--celseq2` isn't there, I had initially checked here, to make sure that there wasn't something wrong with my command.. ; ```; alevin; ==========; salmon-based processing of single-cell RNA-seq data. alevin options:. mapping input options:; -l [ --libType ] arg Format string describing the library ; type; -i [ --index ] arg salmon index; -r [ --unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:760,Integrability,protocol,protocol,760,"1) So `--celseq2` isn't there, I had initially checked here, to make sure that there wasn't something wrong with my command.. ; ```; alevin; ==========; salmon-based processing of single-cell RNA-seq data. alevin options:. mapping input options:; -l [ --libType ] arg Format string describing the library ; type; -i [ --index ] arg salmon index; -r [ --unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:828,Integrability,protocol,protocol,828,"1) So `--celseq2` isn't there, I had initially checked here, to make sure that there wasn't something wrong with my command.. ; ```; alevin; ==========; salmon-based processing of single-cell RNA-seq data. alevin options:. mapping input options:; -l [ --libType ] arg Format string describing the library ; type; -i [ --index ] arg salmon index; -r [ --unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:1602,Security,hash,hash,1602,"--unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes. (Default: 100000); --tgMap arg transcript to gene map tsv file; ```; 2) `salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex_develop/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv`. **The tsv I created myself (with tximport), but I don't think that is the issue here...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:1865,Usability,learn,learning,1865,"--unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes. (Default: 100000); --tgMap arg transcript to gene map tsv file; ```; 2) `salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex_develop/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv`. **The tsv I created myself (with tximport), but I don't think that is the issue here...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:952,Deployability,install,install,952,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:1072,Deployability,update,updated,1072,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:266,Integrability,message,message,266,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:479,Integrability,protocol,protocol,479,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:552,Integrability,protocol,protocol,552,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:623,Integrability,protocol,protocol,623,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:691,Integrability,protocol,protocol,691,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:752,Integrability,protocol,protocol,752,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:815,Integrability,protocol,protocol,815,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366:385,Performance,concurren,concurrently,385,"Right, the issue seems to be that the right binary is not getting created. My (re)compilation using the same script you shared above seems to be giving different help.; ```; alevin-specific Options:; -v [ --version ] print version string; -h [ --help ] produce help message; -o [ --output ] arg Output quantification directory.; -p [ --threads ] arg (=1) The number of threads to use; concurrently.; --tgMap arg transcript to gene map tsv file; --dropseq Use DropSeq Single Cell protocol for; the library; --chromiumV3 Use 10x chromium v3 Single Cell; protocol for the library.; --chromium Use 10x chromium v2 Single Cell; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --celseq Use CEL-Seq Single Cell protocol for; the library.; --celseq2 Use CEL-Seq2 Single Cell protocol for; the library.; ```. May I suggest removing the `CMakeCache.txt` file from the build folder of salmon and running `make -j 4 install` again. After recompilation using the `salmon` binary inside the `bin` folder should ideally give you the above updated help. However, If it doesn't resolve after that, I am compiling a linux binary and will share it to you to be used directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443518366
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443712972:461,Testability,test,testing,461,"Hi @rbenel ,; Thanks for raising the issue. Just a heads up I am not very experienced in `R` and I may be doing something wrong but can you please forward your `gencode.primary_assemblyv29.tsv` because it seems the file generate after following your R code to generate txp to gene map does not seem to be right. It looks like somehow `as.data.frame(txdf$TXNAME, txdf$GENEID)`is not doing the expected thing i.e. it's dumping only the gene names, at least in my testing. One alternative would be to use bioawk script from [here](https://combine-lab.github.io/alevin-tutorial/2018/setting-up-resources/) or may be use `do.call(rbind, Map(data.frame, A=txdf$TXNAME, B=txdf$GENEID))` in R, I am not sure about the latter though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443712972
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443715231:393,Safety,detect,detected,393,"Thinking more about the another problem can be the salmon index i.e. since it's gencode and if not already specified, you might wanna add `--gencode` as the command line flag while creating the index. The problem is the _full_ name in the reference fasta and the GTF does not align, only a prefix from the fasta does. Another thing I noticed in the logs you forwarded is that the number of CB detected by our knee heuristic seems to be undershooting. I might have to look into the data to tell more about it but the alternatives would be to explicitly specify the true/expected CB through a tsv file using flag `--whitelist` or you can force Alevin to use top X highly expressed CB with flag `--forceCells X`. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443715231
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443715231:349,Testability,log,logs,349,"Thinking more about the another problem can be the salmon index i.e. since it's gencode and if not already specified, you might wanna add `--gencode` as the command line flag while creating the index. The problem is the _full_ name in the reference fasta and the GTF does not align, only a prefix from the fasta does. Another thing I noticed in the logs you forwarded is that the number of CB detected by our knee heuristic seems to be undershooting. I might have to look into the data to tell more about it but the alternatives would be to explicitly specify the true/expected CB through a tsv file using flag `--whitelist` or you can force Alevin to use top X highly expressed CB with flag `--forceCells X`. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443715231
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326:184,Availability,error,error,184,"Hi @k3yavi , ; You are absolutely correct, that the tsv file only had one column, I fixed it above. . But the txdf was my backup... I tried your bioawk script, but I keep getting this error; `bioawk: illegal field $(), name ""group""` . [alevin.log](https://github.com/COMBINE-lab/salmon/files/2639709/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2639710/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326:243,Testability,log,log,243,"Hi @k3yavi , ; You are absolutely correct, that the tsv file only had one column, I fixed it above. . But the txdf was my backup... I tried your bioawk script, but I keep getting this error; `bioawk: illegal field $(), name ""group""` . [alevin.log](https://github.com/COMBINE-lab/salmon/files/2639709/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2639710/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326:307,Testability,log,log,307,"Hi @k3yavi , ; You are absolutely correct, that the tsv file only had one column, I fixed it above. . But the txdf was my backup... I tried your bioawk script, but I keep getting this error; `bioawk: illegal field $(), name ""group""` . [alevin.log](https://github.com/COMBINE-lab/salmon/files/2639709/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2639710/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326:327,Testability,log,log,327,"Hi @k3yavi , ; You are absolutely correct, that the tsv file only had one column, I fixed it above. . But the txdf was my backup... I tried your bioawk script, but I keep getting this error; `bioawk: illegal field $(), name ""group""` . [alevin.log](https://github.com/COMBINE-lab/salmon/files/2639709/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2639710/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326
https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326:397,Testability,log,log,397,"Hi @k3yavi , ; You are absolutely correct, that the tsv file only had one column, I fixed it above. . But the txdf was my backup... I tried your bioawk script, but I keep getting this error; `bioawk: illegal field $(), name ""group""` . [alevin.log](https://github.com/COMBINE-lab/salmon/files/2639709/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2639710/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421:181,Availability,avail,available,181,"Hi @ebecht ,; Can you please try running Alevin again with the latest release? We just released [v0.12.0](https://github.com/COMBINE-lab/salmon/releases/tag/v0.12.0).; It should be available on bioconda too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421:70,Deployability,release,release,70,"Hi @ebecht ,; Can you please try running Alevin again with the latest release? We just released [v0.12.0](https://github.com/COMBINE-lab/salmon/releases/tag/v0.12.0).; It should be available on bioconda too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421:87,Deployability,release,released,87,"Hi @ebecht ,; Can you please try running Alevin again with the latest release? We just released [v0.12.0](https://github.com/COMBINE-lab/salmon/releases/tag/v0.12.0).; It should be available on bioconda too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421:144,Deployability,release,releases,144,"Hi @ebecht ,; Can you please try running Alevin again with the latest release? We just released [v0.12.0](https://github.com/COMBINE-lab/salmon/releases/tag/v0.12.0).; It should be available on bioconda too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:2046,Integrability,protocol,protocol,2046,"owcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-06 11:14:56.513] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; [2018-12-06 11:14:56.533] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### alevin (dscRNA-seq quantification) v0.12.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ./transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ./hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ mates1 ] => { /tmp/tmp.p28w2nGvAn/p1.fa }; ### [ mates2 ] => { /tmp/tmp.p28w2nGvAn/p2.fa }; ### [ unmatedReads ] => { ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6047,Performance,Load,Loading,6047,"des Used: 267451749 / 267548197.; [2018-12-06 11:16:52.732] [alevinLog] [info] Knee found left boundary at 11955 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 31.0106% reads will be thrown away because of noisy Cellular barcodes.; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-06 11:16:55.059] [alevinLog] [info] Done True Barcode Sampling; [2018-12-06 11:16:55.395] [alevinLog] [info] Done populating Z matrix; [2018-12-06 11:16:55.453] [alevinLog] [info] Done indexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6112,Performance,Load,Loading,6112,"g] [info] Knee found left boundary at 11955 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 31.0106% reads will be thrown away because of noisy Cellular barcodes.; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-06 11:16:55.059] [alevinLog] [info] Done True Barcode Sampling; [2018-12-06 11:16:55.395] [alevinLog] [info] Done populating Z matrix; [2018-12-06 11:16:55.453] [alevinLog] [info] Done indexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6354,Performance,Load,Loading,6354,"5] [alevinLog] [info] Total 31.0106% reads will be thrown away because of noisy Cellular barcodes.; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-06 11:16:55.059] [alevinLog] [info] Done True Barcode Sampling; [2018-12-06 11:16:55.395] [alevinLog] [info] Done populating Z matrix; [2018-12-06 11:16:55.453] [alevinLog] [info] Done indexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6422,Performance,Load,Loading,6422,"e of noisy Cellular barcodes.; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-06 11:16:55.059] [alevinLog] [info] Done True Barcode Sampling; [2018-12-06 11:16:55.395] [alevinLog] [info] Done populating Z matrix; [2018-12-06 11:16:55.453] [alevinLog] [info] Done indexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-06 11:45:12.188] [jointLog] [info]",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6493,Performance,Load,Loading,6493,"] Total 5344(has 999 low confidence) barcodes; [2018-12-06 11:16:55.059] [alevinLog] [info] Done True Barcode Sampling; [2018-12-06 11:16:55.395] [alevinLog] [info] Done populating Z matrix; [2018-12-06 11:16:55.453] [alevinLog] [info] Done indexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-06 11:45:12.188] [jointLog] [info] Mapping rate = 57.7821%. [2018-12-06 11:45:12.188] [jointLog] [info] fin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6753,Performance,load,loading,6753,"ndexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-06 11:45:12.188] [jointLog] [info] Mapping rate = 57.7821%. [2018-12-06 11:45:12.188] [jointLog] [info] finished quantifyLibrary(); [2018-12-06 11:45:13.385] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-06 11:49:42.634] [alevinLog] [info] Total 4845644.00 UMI after deduplicating.; [2018-12-06 11:49:42.722] [al",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6944,Performance,load,loading,6944,"-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-06 11:45:12.188] [jointLog] [info] Mapping rate = 57.7821%. [2018-12-06 11:45:12.188] [jointLog] [info] finished quantifyLibrary(); [2018-12-06 11:45:13.385] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-06 11:49:42.634] [alevinLog] [info] Total 4845644.00 UMI after deduplicating.; [2018-12-06 11:49:42.722] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-06 11:49:47.400] [alevinLog] [info] Starting Import of the gene count matrix of size 5344x167268.; Exception : [std::bad_alloc]; ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:7586,Performance,optimiz,optimizer,7586,"jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-06 11:45:12.188] [jointLog] [info] Mapping rate = 57.7821%. [2018-12-06 11:45:12.188] [jointLog] [info] finished quantifyLibrary(); [2018-12-06 11:45:13.385] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-06 11:49:42.634] [alevinLog] [info] Total 4845644.00 UMI after deduplicating.; [2018-12-06 11:49:42.722] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-06 11:49:47.400] [alevinLog] [info] Starting Import of the gene count matrix of size 5344x167268.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:4302,Security,validat,validateMappings,4302,"-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }. [2018-12-06 11:14:56.533] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-12-06 11:14:56.533] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-06 11:14:56.533] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-06 11:14:56.534] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-06 11:14:56.534] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-06 11:14:56.540] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 267 Million barcodes. [2018-12-06 11:16:47.491] [alevinLog] [info] Done barcode density calculation.; [2018-12-06 11:16:47.491] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-06 11:16:52.732] [alevinLog] [info] Knee found left boundary at 11955 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Learned InvCov",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:4464,Security,validat,validateMappings,4464,"stq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }. [2018-12-06 11:14:56.533] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-12-06 11:14:56.533] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-06 11:14:56.533] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-06 11:14:56.534] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-06 11:14:56.534] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-06 11:14:56.540] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 267 Million barcodes. [2018-12-06 11:16:47.491] [alevinLog] [info] Done barcode density calculation.; [2018-12-06 11:16:47.491] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-06 11:16:52.732] [alevinLog] [info] Knee found left boundary at 11955 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 31.0106% reads will be thrown away because of noisy Cellular barcodes.; [2018-12-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:4614,Security,validat,validateMappings,4614,"stqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }. [2018-12-06 11:14:56.533] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-12-06 11:14:56.533] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-06 11:14:56.533] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-06 11:14:56.534] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-06 11:14:56.534] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-06 11:14:56.540] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 267 Million barcodes. [2018-12-06 11:16:47.491] [alevinLog] [info] Done barcode density calculation.; [2018-12-06 11:16:47.491] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-06 11:16:52.732] [alevinLog] [info] Knee found left boundary at 11955 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 31.0106% reads will be thrown away because of noisy Cellular barcodes.; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-06 11:16:55.059] [alevinLog] [info] Done True Barcode Sampling",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:6761,Security,hash,hash,6761,"ndexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-06 11:45:12.188] [jointLog] [info] Mapping rate = 57.7821%. [2018-12-06 11:45:12.188] [jointLog] [info] finished quantifyLibrary(); [2018-12-06 11:45:13.385] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-06 11:49:42.634] [alevinLog] [info] Total 4845644.00 UMI after deduplicating.; [2018-12-06 11:49:42.722] [al",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:132,Testability,log,log,132,"Hello @k3yavi and thank you for the pointer,. I obtained the same bug with v.0.12.0 (also Compiled from source). Here's the console log :. ```; ~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon-0.12.0/bin/salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts. TEMPDIR is /tmp/tmp.p28w2nGvAn; Running command [/home/ebecht/software/salmon-0.12.0/bin/salmon alevin -l ISR --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts -1 /tmp/tmp.p28w2nGvAn/p1.fa -2 /tmp/tmp.p28w2nGvAn/p2.fa -r ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:320,Testability,test,test,320,"Hello @k3yavi and thank you for the pointer,. I obtained the same bug with v.0.12.0 (also Compiled from source). Here's the console log :. ```; ~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon-0.12.0/bin/salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts. TEMPDIR is /tmp/tmp.p28w2nGvAn; Running command [/home/ebecht/software/salmon-0.12.0/bin/salmon alevin -l ISR --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts -1 /tmp/tmp.p28w2nGvAn/p1.fa -2 /tmp/tmp.p28w2nGvAn/p2.fa -r ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:588,Testability,test,test,588,"Hello @k3yavi and thank you for the pointer,. I obtained the same bug with v.0.12.0 (also Compiled from source). Here's the console log :. ```; ~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon-0.12.0/bin/salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts. TEMPDIR is /tmp/tmp.p28w2nGvAn; Running command [/home/ebecht/software/salmon-0.12.0/bin/salmon alevin -l ISR --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts -1 /tmp/tmp.p28w2nGvAn/p1.fa -2 /tmp/tmp.p28w2nGvAn/p2.fa -r ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:2152,Testability,Log,Logs,2152,"_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-06 11:14:56.513] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; [2018-12-06 11:14:56.533] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### alevin (dscRNA-seq quantification) v0.12.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ./transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ./hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ mates1 ] => { /tmp/tmp.p28w2nGvAn/p1.fa }; ### [ mates2 ] => { /tmp/tmp.p28w2nGvAn/p2.fa }; ### [ unmatedReads ] => { ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:2184,Testability,test,test,2184,"astq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-06 11:14:56.513] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; [2018-12-06 11:14:56.533] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### alevin (dscRNA-seq quantification) v0.12.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ./transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ./hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ mates1 ] => { /tmp/tmp.p28w2nGvAn/p1.fa }; ### [ mates2 ] => { /tmp/tmp.p28w2nGvAn/p2.fa }; ### [ unmatedReads ] => { ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:2189,Testability,log,logs,2189,"astq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-06 11:14:56.513] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; [2018-12-06 11:14:56.533] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### alevin (dscRNA-seq quantification) v0.12.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ./transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ./hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ mates1 ] => { /tmp/tmp.p28w2nGvAn/p1.fa }; ### [ mates2 ] => { /tmp/tmp.p28w2nGvAn/p2.fa }; ### [ unmatedReads ] => { ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:2588,Testability,test,test,2588,"GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastq/fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of salmon.; [2018-12-06 11:14:56.513] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; [2018-12-06 11:14:56.533] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### alevin (dscRNA-seq quantification) v0.12.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ./transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ./hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ mates1 ] => { /tmp/tmp.p28w2nGvAn/p1.fa }; ### [ mates2 ] => { /tmp/tmp.p28w2nGvAn/p2.fa }; ### [ unmatedReads ] => { ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz ./fastq/fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:5296,Usability,Learn,Learned,5296,"ge of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-06 11:14:56.533] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-06 11:14:56.534] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-06 11:14:56.534] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-06 11:14:56.540] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 267 Million barcodes. [2018-12-06 11:16:47.491] [alevinLog] [info] Done barcode density calculation.; [2018-12-06 11:16:47.491] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-06 11:16:52.732] [alevinLog] [info] Knee found left boundary at 11955 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-06 11:16:54.977] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 31.0106% reads will be thrown away because of noisy Cellular barcodes.; [2018-12-06 11:16:54.985] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-06 11:16:55.059] [alevinLog] [info] Done True Barcode Sampling; [2018-12-06 11:16:55.395] [alevinLog] [info] Done populating Z matrix; [2018-12-06 11:16:55.453] [alevinLog] [info] Done indexing Barcodes; [2018-12-06 11:16:55.453] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-06 11:16:55.453] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-06 11:16:56.218] [jointLog] [info] There are 2 libraries.; [2018-12-06 11:16:56.292] [jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read l",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548:7766,Usability,Clear,Clearing,7766,"jointLog] [info] Loading Quasi index; [2018-12-06 11:16:56.294] [jointLog] [info] Loading 32-bit quasi index; [2018-12-06 11:16:56.205] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-06 11:16:56.218] [alevinLog] [info] parsing read library format; [2018-12-06 11:16:56.296] [stderrLog] [info] Loading Suffix Array ; [2018-12-06 11:16:56.846] [stderrLog] [info] Loading Transcript Info ; [2018-12-06 11:16:57.009] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-06 11:16:57.046] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-06 11:16:57.063] [stderrLog] [info] Computing transcript lengths; [2018-12-06 11:16:57.064] [stderrLog] [info] Waiting to finish loading hash; [2018-12-06 11:17:00.929] [jointLog] [info] done; [2018-12-06 11:17:00.929] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragmentsrrLog] [info] Done loading index; hits: 844899161, hits per frag: 3.15864^[[D. [2018-12-06 11:45:12.188] [jointLog] [info] Computed 118,295 rich equivalence classes for further processing; [2018-12-06 11:45:12.188] [jointLog] [info] Counted 154,595,094 total reads in the equivalence classes ; [2018-12-06 11:45:12.188] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-06 11:45:12.188] [jointLog] [info] Mapping rate = 57.7821%. [2018-12-06 11:45:12.188] [jointLog] [info] finished quantifyLibrary(); [2018-12-06 11:45:13.385] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-06 11:49:42.634] [alevinLog] [info] Total 4845644.00 UMI after deduplicating.; [2018-12-06 11:49:42.722] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-06 11:49:47.400] [alevinLog] [info] Starting Import of the gene count matrix of size 5344x167268.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445008548
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445013593:170,Testability,log,log,170,"Also I just observed, Is it true that you have ~167k genes in your transcript to gene mapping file? That might be one of the reason since the matrix size as shown in the log is `5344x167268` and given we have doubles as the type of matrix it might add up to ~7G and possibly giving `bad_alloc`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445013593
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075:200,Availability,error,error,200,"I am trying to quantify these data at the transcript level which is why the number of features is this big. For the PBMC3k I was trying with a transcript to gene --tgMap but was still seeing the same error. I realized I forgot to update the path to the run.sh script when calling the 0.12.0 binary (I updated the path to the binary but no to the script). When running the wrapper in the 0.12.0 folder I could succesfully run alevin on the CD14 dataset, with or without the --forceCells 4000 flag. I tried to run alevin-0.12.0 on the PBMC 3k dataset but I got the same error. I am now trying to run it on all the FACS-sorted samples and I will see how that goes. I feel this is happening slightly inconsistently (although very frequently). Notably, it either happens after `Clearing EqMap; Might take some time.` or `Starting Import of the gene count matrix of size 5344x167268.`. I have had it happen once in the middle of the `Analyzed xxx cells (yy% of all)` phase. I just managed to succesfully process the CD19+ B cells from the 10x v1 dataset, I'll attempt to process the other FACS sorted samples overnight and let you know how it went. Thank you",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075:568,Availability,error,error,568,"I am trying to quantify these data at the transcript level which is why the number of features is this big. For the PBMC3k I was trying with a transcript to gene --tgMap but was still seeing the same error. I realized I forgot to update the path to the run.sh script when calling the 0.12.0 binary (I updated the path to the binary but no to the script). When running the wrapper in the 0.12.0 folder I could succesfully run alevin on the CD14 dataset, with or without the --forceCells 4000 flag. I tried to run alevin-0.12.0 on the PBMC 3k dataset but I got the same error. I am now trying to run it on all the FACS-sorted samples and I will see how that goes. I feel this is happening slightly inconsistently (although very frequently). Notably, it either happens after `Clearing EqMap; Might take some time.` or `Starting Import of the gene count matrix of size 5344x167268.`. I have had it happen once in the middle of the `Analyzed xxx cells (yy% of all)` phase. I just managed to succesfully process the CD19+ B cells from the 10x v1 dataset, I'll attempt to process the other FACS sorted samples overnight and let you know how it went. Thank you",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075:230,Deployability,update,update,230,"I am trying to quantify these data at the transcript level which is why the number of features is this big. For the PBMC3k I was trying with a transcript to gene --tgMap but was still seeing the same error. I realized I forgot to update the path to the run.sh script when calling the 0.12.0 binary (I updated the path to the binary but no to the script). When running the wrapper in the 0.12.0 folder I could succesfully run alevin on the CD14 dataset, with or without the --forceCells 4000 flag. I tried to run alevin-0.12.0 on the PBMC 3k dataset but I got the same error. I am now trying to run it on all the FACS-sorted samples and I will see how that goes. I feel this is happening slightly inconsistently (although very frequently). Notably, it either happens after `Clearing EqMap; Might take some time.` or `Starting Import of the gene count matrix of size 5344x167268.`. I have had it happen once in the middle of the `Analyzed xxx cells (yy% of all)` phase. I just managed to succesfully process the CD19+ B cells from the 10x v1 dataset, I'll attempt to process the other FACS sorted samples overnight and let you know how it went. Thank you",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075:301,Deployability,update,updated,301,"I am trying to quantify these data at the transcript level which is why the number of features is this big. For the PBMC3k I was trying with a transcript to gene --tgMap but was still seeing the same error. I realized I forgot to update the path to the run.sh script when calling the 0.12.0 binary (I updated the path to the binary but no to the script). When running the wrapper in the 0.12.0 folder I could succesfully run alevin on the CD14 dataset, with or without the --forceCells 4000 flag. I tried to run alevin-0.12.0 on the PBMC 3k dataset but I got the same error. I am now trying to run it on all the FACS-sorted samples and I will see how that goes. I feel this is happening slightly inconsistently (although very frequently). Notably, it either happens after `Clearing EqMap; Might take some time.` or `Starting Import of the gene count matrix of size 5344x167268.`. I have had it happen once in the middle of the `Analyzed xxx cells (yy% of all)` phase. I just managed to succesfully process the CD19+ B cells from the 10x v1 dataset, I'll attempt to process the other FACS sorted samples overnight and let you know how it went. Thank you",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075:372,Integrability,wrap,wrapper,372,"I am trying to quantify these data at the transcript level which is why the number of features is this big. For the PBMC3k I was trying with a transcript to gene --tgMap but was still seeing the same error. I realized I forgot to update the path to the run.sh script when calling the 0.12.0 binary (I updated the path to the binary but no to the script). When running the wrapper in the 0.12.0 folder I could succesfully run alevin on the CD14 dataset, with or without the --forceCells 4000 flag. I tried to run alevin-0.12.0 on the PBMC 3k dataset but I got the same error. I am now trying to run it on all the FACS-sorted samples and I will see how that goes. I feel this is happening slightly inconsistently (although very frequently). Notably, it either happens after `Clearing EqMap; Might take some time.` or `Starting Import of the gene count matrix of size 5344x167268.`. I have had it happen once in the middle of the `Analyzed xxx cells (yy% of all)` phase. I just managed to succesfully process the CD19+ B cells from the 10x v1 dataset, I'll attempt to process the other FACS sorted samples overnight and let you know how it went. Thank you",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075:773,Usability,Clear,Clearing,773,"I am trying to quantify these data at the transcript level which is why the number of features is this big. For the PBMC3k I was trying with a transcript to gene --tgMap but was still seeing the same error. I realized I forgot to update the path to the run.sh script when calling the 0.12.0 binary (I updated the path to the binary but no to the script). When running the wrapper in the 0.12.0 folder I could succesfully run alevin on the CD14 dataset, with or without the --forceCells 4000 flag. I tried to run alevin-0.12.0 on the PBMC 3k dataset but I got the same error. I am now trying to run it on all the FACS-sorted samples and I will see how that goes. I feel this is happening slightly inconsistently (although very frequently). Notably, it either happens after `Clearing EqMap; Might take some time.` or `Starting Import of the gene count matrix of size 5344x167268.`. I have had it happen once in the middle of the `Analyzed xxx cells (yy% of all)` phase. I just managed to succesfully process the CD19+ B cells from the 10x v1 dataset, I'll attempt to process the other FACS sorted samples overnight and let you know how it went. Thank you",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-447403587:120,Security,access,access,120,"I'm in touch with the people administrating the cluster as well and based on their guidance I ran alevin with exclusive access, however that did not help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-447403587
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-447403587:83,Usability,guid,guidance,83,"I'm in touch with the people administrating the cluster as well and based on their guidance I ran alevin with exclusive access, however that did not help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-447403587
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-449157274:71,Security,access,access,71,I haven't found a desktop with enough memory to run it (the one I have access to has only 8Gb). I will try to reproduce there if I have the chance. Have you managed to make alevin work on the sets of FASTQ I linked?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-449157274
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498322884:58,Deployability,release,release,58,"Hi @ebecht ,. Thanks for raising the issue. In the latest release we have significantly modified alevin to perform online feature creation and whitelisting. We hope that this might fix the memory related issue which you were observing on the clusters. Do let us know how it worked out for you. PS: Nice work on your recent [preprint](https://www.biorxiv.org/content/10.1101/648733v1), it raises very important questions. On the similar note, we also released a preprint today, can be found [here](https://www.biorxiv.org/content/10.1101/657874v1). Do let us know your thoughts !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498322884
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498322884:450,Deployability,release,released,450,"Hi @ebecht ,. Thanks for raising the issue. In the latest release we have significantly modified alevin to perform online feature creation and whitelisting. We hope that this might fix the memory related issue which you were observing on the clusters. Do let us know how it worked out for you. PS: Nice work on your recent [preprint](https://www.biorxiv.org/content/10.1101/648733v1), it raises very important questions. On the similar note, we also released a preprint today, can be found [here](https://www.biorxiv.org/content/10.1101/657874v1). Do let us know your thoughts !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498322884
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498322884:107,Performance,perform,perform,107,"Hi @ebecht ,. Thanks for raising the issue. In the latest release we have significantly modified alevin to perform online feature creation and whitelisting. We hope that this might fix the memory related issue which you were observing on the clusters. Do let us know how it worked out for you. PS: Nice work on your recent [preprint](https://www.biorxiv.org/content/10.1101/648733v1), it raises very important questions. On the similar note, we also released a preprint today, can be found [here](https://www.biorxiv.org/content/10.1101/657874v1). Do let us know your thoughts !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498322884
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498787748:15,Deployability,update,update,15,"Thanks for the update!. I'll try out the updated version and let you know if that helped. Your new preprint sounds very interesting, I'll give it a read",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498787748
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498787748:41,Deployability,update,updated,41,"Thanks for the update!. I'll try out the updated version and let you know if that helped. Your new preprint sounds very interesting, I'll give it a read",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-498787748
https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-548616164:45,Deployability,release,release,45,"I think this should be fixed with the latest release, please feel free to reopen if you still face any issues.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-548616164
https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446185405:232,Testability,log,logs,232,"Hey @k3yavi, bootstrapping really improved my population studies so I figured I would try it with sc, but I haven't even seen the run get there when I use the multiple files... after `processed X Million barcodes` there are no more logs produced on-screen..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446185405
https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446191229:20,Testability,test,tested,20,"Hi @rbenel , I just tested it on a couple of datasets we have, it seems to work fine.; Can you check if you can replicate the issue with two pairs and if possible forward some data to replicate the issue?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446191229
https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327:366,Availability,echo,echo,366,"Hi @k3yavi, ; So there is no issue when I manually add 2 pairs. Is there a max amount of input files? ; Below is the simple bash script to organize the data and find the correct files; ```; #!/bin/bash; #this script calls alevin for multiple library pairs of files . #where salmon located; salmon=""/usr/local/bin/salmon"". index=""path/to/gencode_annot/AlevinIndex/""; echo ${index}. #output folder path; output_folder=""path/to/alevin_outputTest""; echo ${output_folder}. #where the raw files are; samples_folder=""path/to/Raw_data/Sample_cells/"". cd ${samples_folder}. sample1=$(ls *R1*.fastq.gz -p | grep -v / | tr '\n' ' ') #this gives us a space seperated list of all the R1 files; #this is from the alevin tutorial ""Often, a single library may be split into multiple FASTA/Q files. Also, sometimes one may wish to quantify multiple; #replicates or samples together, treating them as if they are one library""; echo ""Value of sample1:""; echo ${sample1}. echo ""Value of sample2:""; sample2=${sample1//R1/R2} #switch the R1 with R2 to find the second pair for ALL (//) occurances; echo ${sample2}. tgMap=""path/to/gencode.primary_assembly.v29.tsv""; #this is a transcript --> gene map tsv file. Can create this using tximport. whitelist=""path/to/my_barcode.tsv""; #a list of true barcodes; salmonCommand=""${salmon} alevin -i $index -lISR -1 ${sample1} -2 ${sample2} -p 8 --celseq2 --dumpCsvCounts -o ${output_folder}/quantSC --tgMap ${tgMap} --whitelist ${whitelist}""; #--numCellBootstraps 100; #numCellBootstraps args -- generate a mean and varience for cell x; #dumpCSVcounts - dumps cell v. transcripts count matrix in csv format; echo ${salmonCommand}; if ${salmonCommand}; then; touch ${output_folder}/qauntSC_complete.txt; else; touch ${output_folder}/quantSC_failed_to_complete.txt; fi; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327
https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327:445,Availability,echo,echo,445,"Hi @k3yavi, ; So there is no issue when I manually add 2 pairs. Is there a max amount of input files? ; Below is the simple bash script to organize the data and find the correct files; ```; #!/bin/bash; #this script calls alevin for multiple library pairs of files . #where salmon located; salmon=""/usr/local/bin/salmon"". index=""path/to/gencode_annot/AlevinIndex/""; echo ${index}. #output folder path; output_folder=""path/to/alevin_outputTest""; echo ${output_folder}. #where the raw files are; samples_folder=""path/to/Raw_data/Sample_cells/"". cd ${samples_folder}. sample1=$(ls *R1*.fastq.gz -p | grep -v / | tr '\n' ' ') #this gives us a space seperated list of all the R1 files; #this is from the alevin tutorial ""Often, a single library may be split into multiple FASTA/Q files. Also, sometimes one may wish to quantify multiple; #replicates or samples together, treating them as if they are one library""; echo ""Value of sample1:""; echo ${sample1}. echo ""Value of sample2:""; sample2=${sample1//R1/R2} #switch the R1 with R2 to find the second pair for ALL (//) occurances; echo ${sample2}. tgMap=""path/to/gencode.primary_assembly.v29.tsv""; #this is a transcript --> gene map tsv file. Can create this using tximport. whitelist=""path/to/my_barcode.tsv""; #a list of true barcodes; salmonCommand=""${salmon} alevin -i $index -lISR -1 ${sample1} -2 ${sample2} -p 8 --celseq2 --dumpCsvCounts -o ${output_folder}/quantSC --tgMap ${tgMap} --whitelist ${whitelist}""; #--numCellBootstraps 100; #numCellBootstraps args -- generate a mean and varience for cell x; #dumpCSVcounts - dumps cell v. transcripts count matrix in csv format; echo ${salmonCommand}; if ${salmonCommand}; then; touch ${output_folder}/qauntSC_complete.txt; else; touch ${output_folder}/quantSC_failed_to_complete.txt; fi; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327
https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327:909,Availability,echo,echo,909,"Hi @k3yavi, ; So there is no issue when I manually add 2 pairs. Is there a max amount of input files? ; Below is the simple bash script to organize the data and find the correct files; ```; #!/bin/bash; #this script calls alevin for multiple library pairs of files . #where salmon located; salmon=""/usr/local/bin/salmon"". index=""path/to/gencode_annot/AlevinIndex/""; echo ${index}. #output folder path; output_folder=""path/to/alevin_outputTest""; echo ${output_folder}. #where the raw files are; samples_folder=""path/to/Raw_data/Sample_cells/"". cd ${samples_folder}. sample1=$(ls *R1*.fastq.gz -p | grep -v / | tr '\n' ' ') #this gives us a space seperated list of all the R1 files; #this is from the alevin tutorial ""Often, a single library may be split into multiple FASTA/Q files. Also, sometimes one may wish to quantify multiple; #replicates or samples together, treating them as if they are one library""; echo ""Value of sample1:""; echo ${sample1}. echo ""Value of sample2:""; sample2=${sample1//R1/R2} #switch the R1 with R2 to find the second pair for ALL (//) occurances; echo ${sample2}. tgMap=""path/to/gencode.primary_assembly.v29.tsv""; #this is a transcript --> gene map tsv file. Can create this using tximport. whitelist=""path/to/my_barcode.tsv""; #a list of true barcodes; salmonCommand=""${salmon} alevin -i $index -lISR -1 ${sample1} -2 ${sample2} -p 8 --celseq2 --dumpCsvCounts -o ${output_folder}/quantSC --tgMap ${tgMap} --whitelist ${whitelist}""; #--numCellBootstraps 100; #numCellBootstraps args -- generate a mean and varience for cell x; #dumpCSVcounts - dumps cell v. transcripts count matrix in csv format; echo ${salmonCommand}; if ${salmonCommand}; then; touch ${output_folder}/qauntSC_complete.txt; else; touch ${output_folder}/quantSC_failed_to_complete.txt; fi; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327
https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327:935,Availability,echo,echo,935,"Hi @k3yavi, ; So there is no issue when I manually add 2 pairs. Is there a max amount of input files? ; Below is the simple bash script to organize the data and find the correct files; ```; #!/bin/bash; #this script calls alevin for multiple library pairs of files . #where salmon located; salmon=""/usr/local/bin/salmon"". index=""path/to/gencode_annot/AlevinIndex/""; echo ${index}. #output folder path; output_folder=""path/to/alevin_outputTest""; echo ${output_folder}. #where the raw files are; samples_folder=""path/to/Raw_data/Sample_cells/"". cd ${samples_folder}. sample1=$(ls *R1*.fastq.gz -p | grep -v / | tr '\n' ' ') #this gives us a space seperated list of all the R1 files; #this is from the alevin tutorial ""Often, a single library may be split into multiple FASTA/Q files. Also, sometimes one may wish to quantify multiple; #replicates or samples together, treating them as if they are one library""; echo ""Value of sample1:""; echo ${sample1}. echo ""Value of sample2:""; sample2=${sample1//R1/R2} #switch the R1 with R2 to find the second pair for ALL (//) occurances; echo ${sample2}. tgMap=""path/to/gencode.primary_assembly.v29.tsv""; #this is a transcript --> gene map tsv file. Can create this using tximport. whitelist=""path/to/my_barcode.tsv""; #a list of true barcodes; salmonCommand=""${salmon} alevin -i $index -lISR -1 ${sample1} -2 ${sample2} -p 8 --celseq2 --dumpCsvCounts -o ${output_folder}/quantSC --tgMap ${tgMap} --whitelist ${whitelist}""; #--numCellBootstraps 100; #numCellBootstraps args -- generate a mean and varience for cell x; #dumpCSVcounts - dumps cell v. transcripts count matrix in csv format; echo ${salmonCommand}; if ${salmonCommand}; then; touch ${output_folder}/qauntSC_complete.txt; else; touch ${output_folder}/quantSC_failed_to_complete.txt; fi; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327
https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327:952,Availability,echo,echo,952,"Hi @k3yavi, ; So there is no issue when I manually add 2 pairs. Is there a max amount of input files? ; Below is the simple bash script to organize the data and find the correct files; ```; #!/bin/bash; #this script calls alevin for multiple library pairs of files . #where salmon located; salmon=""/usr/local/bin/salmon"". index=""path/to/gencode_annot/AlevinIndex/""; echo ${index}. #output folder path; output_folder=""path/to/alevin_outputTest""; echo ${output_folder}. #where the raw files are; samples_folder=""path/to/Raw_data/Sample_cells/"". cd ${samples_folder}. sample1=$(ls *R1*.fastq.gz -p | grep -v / | tr '\n' ' ') #this gives us a space seperated list of all the R1 files; #this is from the alevin tutorial ""Often, a single library may be split into multiple FASTA/Q files. Also, sometimes one may wish to quantify multiple; #replicates or samples together, treating them as if they are one library""; echo ""Value of sample1:""; echo ${sample1}. echo ""Value of sample2:""; sample2=${sample1//R1/R2} #switch the R1 with R2 to find the second pair for ALL (//) occurances; echo ${sample2}. tgMap=""path/to/gencode.primary_assembly.v29.tsv""; #this is a transcript --> gene map tsv file. Can create this using tximport. whitelist=""path/to/my_barcode.tsv""; #a list of true barcodes; salmonCommand=""${salmon} alevin -i $index -lISR -1 ${sample1} -2 ${sample2} -p 8 --celseq2 --dumpCsvCounts -o ${output_folder}/quantSC --tgMap ${tgMap} --whitelist ${whitelist}""; #--numCellBootstraps 100; #numCellBootstraps args -- generate a mean and varience for cell x; #dumpCSVcounts - dumps cell v. transcripts count matrix in csv format; echo ${salmonCommand}; if ${salmonCommand}; then; touch ${output_folder}/qauntSC_complete.txt; else; touch ${output_folder}/quantSC_failed_to_complete.txt; fi; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327
