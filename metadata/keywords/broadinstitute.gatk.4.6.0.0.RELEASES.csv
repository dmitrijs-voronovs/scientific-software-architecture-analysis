id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:89,Availability,down,download,89,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:1153,Availability,avail,available,1153,"gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be updated to use NVScoreVariants instead.; * The training tools (CNNVariantTrain, ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:428,Deployability,update,updated,428,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:475,Deployability,integrat,integration,475,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:621,Deployability,release,release,621,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:1995,Deployability,update,updated,1995,"://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be updated to use NVScoreVariants instead.; * The training tools (CNNVariantTrain, CNNVariantWriteTensors)have been removed. If you need to retrain the model for your data type you should continue to use GATK 4.6.0.0. New training tools are in development to work alongside NVScoreVariants and will be added in subsequent releases. ; ; * **New Tools** ; * New tool `GtfToBed` to convert Gencode GTF files to BED files (#7159, https://github.com/broadinstitute/gatk/pull/8942); * New tool for internal use `VcfComparator` (https://github.com/broadinstitute/gatk/pull/8933, https://github.com/broadinstitute/gatk/pull/8973) . * **Joint Calling GVS**; * Adds QD and AS_QD emission from VariantAnnotator on GVS input (https://github.com/broadinstitute/gatk/pull/8978). * **GenomicsDB**; * Switch to logging a warning instead of an exception for intervals in query that were not part of GenomicsDBImport (https://github.com/broadinstitute/gatk/pull/8987); ; * **Func",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:2314,Deployability,release,releases,2314,"on and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be updated to use NVScoreVariants instead.; * The training tools (CNNVariantTrain, CNNVariantWriteTensors)have been removed. If you need to retrain the model for your data type you should continue to use GATK 4.6.0.0. New training tools are in development to work alongside NVScoreVariants and will be added in subsequent releases. ; ; * **New Tools** ; * New tool `GtfToBed` to convert Gencode GTF files to BED files (#7159, https://github.com/broadinstitute/gatk/pull/8942); * New tool for internal use `VcfComparator` (https://github.com/broadinstitute/gatk/pull/8933, https://github.com/broadinstitute/gatk/pull/8973) . * **Joint Calling GVS**; * Adds QD and AS_QD emission from VariantAnnotator on GVS input (https://github.com/broadinstitute/gatk/pull/8978). * **GenomicsDB**; * Switch to logging a warning instead of an exception for intervals in query that were not part of GenomicsDBImport (https://github.com/broadinstitute/gatk/pull/8987); ; * **Funcotator**; * Added a '--prefer-mane-transcripts' mode that enforces MANE_Select tagged Gencode transcripts where possible )(https://github.com/broadinstitute/gatk/pull/9012); ; * **SV Calling** ; * Handle CTX_PP/QQ and CTX_PQ/QP CPX_TYPE values inSVConcordance (https://github.com/broadinstitute/gatk/pull/8885); *",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:3848,Deployability,release,release,3848,tead of an exception for intervals in query that were not part of GenomicsDBImport (https://github.com/broadinstitute/gatk/pull/8987); ; * **Funcotator**; * Added a '--prefer-mane-transcripts' mode that enforces MANE_Select tagged Gencode transcripts where possible )(https://github.com/broadinstitute/gatk/pull/9012); ; * **SV Calling** ; * Handle CTX_PP/QQ and CTX_PQ/QP CPX_TYPE values inSVConcordance (https://github.com/broadinstitute/gatk/pull/8885); * Complex SV intervals support by @mwalker174 (https://github.com/broadinstitute/gatk/pull/8521); * Require both overlap and breakend proximity for depth-only SV clustering (https://github.com/broadinstitute/gatk/pull/8962). * **Flow Based Calling**; * Modified HaplotypeBasedVariantRecaller to support non-flow reads (https://github.com/broadinstitute/gatk/pull/8896); * FlowFeatureMapper: X_FILTERED_COUNT semantics adjusted and documented more accurately (https://github.com/broadinstitute/gatk/pull/8894); * Changes to flow arguments in haplotype caller from Picard (see [Picard release notes](https://github.com/broadinstitute/picard/releases/tag/3.3.0). * **Miscellaneous Features**; * Added a check for whether files can be created and executed within the configured tmp-dir (https://github.com/broadinstitute/gatk/pull/8951). * **Documentation**; * Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Addin,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:3904,Deployability,release,releases,3904,//github.com/broadinstitute/gatk/pull/8987); ; * **Funcotator**; * Added a '--prefer-mane-transcripts' mode that enforces MANE_Select tagged Gencode transcripts where possible )(https://github.com/broadinstitute/gatk/pull/9012); ; * **SV Calling** ; * Handle CTX_PP/QQ and CTX_PQ/QP CPX_TYPE values inSVConcordance (https://github.com/broadinstitute/gatk/pull/8885); * Complex SV intervals support by @mwalker174 (https://github.com/broadinstitute/gatk/pull/8521); * Require both overlap and breakend proximity for depth-only SV clustering (https://github.com/broadinstitute/gatk/pull/8962). * **Flow Based Calling**; * Modified HaplotypeBasedVariantRecaller to support non-flow reads (https://github.com/broadinstitute/gatk/pull/8896); * FlowFeatureMapper: X_FILTERED_COUNT semantics adjusted and documented more accurately (https://github.com/broadinstitute/gatk/pull/8894); * Changes to flow arguments in haplotype caller from Picard (see [Picard release notes](https://github.com/broadinstitute/picard/releases/tag/3.3.0). * **Miscellaneous Features**; * Added a check for whether files can be created and executed within the configured tmp-dir (https://github.com/broadinstitute/gatk/pull/8951). * **Documentation**; * Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5340,Deployability,release,release,5340,"ithub.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...4.1.3) ; * Update [Picard 3.2.0 to 3.3.0](https://github.com/broadinstitute/picard/releases/tag/3.3.0) ; * Update hdf5-java-bindings to version 1.2.0-hdf5_2.11.0 ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5560,Deployability,patch,patches,5560,"Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...4.1.3) ; * Update [Picard 3.2.0 to 3.3.0](https://github.com/broadinstitute/picard/releases/tag/3.3.0) ; * Update hdf5-java-bindings to version 1.2.0-hdf5_2.11.0 (https://github.com/broadinstitute/gatk/pull/8908)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:6204,Deployability,release,releases,6204,"Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...4.1.3) ; * Update [Picard 3.2.0 to 3.3.0](https://github.com/broadinstitute/picard/releases/tag/3.3.0) ; * Update hdf5-java-bindings to version 1.2.0-hdf5_2.11.0 (https://github.com/broadinstitute/gatk/pull/8908)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5142,Energy Efficiency,monitor,monitor,5142,"* Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:383,Integrability,depend,dependencies,383,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:475,Integrability,integrat,integration,475,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:4551,Integrability,message,messages,4551," to support non-flow reads (https://github.com/broadinstitute/gatk/pull/8896); * FlowFeatureMapper: X_FILTERED_COUNT semantics adjusted and documented more accurately (https://github.com/broadinstitute/gatk/pull/8894); * Changes to flow arguments in haplotype caller from Picard (see [Picard release notes](https://github.com/broadinstitute/picard/releases/tag/3.3.0). * **Miscellaneous Features**; * Added a check for whether files can be created and executed within the configured tmp-dir (https://github.com/broadinstitute/gatk/pull/8951). * **Documentation**; * Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in rece",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5101,Integrability,depend,dependency,5101,"* Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5247,Integrability,depend,dependencies,5247,"ithub.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...4.1.3) ; * Update [Picard 3.2.0 to 3.3.0](https://github.com/broadinstitute/picard/releases/tag/3.3.0) ; * Update hdf5-java-bindings to version 1.2.0-hdf5_2.11.0 ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5648,Integrability,depend,dependencies,5648,"Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...4.1.3) ; * Update [Picard 3.2.0 to 3.3.0](https://github.com/broadinstitute/picard/releases/tag/3.3.0) ; * Update hdf5-java-bindings to version 1.2.0-hdf5_2.11.0 (https://github.com/broadinstitute/gatk/pull/8908)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5990,Integrability,depend,dependencies,5990,"Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...4.1.3) ; * Update [Picard 3.2.0 to 3.3.0](https://github.com/broadinstitute/picard/releases/tag/3.3.0) ; * Update hdf5-java-bindings to version 1.2.0-hdf5_2.11.0 (https://github.com/broadinstitute/gatk/pull/8908)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:4028,Modifiability,config,configured,4028,cripts' mode that enforces MANE_Select tagged Gencode transcripts where possible )(https://github.com/broadinstitute/gatk/pull/9012); ; * **SV Calling** ; * Handle CTX_PP/QQ and CTX_PQ/QP CPX_TYPE values inSVConcordance (https://github.com/broadinstitute/gatk/pull/8885); * Complex SV intervals support by @mwalker174 (https://github.com/broadinstitute/gatk/pull/8521); * Require both overlap and breakend proximity for depth-only SV clustering (https://github.com/broadinstitute/gatk/pull/8962). * **Flow Based Calling**; * Modified HaplotypeBasedVariantRecaller to support non-flow reads (https://github.com/broadinstitute/gatk/pull/8896); * FlowFeatureMapper: X_FILTERED_COUNT semantics adjusted and documented more accurately (https://github.com/broadinstitute/gatk/pull/8894); * Changes to flow arguments in haplotype caller from Picard (see [Picard release notes](https://github.com/broadinstitute/picard/releases/tag/3.3.0). * **Miscellaneous Features**; * Added a check for whether files can be created and executed within the configured tmp-dir (https://github.com/broadinstitute/gatk/pull/8951). * **Documentation**; * Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:5021,Safety,detect,detector,5021,"d within the configured tmp-dir (https://github.com/broadinstitute/gatk/pull/8951). * **Documentation**; * Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix secur",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:6010,Security,secur,security,6010,"Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde 8.10.2; * Improvements to `build.gradle` to use of features like consuming publishes Bills of Materials (BOMs) ; * Update many direct and transitive java dependencies to fix security vulnerabilities.; * Update [Htsjdk 4.1.1 to 4.1.3](https://github.com/samtools/htsjdk/compare/4.1.1...4.1.3) ; * Update [Picard 3.2.0 to 3.3.0](https://github.com/broadinstitute/picard/releases/tag/3.3.0) ; * Update hdf5-java-bindings to version 1.2.0-hdf5_2.11.0 (https://github.com/broadinstitute/gatk/pull/8908)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:1167,Testability,test,testing,1167,"gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be updated to use NVScoreVariants instead.; * The training tools (CNNVariantTrain, ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:2787,Testability,log,logging,2787,"nstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be updated to use NVScoreVariants instead.; * The training tools (CNNVariantTrain, CNNVariantWriteTensors)have been removed. If you need to retrain the model for your data type you should continue to use GATK 4.6.0.0. New training tools are in development to work alongside NVScoreVariants and will be added in subsequent releases. ; ; * **New Tools** ; * New tool `GtfToBed` to convert Gencode GTF files to BED files (#7159, https://github.com/broadinstitute/gatk/pull/8942); * New tool for internal use `VcfComparator` (https://github.com/broadinstitute/gatk/pull/8933, https://github.com/broadinstitute/gatk/pull/8973) . * **Joint Calling GVS**; * Adds QD and AS_QD emission from VariantAnnotator on GVS input (https://github.com/broadinstitute/gatk/pull/8978). * **GenomicsDB**; * Switch to logging a warning instead of an exception for intervals in query that were not part of GenomicsDBImport (https://github.com/broadinstitute/gatk/pull/8987); ; * **Funcotator**; * Added a '--prefer-mane-transcripts' mode that enforces MANE_Select tagged Gencode transcripts where possible )(https://github.com/broadinstitute/gatk/pull/9012); ; * **SV Calling** ; * Handle CTX_PP/QQ and CTX_PQ/QP CPX_TYPE values inSVConcordance (https://github.com/broadinstitute/gatk/pull/8885); * Complex SV intervals support by @mwalker174 (https://github.com/broadinstitute/gatk/pull/8521); * Require both overlap and breakend proximity for depth-only SV clustering (https://github.com/broadinstitute/gatk/pull/8962). * **Flow Based Calling**; * Modified HaplotypeBasedVariantRecaller to support non-flow reads (https://github.com/broadinstitute/gatk/pull/8896); * FlowFeatureMapper: X_FILTERED_COUNT semantics adjusted and documented more accurately (https://github.com/broadinstitute/gatk/pull/8894); * Changes to flow arguments in haplotype caller from Pica",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:4813,Testability,test,test,4813," (see [Picard release notes](https://github.com/broadinstitute/picard/releases/tag/3.3.0). * **Miscellaneous Features**; * Added a check for whether files can be created and executed within the configured tmp-dir (https://github.com/broadinstitute/gatk/pull/8951). * **Documentation**; * Clarify in the README which git lfs files are required to build GATK (https://github.com/broadinstitute/gatk/pull/8914); * Add docs about citing GATK (https://github.com/broadinstitute/gatk/pull/8947); * Update Mutect2.java Documentation (https://github.com/broadinstitute/gatk/pull/8999); * Add more detailed conda setup instructions to the GATK README (https://github.com/broadinstitute/gatk/pull/9001); * Adding small warning messages to not to feed any GVCF files to these tools (https://github.com/broadinstitute/gatk/pull/9008). * **Refactoring**; * Swapped mito mode in Mutect to use the mode argument utils (https://github.com/broadinstitute/gatk/pull/8986). * **Tests**; * Adding a test to capture an expected edge case in Reblocking (https://github.com/broadinstitute/gatk/pull/8928); * Update the large CRAM files to v3.0 (https://github.com/broadinstitute/gatk/pull/8832); * Update CRAM detector output files (https://github.com/broadinstitute/gatk/pull/8971); * Add dependency submission workflow so we can monitor vulnerabilities (https://github.com/broadinstitute/gatk/pull/9002). * **Dependencies**; Updating dependencies to make use of modern frameworks with fewer vulnerabilities was a focus of this release. ; * Updated Python and PyMC, removed TensorFlow, and added PyTorch in conda environment. (https://github.com/broadinstitute/gatk/pull/8561); ; * Rebuild gatk-base docker image (3.3.1) in order to pull in recent patches (https://github.com/broadinstitute/gatk/pull/9005); * Updates to java build and dependencies (https://github.com/broadinstitute/gatk/pull/8998, https://github.com/broadinstitute/gatk/pull/9006, https://github.com/broadinstitute/gatk/pull/9016); * Update to the Gralde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:502,Usability,learn,learning,502,"**Download release:** [gatk-4.6.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be update",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0:1060,Usability,learn,learning-tool-for-filtering-variants,1060,"gatk/releases/download/4.6.1.0/gatk-4.6.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.6.1.0 release:**; -------------------------------------- ; * Modernize the aging Conda environment with up to date python dependencies. All the python tools have been updated appropriately. This will enable easier integration of new machine learning tools. ; * ***If you use python tools outside of the docker, you must rebuild your conda environment for this release***; * `CNNScoreVariants` has been replaced by `NVScoreVariants`, a rewritten and modernized version. The python code for this tool was written by members of NVIDIA Genomics Research. ; * Thank you Babak Zamirai, Ankit Sethia, Mehrzad Samadi, George Vacek and the whole NVIDIA genomics team!; * This [ GATK blog post ](https://gatk.broadinstitute.org/hc/en-us/articles/10064202674971-Introducing-NVIDIA-s-NVScoreVariants-a-new-deep-learning-tool-for-filtering-variants) has more of the story from when we first made the tool available for testing.; * New `Funcotator` argument `--prefer-mane-transcripts` which improves transcript selection and lays groundwork for upcoming improvements.; * New argument `--variant-output-filtering` which lets you restrict output variants based on the input intervals. This replaces and imrpoves on `--only-output-calls-starting-in-interval` and works with `SelectVariants` and other VariantWalkers. This is useful to prevent duplicating variants when splitting an input VCF into multiple shards. **Full list of changes:**; -------------------------; * **CNNScoreVariants -> NVScoreVariants** (https://github.com/broadinstitute/gatk/pull/8004, https://github.com/broadinstitute/gatk/pull/9010, https://github.com/broadinstitute/gatk/pull/9009); * CNNScore variants has been replaced by NVScoreVariants, scripts that use it should be updated to use NVScoreVariants instead.; * The training tools (CNNVariantTrain, ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.6.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:89,Availability,down,download,89,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:836,Availability,down,down,836,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:2925,Availability,error,error,2925," for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies; * The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user-supplied values will supersede these in overlapping regions; * Changed the `SmithWaterman` implementation to default to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are set to 0 so it doesn't contribute to overall AD. There was an off-by-one error that removed the alt allele AD rather than the `<NON_REF>` allele AD. This led to NaNs and errors when a site had no ref reads (for example a GT of `[ref,alt,<NON_REF>]` and AD of `[0,300,0]` would accidentally be changed to an AD of `[0,0,0]` if the alt index was removed instead of the `<NON_REF>` index). * **DRAGEN-GATK**; * Added implementations of the ""columnwise detection"" and ""PDHMM"" (partially-determined HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:2976,Availability,error,error,2976," for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies; * The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user-supplied values will supersede these in overlapping regions; * Changed the `SmithWaterman` implementation to default to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are set to 0 so it doesn't contribute to overall AD. There was an off-by-one error that removed the alt allele AD rather than the `<NON_REF>` allele AD. This led to NaNs and errors when a site had no ref reads (for example a GT of `[ref,alt,<NON_REF>]` and AD of `[0,300,0]` would accidentally be changed to an AD of `[0,0,0]` if the alt index was removed instead of the `<NON_REF>` index). * **DRAGEN-GATK**; * Added implementations of the ""columnwise detection"" and ""PDHMM"" (partially-determined HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:3280,Availability,error,error,3280,"efault to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are set to 0 so it doesn't contribute to overall AD. There was an off-by-one error that removed the alt allele AD rather than the `<NON_REF>` allele AD. This led to NaNs and errors when a site had no ref reads (for example a GT of `[ref,alt,<NON_REF>]` and AD of `[0,300,0]` would accidentally be changed to an AD of `[0,0,0]` if the alt index was removed instead of the `<NON_REF>` index). * **DRAGEN-GATK**; * Added implementations of the ""columnwise detection"" and ""PDHMM"" (partially-determined HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:3377,Availability,error,errors,3377,"alculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are set to 0 so it doesn't contribute to overall AD. There was an off-by-one error that removed the alt allele AD rather than the `<NON_REF>` allele AD. This led to NaNs and errors when a site had no ref reads (for example a GT of `[ref,alt,<NON_REF>]` and AD of `[0,300,0]` would accidentally be changed to an AD of `[0,0,0]` if the alt index was removed instead of the `<NON_REF>` index). * **DRAGEN-GATK**; * Added implementations of the ""columnwise detection"" and ""PDHMM"" (partially-determined HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `Gnarl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5098,Availability,error,error,5098,"d HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `GnarlyGenotyper` (#7750); * Fix to allow `GenotypeGVCFs` to properly handle events not in minimal representation (#8567); * `ReblockGVCF`: added a `--keep-site-filters` argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5688,Availability,error,error,5688,"argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running larg",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:6032,Availability,down,down,6032,"hRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running large exome cohorts (#8234); * Added resource usage section to the `GermlineCNVCaller` java doc (#8064); ; * **SV Calling**; * Added support for breakend replacement alleles in `SVCluster` (#8408); * Implements allele collapsing for ""breakend replacement"" BND alleles, as described in section 5.4 of the VCFv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smalle",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9521,Availability,avail,available,9521,"plotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause outpu",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9602,Availability,reliab,reliable,9602,"e tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9804,Availability,error,errors,9804,"tained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:11357,Availability,down,download,11357,"arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering tools (#8131); * Added tags to `dockstore.yaml` (#8323); * Added the ability to specify the RELEASE arg to the cloud-based docker build, and added a new docker release script (#8247); * Added an option to `AnalyzeSaturationMutagenesis` to keep disjoint mates (#8557); * Exit with code 137 when we get an `OutOfMemoryError` (#8277); * Updates to reduce size of docker image (#8259); * Free up space on Github Actions runners for all jobs (#8386) (#8371) (#8373); * Fixed warnings in Github Actions (#8241); * Disabled line-by-line codecov comments (#8613); * Fixed a bug in the GATK download metrics script (#8418); * Updated the Spark version in the GATK jar manifest, and hooked up the Spark version constant in build.gradle (#8625); * Fixed a warning in Gradle (#8431); * Pinned joblib to v1.1.1 in the python environment (#8391); * Updated the Ubuntu version for the Carrot github action because github dropped support for 18.04 (#8299); ; * **Documentation**; * Major update to documentation generation for Metrics classes (#7749); * Updated some dead links to the GATK forums in the docs (#8273); ; * **Dependencies**; * Updated `Picard` to 3.1.1 (#8585); * Updated `HTSJDK` 4.1.0 (#8620); * Updated the `Intel GKL` to 0.8.11 (#8409); * Updated `Apache Spark` to 3.5.0 (#8607); * Updated `Hadoop` to 3.3.6 (#8607); * Updated `google-cloud-nio` to 0.127.8; * Updated `http-nio`",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:670,Deployability,release,release,670,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:769,Deployability,update,updated,769,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5649,Deployability,release,release,5649,"argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running larg",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5792,Deployability,release,release,5792,"lters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running large exome cohorts (#8234); * Added resource usage section to the `GermlineCNVCaller` java doc (#8064); ; * **SV Calling**; * Added support for",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5858,Deployability,update,updated,5858,"hRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running large exome cohorts (#8234); * Added resource usage section to the `GermlineCNVCaller` java doc (#8064); ; * **SV Calling**; * Added support for breakend replacement alleles in `SVCluster` (#8408); * Implements allele collapsing for ""breakend replacement"" BND alleles, as described in section 5.4 of the VCFv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smalle",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:6555,Deployability,pipeline,pipeline,6555," improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running large exome cohorts (#8234); * Added resource usage section to the `GermlineCNVCaller` java doc (#8064); ; * **SV Calling**; * Added support for breakend replacement alleles in `SVCluster` (#8408); * Implements allele collapsing for ""breakend replacement"" BND alleles, as described in section 5.4 of the VCFv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; * Updated SV split-read strand validation and clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only requi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:7856,Deployability,pipeline,pipeline,7856,"Fv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; * Updated SV split-read strand validation and clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTr",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:7951,Deployability,pipeline,pipeline,7951,"Fv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; * Updated SV split-read strand validation and clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTr",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:8021,Deployability,pipeline,pipeline,8021,"Fv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; * Updated SV split-read strand validation and clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTr",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:8079,Deployability,update,updated,8079,"nd clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:8957,Deployability,update,update,8957,"nd clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:10935,Deployability,release,release,10935,"arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering tools (#8131); * Added tags to `dockstore.yaml` (#8323); * Added the ability to specify the RELEASE arg to the cloud-based docker build, and added a new docker release script (#8247); * Added an option to `AnalyzeSaturationMutagenesis` to keep disjoint mates (#8557); * Exit with code 137 when we get an `OutOfMemoryError` (#8277); * Updates to reduce size of docker image (#8259); * Free up space on Github Actions runners for all jobs (#8386) (#8371) (#8373); * Fixed warnings in Github Actions (#8241); * Disabled line-by-line codecov comments (#8613); * Fixed a bug in the GATK download metrics script (#8418); * Updated the Spark version in the GATK jar manifest, and hooked up the Spark version constant in build.gradle (#8625); * Fixed a warning in Gradle (#8431); * Pinned joblib to v1.1.1 in the python environment (#8391); * Updated the Ubuntu version for the Carrot github action because github dropped support for 18.04 (#8299); ; * **Documentation**; * Major update to documentation generation for Metrics classes (#7749); * Updated some dead links to the GATK forums in the docs (#8273); ; * **Dependencies**; * Updated `Picard` to 3.1.1 (#8585); * Updated `HTSJDK` 4.1.0 (#8620); * Updated the `Intel GKL` to 0.8.11 (#8409); * Updated `Apache Spark` to 3.5.0 (#8607); * Updated `Hadoop` to 3.3.6 (#8607); * Updated `google-cloud-nio` to 0.127.8; * Updated `http-nio`",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:11747,Deployability,update,update,11747,"PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering tools (#8131); * Added tags to `dockstore.yaml` (#8323); * Added the ability to specify the RELEASE arg to the cloud-based docker build, and added a new docker release script (#8247); * Added an option to `AnalyzeSaturationMutagenesis` to keep disjoint mates (#8557); * Exit with code 137 when we get an `OutOfMemoryError` (#8277); * Updates to reduce size of docker image (#8259); * Free up space on Github Actions runners for all jobs (#8386) (#8371) (#8373); * Fixed warnings in Github Actions (#8241); * Disabled line-by-line codecov comments (#8613); * Fixed a bug in the GATK download metrics script (#8418); * Updated the Spark version in the GATK jar manifest, and hooked up the Spark version constant in build.gradle (#8625); * Fixed a warning in Gradle (#8431); * Pinned joblib to v1.1.1 in the python environment (#8391); * Updated the Ubuntu version for the Carrot github action because github dropped support for 18.04 (#8299); ; * **Documentation**; * Major update to documentation generation for Metrics classes (#7749); * Updated some dead links to the GATK forums in the docs (#8273); ; * **Dependencies**; * Updated `Picard` to 3.1.1 (#8585); * Updated `HTSJDK` 4.1.0 (#8620); * Updated the `Intel GKL` to 0.8.11 (#8409); * Updated `Apache Spark` to 3.5.0 (#8607); * Updated `Hadoop` to 3.3.6 (#8607); * Updated `google-cloud-nio` to 0.127.8; * Updated `http-nio` to 1.1.0 (#8626)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:11120,Energy Efficiency,reduce,reduce,11120,"arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering tools (#8131); * Added tags to `dockstore.yaml` (#8323); * Added the ability to specify the RELEASE arg to the cloud-based docker build, and added a new docker release script (#8247); * Added an option to `AnalyzeSaturationMutagenesis` to keep disjoint mates (#8557); * Exit with code 137 when we get an `OutOfMemoryError` (#8277); * Updates to reduce size of docker image (#8259); * Free up space on Github Actions runners for all jobs (#8386) (#8371) (#8373); * Fixed warnings in Github Actions (#8241); * Disabled line-by-line codecov comments (#8613); * Fixed a bug in the GATK download metrics script (#8418); * Updated the Spark version in the GATK jar manifest, and hooked up the Spark version constant in build.gradle (#8625); * Fixed a warning in Gradle (#8431); * Pinned joblib to v1.1.1 in the python environment (#8391); * Updated the Ubuntu version for the Carrot github action because github dropped support for 18.04 (#8299); ; * **Documentation**; * Major update to documentation generation for Metrics classes (#7749); * Updated some dead links to the GATK forums in the docs (#8273); ; * **Dependencies**; * Updated `Picard` to 3.1.1 (#8585); * Updated `HTSJDK` 4.1.0 (#8620); * Updated the `Intel GKL` to 0.8.11 (#8409); * Updated `Apache Spark` to 3.5.0 (#8607); * Updated `Hadoop` to 3.3.6 (#8607); * Updated `google-cloud-nio` to 0.127.8; * Updated `http-nio`",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:781,Integrability,depend,dependencies,781,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:1963,Integrability,interface,interface,1963,"torage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies; * The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user-supplied values will supersede these in overlapping regions; * Changed the `SmithWaterman` implementation to default to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are s",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:2631,Integrability,message,messages,2631,"torage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies; * The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user-supplied values will supersede these in overlapping regions; * Changed the `SmithWaterman` implementation to default to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are s",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5104,Integrability,message,message,5104,"d HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `GnarlyGenotyper` (#7750); * Fix to allow `GenotypeGVCFs` to properly handle events not in minimal representation (#8567); * `ReblockGVCF`: added a `--keep-site-filters` argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5694,Integrability,message,messages,5694,"argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running larg",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9089,Integrability,depend,dependencies,9089,"tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `Transmitt",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9293,Integrability,depend,dependencies,9293,"tes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:10354,Integrability,depend,dependency,10354,"e to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering tools (#8131); * Added tags to `dockstore.yaml` (#8323); * Added the ability to specify the RELEASE arg to the cloud-based docker build, and added a new docker release script (#8247); * Added an option to `AnalyzeSaturationMutagenesis` to keep disjoint mates (#8557); * Exit with code 137 when we get an `OutOfMemoryError` (#8277); * Updates to reduce size of docker image (#8259); * Fre",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:1954,Modifiability,flexible,flexible,1954,"torage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies; * The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user-supplied values will supersede these in overlapping regions; * Changed the `SmithWaterman` implementation to default to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are s",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:4120,Modifiability,refactor,refactoring,4120,"d HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `GnarlyGenotyper` (#7750); * Fix to allow `GenotypeGVCFs` to properly handle events not in minimal representation (#8567); * `ReblockGVCF`: added a `--keep-site-filters` argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:7879,Modifiability,variab,variable,7879,"Fv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; * Updated SV split-read strand validation and clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTr",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:10725,Modifiability,refactor,refactoring,10725,"cessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering tools (#8131); * Added tags to `dockstore.yaml` (#8323); * Added the ability to specify the RELEASE arg to the cloud-based docker build, and added a new docker release script (#8247); * Added an option to `AnalyzeSaturationMutagenesis` to keep disjoint mates (#8557); * Exit with code 137 when we get an `OutOfMemoryError` (#8277); * Updates to reduce size of docker image (#8259); * Free up space on Github Actions runners for all jobs (#8386) (#8371) (#8373); * Fixed warnings in Github Actions (#8241); * Disabled line-by-line codecov comments (#8613); * Fixed a bug in the GATK download metrics script (#8418); * Updated the Spark version in the GATK jar manifest, and hooked up the Spark version constant in build.gradle (#8625); * Fixed a warning in Gradle (#8431); * Pinned joblib to v1.1.1 in the python environment (#8391); * Updated the Ubuntu version for the Carrot github action because gi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5230,Performance,perform,perform,5230,"d HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `GnarlyGenotyper` (#7750); * Fix to allow `GenotypeGVCFs` to properly handle events not in minimal representation (#8567); * `ReblockGVCF`: added a `--keep-site-filters` argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5735,Performance,perform,performance,5735,"argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running larg",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:6612,Performance,perform,performance,6612," improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running large exome cohorts (#8234); * Added resource usage section to the `GermlineCNVCaller` java doc (#8064); ; * **SV Calling**; * Added support for breakend replacement alleles in `SVCluster` (#8408); * Implements allele collapsing for ""breakend replacement"" BND alleles, as described in section 5.4 of the VCFv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; * Updated SV split-read strand validation and clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only requi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:3656,Safety,detect,detection,3656,"t-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are set to 0 so it doesn't contribute to overall AD. There was an off-by-one error that removed the alt allele AD rather than the `<NON_REF>` allele AD. This led to NaNs and errors when a site had no ref reads (for example a GT of `[ref,alt,<NON_REF>]` and AD of `[0,300,0]` would accidentally be changed to an AD of `[0,0,0]` if the alt index was removed instead of the `<NON_REF>` index). * **DRAGEN-GATK**; * Added implementations of the ""columnwise detection"" and ""PDHMM"" (partially-determined HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `GnarlyGenotyper` (#7750); * Fix to allow `GenotypeGVCFs` to properly handle events not in minimal representation (#8567); * `ReblockGVCF`: added a `--keep-site-filters` argument to keep site-level filters (#8304) (#8308); * ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:3894,Safety,detect,detection,3894,"d HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `GnarlyGenotyper` (#7750); * Fix to allow `GenotypeGVCFs` to properly handle events not in minimal representation (#8567); * `ReblockGVCF`: added a `--keep-site-filters` argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:4207,Safety,detect,detection,4207,"d HMM) features from DRAGEN to bring us much closer to functional equivalence with DRAGEN v3.7.8 (#8083); * Development work to prepare the way for the final missing DRAGEN 3.7.8 feature, ""joint detection"":; * Graph method for PDHMM event groups that unifies finding/merging and overlap/mutual exclusion (#8366); * Rewrote haplotype construction methods in `PartiallyDeterminedHaplotypeComputationEngine` (#8367); * More refactoring in `PartiallyDeterminedHaplotypeComputationEngine` and preparing for joint detection (#8492); * Innocuous housekeeping changes in the partially-determined haplotypes code (#8361); * Clarify cryptic bitwise operations in the partially-determined haplotype `EventGroup` subclass (#8400); ; * **Joint Calling**; * Added haploid support to `GnarlyGenotyper` (#7750); * Fix to allow `GenotypeGVCFs` to properly handle events not in minimal representation (#8567); * `ReblockGVCF`: added a `--keep-site-filters` argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:850,Security,secur,security,850,"**Download release:** [gatk-4.5.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.5.0.0 release:**; --------------------------------------. * `HaplotypeCaller` now supports custom ploidy regions that can be specified via a new `--ploidy-regions` argument, overriding the global `-ploidy` setting. * The default `SmithWaterman` implementation for `HaplotypeCaller` and `Mutect2` is now the hardware-accelerated version, resulting in a significant speedup. * `Funcotator` has a new datasource release that brings in the latest version of `Gencode` and several other key data sources. * We've updated our dependencies and our docker environment to greatly cut down on known security vulnerabilities. * We've greatly improved support for `http`/`https` inputs in GATK-native tools (though most Picard tools bundled with GATK do not yet support it). * We've ported some additional DRAGEN features to `HaplotypeCaller` that bring us closer to functional equivalence with DRAGEN v3.7.8. * `GenomicsDBImport` now has support for Azure storage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche appl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:7526,Security,validat,validation,7526," Added resource usage section to the `GermlineCNVCaller` java doc (#8064); ; * **SV Calling**; * Added support for breakend replacement alleles in `SVCluster` (#8408); * Implements allele collapsing for ""breakend replacement"" BND alleles, as described in section 5.4 of the VCFv4.2 spec; * Size similarity linkage and bug fixes for SV matching tools (#8257); * Added size similarity criterion to the `SVConcordance` and `SVCluster` tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; * Updated SV split-read strand validation and clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); *",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9005,Security,validat,validation,9005,"nd clustering (#8378); * Adds some flexibility to the allowed split-read strand annotations on SV records:; * Allow INS -+ strands; * Allow INV null strands; * When clustering, only require that strands match for INV/BND records; * Sample set and annotation improvements for `SVConcordance` (#8211). * **Mitochondrial pipeline** ; * Added a variable for the user to specify the java heap size in Picard in the MT pipeline (#8406); * Exposed runtime attributes as arguments in the MT pipeline (#8413) (#8417). * **Flow-based Calling**; * New/updated flow-based read tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9067,Security,secur,security,9067,"tools (#8579); * Added a new `GroundTruthScorer` tool to score reads against a reference/ground truth; * Updated `FlowFeatureMapper`; * Created an `AddFlowBaseQuality` tool that writes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `Transmitt",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9183,Security,secur,security,9183,"tes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9323,Security,secur,security,9323,"tes reads from flow-based SAM/BAM/CRAM files that pass criteria to a new file while adding a base-quality attribute (BQ) (#8235); * Added an experimental tool `FlowPairHMMAlignReadsToHaplotypes` that aligns flow-based reads to set of haplotypes / templates (#8305); * Fixed an issue with reads that contain the tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9611,Security,access,access,9611,"e tp tag sometimes being incorrectly identified as flow-based (#8337); * Minor changes and fixes to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:9674,Security,access,accessing,9674," to flow-based annotations (#8442); * Removed a line in `FlowBasedAnnotation` that contained a bug and thus was meaningless (#8421); * Additional annotation in FeatureMap (#8347); * Removed unnecessary flow-based argument and option (#8342); * `GroundTruthScorer` doc update (#8597); * Removed unnecessary and buggy validation check (#8580). * **Notable Enhancements**; * Major security fixes in our dependencies and docker environment; * Updated the GATK base docker image to Ubuntu 22.04 for security fixes and newer versions of genomics packages like `samtools` and `bcftools` (#8610); * Updated GATK dependencies to address known security vulnerabilities, and added a vulnerability scanner to `build.gradle` (#8607); * Greatly improved HTTP support (#8611); * Updated the `http-nio` library and made tweaks to HTSJDK to make it available in more places. The new version of `http-nio` should provide much more reliable access to http(s) file paths. This is supported by all methods accessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Goog",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:10586,Security,expose,exposed,10586,"cessing Paths, and includes SAM/BAM/CRAM and VCF/Feature files. It includes a new retry mechanism which retries after transient errors. It also includes bug fixes and various other minor improvements, such as making encoded Path handling more consistent.; * Added a new `PrintFileDiagnostics` tool that can output the internal metadata of `CRAM`, `CRAI` and `BAI` files for diagnostic purposes (#8577); * Added a new `TransmittedSingleton` annotation and added quality threshold arguments to the `PossibleDenovo` annotation (#8329); * Support multiple read name inputs in `ReadNameReadFilter` (#8405); * Added a native GATK implementation for `2bit` references, and removed the dependency on the ADAM library (#8606). * **Bug Fixes**; * Fixed a major bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly (#8409). * **Miscellaneous Changes**; * `CNNVariantTrain`: exposed more CNN training parameters as arguments (#8483); * Support underscores in bucket names on Google Cloud (#8439); * Performed some refactoring on the new annotation-based filtering tools (#8131); * Added tags to `dockstore.yaml` (#8323); * Added the ability to specify the RELEASE arg to the cloud-based docker build, and added a new docker release script (#8247); * Added an option to `AnalyzeSaturationMutagenesis` to keep disjoint mates (#8557); * Exit with code 137 when we get an `OutOfMemoryError` (#8277); * Updates to reduce size of docker image (#8259); * Free up space on Github Actions runners for all jobs (#8386) (#8371) (#8373); * Fixed warnings in Github Actions (#8241); * Disabled line-by-line codecov comments (#8613); * Fixed a bug in the GATK download metrics script (#8418); * Updated the Spark version in the GATK jar manifest, and hooked up the Spark version constant in build.gradle (#8625); * Fixed a warning in Gradle (#8431); * Pinned joblib to v1.1.1 in the python environment (#8391); * Updated the Ubuntu version for the Carrot github action because gi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:2589,Testability,log,log,2589,"torage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies; * The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user-supplied values will supersede these in overlapping regions; * Changed the `SmithWaterman` implementation to default to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are s",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:5703,Testability,log,logging,5703,"argument to keep site-level filters (#8304) (#8308); * `ReblockGVCF`: added a `--add-site-filters-to-genotype` argument to move site-level filters to genotype-level filters (#8484); * `ReblockGVCF`: added a `--format-annotations-to-remove` argument to specify format-level annotations to remove from all genotypes in final GVCF (#8411); * `ReblockGVCF`: added a check to make sure the input VCF is a GVCF rather than a single sample VCF (#8411); * Improved an error message in `GnarlyGenotyper` (#8270); * Added a `mergeWithRemapping()` method in `ReferenceConfidenceVariantContextMerger` to perform allele remapping prior to genotyping (#8318); * GVS (Genomic Variant Store) development:; * Incorporated changes from the GVS branch to existing files (#8256); * Incorporated build changes from the GVS branch (#8249); * Merged non-GVS bits required by the GVS branch [VS-971] (#8362). * **GenomicsDB**; * Allow `GenomicsDBImport` to accept Azure `az://` URIs as input (#8438); * Updated to a newer `GenomicsDB` release with Java 17 support, improved error messages/logging, and generally improved performance (#8358). * **Funcotator**; * New data source release V1.8 (#8512); * Updated `Gencode` to version 43, and also updated `COSMIC`, `Clinvar`, and several other datasources to their latest versions; * The data sources are now split by reference into separate hg19 and hg38 bundles to cut down on size; * Fixed support for newer `Gencode` GTF versions by making the `GencodeGTFField` parsing more permissive (#8351); * Fixed `Funcotator` VCF output renderer to correctly preserve B37 contig names on output for B37 aligned files (#8539); * Fix bug in VCF comparison code that causes `Funcotator` to crash with certain datasources (#8445); * Connected the splice site window size to CLI parameters (#8463); * Allow `LocatableXsvFuncotationFactory` to read gzipped files (#8363). * **CNV Calling**; * Matched gCNV pipeline arguments to those that were shown to have good performance in running larg",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0:2434,Usability,simpl,simplication,2434,"torage `az://` URIs. * `GnarlyGenotyper` now has haploid support. * Lots of important bug fixes, including a fix for a bug in the Intel GKL that could cause output files to intermittently fail to be compressed properly. **Full list of changes:**; -------------------------. * **HaplotypeCaller**; * HaplotypeCaller now supports custom ploidy regions (#8609); * Added a new argument to `HaplotypeCaller` called `--ploidy-regions` which allows the user to input a `.bed` or `.interval_list` with the ""name"" column equal to a positive integer for the ploidy to use when calling variants in that region ; * The main use case is for calling haploid variants outside the PAR for XY individuals as required by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies; * The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user-supplied values will supersede these in overlapping regions; * Changed the `SmithWaterman` implementation to default to `FASTEST_AVAILABLE` (#8485); * Fixed a bug in pileup calling mode relating to the number of haplotypes (#8489); * Huge simplication of genotyping likelihoods calculations -- no change in output (#6351); * Be explicit about when variants are biallelic (#8332); * Fixed debug log severity for read threading assembler messages (#8419); * Fixed issue with visibility of the `--dont-use-softclipped-bases` argument (#8271). * **Mutect2**; * Added a `--base-qual-correction-factor` to allow a scale factor to be provided to modify the base qualities reported by the sequencer and used in the `Mutect2` substitution error model (#8447); * Set to zero to turn off the error model changes introduced in GATK 4.1.9.0; * Fixed a bug in `FilterMutectCalls` for GVCFs (#8458); * When using GVCFs with `Mutect2` (for example with the Mitochondria mode), in the filtering step ADs for symbolic alleles are s",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.5.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:89,Availability,down,download,89,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:3736,Availability,error,errors,3736,"ect` argument and expressions such as `vc.getGenotype('NA12878').getGQ() > 0`.; * `--apply-jexl-filters-first`: This flag is provided to allow the user to do JEXL filtering before subsetting the format fields, in particular the case where the filtering is done on INFO fields only, which may improve speed when working with a large cohort VCF that contains genotypes for thousands of samples. * **SV Calling**; * Added a new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF (#7977); * Recognize MEI DELs with ALT format <DEL:ME> in `SVAnnotate` (#8125); * Don't sort rejected reads output from `AnalyzeSaturationMutagenesis` (#8053). * **Notable Enhancements**; * `GenotypeGVCFs`: added an `--keep-specific-combined-raw-annotation` argument to keep specified raw annotations (#7996); * `VariantAnnotator` now warns instead of fails when the variant contains too many alleles (#8075); * Read filters now output total reads processed in addition to the number of reads filtered (#7947); * Added `GenomicsDB` arguments to the `CreateSomaticPanelOfNormals` tool (#6746); * Added a `DeprecatedFeature` annotation and a process for officially marking GATK tools as deprecated (#8100); * Prevent tool `close()` methods from hiding underlying errors (#7764). * **Bug Fixes**; * Fixed issue causing `VariantRecalibrator` to sometimes fail if user provided duplicate -an options (#8227); * `ReblockGVCF`: remove A,R, and G length attributes when `ReblockGVCF` subsets an allele (#8209); * Previously if an input gVCF had allele length, reference length, or genotype length annotations in the FORMAT field, `ReblockGVCF` would not remove all of them at sites where an allele was dropped. This makes the output gVCF invalid since the annotation length no longer matches the length described in the header at those sites. Now we fix up F1R2, F2R1, and AF annotations and remove any other annotations that are not already handled that are defined as A, R, ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:5309,Availability,error,error,5309,"h described in the header at those sites. Now we fix up F1R2, F2R1, and AF annotations and remove any other annotations that are not already handled that are defined as A, R, or G length in the header.; * Fixed a `gCNV` bug that breaks the inference when only 2 intervals are provided (#8180); * Fixed NPE from unintialized logger in `GenotypingEngine` (#8159); * Fixed asynchronous Python exception propagation in `StreamingPythonExecutor`/`CNNScoreVariants` (#7402); * Fixed issue in `ShiftFasta` where the interval list output was never written (#8070); * Bugfix for the type of some output files in the somatic CNV WDL (#6735) (#8130); * `MergeAnnotatedRegions` now requires a reference as asserted in its documentation (#8067). * **Miscellaneous Changes**; * Deprecated an untested `VariantRecalibrator` argument and an old `ReblockGVCF` argument that produced invalid GVCFs (#8140); * Removed old `GnarlyGenotyper` code with a diploid assumption to prepare for adding haploid support to `GnarlyGenotyper` (#8140); * `ReblockGVCF`: add error message for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDept",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6196,Availability,failure,failures,6196," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:385,Deployability,release,release,385,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:505,Deployability,release,releases,505,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6513,Deployability,install,installing,6513," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6888,Deployability,release,release,6888," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:5315,Integrability,message,message,5315,"h described in the header at those sites. Now we fix up F1R2, F2R1, and AF annotations and remove any other annotations that are not already handled that are defined as A, R, or G length in the header.; * Fixed a `gCNV` bug that breaks the inference when only 2 intervals are provided (#8180); * Fixed NPE from unintialized logger in `GenotypingEngine` (#8159); * Fixed asynchronous Python exception propagation in `StreamingPythonExecutor`/`CNNScoreVariants` (#7402); * Fixed issue in `ShiftFasta` where the interval list output was never written (#8070); * Bugfix for the type of some output files in the somatic CNV WDL (#6735) (#8130); * `MergeAnnotatedRegions` now requires a reference as asserted in its documentation (#8067). * **Miscellaneous Changes**; * Deprecated an untested `VariantRecalibrator` argument and an old `ReblockGVCF` argument that produced invalid GVCFs (#8140); * Removed old `GnarlyGenotyper` code with a diploid assumption to prepare for adding haploid support to `GnarlyGenotyper` (#8140); * `ReblockGVCF`: add error message for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDept",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6072,Integrability,message,message,6072," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:656,Modifiability,enhance,enhancements,656,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:924,Modifiability,enhance,enhancements,924,"**Download release:** [gatk-4.4.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.4.0.0/gatk-4.4.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.4.0.0 release:**; --------------------------------------. * We've moved to Java 17, the latest long-term support (LTS) Java release, for building and running GATK! Previously we required Java 8, which is now end-of-life. ; * Newer non-LTS Java releases such as Java 18 or Java 19 may work as well, but since they are untested by us we only officially support running with Java 17. * Significant enhancements to `SelectVariants`, including arguments to enable `GVCF` filtering support and to work with genotype fields more easily. * A new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF. * Bug fixes and enhancements to the support for the Ultima Genomics flow-based sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:2009,Modifiability,extend,extended,2009,"sequencing platform introduced in GATK 4.3.0.0. **Full list of changes:**; -------------------------. * **Flow-based Variant Calling**; * `FlowFeatureMapper`: added surrounding-median-quality-size feature (#8222); * Removed hardcoded limit on max homopolymer call (#8088); * Fixed bug in dynamic read disqualification (#8171); * Fixed a bug in the parsing of the T0 tag (#8185); * Updated flow-based calling `Mutect2` parameters to make them consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks are not extended when a variant is filtered out.; * `SelectVariants`: added new arguments for controlling genotype JEXL filtering (#8092); * `-select-genotype`: with this new genotype-specific JEXL argument, we support easily filtering by genotype fields with expressions like 'GQ > 0', where the behavior in the multi-sample case is 'GQ > 0' in at least one sample. It's still possible to manually access genotype fields using the old `-select` argument and expressions such as `vc.getGenotype('NA12878').getGQ() > 0`.; * `--apply-jexl-filters-first`: This flag is provided to allow the user to do JEXL filtering before subsetting the format fields, in particular the case where the filtering is done on INFO fields only, which may improve speed when working with a large cohort VCF that contains genotypes for thousands of samples. * **SV Calling**; * Added a new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF (#7977); * R",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6005,Modifiability,extend,extend,6005," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:2400,Security,access,access,2400,"hem consistent with the `HaplotypeCaller` parameters (#8186); ; * **SelectVariants**; * Enabled GVCF type filtering support in `SelectVariants` (#7193); * Added an optional argument `--ignore-non-ref-in-types` to support correct handling of VariantContexts that contain a NON_REF allele. This is necessary because every variant in a GVCF file would otherwise be assigned the type MIXED, which makes it impossible to filter for e.g. SNPs.; * Note that this only enables correct handling of GVCF input. The filtered output files are VCF (not GVCF) files, since reference blocks are not extended when a variant is filtered out.; * `SelectVariants`: added new arguments for controlling genotype JEXL filtering (#8092); * `-select-genotype`: with this new genotype-specific JEXL argument, we support easily filtering by genotype fields with expressions like 'GQ > 0', where the behavior in the multi-sample case is 'GQ > 0' in at least one sample. It's still possible to manually access genotype fields using the old `-select` argument and expressions such as `vc.getGenotype('NA12878').getGQ() > 0`.; * `--apply-jexl-filters-first`: This flag is provided to allow the user to do JEXL filtering before subsetting the format fields, in particular the case where the filtering is done on INFO fields only, which may improve speed when working with a large cohort VCF that contains genotypes for thousands of samples. * **SV Calling**; * Added a new tool `SVConcordance`, that calculates SV genotype concordance between an ""evaluation"" VCF and a ""truth"" VCF (#7977); * Recognize MEI DELs with ALT format <DEL:ME> in `SVAnnotate` (#8125); * Don't sort rejected reads output from `AnalyzeSaturationMutagenesis` (#8053). * **Notable Enhancements**; * `GenotypeGVCFs`: added an `--keep-specific-combined-raw-annotation` argument to keep specified raw annotations (#7996); * `VariantAnnotator` now warns instead of fails when the variant contains too many alleles (#8075); * Read filters now output total reads pro",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:7292,Security,secur,security,7292," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:4592,Testability,log,logger,4592,"g errors (#7764). * **Bug Fixes**; * Fixed issue causing `VariantRecalibrator` to sometimes fail if user provided duplicate -an options (#8227); * `ReblockGVCF`: remove A,R, and G length attributes when `ReblockGVCF` subsets an allele (#8209); * Previously if an input gVCF had allele length, reference length, or genotype length annotations in the FORMAT field, `ReblockGVCF` would not remove all of them at sites where an allele was dropped. This makes the output gVCF invalid since the annotation length no longer matches the length described in the header at those sites. Now we fix up F1R2, F2R1, and AF annotations and remove any other annotations that are not already handled that are defined as A, R, or G length in the header.; * Fixed a `gCNV` bug that breaks the inference when only 2 intervals are provided (#8180); * Fixed NPE from unintialized logger in `GenotypingEngine` (#8159); * Fixed asynchronous Python exception propagation in `StreamingPythonExecutor`/`CNNScoreVariants` (#7402); * Fixed issue in `ShiftFasta` where the interval list output was never written (#8070); * Bugfix for the type of some output files in the somatic CNV WDL (#6735) (#8130); * `MergeAnnotatedRegions` now requires a reference as asserted in its documentation (#8067). * **Miscellaneous Changes**; * Deprecated an untested `VariantRecalibrator` argument and an old `ReblockGVCF` argument that produced invalid GVCFs (#8140); * Removed old `GnarlyGenotyper` code with a diploid assumption to prepare for adding haploid support to `GnarlyGenotyper` (#8140); * `ReblockGVCF`: add error message for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.crea",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:4962,Testability,assert,asserted,4962,"g errors (#7764). * **Bug Fixes**; * Fixed issue causing `VariantRecalibrator` to sometimes fail if user provided duplicate -an options (#8227); * `ReblockGVCF`: remove A,R, and G length attributes when `ReblockGVCF` subsets an allele (#8209); * Previously if an input gVCF had allele length, reference length, or genotype length annotations in the FORMAT field, `ReblockGVCF` would not remove all of them at sites where an allele was dropped. This makes the output gVCF invalid since the annotation length no longer matches the length described in the header at those sites. Now we fix up F1R2, F2R1, and AF annotations and remove any other annotations that are not already handled that are defined as A, R, or G length in the header.; * Fixed a `gCNV` bug that breaks the inference when only 2 intervals are provided (#8180); * Fixed NPE from unintialized logger in `GenotypingEngine` (#8159); * Fixed asynchronous Python exception propagation in `StreamingPythonExecutor`/`CNNScoreVariants` (#7402); * Fixed issue in `ShiftFasta` where the interval list output was never written (#8070); * Bugfix for the type of some output files in the somatic CNV WDL (#6735) (#8130); * `MergeAnnotatedRegions` now requires a reference as asserted in its documentation (#8067). * **Miscellaneous Changes**; * Deprecated an untested `VariantRecalibrator` argument and an old `ReblockGVCF` argument that produced invalid GVCFs (#8140); * Removed old `GnarlyGenotyper` code with a diploid assumption to prepare for adding haploid support to `GnarlyGenotyper` (#8140); * `ReblockGVCF`: add error message for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.crea",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:5531,Testability,test,tests,5531,"h described in the header at those sites. Now we fix up F1R2, F2R1, and AF annotations and remove any other annotations that are not already handled that are defined as A, R, or G length in the header.; * Fixed a `gCNV` bug that breaks the inference when only 2 intervals are provided (#8180); * Fixed NPE from unintialized logger in `GenotypingEngine` (#8159); * Fixed asynchronous Python exception propagation in `StreamingPythonExecutor`/`CNNScoreVariants` (#7402); * Fixed issue in `ShiftFasta` where the interval list output was never written (#8070); * Bugfix for the type of some output files in the somatic CNV WDL (#6735) (#8130); * `MergeAnnotatedRegions` now requires a reference as asserted in its documentation (#8067). * **Miscellaneous Changes**; * Deprecated an untested `VariantRecalibrator` argument and an old `ReblockGVCF` argument that produced invalid GVCFs (#8140); * Removed old `GnarlyGenotyper` code with a diploid assumption to prepare for adding haploid support to `GnarlyGenotyper` (#8140); * `ReblockGVCF`: add error message for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDept",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6191,Testability,test,test,6191," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6358,Testability,test,test,6358," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0:6084,Usability,simpl,simplify,6084," for when tree-score-threshold is set but the TREE_SCORE annotation is not present (#8218); * `TransferReadTags`: allow empty unaligned bams as input (#8198); * Refactored `JointVcfFiltering` WDL and expanded tests. (#8074); * Updated the carrot github action workflow to the most recent version, which supports using `#carrot_pr` to trigger branch vs master comparison runs (#8084); * Replaced uses of `File.createTempFile()` with `IOUtils.createTempFile()` to ensure that temp files are deleted on shutdown (#6780); * Don't require python just to instantiate the `CNNScoreVariants` tool classes. (#8128); * Made several `Funcotator` methods and fields protected so it is easier to extend the tool (#8124) (#8166); * Test for presence of ack result message and simplify `ProcessControllerAckResult` API (#7816); * Fixed the path reported by the gatkbot when there are test failures (#8069); * Fixed incorrect boolean value in `DirichletAlleleDepthAndFractionIntegrationTest` (#7963); * Removed two ancient and unused `HaplotypeCaller` test files that are no longer needed (#7634); * Added scattered gCNV case WDL to dockstore file (#8217); ; * **Documentation**; * Updated instructions for installing Java in the README (#8089); * Added documentation on `OMP_NUM_THREADS` and `MKL_NUM_THREADS` to `GermlineCNVCaller` and `DetermineGermlineContigPloidy` (#8223); * Improvements to `PileupDetectionArgumentCollection` documentation (#8050); * Fixed typo in documentation for `VariantAnnotator` (#8145); ; * **Dependencies**; * Moved to `Java 17`, the latest LTS Java release, for building/running GATK (#8035); * Updated `Gradle` to 7.5.1 (#8098); * Updated the GATK base docker image to 3.0.0 (#8228); * Updated `HTSJDK` to 3.0.5 (#8035); * Updated `Picard` to 3.0.0 (#8035); * Updated `Barclay` to 5.0.0 (#8035); * Updated `GenomicsDB` to 1.4.4 (#7978); * Updated `Spark` to 3.3.1 (#8035); * Updated `Hadoop` to 3.3.1. (#8102); * Require `commons-text` 1.10.0 to fix a security vulnerability (#8071)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.4.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:89,Availability,down,download,89,"**Download release:** [gatk-4.2.6.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.6.0/gatk-4.2.6.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:904,Availability,error,error,904,"**Download release:** [gatk-4.2.6.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.6.0/gatk-4.2.6.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:2215,Availability,error,error,2215,"Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * Fixed in: ; * Fix multi-allelic QUAL calculation and restore some missing ALT annotation data in `ReblockGVCFs` (#7670); * Mention acceptable compressed VCF file extensions in `GenomicsDBImport` error message (#7692). * **SV Calling**; * Added a new tool `SVAnnotate` (#7431); * `SVAnnotate` adds functional annotations for SVs called by `GATK-SV` (#7431); * Added a new tool `PrintSVEvidence` (#7695); * `PrintSVEvidence` is a tool that can merge any number of files containing one of five types of evidence of structural variation. It's also capable of subsetting regions or samples. It's used to merge evidence from a cohort in the `GATK-SV` pipeline.; * Added start/end coordinate validation to `SVCallRecord` (#7714). * **HaplotypeCaller / Mutect2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection aft",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:4551,Availability,robust,robust,4551,"sferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back to SAM (which is necessary if e.g. running fastp to clip adapter bases before alignment).; * `PostProcessReadsForRSEM`: a new tool that re-orders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the severity ratings of the various `VariantClassifications` using the new `--custom-variant-classification-order` argument; * Added logging statements to the b37 conversion process explaining why the automatic b37 conversion does or does not take place on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:4700,Availability,error,error,4700,"rders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the severity ratings of the various `VariantClassifications` using the new `--custom-variant-classification-order` argument; * Added logging statements to the b37 conversion process explaining why the automatic b37 conversion does or does not take place on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `b",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:5752,Availability,error,error,5752,"ket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `broadinstitute/gatk-nightly` Dockerhub repo (#7703); * The docker build now only does a `git lfs pull` on `src/main/resources/large` (#7727); * Install git lfs with --force in the `Dockerfile` (#7682); * Fix WDL generation for `MultiVariantWalkers` by adding a companion index to the `MultiVariantWalker` input variant arg (#7689); * Added google apps script to automatically update GATK release stats. (#7637); * Updated the GATK stats script to be more universally usable (#7759); * Added `JointCallExomeCNVs` to `.dockstore.yml` and included a note in the WDL (#7719). * **Documentation**; * Corrected the docs for the `--heterozygosity` argument in the `GenotypeCalculationArgumentCollection` (#7661); ; * **Dependencies**; * Updated `Picard` to `2.27.1` (#7766); * Updated `google-cloud-nio` to `0.123.25` (#7730)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.2.6.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.6.0/gatk-4.2.6.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.2.6.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.6.0/gatk-4.2.6.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.2.6.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.6.0/gatk-4.2.6.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:1268,Deployability,pipeline,pipeline,1268,"6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * Fixed in: ; * Fix multi-allelic QUAL calculation and restore some missing ALT annotation data in `ReblockGVCFs` (#7670); * Mention acceptable compressed VCF file extensions in `GenomicsDBImport` error message (#7692). * **SV Calling**; * Added ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:2665,Deployability,pipeline,pipeline,2665," cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * Fixed in: ; * Fix multi-allelic QUAL calculation and restore some missing ALT annotation data in `ReblockGVCFs` (#7670); * Mention acceptable compressed VCF file extensions in `GenomicsDBImport` error message (#7692). * **SV Calling**; * Added a new tool `SVAnnotate` (#7431); * `SVAnnotate` adds functional annotations for SVs called by `GATK-SV` (#7431); * Added a new tool `PrintSVEvidence` (#7695); * `PrintSVEvidence` is a tool that can merge any number of files containing one of five types of evidence of structural variation. It's also capable of subsetting regions or samples. It's used to merge evidence from a cohort in the `GATK-SV` pipeline.; * Added start/end coordinate validation to `SVCallRecord` (#7714). * **HaplotypeCaller / Mutect2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection after trimming (#7679); * Added a debug ``--pair-hmm-results-file` argument that dumps the the exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:5816,Deployability,update,update,5816,"ket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `broadinstitute/gatk-nightly` Dockerhub repo (#7703); * The docker build now only does a `git lfs pull` on `src/main/resources/large` (#7727); * Install git lfs with --force in the `Dockerfile` (#7682); * Fix WDL generation for `MultiVariantWalkers` by adding a companion index to the `MultiVariantWalker` input variant arg (#7689); * Added google apps script to automatically update GATK release stats. (#7637); * Updated the GATK stats script to be more universally usable (#7759); * Added `JointCallExomeCNVs` to `.dockstore.yml` and included a note in the WDL (#7719). * **Documentation**; * Corrected the docs for the `--heterozygosity` argument in the `GenotypeCalculationArgumentCollection` (#7661); ; * **Dependencies**; * Updated `Picard` to `2.27.1` (#7766); * Updated `google-cloud-nio` to `0.123.25` (#7730)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:6224,Deployability,update,update,6224,"ket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `broadinstitute/gatk-nightly` Dockerhub repo (#7703); * The docker build now only does a `git lfs pull` on `src/main/resources/large` (#7727); * Install git lfs with --force in the `Dockerfile` (#7682); * Fix WDL generation for `MultiVariantWalkers` by adding a companion index to the `MultiVariantWalker` input variant arg (#7689); * Added google apps script to automatically update GATK release stats. (#7637); * Updated the GATK stats script to be more universally usable (#7759); * Added `JointCallExomeCNVs` to `.dockstore.yml` and included a note in the WDL (#7719). * **Documentation**; * Corrected the docs for the `--heterozygosity` argument in the `GenotypeCalculationArgumentCollection` (#7661); ; * **Dependencies**; * Updated `Picard` to `2.27.1` (#7766); * Updated `google-cloud-nio` to `0.123.25` (#7730)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:6236,Deployability,release,release,6236,"ket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `broadinstitute/gatk-nightly` Dockerhub repo (#7703); * The docker build now only does a `git lfs pull` on `src/main/resources/large` (#7727); * Install git lfs with --force in the `Dockerfile` (#7682); * Fix WDL generation for `MultiVariantWalkers` by adding a companion index to the `MultiVariantWalker` input variant arg (#7689); * Added google apps script to automatically update GATK release stats. (#7637); * Updated the GATK stats script to be more universally usable (#7759); * Added `JointCallExomeCNVs` to `.dockstore.yml` and included a note in the WDL (#7719). * **Documentation**; * Corrected the docs for the `--heterozygosity` argument in the `GenotypeCalculationArgumentCollection` (#7661); ; * **Dependencies**; * Updated `Picard` to `2.27.1` (#7766); * Updated `google-cloud-nio` to `0.123.25` (#7730)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:3765,Energy Efficiency,adapt,adapter,3765,"ct2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection after trimming (#7679); * Added a debug ``--pair-hmm-results-file` argument that dumps the the exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back to SAM (which is necessary if e.g. running fastp to clip adapter bases before alignment).; * `PostProcessReadsForRSEM`: a new tool that re-orders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the severity ratings of the various `VariantClassifications` using the new `--custom-variant-classification-order` argument; * Added logging statements to the b37 conversion process explaining why the automatic b37 conversion does or does not take place on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:2221,Integrability,message,message,2221,"Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * Fixed in: ; * Fix multi-allelic QUAL calculation and restore some missing ALT annotation data in `ReblockGVCFs` (#7670); * Mention acceptable compressed VCF file extensions in `GenomicsDBImport` error message (#7692). * **SV Calling**; * Added a new tool `SVAnnotate` (#7431); * `SVAnnotate` adds functional annotations for SVs called by `GATK-SV` (#7431); * Added a new tool `PrintSVEvidence` (#7695); * `PrintSVEvidence` is a tool that can merge any number of files containing one of five types of evidence of structural variation. It's also capable of subsetting regions or samples. It's used to merge evidence from a cohort in the `GATK-SV` pipeline.; * Added start/end coordinate validation to `SVCallRecord` (#7714). * **HaplotypeCaller / Mutect2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection aft",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:3114,Integrability,inject,injection,3114,"ation data in `ReblockGVCFs` (#7670); * Mention acceptable compressed VCF file extensions in `GenomicsDBImport` error message (#7692). * **SV Calling**; * Added a new tool `SVAnnotate` (#7431); * `SVAnnotate` adds functional annotations for SVs called by `GATK-SV` (#7431); * Added a new tool `PrintSVEvidence` (#7695); * `PrintSVEvidence` is a tool that can merge any number of files containing one of five types of evidence of structural variation. It's also capable of subsetting regions or samples. It's used to merge evidence from a cohort in the `GATK-SV` pipeline.; * Added start/end coordinate validation to `SVCallRecord` (#7714). * **HaplotypeCaller / Mutect2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection after trimming (#7679); * Added a debug ``--pair-hmm-results-file` argument that dumps the the exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back to SAM (which is necessary if e.g. running fastp to clip adapter bases before alignment).; * `PostProcessReadsForRSEM`: a new tool that re-orders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the se",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:3765,Integrability,adapter,adapter,3765,"ct2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection after trimming (#7679); * Added a debug ``--pair-hmm-results-file` argument that dumps the the exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back to SAM (which is necessary if e.g. running fastp to clip adapter bases before alignment).; * `PostProcessReadsForRSEM`: a new tool that re-orders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the severity ratings of the various `VariantClassifications` using the new `--custom-variant-classification-order` argument; * Added logging statements to the b37 conversion process explaining why the automatic b37 conversion does or does not take place on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:3765,Modifiability,adapt,adapter,3765,"ct2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection after trimming (#7679); * Added a debug ``--pair-hmm-results-file` argument that dumps the the exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back to SAM (which is necessary if e.g. running fastp to clip adapter bases before alignment).; * `PostProcessReadsForRSEM`: a new tool that re-orders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the severity ratings of the various `VariantClassifications` using the new `--custom-variant-classification-order` argument; * Added logging statements to the b37 conversion process explaining why the automatic b37 conversion does or does not take place on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:5385,Modifiability,config,configurable,5385,"e on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `broadinstitute/gatk-nightly` Dockerhub repo (#7703); * The docker build now only does a `git lfs pull` on `src/main/resources/large` (#7727); * Install git lfs with --force in the `Dockerfile` (#7682); * Fix WDL generation for `MultiVariantWalkers` by adding a companion index to the `MultiVariantWalker` input variant arg (#7689); * Added google apps script to automatically update GATK release stats. (#7637); * Updated the GATK stats script to be more universally usable (#7759); * Added `JointCallEx",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:5735,Safety,predict,predictor,5735,"ket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `broadinstitute/gatk-nightly` Dockerhub repo (#7703); * The docker build now only does a `git lfs pull` on `src/main/resources/large` (#7727); * Install git lfs with --force in the `Dockerfile` (#7682); * Fix WDL generation for `MultiVariantWalkers` by adding a companion index to the `MultiVariantWalker` input variant arg (#7689); * Added google apps script to automatically update GATK release stats. (#7637); * Updated the GATK stats script to be more universally usable (#7759); * Added `JointCallExomeCNVs` to `.dockstore.yml` and included a note in the WDL (#7719). * **Documentation**; * Corrected the docs for the `--heterozygosity` argument in the `GenotypeCalculationArgumentCollection` (#7661); ; * **Dependencies**; * Updated `Picard` to `2.27.1` (#7766); * Updated `google-cloud-nio` to `0.123.25` (#7730)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:929,Security,access,accessing,929,"**Download release:** [gatk-4.2.6.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.6.0/gatk-4.2.6.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:1101,Security,access,accessing,1101,"**Download release:** [gatk-4.2.6.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.6.0/gatk-4.2.6.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.6.0 release:**; --------------------------------------. * Important bug fixes for the joint calling tools (GenotypeGVCFs / GenomicsDB); * GATK 4.2.5.0 contained two joint genotyping bugs that are now fixed in GATK 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles. ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * **If you are running these tools in 4.2.5.0 we strongly recommend updating to 4.2.6.0**. * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when the `--gcs-project-for-requester-pays` argument was specified; * **If you continue to encounter problems accessing requester pays Google Cloud Storage buckets in 4.2.6.0, please let us know by filing a Github issue!**. * Two new tools for the Structural Variation calling pipeline: `SVAnnotate` and `PrintSVEvidence`. * Some fixes to genotype-given-alleles mode in `HaplotypeCaller` and `Mutect2`. **Full list of changes:**; -------------------------. * **Joint Calling (GenotypeGVCFs / GenomicsDB)**; * GATK 4.2.5.0 contained two joint genotyping bugs which are now fixed in 4.2.6.0:; * `GenotypeGVCFs` can throw NullPointerExceptions in some cases with many alternate alleles.; * Fixed in:; * Fix for `NullPointerException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:2705,Security,validat,validation,2705,"terException` when GenomicsDB has more ALT alleles than specified maximum and many GQ0 hom-ref genotypes allow variants to pass the QUAL filter (#7738) ; * The expectation-maximization component of the QUAL calculation was disabled, leading to false positive, low quality alleles at some multi-allelic sites.; * Fixed in: ; * Fix multi-allelic QUAL calculation and restore some missing ALT annotation data in `ReblockGVCFs` (#7670); * Mention acceptable compressed VCF file extensions in `GenomicsDBImport` error message (#7692). * **SV Calling**; * Added a new tool `SVAnnotate` (#7431); * `SVAnnotate` adds functional annotations for SVs called by `GATK-SV` (#7431); * Added a new tool `PrintSVEvidence` (#7695); * `PrintSVEvidence` is a tool that can merge any number of files containing one of five types of evidence of structural variation. It's also capable of subsetting regions or samples. It's used to merge evidence from a cohort in the `GATK-SV` pipeline.; * Added start/end coordinate validation to `SVCallRecord` (#7714). * **HaplotypeCaller / Mutect2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection after trimming (#7679); * Added a debug ``--pair-hmm-results-file` argument that dumps the the exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:3114,Security,inject,injection,3114,"ation data in `ReblockGVCFs` (#7670); * Mention acceptable compressed VCF file extensions in `GenomicsDBImport` error message (#7692). * **SV Calling**; * Added a new tool `SVAnnotate` (#7431); * `SVAnnotate` adds functional annotations for SVs called by `GATK-SV` (#7431); * Added a new tool `PrintSVEvidence` (#7695); * `PrintSVEvidence` is a tool that can merge any number of files containing one of five types of evidence of structural variation. It's also capable of subsetting regions or samples. It's used to merge evidence from a cohort in the `GATK-SV` pipeline.; * Added start/end coordinate validation to `SVCallRecord` (#7714). * **HaplotypeCaller / Mutect2**; * Fixed an edge case in `HaplotypeCaller` where filtered alleles in the vicinity of forced-calling alleles could result in empty calls (#7740); * This affects users who run genotype given alleles mode in non-GVCF mode; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where force-calling alleles were lost upon trimming by placing allele injection after trimming (#7679); * Added a debug ``--pair-hmm-results-file` argument that dumps the the exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back to SAM (which is necessary if e.g. running fastp to clip adapter bases before alignment).; * `PostProcessReadsForRSEM`: a new tool that re-orders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the se",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:4725,Security,access,accessing,4725,"rders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the severity ratings of the various `VariantClassifications` using the new `--custom-variant-classification-order` argument; * Added logging statements to the b37 conversion process explaining why the automatic b37 conversion does or does not take place on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `b",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:4231,Testability,log,logging,4231," exact inputs/outputs of the PairHMM to a file (#7660); * Some changes to `Mutect2` to support the future `Mutect3` (#7663); * Added training data for the Mutect3 normal artifact filter ; * Output tensors for Mutect3 as plain text rather than VCF. * **RNA Tools**; * `TransferReadTags`: a new tool that transfers a read tag from an unaligned bam to the matching aligned bam (#7739).; * This tool allows us to retrieve read tags that get lost when converting a SAM file to fastqs, then back to SAM (which is necessary if e.g. running fastp to clip adapter bases before alignment).; * `PostProcessReadsForRSEM`: a new tool that re-orders and filters reads before running RSEM, which has stringent requirements on the input SAM (https://github.com/deweylab/RSEM) (#7752). * **Funcotator**; * Added custom `VariantClassification` severity ordering. (#7673); * Users can now customize the severity ratings of the various `VariantClassifications` using the new `--custom-variant-classification-order` argument; * Added logging statements to the b37 conversion process explaining why the automatic b37 conversion does or does not take place on their VCFs (#7760). * **VariantRecalibrator**; * Added regularization to covariance in GMM maximization step to fix convergence issues in `VariantRecalibrator` (#7709); * This makes the tool more robust in cases where annotations are highly correlated. * **Bug Fixes**; * Fixed a ""Bucket is a requester pays bucket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0:6315,Usability,usab,usable,6315,"ket but no user project provided"" error that occurred when accessing requester pays buckets in Google Cloud Storage even when `--gcs-project-for-requester-pays` was specified (#7700) (#7730); * Fix for the `PossibleDeNovo` annotation to work without Genotype Likelihoods (#7662); * `PossibleDeNovo` checks each trio's genotype (including parent hom ref genotypes) for likelihoods even though it doesn't actually use the PLs. The PLs can get dropped if GVCFs are reblocked which means this annotation no longer works as expected. This changes the check to look for GQs instead of PLs as the GQs are used as part of the annotation.; * Fixed a bug with the `--mate-too-distant-length` in `MateDistantReadFilter` not being configurable (#7701). * **GATK Engine**; * Added a new `MultiFeatureWalker` traversal to the GATK engine (#7695); * Removed an ancient, unused option to track unique reads in a `LocusIteratorByState` (#6410); ; * **Miscellaneous Changes**; * Added back the `jcenter` repository resolver to our gradle build, fixing a ""Could not find biz.k11i:xgboost-predictor:0.3.0"" error when building GATK from source (#7665); * We now properly update the `latest` tag in the `broadinstitute/gatk-nightly` Dockerhub repo (#7703); * The docker build now only does a `git lfs pull` on `src/main/resources/large` (#7727); * Install git lfs with --force in the `Dockerfile` (#7682); * Fix WDL generation for `MultiVariantWalkers` by adding a companion index to the `MultiVariantWalker` input variant arg (#7689); * Added google apps script to automatically update GATK release stats. (#7637); * Updated the GATK stats script to be more universally usable (#7759); * Added `JointCallExomeCNVs` to `.dockstore.yml` and included a note in the WDL (#7719). * **Documentation**; * Corrected the docs for the `--heterozygosity` argument in the `GenotypeCalculationArgumentCollection` (#7661); ; * **Dependencies**; * Updated `Picard` to `2.27.1` (#7766); * Updated `google-cloud-nio` to `0.123.25` (#7730)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.6.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:89,Availability,down,download,89,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1280,Availability,error,error,1280,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:805,Deployability,update,updated,805,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1029,Deployability,integrat,integration,1029,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1069,Deployability,update,update,1069,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1076,Deployability,toggle,toggle,1076,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1658,Deployability,patch,patch,1658,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1029,Integrability,integrat,integration,1029,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1286,Integrability,message,message,1286,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:333,Security,secur,security,333,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:621,Testability,test,test,621,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:766,Testability,test,test,766,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:827,Testability,test,tests,827,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:1041,Testability,test,test,1041,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0:715,Usability,undo,undocumented,715,"**Download release:** [gatk-4.2.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.4.0/gatk-4.2.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.4.0 release:**; --------------------------------------. * Fix a major security bug due to log4j vulnerability. (CVE-2021-44228); * Improvement to calculation of ExcessHet in joint genotyping. (GenotypeGVCFs, GnarlyGenotyper, ExcessHet). **Full list of changes:**; -------------------------. * **Funcotator**; * Aligned the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code. (#7555). * **GenotypeGVCFs** / **ExcessHet**; * Removed undocumented mid-p correction to p-values in exact test of Hardy-Weinberg equilibrium and updated corresponding tests. We now report the same value as ExcHet in bcftools. Note that previous values of 3.0103 (corresponding to mid-p values of 0.5) will now be 0.0000. (#7394); * Updated expected ExcessHet values in integration test resources and added an update toggle to GnarlyGenotyperIntegrationTest.; * Updated ExcessHet documentation. * **Miscellaneous Changes**; * Delete an unused .gitattributes file which was unintentionally stored in git-lfs and caused an error message to appear sometimes when checking out the repository. (#7594); * Remove trailing tab in VariantsToTable output header (#7559). * **Documentation**; * Updated AUTHORS file to remove a contributor's name at their request. (#7580); * Remove outdated javadoc line in AssemblyBasedCallerUtils (#7554). * **Dependencies**; * Updated log4j to version 2.13.1 -> 2.16.0 to patch CVE-2021-44228 (#7605)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:89,Availability,down,download,89,"**Download release:** [gatk-4.2.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.1.0/gatk-4.2.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.1.0 release:**; --------------------------------------. * Several important fixes to HaplotypeCaller and the new DRAGEN-GATK code introduced in GATK 4.2.0.0. * Started laying the groundwork in `Mutect2` for `Mutect3`, which will be more machine learning focused. * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * Support for multi-sample segmentation in `ModelSegments`. * Major speed improvements and several important fixes to `Funcotator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial hapl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:1841,Availability,error,error,1841,"ator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2277,Availability,error,error,2277,"ns to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFea",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2380,Availability,error,error,2380,"ns to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFea",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2646,Availability,error,error,2646,"over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amin",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:4170,Availability,error,error,4170," are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amino acids in the case that they cannot be decoded from the amino acid table. Currently this will happen any time an N or IUPAC base is in the region to be coded into amino acids.; * Added AminoAcid.UNDECODABLE as a placeholder for any unknown / undecodable amino acid (such as in the case of an ambiguous IUPAC base).; * `Funcotator` now checks whether the input has already been annotated, and by default throws an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit t",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:4390,Availability,error,error,4390,"odons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amino acids in the case that they cannot be decoded from the amino acid table. Currently this will happen any time an N or IUPAC base is in the region to be coded into amino acids.; * Added AminoAcid.UNDECODABLE as a placeholder for any unknown / undecodable amino acid (such as in the case of an ambiguous IUPAC base).; * `Funcotator` now checks whether the input has already been annotated, and by default throws an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:6420,Availability,error,error,6420,".; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:7193,Availability,robust,robust,7193,"ds to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixed the `DepthPerSampleHC` and `StrandBiasBySample` annotations to not spam the logs with ""Annotation will not be calculated"" warnings (#7357); * `VariantEval`: fixed contig stratification to defer to user-defined intervals (#7238). * **Miscellaneous Changes**; * The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); *",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.2.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.1.0/gatk-4.2.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.1.0 release:**; --------------------------------------. * Several important fixes to HaplotypeCaller and the new DRAGEN-GATK code introduced in GATK 4.2.0.0. * Started laying the groundwork in `Mutect2` for `Mutect3`, which will be more machine learning focused. * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * Support for multi-sample segmentation in `ModelSegments`. * Major speed improvements and several important fixes to `Funcotator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial hapl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.2.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.1.0/gatk-4.2.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.1.0 release:**; --------------------------------------. * Several important fixes to HaplotypeCaller and the new DRAGEN-GATK code introduced in GATK 4.2.0.0. * Started laying the groundwork in `Mutect2` for `Mutect3`, which will be more machine learning focused. * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * Support for multi-sample segmentation in `ModelSegments`. * Major speed improvements and several important fixes to `Funcotator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial hapl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.2.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.1.0/gatk-4.2.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.1.0 release:**; --------------------------------------. * Several important fixes to HaplotypeCaller and the new DRAGEN-GATK code introduced in GATK 4.2.0.0. * Started laying the groundwork in `Mutect2` for `Mutect3`, which will be more machine learning focused. * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * Support for multi-sample segmentation in `ModelSegments`. * Major speed improvements and several important fixes to `Funcotator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial hapl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:4459,Deployability,update,updated,4459,"odons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amino acids in the case that they cannot be decoded from the amino acid table. Currently this will happen any time an N or IUPAC base is in the region to be coded into amino acids.; * Added AminoAcid.UNDECODABLE as a placeholder for any unknown / undecodable amino acid (such as in the case of an ambiguous IUPAC base).; * `Funcotator` now checks whether the input has already been annotated, and by default throws an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:4854,Deployability,update,update,4854," Added AminoAcid.UNDECODABLE as a placeholder for any unknown / undecodable amino acid (such as in the case of an ambiguous IUPAC base).; * `Funcotator` now checks whether the input has already been annotated, and by default throws an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with perfo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5195,Deployability,update,updates,5195,"s an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operat",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5437,Deployability,toggle,toggle,5437,"he Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondria",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5509,Deployability,release,release,5509,"he Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondria",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:6108,Deployability,upgrade,upgrade,6108,".; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:6522,Deployability,pipeline,pipeline,6522,"csDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixe",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:6587,Deployability,pipeline,pipeline,6587,"csDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixe",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:8801,Deployability,release,releases,8801,"The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation: removed broken links to related annotations from the tool docs (#7307); * Updated the link to an article on Jexl expressions (#7317); * Fixed several broken links in docs for the CNV tools (#7309); * Fixed broken links in the docs for `Funcotator`, `VariantRecalbrator`, and `ASEReadCounter` (#7270); * Fixed typos in the tool documentation for `HaplotypeCaller` and `LeftAlignAndTrimVariants` (#6440); * Clarify pipeline inputs in documentation for `GnarlyGenotyper` (#7231); ; * **Dependencies**; * Updated `HTSJDK` to version `2.24.1` (#7149); * Updated `Picard` to version `2.25.4` (#7255); * Updated `GenomicsDB` to version `1.4.1` (#7224); * Updated the `Genomics Kernel Library (GKL)` to versio",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:8920,Deployability,update,update,8920,"The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation: removed broken links to related annotations from the tool docs (#7307); * Updated the link to an article on Jexl expressions (#7317); * Fixed several broken links in docs for the CNV tools (#7309); * Fixed broken links in the docs for `Funcotator`, `VariantRecalbrator`, and `ASEReadCounter` (#7270); * Fixed typos in the tool documentation for `HaplotypeCaller` and `LeftAlignAndTrimVariants` (#6440); * Clarify pipeline inputs in documentation for `GnarlyGenotyper` (#7231); ; * **Dependencies**; * Updated `HTSJDK` to version `2.24.1` (#7149); * Updated `Picard` to version `2.25.4` (#7255); * Updated `GenomicsDB` to version `1.4.1` (#7224); * Updated the `Genomics Kernel Library (GKL)` to versio",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:9644,Deployability,pipeline,pipeline,9644,"r` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation: removed broken links to related annotations from the tool docs (#7307); * Updated the link to an article on Jexl expressions (#7317); * Fixed several broken links in docs for the CNV tools (#7309); * Fixed broken links in the docs for `Funcotator`, `VariantRecalbrator`, and `ASEReadCounter` (#7270); * Fixed typos in the tool documentation for `HaplotypeCaller` and `LeftAlignAndTrimVariants` (#6440); * Clarify pipeline inputs in documentation for `GnarlyGenotyper` (#7231); ; * **Dependencies**; * Updated `HTSJDK` to version `2.24.1` (#7149); * Updated `Picard` to version `2.25.4` (#7255); * Updated `GenomicsDB` to version `1.4.1` (#7224); * Updated the `Genomics Kernel Library (GKL)` to version `0.8.8` (#7203)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:6297,Energy Efficiency,meter,meter,6297,".; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:6426,Integrability,message,message,6426,".; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:8412,Integrability,interface,interfaces,8412," the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixed the `DepthPerSampleHC` and `StrandBiasBySample` annotations to not spam the logs with ""Annotation will not be calculated"" warnings (#7357); * `VariantEval`: fixed contig stratification to defer to user-defined intervals (#7238). * **Miscellaneous Changes**; * The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:9089,Integrability,depend,dependency,9089,"The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation: removed broken links to related annotations from the tool docs (#7307); * Updated the link to an article on Jexl expressions (#7317); * Fixed several broken links in docs for the CNV tools (#7309); * Fixed broken links in the docs for `Funcotator`, `VariantRecalbrator`, and `ASEReadCounter` (#7270); * Fixed typos in the tool documentation for `HaplotypeCaller` and `LeftAlignAndTrimVariants` (#6440); * Clarify pipeline inputs in documentation for `GnarlyGenotyper` (#7231); ; * **Dependencies**; * Updated `HTSJDK` to version `2.24.1` (#7149); * Updated `Picard` to version `2.25.4` (#7255); * Updated `GenomicsDB` to version `1.4.1` (#7224); * Updated the `Genomics Kernel Library (GKL)` to versio",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5880,Modifiability,config,configuring,5880,"KL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely use",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:562,Performance,perform,performs,562,"**Download release:** [gatk-4.2.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.1.0/gatk-4.2.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.1.0 release:**; --------------------------------------. * Several important fixes to HaplotypeCaller and the new DRAGEN-GATK code introduced in GATK 4.2.0.0. * Started laying the groundwork in `Mutect2` for `Mutect3`, which will be more machine learning focused. * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * Support for multi-sample segmentation in `ModelSegments`. * Major speed improvements and several important fixes to `Funcotator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial hapl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:1258,Performance,perform,performs,1258,"ase:**; --------------------------------------. * Several important fixes to HaplotypeCaller and the new DRAGEN-GATK code introduced in GATK 4.2.0.0. * Started laying the groundwork in `Mutect2` for `Mutect3`, which will be more machine learning focused. * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * Support for multi-sample segmentation in `ModelSegments`. * Major speed improvements and several important fixes to `Funcotator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-me",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2783,Performance,perform,performance,2783,"over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amin",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2798,Performance,optimiz,optimizing,2798,"over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amin",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:4625,Performance,perform,performs,4625,"n the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amino acids in the case that they cannot be decoded from the amino acid table. Currently this will happen any time an N or IUPAC base is in the region to be coded into amino acids.; * Added AminoAcid.UNDECODABLE as a placeholder for any unknown / undecodable amino acid (such as in the case of an ambiguous IUPAC base).; * `Funcotator` now checks whether the input has already been annotated, and by default throws an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5931,Performance,perform,performance,5931,"d OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Si",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:8134,Safety,avoid,avoid,8134," the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixed the `DepthPerSampleHC` and `StrandBiasBySample` annotations to not spam the logs with ""Annotation will not be calculated"" warnings (#7357); * `VariantEval`: fixed contig stratification to defer to user-defined intervals (#7238). * **Miscellaneous Changes**; * The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2817,Security,sanitiz,sanitization,2817,"over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amin",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5175,Security,validat,validation,5175,"s an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operat",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5830,Security,authenticat,authentication,5830,"KL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely use",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:8076,Security,authenticat,authenticate,8076," the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixed the `DepthPerSampleHC` and `StrandBiasBySample` annotations to not spam the logs with ""Annotation will not be calculated"" warnings (#7357); * `VariantEval`: fixed contig stratification to defer to user-defined intervals (#7238). * **Miscellaneous Changes**; * The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2121,Testability,log,log,2121,"ator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2853,Testability,test,tests,2853,"over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amin",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:3719,Testability,log,log,3719,"uncotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amino acids in the case that they cannot be decoded from the amino acid table. Currently this will happen any time an N or IUPAC base is in the region to be coded into amino acids.; * Added AminoAcid.UNDECODABLE as a placeholder for any unknown / undecodable amino acid (such as in the case of an ambiguous IUPAC base).; * `Funcotator` now checks whether the input has already been annotated, and by default throws an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5129,Testability,test,tests,5129,"s an error in that case. ; * We also added a `--reannotate-vcf` override argument to explicitly allow reannotation (#7349). * **CNV Calling**; * Enabled multi-sample segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operat",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:5267,Testability,test,testing,5267,"e segmentation in `ModelSegments` (#6499); * Removed mapping error rate from estimate of denoised copy ratios output by gCNV, and updated sklearn. (#7261); * Moved gCNV sample QA check into the Postprocessing task in the WDL (#7150); ; * **SV Calling**; * Added `LocalAssembler`, a new tool that performs local assembly of small regions to discover structural variants (#6989). * **The Genomics Kernel Library (GKL)**; * Updated to GKL version 0.8.8, and remove the FPGA PairHMM as an option (#7203); * This is a significant update to the GKL that comes with many fixes and improvements:; * Update ISAL and OTC Zlib libraries to latest version (Q1 2021); * Fixed 3 reproducible issues and retested out of 4 more in GKL; * Updated build for Centos 7 and Current Mac.; * Ran valgrind on limited C unit tests (passed); * Major improvements to input validation; * Major updates to Error handling and propagation.; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""G",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:6318,Testability,test,tests,6318,".; * Added Negative space unit testing coverage; * Regular Static Code Scanning; * Good overall quality of life improvement for the software; ; * **GenomicsDB**; * Moved to GenomicsDB 1.4.1, and add a toggle between the GCS Connector and native GCS support (#7224); * This release allows for the direct use of the native GCS C++ client instead of the GCS Cloud Connector via HDFS. The GCS Cloud Connector can still be used with GenomicsDB via the ``--genomicsdb-use-gcs-hdfs-connector option`; * Using the native client with GCS allows for GenomicsDB to use the standard paradigms to help with authentication, retries with exponential backoff, configuring credentials, etc., and also helps with performance issues with GCS. See #7070.; * Allow specifying S3 and Azure blob storage uri's to GenomicsDB in addition to GCS and HDFS (#7271); * Fixes related to the GenomicsDB upgrade (#7257); * Fixed an issue where the combine operation for certain fields needs to take care to not remap missing fields to NON_REF; * Fixes ""Regression in GenomicsDBImport progress meter"" #7222; * Adds tests for ""GenomicsDBImport Creating Workspace Where REF is Inappropriately N?"" #7089; * Improved the error message in `GenomicsDBImport` when failing to open a `FeatureReader` (#7375). * **Mitochondrial pipeline** ; * Added median coverage metric to the mitochondrial pipeline (#7253); ; * **Notable Enhancements**; * Added a GATK-wide option (`--max-variants-per-shard`) to shard VCFs on output (#6959); * Sharded output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:7748,Testability,log,logs,7748,"d output is often extremely useful for pipelining; * Added GATK support for block compressed interval (`.bci`) files (#7142); * Added an `AlleleDepthPseudoCounts` (DD) genotype annotation. (#7303); * Similar to AD, the new annotation (DD) captures the depth of each allele's supporting evidence or reads, however it does so by following a variational Bayes approach looking into the likelihoods rather than applying a fixed threshold. This turns out to be more robust in some instances.; * To get the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixed the `DepthPerSampleHC` and `StrandBiasBySample` annotations to not spam the logs with ""Annotation will not be calculated"" warnings (#7357); * `VariantEval`: fixed contig stratification to defer to user-defined intervals (#7238). * **Miscellaneous Changes**; * The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:8140,Testability,test,tests,8140," the new non-standard annotation in `HaplotypeCaller` you need to add `-A AllelePseudoDepth`; * We now track the source of variants in `MultiVariantWalkers`, which is important for some tools such as `VariantEval` (#7219). * **Bug Fixes**; * Fixed key ordering bugs in the implementations of `Histogram.median()` and `CompressedDataList.iterator()` (#7131); * These bugs could result in incorrect RankSumTest annotations in some cases; * Fixed the `DepthPerSampleHC` and `StrandBiasBySample` annotations to not spam the logs with ""Annotation will not be calculated"" warnings (#7357); * `VariantEval`: fixed contig stratification to defer to user-defined intervals (#7238). * **Miscellaneous Changes**; * The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:9072,Testability,test,tests,9072,"The `ProgressMeter` can now be completely disabled for all tools / traversals by overriding `GATKTool.disableProgressMeter()` (#7354); * We now authenticate with Dockerhub in our Travis builds, to help avoid tests failing due to quota issues (#7204) (#7256); * Migrated `VariantEval` to be a `MultiVariantWalkerGroupedOnStart` (#6973); * `VariantEval`: added an argument to specify the `PedigreeValidationType` (#7240); * Converted `InfoFieldAnnotation`/`GenotypeAnnotation` into interfaces. (#7041); * Allow `MultiVariantWalkerGroupedOnStart` subclasses to view/set `ignoreIntervalsOutsideStart` (#7301); * `PedigreeAnnotation`: consolidate code, provide getters, and allow `PedigreeValidationType` to be set (#7277); * `ASEReadCounter`: added a warning for variants lacking GT fields (#7326); * Added filters to `dockstore.yml` so that only the master branch and the releases get synced to Dockstore (#7217); * Fixed a compatibility issue between Java 11 and `log4j2` (#7339); * We now update the gcloud package signing key at the start of every docker build (#7180); * Updated our Artifactory key (#7208); * Disabled some Spark dataproc tests because of dependency issues. (#7170); * Removed some embedded licenses from scripts (#7340); ; * **Documentation**; * Variant annotation documentation: removed broken links to related annotations from the tool docs (#7307); * Updated the link to an article on Jexl expressions (#7317); * Fixed several broken links in docs for the CNV tools (#7309); * Fixed broken links in the docs for `Funcotator`, `VariantRecalbrator`, and `ASEReadCounter` (#7270); * Fixed typos in the tool documentation for `HaplotypeCaller` and `LeftAlignAndTrimVariants` (#6440); * Clarify pipeline inputs in documentation for `GnarlyGenotyper` (#7231); ; * **Dependencies**; * Updated `HTSJDK` to version `2.24.1` (#7149); * Updated `Picard` to version `2.25.4` (#7255); * Updated `GenomicsDB` to version `1.4.1` (#7224); * Updated the `Genomics Kernel Library (GKL)` to versio",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:508,Usability,learn,learning,508,"**Download release:** [gatk-4.2.1.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.1.0/gatk-4.2.1.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.1.0 release:**; --------------------------------------. * Several important fixes to HaplotypeCaller and the new DRAGEN-GATK code introduced in GATK 4.2.0.0. * Started laying the groundwork in `Mutect2` for `Mutect3`, which will be more machine learning focused. * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * Support for multi-sample segmentation in `ModelSegments`. * Major speed improvements and several important fixes to `Funcotator`. * A new version of the Intel Genomics Kernel Library (GKL), with many important fixes and improvements. * A new version of GenomicsDB, with improved cloud support. * A GATK-wide option to shard VCFs on output, which is often useful for pipelining. * GATK support for block compressed interval (`.bci`) files, which is useful when working with extremely large interval lists. **Full list of changes:**; -------------------------. * **New Tools**; * `LocalAssembler`: a new tool that performs local assembly of small regions to discover structural variants (#6989). * **HaplotypeCaller**; * Fixed a rare edge case in DRAGEN mode that could result in negative GQs when `USE_POSTERIOR_PROBABILITIES` is set (#7120) ; * Fixed a rare edge case (mainly affecting DRAGEN mode) that could cause the PL arrays to be deleted when genotyping in `HaplotypeCaller` (#7148); * Fixed a bug in the `AlleleLikelihoods` that could result in new evidence X being assigned arbitrary likelihoods left over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial hapl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0:2611,Usability,learn,learning,2611,"over from previous evidence (#7154); * Fixed a ""Padded span must contain active span"" error caused by invalid feature file intervals that weren't being checked for validity against the sequence dictionary (#7295); * Do not add the artificial haplotype read group to the bamout file when `--bam-writer-type NO_HAPLOTYPES` is specified (#7141); * Suppressed excessive log output related to `JumboAnnotation` warnings in `HaplotypeCaller` (#7358). * **DRAGEN-GATK**; * `CalibrateDragstrModel`: fixed a sporadic out-of-memory error (#7212); * `CalibrateDragstrModel`: fixed an ""IllegalArgumentException: Start cannot exceed end"" error (#7212). * **Mutect2**; * Added a training data mode (`--training-data-mode`) to `Mutect2` to prepare for `Mutect3` (#7109); * Training data mode collects data on variant- and artifact-supporting read sets for fitting a deep learning filtering model; * Better error bars for samples with small contamination in `CalculateContamination` (#7003); ; * **Funcotator**; * Greatly improved `Funcotator` performance by optimizing the VCF sanitization code (#7370); * In our tests, this change appears to speed up the tool by roughly 2x; * Updated the Gencode GTF Codec to be more permissive with transcript and gene types (#7166); * Now the Gencode GTF Codec no longer restricts `transcriptType` and `geneType` to a limited set of values. These fields are now each stored as a String. This allows for arbitrary values in these fields and will help to future-proof (and species-proof) the GTF parser.; * Fixes ""IndexFeatureFile Error to Run Funcotator with Mouse Ensembl GTF"" (#7054); * Now can decode codons containing IUPAC bases into amino acids. (#7188); * Updated the tool to allow for protein changes with N / IUPAC bases. (#6778); * Added the ability to have IUPAC bases in either the ref/alt alleles OR in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce ? amin",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:89,Availability,down,download,89,"**Download release:** [gatk-4.2.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:2378,Availability,avail,available,2378,"tk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` model penalizes variants with low average base quality scores and high average sequencing cycle counts among genotyped reads and reads that were otherwise excluded from the genotyper to model read-context dependent sequencing errors.; * The `Foreign Read Detection (FRD)` model uses an adjusted mapping quality score as ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:2596,Availability,error,errors,2596,"uture as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` model penalizes variants with low average base quality scores and high average sequencing cycle counts among genotyped reads and reads that were otherwise excluded from the genotyper to model read-context dependent sequencing errors.; * The `Foreign Read Detection (FRD)` model uses an adjusted mapping quality score as well as read strandedness information to penalize reads that are likely to have originated from somewhere else on the genome or from contamination.; * To activate the BQD and FRD models, run `HaplotypeCaller` with the **`--dragen-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:2915,Availability,error,error,2915,"w:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` model penalizes variants with low average base quality scores and high average sequencing cycle counts among genotyped reads and reads that were otherwise excluded from the genotyper to model read-context dependent sequencing errors.; * The `Foreign Read Detection (FRD)` model uses an adjusted mapping quality score as well as read strandedness information to penalize reads that are likely to have originated from somewhere else on the genome or from contamination.; * To activate the BQD and FRD models, run `HaplotypeCaller` with the **`--dragen-mode`** argument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstit",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:3209,Availability,error,errors,3209,"w:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` model penalizes variants with low average base quality scores and high average sequencing cycle counts among genotyped reads and reads that were otherwise excluded from the genotyper to model read-context dependent sequencing errors.; * The `Foreign Read Detection (FRD)` model uses an adjusted mapping quality score as well as read strandedness information to penalize reads that are likely to have originated from somewhere else on the genome or from contamination.; * To activate the BQD and FRD models, run `HaplotypeCaller` with the **`--dragen-mode`** argument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstit",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:4435,Availability,recover,recovered,4435,"ument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstitute/gatk/issues/6463); * Fixed ""Phased variants do not have the same phase set identifier"" (https://github.com/broadinstitute/gatk/issues/6845); * Fixed quality score calculation for sites with spanning deletions (#6859); * This fixes a bug in the AlleleFrequencyCalculator that was causing quality to be overestimated for sites with * alleles representing spanning deletions.; * Added the ability for indels to be recovered from dangling heads in the assembly graph, and a new `--num-matching-bases-in-dangling-end-to-recover` argument for filtering dangling ends (#6113) (#7086); * Improved handling of indels/spanning deletions in the cigar base quality adjustment code. (#6886); * This aims to better handle the edge cases that come up when mates have mismatching numbers of bases at the start or end of the reads relative to each-other. ; * Fixed a bug where overlapping reads in subsequent assembly regions could have invalid base qualities (#6943); * Convert non-ACGT IUPAC bases to N in HaplotypeCaller prior to assembly to prevent a crash (#6868); * Renamed the `--mapping-quality-threshold` argument to `--mapping-quality-threshold-for-genotyping`, and updated its documentation to be less confusing (#7036); * Added an option for `HaplotypeCaller` and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argume",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:4539,Availability,recover,recover,4539,"ument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstitute/gatk/issues/6463); * Fixed ""Phased variants do not have the same phase set identifier"" (https://github.com/broadinstitute/gatk/issues/6845); * Fixed quality score calculation for sites with spanning deletions (#6859); * This fixes a bug in the AlleleFrequencyCalculator that was causing quality to be overestimated for sites with * alleles representing spanning deletions.; * Added the ability for indels to be recovered from dangling heads in the assembly graph, and a new `--num-matching-bases-in-dangling-end-to-recover` argument for filtering dangling ends (#6113) (#7086); * Improved handling of indels/spanning deletions in the cigar base quality adjustment code. (#6886); * This aims to better handle the edge cases that come up when mates have mismatching numbers of bases at the start or end of the reads relative to each-other. ; * Fixed a bug where overlapping reads in subsequent assembly regions could have invalid base qualities (#6943); * Convert non-ACGT IUPAC bases to N in HaplotypeCaller prior to assembly to prevent a crash (#6868); * Renamed the `--mapping-quality-threshold` argument to `--mapping-quality-threshold-for-genotyping`, and updated its documentation to be less confusing (#7036); * Added an option for `HaplotypeCaller` and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argume",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:5761,Availability,redundant,redundant,5761,"es at the start or end of the reads relative to each-other. ; * Fixed a bug where overlapping reads in subsequent assembly regions could have invalid base qualities (#6943); * Convert non-ACGT IUPAC bases to N in HaplotypeCaller prior to assembly to prevent a crash (#6868); * Renamed the `--mapping-quality-threshold` argument to `--mapping-quality-threshold-for-genotyping`, and updated its documentation to be less confusing (#7036); * Added an option for `HaplotypeCaller` and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argument in `Mutect2` to actually work as intended (#6823); * Due to a bug, this option did nothing because a copy of the original reads was modified. By deleting the unnecessary mapping quality filtering (this is totally redundant with the M2 read filter), we finalize (and thereby discard soft clips if requested) an assembly region made from the original reads, not a copy.; * Fixed a bug in the `Mutect2` engine active region code that could affect the ability to call tumor alts when the normal has a different alt at the same site (#6908); * Removed an obsolete cram to bam conversion step in the `Mutect2` WDL (#6970); * Updated the `Mutect2` whitepaper in `docs/mutect/mutect.pdf` to accurately reflect current filter names, and updated the section on `FilterAlignmentArtifacts` (#6967). * **CNV Calling**; * A new pipeline for gCNV exome joint calling (#6554); * Added a new tool (`JointGermlineCNVSegmentation`) and associated workflow (`scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:8507,Availability,down,down,8507,"#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calling**; * `PrintSVEvidence`: a new tool that prints any of the Structural Variation evidence file types: read count (RD), discordant pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each contig, which slowed down import to a crawl when there were many contigs.; ; * **Funcotator**; * Added sorting by strand order for transcript subcomponents (#7065); * This fixes an issue where the coding sequence, protein prediction, and other annotations could be incorrect for the hg19 version of Gencode, due to the individual elements of each transcript appearing in numerical order, rather than the order in which they appear in the transcript at transcription time.; * Updated the Funcotator tutorial link in the tool documentation. (#6920) (#6925). * **Mitochondrial pipeline** ; * Simplified the max_reads_per_alignment_start argument in mitochondria_m2_wdl/AlignAndCall.wdl (#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReferen",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:9671,Availability,error,error,9671,"(#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:10147,Availability,error,error,10147,"(#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:10237,Availability,error,errors,10237,"(#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:10530,Availability,toler,tolerate,10530,"(#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11252,Availability,robust,robust,11252,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11530,Availability,error,error,11530,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11762,Availability,robust,robust,11762,"se (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consistently use the GATK4 tool name: ApplyRecalibration -> ApplyVQSR; * Modified the README to reflect the current download size for Git LFS files (#6933); * Fixed a typo in the conda environment YML documentation. (#6935); * Removed reference to -Dtest.single from the README (#6914); * Fixed a typo in a j",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:12597,Availability,down,download,12597,"ays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consistently use the GATK4 tool name: ApplyRecalibration -> ApplyVQSR; * Modified the README to reflect the current download size for Git LFS files (#6933); * Fixed a typo in the conda environment YML documentation. (#6935); * Removed reference to -Dtest.single from the README (#6914); * Fixed a typo in a javadoc comment in `HaplotypeCallerEngine` (#7033). * **Dependencies**; * Updated HTSJDK to 2.24.0 (#7073); * Updated Picard to 2.25.0 (#7075)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.2.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.2.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.2.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:453,Deployability,pipeline,pipeline,453,"**Download release:** [gatk-4.2.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:567,Deployability,pipeline,pipeline,567,"**Download release:** [gatk-4.2.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:888,Deployability,pipeline,pipeline,888,"**Download release:** [gatk-4.2.0.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1028,Deployability,release,release,1028,"4.2.0.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HM",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1247,Deployability,pipeline,pipeline,1247,"s of the 4.2.0.0 release:**; --------------------------------------. * We've worked closely with Illumina to port a number of significant innovations for germline short variant calling from their DRAGEN pipeline to GATK. These improvements will form the basis of the upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1460,Deployability,pipeline,pipeline,1460,"e upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1511,Deployability,release,released,1511,"e upcoming open-source implementation of the DRAGEN pipeline which we're calling [DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific). * A number of other fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1773,Deployability,release,release,1773,"fixes and improvements to `HaplotypeCaller` to improve the phasing of variant calls and to fix edge cases with indels and spanning deletions. * A new pipeline for gCNV exome joint calling. **Full list of changes:**; -------------------------. * **DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-param",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1849,Deployability,pipeline,pipeline,1849,"DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1861,Deployability,release,released,1861,"DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:1980,Deployability,pipeline,pipelines,1980,"DRAGEN-GATK** (#6634) (#7063); * With this release we've worked closely with Illumina to make improvements to the GATK `HaplotypeCaller` to allow it to output germline short variant calls that are functionally equivalent to the calls made by their DRAGEN 3.4.12 pipeline. See [our blog post on DRAGEN-GATK](https://gatk.broadinstitute.org/hc/en-us/articles/360039984151-DRAGEN-GATK-Update-Let-s-get-more-specific) for more details on these improvements. A full `DRAGEN-GATK` pipeline that leverages these new features will be released in the near future as a WDL workflow script in the [WARP](https://github.com/broadinstitute/warp) repo on GitHub as well as a featured workspace in [Terra](https://terra.bio/). ; * Below is a summary of the improvements we've ported from DRAGEN in this release. We recommend that most users wait until the complete `DRAGEN-GATK` pipeline is released as a WDL workflow before evaluating these features, though advanced users comfortable with building their own pipelines are welcome to try them out now:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:5183,Deployability,update,updated,5183,"xed quality score calculation for sites with spanning deletions (#6859); * This fixes a bug in the AlleleFrequencyCalculator that was causing quality to be overestimated for sites with * alleles representing spanning deletions.; * Added the ability for indels to be recovered from dangling heads in the assembly graph, and a new `--num-matching-bases-in-dangling-end-to-recover` argument for filtering dangling ends (#6113) (#7086); * Improved handling of indels/spanning deletions in the cigar base quality adjustment code. (#6886); * This aims to better handle the edge cases that come up when mates have mismatching numbers of bases at the start or end of the reads relative to each-other. ; * Fixed a bug where overlapping reads in subsequent assembly regions could have invalid base qualities (#6943); * Convert non-ACGT IUPAC bases to N in HaplotypeCaller prior to assembly to prevent a crash (#6868); * Renamed the `--mapping-quality-threshold` argument to `--mapping-quality-threshold-for-genotyping`, and updated its documentation to be less confusing (#7036); * Added an option for `HaplotypeCaller` and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argument in `Mutect2` to actually work as intended (#6823); * Due to a bug, this option did nothing because a copy of the original reads was modified. By deleting the unnecessary mapping quality filtering (this is totally redundant with the M2 read filter), we finalize (and thereby discard soft clips if requested) an assembly region made from the original reads, not a copy.; * Fixed a bug in the `Mutect2` engine active region code that could affect the ability to call tumor alts when the normal has a different alt at the same site (#6908); * Removed an obsolete cram to bam conversion step in the `Mutect2` WDL (#6970); * Upd",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:6276,Deployability,update,updated,6276," and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argument in `Mutect2` to actually work as intended (#6823); * Due to a bug, this option did nothing because a copy of the original reads was modified. By deleting the unnecessary mapping quality filtering (this is totally redundant with the M2 read filter), we finalize (and thereby discard soft clips if requested) an assembly region made from the original reads, not a copy.; * Fixed a bug in the `Mutect2` engine active region code that could affect the ability to call tumor alts when the normal has a different alt at the same site (#6908); * Removed an obsolete cram to bam conversion step in the `Mutect2` WDL (#6970); * Updated the `Mutect2` whitepaper in `docs/mutect/mutect.pdf` to accurately reflect current filter names, and updated the section on `FilterAlignmentArtifacts` (#6967). * **CNV Calling**; * A new pipeline for gCNV exome joint calling (#6554); * Added a new tool (`JointGermlineCNVSegmentation`) and associated workflow (`scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces a joint, multi-sample genotyped VCF. ; * For whole genomes, we recommend CNVs as part of a full SV callset with https://github.com/broadinstitute/gatk-sv (soon to be added to Terra); * `GermlineCNVCaller` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO conv",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:6362,Deployability,pipeline,pipeline,6362,"both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argument in `Mutect2` to actually work as intended (#6823); * Due to a bug, this option did nothing because a copy of the original reads was modified. By deleting the unnecessary mapping quality filtering (this is totally redundant with the M2 read filter), we finalize (and thereby discard soft clips if requested) an assembly region made from the original reads, not a copy.; * Fixed a bug in the `Mutect2` engine active region code that could affect the ability to call tumor alts when the normal has a different alt at the same site (#6908); * Removed an obsolete cram to bam conversion step in the `Mutect2` WDL (#6970); * Updated the `Mutect2` whitepaper in `docs/mutect/mutect.pdf` to accurately reflect current filter names, and updated the section on `FilterAlignmentArtifacts` (#6967). * **CNV Calling**; * A new pipeline for gCNV exome joint calling (#6554); * Added a new tool (`JointGermlineCNVSegmentation`) and associated workflow (`scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces a joint, multi-sample genotyped VCF. ; * For whole genomes, we recommend CNVs as part of a full SV callset with https://github.com/broadinstitute/gatk-sv (soon to be added to Terra); * `GermlineCNVCaller` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for f",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:6679,Deployability,pipeline,pipeline,6679,"did nothing because a copy of the original reads was modified. By deleting the unnecessary mapping quality filtering (this is totally redundant with the M2 read filter), we finalize (and thereby discard soft clips if requested) an assembly region made from the original reads, not a copy.; * Fixed a bug in the `Mutect2` engine active region code that could affect the ability to call tumor alts when the normal has a different alt at the same site (#6908); * Removed an obsolete cram to bam conversion step in the `Mutect2` WDL (#6970); * Updated the `Mutect2` whitepaper in `docs/mutect/mutect.pdf` to accurately reflect current filter names, and updated the section on `FilterAlignmentArtifacts` (#6967). * **CNV Calling**; * A new pipeline for gCNV exome joint calling (#6554); * Added a new tool (`JointGermlineCNVSegmentation`) and associated workflow (`scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces a joint, multi-sample genotyped VCF. ; * For whole genomes, we recommend CNVs as part of a full SV callset with https://github.com/broadinstitute/gatk-sv (soon to be added to Terra); * `GermlineCNVCaller` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for filtering zero-coverage samples and intervals (#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calli",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:7341,Deployability,update,updated,7341,"ames, and updated the section on `FilterAlignmentArtifacts` (#6967). * **CNV Calling**; * A new pipeline for gCNV exome joint calling (#6554); * Added a new tool (`JointGermlineCNVSegmentation`) and associated workflow (`scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces a joint, multi-sample genotyped VCF. ; * For whole genomes, we recommend CNVs as part of a full SV callset with https://github.com/broadinstitute/gatk-sv (soon to be added to Terra); * `GermlineCNVCaller` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for filtering zero-coverage samples and intervals (#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calling**; * `PrintSVEvidence`: a new tool that prints any of the Structural Variation evidence file types: read count (RD), discordant pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:7869,Deployability,pipeline,pipeline,7869,"vs.wdl` produces a joint, multi-sample genotyped VCF. ; * For whole genomes, we recommend CNVs as part of a full SV callset with https://github.com/broadinstitute/gatk-sv (soon to be added to Terra); * `GermlineCNVCaller` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for filtering zero-coverage samples and intervals (#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calling**; * `PrintSVEvidence`: a new tool that prints any of the Structural Variation evidence file types: read count (RD), discordant pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each contig, which slowed down import to a crawl when there were many contigs.; ; * **Funcotator**; * Added sorting by strand order for transcript subcomponents (#7065); * This fixes an issue where the coding sequence, protein prediction, and other annotations could be incorrect for the hg19 version of Ge",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:8045,Deployability,pipeline,pipeline,8045,"` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for filtering zero-coverage samples and intervals (#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calling**; * `PrintSVEvidence`: a new tool that prints any of the Structural Variation evidence file types: read count (RD), discordant pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each contig, which slowed down import to a crawl when there were many contigs.; ; * **Funcotator**; * Added sorting by strand order for transcript subcomponents (#7065); * This fixes an issue where the coding sequence, protein prediction, and other annotations could be incorrect for the hg19 version of Gencode, due to the individual elements of each transcript appearing in numerical order, rather than the order in which they appear in the transcript at transcription time.; * Updated the Funcotator tutorial link in the to",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:9060,Deployability,pipeline,pipeline,9060," `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each contig, which slowed down import to a crawl when there were many contigs.; ; * **Funcotator**; * Added sorting by strand order for transcript subcomponents (#7065); * This fixes an issue where the coding sequence, protein prediction, and other annotations could be incorrect for the hg19 version of Gencode, due to the individual elements of each transcript appearing in numerical order, rather than the order in which they appear in the transcript at transcription time.; * Updated the Funcotator tutorial link in the tool documentation. (#6920) (#6925). * **Mitochondrial pipeline** ; * Simplified the max_reads_per_alignment_start argument in mitochondria_m2_wdl/AlignAndCall.wdl (#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before runn",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:10677,Deployability,release,releases,10677,"(#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11036,Deployability,release,release,11036,"ointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud inst",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11320,Deployability,integrat,integration,11320,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11977,Deployability,install,installation,11977,"ays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consistently use the GATK4 tool name: ApplyRecalibration -> ApplyVQSR; * Modified the README to reflect the current download size for Git LFS files (#6933); * Fixed a typo in the conda environment YML documentation. (#6935); * Removed reference to -Dtest.single from the README (#6914); * Fixed a typo in a javadoc comment in `HaplotypeCallerEngine` (#7033). * **Dependencies**; * Updated HTSJDK to 2.24.0 (#7073); * Updated Picard to 2.25.0 (#7075)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:3188,Integrability,depend,dependent,3188,"w:; * **DragSTR**: a port of DRAGEN's model for STRs (Short Tandem Repeats) that adjusts HMM indel priors based on empirical reference contexts for better indel calling.; * Using DragSTR involves running two new tools prior to the `HaplotypeCaller`: ; * `ComposeSTRTableFile`: scans a reference for STR sites and outputs a table file with a subsample of the available STR sites across the genome. ; * `CalibrateDragstrModel`: given the STR table for a reference produced by `ComposeSTRTableFile` and the reads for a specific sample, generates a model for potential sequencing errors for STR sites of various sizes for that sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` model penalizes variants with low average base quality scores and high average sequencing cycle counts among genotyped reads and reads that were otherwise excluded from the genotyper to model read-context dependent sequencing errors.; * The `Foreign Read Detection (FRD)` model uses an adjusted mapping quality score as well as read strandedness information to penalize reads that are likely to have originated from somewhere else on the genome or from contamination.; * To activate the BQD and FRD models, run `HaplotypeCaller` with the **`--dragen-mode`** argument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstit",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:3690,Integrability,depend,dependent,3690,"at sample.; * After running these tools, you then run `HaplotypeCaller` with the **`--dragstr-params-path`** argument to pass it the DragSTR model generated by `CalibrateDragstrModel`.; * **BQD (Base Quality Dropout)** and **FRD (Foreign Read Detection)**: two new genotyper error models ported from DRAGEN; * The `Base Quality Dropout (BQD)` model penalizes variants with low average base quality scores and high average sequencing cycle counts among genotyped reads and reads that were otherwise excluded from the genotyper to model read-context dependent sequencing errors.; * The `Foreign Read Detection (FRD)` model uses an adjusted mapping quality score as well as read strandedness information to penalize reads that are likely to have originated from somewhere else on the genome or from contamination.; * To activate the BQD and FRD models, run `HaplotypeCaller` with the **`--dragen-mode`** argument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstitute/gatk/issues/6463); * Fixed ""Phased variants do not have the same phase set identifier"" (https://github.com/broadinstitute/gatk/issues/6845); * Fixed quality score calculation for sites with spanning deletions (#6859); * This fixes a bug in the AlleleFrequencyCalculator that was causing quality to be overestimated for sites with * alleles representing spanning deletions.; * Added the ability for indels to be recovered from dangling heads in the assembly graph, and a new `--num-matching-bases-in-dangling-end-to-recover` argument for filtering dangling ends (#6113) (#7086); * Improved handling of indels/spanning ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:10889,Integrability,message,message,10889,"ointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud inst",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11320,Integrability,integrat,integration,11320,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11536,Integrability,message,message,11536,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11630,Integrability,message,message,11630,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:8327,Performance,perform,performance,8327," GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for filtering zero-coverage samples and intervals (#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calling**; * `PrintSVEvidence`: a new tool that prints any of the Structural Variation evidence file types: read count (RD), discordant pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each contig, which slowed down import to a crawl when there were many contigs.; ; * **Funcotator**; * Added sorting by strand order for transcript subcomponents (#7065); * This fixes an issue where the coding sequence, protein prediction, and other annotations could be incorrect for the hg19 version of Gencode, due to the individual elements of each transcript appearing in numerical order, rather than the order in which they appear in the transcript at transcription time.; * Updated the Funcotator tutorial link in the tool documentation. (#6920) (#6925). * **Mitochondrial pipeline** ; * Simplified the max_reads_per_alignment_start argument in mitochondria_m2_wdl/AlignAndCall.wdl (#6904); * Remove the unused ""autosomal_coverage"" parameter",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:4435,Safety,recover,recovered,4435,"ument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstitute/gatk/issues/6463); * Fixed ""Phased variants do not have the same phase set identifier"" (https://github.com/broadinstitute/gatk/issues/6845); * Fixed quality score calculation for sites with spanning deletions (#6859); * This fixes a bug in the AlleleFrequencyCalculator that was causing quality to be overestimated for sites with * alleles representing spanning deletions.; * Added the ability for indels to be recovered from dangling heads in the assembly graph, and a new `--num-matching-bases-in-dangling-end-to-recover` argument for filtering dangling ends (#6113) (#7086); * Improved handling of indels/spanning deletions in the cigar base quality adjustment code. (#6886); * This aims to better handle the edge cases that come up when mates have mismatching numbers of bases at the start or end of the reads relative to each-other. ; * Fixed a bug where overlapping reads in subsequent assembly regions could have invalid base qualities (#6943); * Convert non-ACGT IUPAC bases to N in HaplotypeCaller prior to assembly to prevent a crash (#6868); * Renamed the `--mapping-quality-threshold` argument to `--mapping-quality-threshold-for-genotyping`, and updated its documentation to be less confusing (#7036); * Added an option for `HaplotypeCaller` and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argume",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:4539,Safety,recover,recover,4539,"ument.; * Added a new variant QUAL score model that reports the variant QUAL score as the posterior of the reference genotype based on the sample-dependent DRAGEN STR and flat SNP priors. * **HaplotypeCaller**; * We now add physical phasing information (PGT/PID/PS attributes) to genotypes with spanning deletion alleles (#6937); * Fixed two phasing bugs (#7019); * Fixed ""HaplotypeCaller emitting incorrect phasing when genotyping hom-het-het"" (https://github.com/broadinstitute/gatk/issues/6463); * Fixed ""Phased variants do not have the same phase set identifier"" (https://github.com/broadinstitute/gatk/issues/6845); * Fixed quality score calculation for sites with spanning deletions (#6859); * This fixes a bug in the AlleleFrequencyCalculator that was causing quality to be overestimated for sites with * alleles representing spanning deletions.; * Added the ability for indels to be recovered from dangling heads in the assembly graph, and a new `--num-matching-bases-in-dangling-end-to-recover` argument for filtering dangling ends (#6113) (#7086); * Improved handling of indels/spanning deletions in the cigar base quality adjustment code. (#6886); * This aims to better handle the edge cases that come up when mates have mismatching numbers of bases at the start or end of the reads relative to each-other. ; * Fixed a bug where overlapping reads in subsequent assembly regions could have invalid base qualities (#6943); * Convert non-ACGT IUPAC bases to N in HaplotypeCaller prior to assembly to prevent a crash (#6868); * Renamed the `--mapping-quality-threshold` argument to `--mapping-quality-threshold-for-genotyping`, and updated its documentation to be less confusing (#7036); * Added an option for `HaplotypeCaller` and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argume",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:5761,Safety,redund,redundant,5761,"es at the start or end of the reads relative to each-other. ; * Fixed a bug where overlapping reads in subsequent assembly regions could have invalid base qualities (#6943); * Convert non-ACGT IUPAC bases to N in HaplotypeCaller prior to assembly to prevent a crash (#6868); * Renamed the `--mapping-quality-threshold` argument to `--mapping-quality-threshold-for-genotyping`, and updated its documentation to be less confusing (#7036); * Added an option for `HaplotypeCaller` and `Mutect2` to produce a bamout without artificial haplotypes (#6991); * Updated the `--debug-graph-transformations` argument to emit the assembly graph both before and after chain pruning (#7049). * **Mutect2** ; * Fixed the `--dont-use-soft-clipped-bases` argument in `Mutect2` to actually work as intended (#6823); * Due to a bug, this option did nothing because a copy of the original reads was modified. By deleting the unnecessary mapping quality filtering (this is totally redundant with the M2 read filter), we finalize (and thereby discard soft clips if requested) an assembly region made from the original reads, not a copy.; * Fixed a bug in the `Mutect2` engine active region code that could affect the ability to call tumor alts when the normal has a different alt at the same site (#6908); * Removed an obsolete cram to bam conversion step in the `Mutect2` WDL (#6970); * Updated the `Mutect2` whitepaper in `docs/mutect/mutect.pdf` to accurately reflect current filter names, and updated the section on `FilterAlignmentArtifacts` (#6967). * **CNV Calling**; * A new pipeline for gCNV exome joint calling (#6554); * Added a new tool (`JointGermlineCNVSegmentation`) and associated workflow (`scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:8708,Safety,predict,prediction,8708,"pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each contig, which slowed down import to a crawl when there were many contigs.; ; * **Funcotator**; * Added sorting by strand order for transcript subcomponents (#7065); * This fixes an issue where the coding sequence, protein prediction, and other annotations could be incorrect for the hg19 version of Gencode, due to the individual elements of each transcript appearing in numerical order, rather than the order in which they appear in the transcript at transcription time.; * Updated the Funcotator tutorial link in the tool documentation. (#6920) (#6925). * **Mitochondrial pipeline** ; * Simplified the max_reads_per_alignment_start argument in mitochondria_m2_wdl/AlignAndCall.wdl (#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify prop",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:10009,Security,validat,validation,10009,"(#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:7423,Testability,log,logic,7423,"ipts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces a joint, multi-sample genotyped VCF. ; * For whole genomes, we recommend CNVs as part of a full SV callset with https://github.com/broadinstitute/gatk-sv (soon to be added to Terra); * `GermlineCNVCaller` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for filtering zero-coverage samples and intervals (#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calling**; * `PrintSVEvidence`: a new tool that prints any of the Structural Variation evidence file types: read count (RD), discordant pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each conti",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:7533,Testability,log,logic,7533,"ipts/cnv_wdl/germline/joint_call_exome_cnvs.wdl`) to combine gCNV segments and calls across samples; * `JointGermlineCNVSegmentation` segments and genotypes CNV calls from the germline CNV pipeline jointly across multiple samples. ; * The workflow in `scripts/cnv_wdl/germline/joint_call_exome_cnvs.wdl` produces a joint, multi-sample genotyped VCF. ; * For whole genomes, we recommend CNVs as part of a full SV callset with https://github.com/broadinstitute/gatk-sv (soon to be added to Terra); * `GermlineCNVCaller` now restarts inference once with a new random seed when inference diverges. Also added a new entry point to PythonScriptExecutor that returnes ProcessOutput. (#6866); * This is intended to alleviate transient issues with GermlineCNVCaller inference in which the ELBO converges to a NaN value, by calling the python gCNV code with an updated random seed input.; * `CreateReadCountPanelOfNormals`: fixed a bug in the logic for filtering zero-coverage samples and intervals (#6624); * `FilterIntervals`: fixed a bug in the tool logic when filtering on annotations and -XL is used to exclude intervals (#7046). * **SV Calling**; * `PrintSVEvidence`: a new tool that prints any of the Structural Variation evidence file types: read count (RD), discordant pair (PE), split-read (SR), or B-allele frequency (BAF) (#7026); * This tool is used frequently in the GATK-SV pipeline for retrieving subsets of evidence records from a bucket over specific intervals. Evidence file formats comply with the current specifications in the existing GATK-SV pipeline. * **GenomicsDB**; * Introduced a new feature for `GenomicsDBImport` that allows merging multiple contigs into fewer GenomicsDB partitions (#6681); * Controlled via the new `--merge-contigs-into-num-partitions` argument to `GenomicsDBImport` ; * This should produce a huge performance boost in cases where users have a very large number of contigs. Prior to this change, GenomicsDB would create a separate folder/partition for each conti",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:9739,Testability,test,test,9739,"(#6904); * Remove the unused ""autosomal_coverage"" parameter from the Filter task in mitochondria_m2_wdl/AlignAndCall.wdl (#6888). * **Notable Enhancements**; * Add a `-O` option to save the output to a file in the following tools: `FlagStat`, `CountBases`, `CountReads`, `CountVariants`, and `CountBasesInReference` (#7072); * `DepthOfCoverage`: added a new gene_statistics output file (#7025); * `ReblockGVCF`: allow reblocking with no PLs (#6757). * **Bug Fixes**; * Fixed a `ClosedChannelException` error when doing multiple queries on remote CRAM files, and added a test to verify proper stream management (#7066); * `SelectVariants`: Fixed an issue where SelectVariants could generate duplicate VCF header lines in some circumstances, resulting in an invalid VCF (#7069); * `VariantAnnotator`: fixed a NullPointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:10877,Testability,log,log,10877,"ointerException by adding a validation check that all samples in the input bam are present in the provided vcf before running (#6944); * `SplitNCigarReads`: fixed an error where the read mate key was not sufficiently strict about read names, causing cigar errors (#6909); * `CalculateGenotypePosteriors`: ensure that resources have the same sequence dictionary as the input VCF (#6430); * `MarkDuplicatesSpark`: fixed a NullPointerException when a null ReadNameRegex was provided (#7002); * `GnarlyGenotyper`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud inst",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11347,Testability,test,test,11347,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:12101,Testability,log,log,12101,"ays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consistently use the GATK4 tool name: ApplyRecalibration -> ApplyVQSR; * Modified the README to reflect the current download size for Git LFS files (#6933); * Fixed a typo in the conda environment YML documentation. (#6935); * Removed reference to -Dtest.single from the README (#6914); * Fixed a typo in a javadoc comment in `HaplotypeCallerEngine` (#7033). * **Dependencies**; * Updated HTSJDK to 2.24.0 (#7073); * Updated Picard to 2.25.0 (#7075)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0:11214,Usability,simpl,simpleBaseToBaseIndex,11214,"per`: bugfix for the QUALapprox calculation, tolerate missing VarDP, and support AS_QUALapprox if QUALapprox is missing (#7061); * Fixed the GATK version number in the docker image when doing releases to not end in ""-SNAPSHOT"" (#6883). * **Miscellaneous Changes**; * Switched GATK to the Apache 2.0 license (#7079); * We now print the current Spark version on GATK startup (#7028); * Added a log warning message when the total size of the PL arrays for a variant will likely exceed 100,000 (#6334); * Added a script to publish GATK tool WDLs for each release (#6980); * Migrated the `GATKPath` base class to `HtsPath` (#6763); * Migrate additional tools to `GATKPath` (#6718); * Made `BaseUtils.convertIUPACtoN()` and `BaseUtils.simpleBaseToBaseIndex()` methods more robust to handle all possible byte values (#7010); * Enabled CARROT integration for triggering test runs from PR comments (#6917) (#6986); * Added loci information to several annotation warnings (#6891); * `VariantRecalibrator`: added locus information to a ref allele mismatch error message (#6964); * `ReferenceConfidenceVariantContextMerger`: corrected AS annotation warning message to use GATK4 annotation names (#6985); * Made the `CNNScoreVariants` task in `cnn_variant_wdl/cnn_variant_common_tasks.wdl` robust to the reads and index being in different locations. (#6900); * Updated gcloud docker commands in `build_docker.sh` (#7078); * Added version number to the dockstore yml file (#6905); * Switched travis gcloud installation to use noninteractive mode (#6974); * Deleted the obsolete tool `FixCallSetSampleOrdering` (#7022); * Echo the log file after a failed travis run. (#7020); * Temporarily disable the PairHMMUnitTest on Java 11. (#7044); * Pin our h5py version to 2.10.0. (#6955); ; * **Documentation**; * Added a link to the new `gatk-tool-wdls` repository to the README (#6982); * Updated JEXL documentation website link in `SelectVariants` and `VariantFiltration` (#7029); * Updated the `ApplyVQSR` docs to consi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.2.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:89,Availability,down,download,89,"**Download release:** [gatk-4.1.9.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.9.0/gatk-4.1.9.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.9.0 release:**; --------------------------------------. * A major update to `Funcotator`, bringing in the latest Gencode release, fixing compatibility issues with dbSNP, and more!. * Two new tools, `GeneExpressionEvaluation` and `ReferenceBlockConcordance`. * Significant performance improvements to `DepthOfCoverage` and `SelectVariants`. * Some important bug fixes:; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion; * A fix for the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * A fix for a frequently-encountered `NullPointerException` in the `AS_StrandBiasTest` annotation when running `CombineGVCFs` reported in https://github.com/broadinstitute/gatk/issues/6766 . **Full list of changes:**; -------------------------. * **New Tools**; * `GeneExpressionEvaluation`: a tool for evaluating gene expression from RNA-seq reads aligned to whole genome (#6602); * This tool counts fragments to evaluate gene expression from RNA-seq reads aligned to the genome. Features to evaluate expression over are defined in an input annotation file in gff3 fomat. Output is a tsv listing sense and antisense expression for all stranded grouping features, and expression (labeled as sense) for all unstranded grouping features.; ; * `ReferenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3028,Availability,recover,recovering,3028,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3640,Availability,error,error,3640,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:4561,Availability,error,error,4561,"15); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagat",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:4768,Availability,down,downloader,4768,"en (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK option GATK_STACKTRACE_ON_USER_EXCEPTION will now also output a limited C/C++ stacktrace; ; * **CNV Tools*",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:5598,Availability,error,errors,5598,"ig file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK option GATK_STACKTRACE_ON_USER_EXCEPTION will now also output a limited C/C++ stacktrace; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data to calculate the segmentation cost should be `2 * windowSize`, rather than `windowSize` (#6835); * Germline CNV WDL improvements for WGS (#6607); * Modified gCNV WDLs to improve Cromwell performance when running on a large number of intervals, as in WGS; * Added optional disabled_read_filters input to CollectCounts; * Enabled GCS streaming for CollectCounts and CollectAllelicCounts; * Added a ""requester pays"" option to the germline and somatic CNV WDLs for use with Google Cloud ""requester pays"" buckets (#6870). * **Mitochondrial Pipeline**; * Fix to correctly handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8083,Availability,error,error,8083,"n operation to scale linearly instead of quadratically with the number of samples (#6729); * On one example with several thousand samples there was a speed up from ~5 minutes to 0.1 minutes; * WDL generation: made several improvements to automatic WDL generation, annotated additional tools for WDL generation, and added a section to the README with instructions on generating WDLs for GATK tools (#6800) ; * Added a suite of utility methods for working with Google BigQuery: `BigQueryUtils` (#6759) (#6861) ; * The GATK docker image can now be built with a simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enab",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8654,Availability,error,error,8654," simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tm",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8756,Availability,error,error,8756," simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tm",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.1.9.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.9.0/gatk-4.1.9.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.9.0 release:**; --------------------------------------. * A major update to `Funcotator`, bringing in the latest Gencode release, fixing compatibility issues with dbSNP, and more!. * Two new tools, `GeneExpressionEvaluation` and `ReferenceBlockConcordance`. * Significant performance improvements to `DepthOfCoverage` and `SelectVariants`. * Some important bug fixes:; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion; * A fix for the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * A fix for a frequently-encountered `NullPointerException` in the `AS_StrandBiasTest` annotation when running `CombineGVCFs` reported in https://github.com/broadinstitute/gatk/issues/6766 . **Full list of changes:**; -------------------------. * **New Tools**; * `GeneExpressionEvaluation`: a tool for evaluating gene expression from RNA-seq reads aligned to whole genome (#6602); * This tool counts fragments to evaluate gene expression from RNA-seq reads aligned to the genome. Features to evaluate expression over are defined in an input annotation file in gff3 fomat. Output is a tsv listing sense and antisense expression for all stranded grouping features, and expression (labeled as sense) for all unstranded grouping features.; ; * `ReferenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.1.9.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.9.0/gatk-4.1.9.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.9.0 release:**; --------------------------------------. * A major update to `Funcotator`, bringing in the latest Gencode release, fixing compatibility issues with dbSNP, and more!. * Two new tools, `GeneExpressionEvaluation` and `ReferenceBlockConcordance`. * Significant performance improvements to `DepthOfCoverage` and `SelectVariants`. * Some important bug fixes:; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion; * A fix for the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * A fix for a frequently-encountered `NullPointerException` in the `AS_StrandBiasTest` annotation when running `CombineGVCFs` reported in https://github.com/broadinstitute/gatk/issues/6766 . **Full list of changes:**; -------------------------. * **New Tools**; * `GeneExpressionEvaluation`: a tool for evaluating gene expression from RNA-seq reads aligned to whole genome (#6602); * This tool counts fragments to evaluate gene expression from RNA-seq reads aligned to the genome. Features to evaluate expression over are defined in an input annotation file in gff3 fomat. Output is a tsv listing sense and antisense expression for all stranded grouping features, and expression (labeled as sense) for all unstranded grouping features.; ; * `ReferenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.1.9.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.9.0/gatk-4.1.9.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.9.0 release:**; --------------------------------------. * A major update to `Funcotator`, bringing in the latest Gencode release, fixing compatibility issues with dbSNP, and more!. * Two new tools, `GeneExpressionEvaluation` and `ReferenceBlockConcordance`. * Significant performance improvements to `DepthOfCoverage` and `SelectVariants`. * Some important bug fixes:; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion; * A fix for the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * A fix for a frequently-encountered `NullPointerException` in the `AS_StrandBiasTest` annotation when running `CombineGVCFs` reported in https://github.com/broadinstitute/gatk/issues/6766 . **Full list of changes:**; -------------------------. * **New Tools**; * `GeneExpressionEvaluation`: a tool for evaluating gene expression from RNA-seq reads aligned to whole genome (#6602); * This tool counts fragments to evaluate gene expression from RNA-seq reads aligned to the genome. Features to evaluate expression over are defined in an input annotation file in gff3 fomat. Output is a tsv listing sense and antisense expression for all stranded grouping features, and expression (labeled as sense) for all unstranded grouping features.; ; * `ReferenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:329,Deployability,update,update,329,"**Download release:** [gatk-4.1.9.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.9.0/gatk-4.1.9.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.9.0 release:**; --------------------------------------. * A major update to `Funcotator`, bringing in the latest Gencode release, fixing compatibility issues with dbSNP, and more!. * Two new tools, `GeneExpressionEvaluation` and `ReferenceBlockConcordance`. * Significant performance improvements to `DepthOfCoverage` and `SelectVariants`. * Some important bug fixes:; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion; * A fix for the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * A fix for a frequently-encountered `NullPointerException` in the `AS_StrandBiasTest` annotation when running `CombineGVCFs` reported in https://github.com/broadinstitute/gatk/issues/6766 . **Full list of changes:**; -------------------------. * **New Tools**; * `GeneExpressionEvaluation`: a tool for evaluating gene expression from RNA-seq reads aligned to whole genome (#6602); * This tool counts fragments to evaluate gene expression from RNA-seq reads aligned to the genome. Features to evaluate expression over are defined in an input annotation file in gff3 fomat. Output is a tsv listing sense and antisense expression for all stranded grouping features, and expression (labeled as sense) for all unstranded grouping features.; ; * `ReferenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:384,Deployability,release,release,384,"**Download release:** [gatk-4.1.9.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.9.0/gatk-4.1.9.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.9.0 release:**; --------------------------------------. * A major update to `Funcotator`, bringing in the latest Gencode release, fixing compatibility issues with dbSNP, and more!. * Two new tools, `GeneExpressionEvaluation` and `ReferenceBlockConcordance`. * Significant performance improvements to `DepthOfCoverage` and `SelectVariants`. * Some important bug fixes:; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion; * A fix for the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * A fix for a frequently-encountered `NullPointerException` in the `AS_StrandBiasTest` annotation when running `CombineGVCFs` reported in https://github.com/broadinstitute/gatk/issues/6766 . **Full list of changes:**; -------------------------. * **New Tools**; * `GeneExpressionEvaluation`: a tool for evaluating gene expression from RNA-seq reads aligned to whole genome (#6602); * This tool counts fragments to evaluate gene expression from RNA-seq reads aligned to the genome. Features to evaluate expression over are defined in an input annotation file in gff3 fomat. Output is a tsv listing sense and antisense expression for all stranded grouping features, and expression (labeled as sense) for all unstranded grouping features.; ; * `ReferenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:2753,Deployability,pipeline,pipeline,2753,"erenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score and length in the truth GVCF; * *Eval block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score and length in the eval GVCF; * *Confidence concordance histogram*: Reflects the confidence scores of bases in reference blocks in the truth and eval VCF, respectively. An entry of 10 at bin ""80,90"" means that there are 10 bases which simultaneously have a reference confidence of 80 in the truth GVCF and a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:4020,Deployability,update,updates,4020,"821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an err",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:4085,Deployability,release,release,4085,"821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an err",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:4813,Deployability,update,updates,4813,"es count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK option GATK_STACKTRACE_ON_USER_EXCEPTION will now also output a limited C/C++ stacktrace; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:6907,Deployability,patch,patch,6907,"ing on a large number of intervals, as in WGS; * Added optional disabled_read_filters input to CollectCounts; * Enabled GCS streaming for CollectCounts and CollectAllelicCounts; * Added a ""requester pays"" option to the germline and somatic CNV WDLs for use with Google Cloud ""requester pays"" buckets (#6870). * **Mitochondrial Pipeline**; * Fix to correctly handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance of `SelectVariants` with large numbers of samples by changing an operation to scale linearly instead of quadratically with the number of samples (#6729); * On one example with several thousand samples there was a speed up from ~5 minutes to 0.1 minutes; * WDL generation: made several improvements to automatic WDL generation, annotated additional tools for WDL generation, and added a section to the README with instructions on generating WDLs for GATK tools (#6800) ; * Added a suite of utility methods for working with Google BigQuery: `BigQueryUtils` (#6759) (#6861) ; * The GATK docker image can now be built with a simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecali",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8992,Deployability,upgrade,upgrade,8992,"on reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tmp-dir` argument in the `GenotypeGVCFs` docs (#6784); * Removed outdated argument references from the `DepthOfCoverage` documentation. (#6810); * Fixed a typo with ""-genelist"" argument to ""-gene-list"" in the `DepthOfCoverage` documentation. (#6880); * Fixed a typo in the docs for the `Mutect2` --pcr-indel-qual argume",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3126,Energy Efficiency,adapt,adaptive,3126,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3238,Energy Efficiency,adapt,adaptive,3238,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:5605,Integrability,message,messages,5605,"ig file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK option GATK_STACKTRACE_ON_USER_EXCEPTION will now also output a limited C/C++ stacktrace; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data to calculate the segmentation cost should be `2 * windowSize`, rather than `windowSize` (#6835); * Germline CNV WDL improvements for WGS (#6607); * Modified gCNV WDLs to improve Cromwell performance when running on a large number of intervals, as in WGS; * Added optional disabled_read_filters input to CollectCounts; * Enabled GCS streaming for CollectCounts and CollectAllelicCounts; * Added a ""requester pays"" option to the germline and somatic CNV WDLs for use with Google Cloud ""requester pays"" buckets (#6870). * **Mitochondrial Pipeline**; * Fix to correctly handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8660,Integrability,message,messages,8660," simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tm",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8762,Integrability,message,message,8762," simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tm",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:10058,Integrability,depend,dependency,10058,"s://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tmp-dir` argument in the `GenotypeGVCFs` docs (#6784); * Removed outdated argument references from the `DepthOfCoverage` documentation. (#6810); * Fixed a typo with ""-genelist"" argument to ""-gene-list"" in the `DepthOfCoverage` documentation. (#6880); * Fixed a typo in the docs for the `Mutect2` --pcr-indel-qual argument (#6840). * **Dependencies**; * Upgraded `Picard` to 2.23.3 (#6717); * Upgraded `Barclay` to 4.0.1. (#6864); * Updated `GenomicsDB` to 1.3.2 (#6852); * Added a new dependency on `Google BigQuery` 1.117.1 (#6759)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3126,Modifiability,adapt,adaptive,3126,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3238,Modifiability,adapt,adaptive,3238,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:4951,Modifiability,config,config,4951," Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK option GATK_STACKTRACE_ON_USER_EXCEPTION will now also output a limited C/C++ stacktrace; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data to calculate the segmentation cost should be `2 * windowSize`, rather than `windowSize` (#6835); * Germline CNV",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8411,Modifiability,refactor,refactoring,8411," simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tm",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:535,Performance,perform,performance,535,"**Download release:** [gatk-4.1.9.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.9.0/gatk-4.1.9.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.9.0 release:**; --------------------------------------. * A major update to `Funcotator`, bringing in the latest Gencode release, fixing compatibility issues with dbSNP, and more!. * Two new tools, `GeneExpressionEvaluation` and `ReferenceBlockConcordance`. * Significant performance improvements to `DepthOfCoverage` and `SelectVariants`. * Some important bug fixes:; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion; * A fix for the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * A fix for a frequently-encountered `NullPointerException` in the `AS_StrandBiasTest` annotation when running `CombineGVCFs` reported in https://github.com/broadinstitute/gatk/issues/6766 . **Full list of changes:**; -------------------------. * **New Tools**; * `GeneExpressionEvaluation`: a tool for evaluating gene expression from RNA-seq reads aligned to whole genome (#6602); * This tool counts fragments to evaluate gene expression from RNA-seq reads aligned to the genome. Features to evaluate expression over are defined in an input annotation file in gff3 fomat. Output is a tsv listing sense and antisense expression for all stranded grouping features, and expression (labeled as sense) for all unstranded grouping features.; ; * `ReferenceBlockConcordance`: a new tool to evaluate concordance of reference blocks in GVCF files (#6802); * This tool compares the reference blocks of two GVCF files against each other and produces three histograms:; * *Truth block histogram*: Indicates the number of occurrences of reference blocks with a given confidence score",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3606,Performance,concurren,concurrent,3606,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:6021,Performance,perform,performance,6021,"ig file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK option GATK_STACKTRACE_ON_USER_EXCEPTION will now also output a limited C/C++ stacktrace; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data to calculate the segmentation cost should be `2 * windowSize`, rather than `windowSize` (#6835); * Germline CNV WDL improvements for WGS (#6607); * Modified gCNV WDLs to improve Cromwell performance when running on a large number of intervals, as in WGS; * Added optional disabled_read_filters input to CollectCounts; * Enabled GCS streaming for CollectCounts and CollectAllelicCounts; * Added a ""requester pays"" option to the germline and somatic CNV WDLs for use with Google Cloud ""requester pays"" buckets (#6870). * **Mitochondrial Pipeline**; * Fix to correctly handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:6693,Performance,perform,performance,6693,"race; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data to calculate the segmentation cost should be `2 * windowSize`, rather than `windowSize` (#6835); * Germline CNV WDL improvements for WGS (#6607); * Modified gCNV WDLs to improve Cromwell performance when running on a large number of intervals, as in WGS; * Added optional disabled_read_filters input to CollectCounts; * Enabled GCS streaming for CollectCounts and CollectAllelicCounts; * Added a ""requester pays"" option to the germline and somatic CNV WDLs for use with Google Cloud ""requester pays"" buckets (#6870). * **Mitochondrial Pipeline**; * Fix to correctly handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance of `SelectVariants` with large numbers of samples by changing an operation to scale linearly instead of quadratically with the number of samples (#6729); * On one example with several thousand samples there was a speed up from ~5 minutes to 0.1 minutes; * WDL generation: made several improvements to automatic WDL generation, annotated additional tools for WDL generation, and added a section to the README with instructions on generating WDLs for GATK tools (#6800) ; * Added a suite of utility methods for working with Google BigQuery: `BigQueryUtils` (#6759) (#6861) ; * The GATK docker image can now be built with a simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to fa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:6943,Performance,perform,performance,6943,"ing on a large number of intervals, as in WGS; * Added optional disabled_read_filters input to CollectCounts; * Enabled GCS streaming for CollectCounts and CollectAllelicCounts; * Added a ""requester pays"" option to the germline and somatic CNV WDLs for use with Google Cloud ""requester pays"" buckets (#6870). * **Mitochondrial Pipeline**; * Fix to correctly handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance of `SelectVariants` with large numbers of samples by changing an operation to scale linearly instead of quadratically with the number of samples (#6729); * On one example with several thousand samples there was a speed up from ~5 minutes to 0.1 minutes; * WDL generation: made several improvements to automatic WDL generation, annotated additional tools for WDL generation, and added a section to the README with instructions on generating WDLs for GATK tools (#6800) ; * Added a suite of utility methods for working with Google BigQuery: `BigQueryUtils` (#6759) (#6861) ; * The GATK docker image can now be built with a simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecali",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:2996,Safety,detect,detection,2996,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3028,Safety,recover,recovering,3028,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3305,Safety,detect,detection,3305,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:3913,Security,access,access,3913,"nd a reference confidence of 90 in the eval GVCF.; ; * **HaplotypeCaller/Mutect2**; * Fixed a bug in `HaplotypeCaller` and `Mutect2` where we were losing insertion events that immediately followed a deletion (#6696); * Added a workaround for an issue with multiallelics in the `CreateSomaticPanelOfNormals` pipeline (#6871); * This fixes the ""CreateSomaticPanelOfNormals output PoN has much less variants in 4.1.8.0 than before"" issue reported in https://github.com/broadinstitute/gatk/issues/6744; * Made improvements to the `Mutect2` active region detection code that resulted in recovering some low-AF calls that we were missing (#6821); * Made the `HaplotypeCaller`/`Mutect2` adaptive pruner smarter in complex graphs, resulting in modest improvements to indel sensitivity when using the adaptive pruning option (#6520) ; * Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows (#6661); * Fixed a bug in `FragmentUtils` where insertion quals were used instead of deletion quals when adjusting base qualities for two overlapping reads from the same fragment (#6815); * Fixed a concurrent modification exception error for local runs of `HaplotypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Adde",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:5023,Security,hash,hash,5023," updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK option GATK_STACKTRACE_ON_USER_EXCEPTION will now also output a limited C/C++ stacktrace; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data to calculate the segmentation cost should be `2 * windowSize`, rather than `windowSize` (#6835); * Germline CNV WDL improvements for WGS (#6607); * Modified gCNV WDLs to improve Cromwell",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:4651,Testability,test,test,4651,"otypeCallerSpark` (#6741); * Marked the `--linked-de-bruijn-graph` argument as Advanced rather than Hidden (#6737); * Made a small tweak to `Mutect2`'s callable sites count (#6791); * Added a ""requester pays"" option to `Mutect2` WDL tasks that access bams for use with Google Cloud ""requester pays"" buckets (#6879). * **Funcotator**; * A major set of updates to `Funcotator` (#6660); * Updated to the latest Gencode release; * Fixed the contig naming compatibility issue with dbSNP reported in https://github.com/broadinstitute/gatk/issues/6564 (""hg38 dbSNP has incorrect contig names""); * Now both hg19 and hg38 have the contig names translated to ""chr__""; * Added 'lncRNA' to GeneTranscriptType.; * Added ""TAGENE"" gene tag.; * Added the MANE_SELECT tag to FeatureTag.; * Added the STOP_CODON_READTHROUGH tag to FeatureTag.; * Updated the GTF versions that are parseable.; * Fixed a parsing error with new versions of gencode and the remap positions (for liftover files).; * Added test for indexing new lifted over gencode GTF.; * Added Gencode_34 entries to MAF output map.; * Pointed data source downloader at new data sources URL.; * Minor updates to workflows to point at new data sources.; * Updated retrieval scripts for dbSNP and Gencode.; * Added required field to gencode config file generation.; * Now gencode retrieval script enforces double hash comments at top of gencode GTF files.; * Fixed an erroneous trailing tab in MAF file output reported in https://github.com/broadinstitute/gatk/issues/6693 ; * Added a maximum version number for data sources in `Funcotator` (#6807); * Added a ""requester pays"" option to the `Funcotator` WDL for use with Google Cloud ""requester pays"" buckets (#6874); * `FuncotateSegments`: fixed an issue with the default value of --alias-to-key-mapping being set to an immutable value (#6700). * **GenomicsDB**; * Updated to GenomicsDB Version 1.3.2, which brings better propagation of errors messages from the GenomicsDB library (#6852); * Using the GATK o",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:6783,Testability,test,test,6783,"race; ; * **CNV Tools**; * Fixed a bug in the `KernelSegmenter`: the minimal data to calculate the segmentation cost should be `2 * windowSize`, rather than `windowSize` (#6835); * Germline CNV WDL improvements for WGS (#6607); * Modified gCNV WDLs to improve Cromwell performance when running on a large number of intervals, as in WGS; * Added optional disabled_read_filters input to CollectCounts; * Enabled GCS streaming for CollectCounts and CollectAllelicCounts; * Added a ""requester pays"" option to the germline and somatic CNV WDLs for use with Google Cloud ""requester pays"" buckets (#6870). * **Mitochondrial Pipeline**; * Fix to correctly handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance of `SelectVariants` with large numbers of samples by changing an operation to scale linearly instead of quadratically with the number of samples (#6729); * On one example with several thousand samples there was a speed up from ~5 minutes to 0.1 minutes; * WDL generation: made several improvements to automatic WDL generation, annotated additional tools for WDL generation, and added a section to the README with instructions on generating WDLs for GATK tools (#6800) ; * Added a suite of utility methods for working with Google BigQuery: `BigQueryUtils` (#6759) (#6861) ; * The GATK docker image can now be built with a simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to fa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:8940,Testability,test,tests,8940,"on reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tmp-dir` argument in the `GenotypeGVCFs` docs (#6784); * Removed outdated argument references from the `DepthOfCoverage` documentation. (#6810); * Fixed a typo with ""-genelist"" argument to ""-gene-list"" in the `DepthOfCoverage` documentation. (#6880); * Fixed a typo in the docs for the `Mutect2` --pcr-indel-qual argume",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:9045,Testability,test,test,9045,"tRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; * Significant refactoring of the SV discovery classes (#6652); * `FilterVariantTranches`: report more info when the ref alleles don't match (#6723) ; * We now report the target url in exceptions thrown by `HtsgetReader` (#6799); * Added more information to error messages in `AssemblyRegion` for contigs not in the reference dictionary (#6781); * Improved an error message in `GATKRead.setMatePosition()` (#6779); * Updated the Barclay WDL template for compatibility with the Debian distribution (#6841); * Temporarily disabled `HtsgetReader` tests to work around issues caused by a server-side upgrade. (#6804); * Re-enabled an `IndexFeatureFile` test for uncompressed BCF. (#6716). * **Documentation**; * Marked `LearnReadOrientationModel` as a `DocumentedFeature` (#6726); * Added a gentle warning about loss of True Positives with the default `FilterIntervals` params (#6751); * Updated the README to mention that the conda environment is not officially supported on macOS at this time. (#6788); * Fixed a typo in the example command for `SplitIntervals` (#6869); * Fixed a typo in the `--tmp-dir` argument in the `GenomicsDBImport` docs (#6785); * Fixed a typo in the `--tmp-dir` argument in the `GenotypeGVCFs` docs (#6784); * Removed outdated argument references from the `DepthOfCoverage` documentation. (#6810); * Fixed a typo with ""-genelist"" argument to ""-gene-list"" in the `DepthOfCoverage` documentation. (#6880); * Fixed a typo in the docs for the `Mutect2` --pcr-indel-qual argument (#6840). * **Dependencies**; * Upgraded `Picard` to 2.23.3 (#6717); * Upgraded `Barclay` to 4.0.1. (#6864); * Updated `GenomicsDB` to 1.3.2 (",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0:7576,Usability,simpl,simple,7576,"y handle spaces in sample names in the Mitochondria WDL (#6773); * Exposed a `max_reads_per_alignment_start` argument in the Mitochondria WDL (#6739); * Updated the `HaploChecker` Dockerfile to reflect the correct haplocheck CLI (#6867). * **Notable Enhancements**; * Significantly improved the performance of `DepthOfCoverage` by removing slow string formatting calls (#6740); * In a test run with default arguments locally the runtime for a WGS full chr15 drops from ~8.9 minutes to ~4.7 minutes after this patch; * Significantly improved the performance of `SelectVariants` with large numbers of samples by changing an operation to scale linearly instead of quadratically with the number of samples (#6729); * On one example with several thousand samples there was a speed up from ~5 minutes to 0.1 minutes; * WDL generation: made several improvements to automatic WDL generation, annotated additional tools for WDL generation, and added a section to the README with instructions on generating WDLs for GATK tools (#6800) ; * Added a suite of utility methods for working with Google BigQuery: `BigQueryUtils` (#6759) (#6861) ; * The GATK docker image can now be built with a simple `docker build .` command (no extra arguments needed) (#6764) (#6842) (#6782); * Added a Dockstore yml file with workflow descriptions for the WDLs in the GATK repo, to facilitate automatic publication to Dockstore (#6770). * **Bug Fixes**; * Fixed a `NullPointerException` in the `AS_StrandBiasTest` annotation reported in https://github.com/broadinstitute/gatk/issues/6766 (#6847); * Fixed a bug with soft clips in `LeftAlignIndels` (#6792); * `VariantRecalibrator`: uniquify annotations to fix the error reported in https://github.com/broadinstitute/gatk/issues/2221 (#6723); * Fixed an issue where `ContextCovariate` in `BaseRecalibrator` mistakenly assumed that all non-ACGT bases in the read are N (#6625); * Fixed a crash in `CountBasesSpark` when using the `-L` option (#6767). * **Miscellaneous Changes**; *",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.9.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:89,Availability,down,download,89,"**Download release:** [gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:518,Deployability,pipeline,pipeline,518,"**Download release:** [gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:1059,Deployability,pipeline,pipeline,1059,"[gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mode GENOTYPE_GIVEN_ALL",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:2781,Deployability,pipeline,pipeline,2781,"ctoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mode GENOTYPE_GIVEN_ALLELES` argument is gone (now you only need to specify `--alleles force-calls.vcf`) and alleles are now force-called *in addition* to any other alleles (#6090); * Renamed `--output-mode EMIT_ALL_SITES` to `--output-mode EMIT_ALL_ACTIVE_SITES`, and clarified the documentation for the argument (#6181); * Fixed a rare bug in the genotyping engine where it could emit untrimmed alleles for SNP sites (#6044); * Fixed some sources of non-determinism in the `HaplotypeCaller` that in rare cases could cause the output to vary slightly given the same inputs (#6195) (#6104); * Deleted the old exact AF calculation model (#6099). * **Joint Calling**; * Fixed a regression in GATK 4.1.3.0 that caused us to not emit the `AS_QD` annotation when running a joint calling pipeline with `CombineGVCFs` (`GenomicsDB` was unaffected) (#6168); * Fixed allele-specific annotation array length issues when alleles are subset in tools such as `GenotypeGVCFs` (#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:3429,Deployability,pipeline,pipeline,3429," vary slightly given the same inputs (#6195) (#6104); * Deleted the old exact AF calculation model (#6099). * **Joint Calling**; * Fixed a regression in GATK 4.1.3.0 that caused us to not emit the `AS_QD` annotation when running a joint calling pipeline with `CombineGVCFs` (`GenomicsDB` was unaffected) (#6168); * Fixed allele-specific annotation array length issues when alleles are subset in tools such as `GenotypeGVCFs` (#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (#6140); * `CountFalsePositives` now requires an intervals file (#6120); * `AnalyzeSaturationMutagenesis`: use supplementary alignments to identify large deletions (#6092); * `AnalyzeSaturationMutagenesis`: an insert at the start codon is not in the ORF (#6121); * Added a check for null sequence dictionaries in the dictionary validation code (#6147); * Update SV Spark pipeline example shell scripts saving results to GCS (#6114); * Update public key for installing R in docker (#6116); * Log exceptions during deletion on JVM exit instead of throwing (#6125); * Don't fail the build if we're in a git worktree folder (#6169); * Free a bit of memory fir the test suite by disabling m",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:4223,Deployability,pipeline,pipeline,4223,"#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (#6140); * `CountFalsePositives` now requires an intervals file (#6120); * `AnalyzeSaturationMutagenesis`: use supplementary alignments to identify large deletions (#6092); * `AnalyzeSaturationMutagenesis`: an insert at the start codon is not in the ORF (#6121); * Added a check for null sequence dictionaries in the dictionary validation code (#6147); * Update SV Spark pipeline example shell scripts saving results to GCS (#6114); * Update public key for installing R in docker (#6116); * Log exceptions during deletion on JVM exit instead of throwing (#6125); * Don't fail the build if we're in a git worktree folder (#6169); * Free a bit of memory fir the test suite by disabling mysql and postgress on travis (#6085); * Delete bogus index files for queryname sorted CRAMs. (#6149); * Cleanup GenomicsDB debugging test output (#6089). * **Documentation**; * Fixed mitochondria mode documentation in `FilterMutectCalls` (#6174). * **Dependencies**; * Updated `HTSJDK` to 2.20.3 (#6126); * Updated `Picard` to 2.21.1 (#6205); * Updated `google-cloud-nio` to 0.107.0 (#6042); * Updated `Gradle` to 5.6 (#6106)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:4309,Deployability,install,installing,4309,"#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (#6140); * `CountFalsePositives` now requires an intervals file (#6120); * `AnalyzeSaturationMutagenesis`: use supplementary alignments to identify large deletions (#6092); * `AnalyzeSaturationMutagenesis`: an insert at the start codon is not in the ORF (#6121); * Added a check for null sequence dictionaries in the dictionary validation code (#6147); * Update SV Spark pipeline example shell scripts saving results to GCS (#6114); * Update public key for installing R in docker (#6116); * Log exceptions during deletion on JVM exit instead of throwing (#6125); * Don't fail the build if we're in a git worktree folder (#6169); * Free a bit of memory fir the test suite by disabling mysql and postgress on travis (#6085); * Delete bogus index files for queryname sorted CRAMs. (#6149); * Cleanup GenomicsDB debugging test output (#6089). * **Documentation**; * Fixed mitochondria mode documentation in `FilterMutectCalls` (#6174). * **Dependencies**; * Updated `HTSJDK` to 2.20.3 (#6126); * Updated `Picard` to 2.21.1 (#6205); * Updated `google-cloud-nio` to 0.107.0 (#6042); * Updated `Gradle` to 5.6 (#6106)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:1849,Modifiability,refactor,refactoring,1849,"a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mode GENOTYPE_GIVEN_ALLELES` argument is gone (now you only need to specify `--alleles force-calls.vcf`) and alleles are now force-called *in addition* to any other alleles (#6090); * Renamed `--output-mode EMIT_ALL_SITES` to `--output-mode EMIT_ALL_ACTIVE_SITES`, and clarified the documentation for the argument (#6181); * Fixed a rare bug in the genotyping engine where it could emit untrimmed alleles for SNP sites (#6044); * Fixed some sources of non-determinism in the `HaplotypeCaller` that in rare cases could cause the output to vary slightly given the same inputs (#6195) (#6104); * Deleted the old exact AF calculation model (#6099). * **Joint Calling**; * Fixed a regression in GATK 4.1.3.0 that caused us to not emit the `AS_QD` annotation when running",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:4180,Security,validat,validation,4180,"#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (#6140); * `CountFalsePositives` now requires an intervals file (#6120); * `AnalyzeSaturationMutagenesis`: use supplementary alignments to identify large deletions (#6092); * `AnalyzeSaturationMutagenesis`: an insert at the start codon is not in the ORF (#6121); * Added a check for null sequence dictionaries in the dictionary validation code (#6147); * Update SV Spark pipeline example shell scripts saving results to GCS (#6114); * Update public key for installing R in docker (#6116); * Log exceptions during deletion on JVM exit instead of throwing (#6125); * Don't fail the build if we're in a git worktree folder (#6169); * Free a bit of memory fir the test suite by disabling mysql and postgress on travis (#6085); * Delete bogus index files for queryname sorted CRAMs. (#6149); * Cleanup GenomicsDB debugging test output (#6089). * **Documentation**; * Fixed mitochondria mode documentation in `FilterMutectCalls` (#6174). * **Dependencies**; * Updated `HTSJDK` to 2.20.3 (#6126); * Updated `Picard` to 2.21.1 (#6205); * Updated `google-cloud-nio` to 0.107.0 (#6042); * Updated `Gradle` to 5.6 (#6106)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:574,Testability,test,testing,574,"**Download release:** [gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:3721,Testability,test,testing,3721,"#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (#6140); * `CountFalsePositives` now requires an intervals file (#6120); * `AnalyzeSaturationMutagenesis`: use supplementary alignments to identify large deletions (#6092); * `AnalyzeSaturationMutagenesis`: an insert at the start codon is not in the ORF (#6121); * Added a check for null sequence dictionaries in the dictionary validation code (#6147); * Update SV Spark pipeline example shell scripts saving results to GCS (#6114); * Update public key for installing R in docker (#6116); * Log exceptions during deletion on JVM exit instead of throwing (#6125); * Don't fail the build if we're in a git worktree folder (#6169); * Free a bit of memory fir the test suite by disabling mysql and postgress on travis (#6085); * Delete bogus index files for queryname sorted CRAMs. (#6149); * Cleanup GenomicsDB debugging test output (#6089). * **Documentation**; * Fixed mitochondria mode documentation in `FilterMutectCalls` (#6174). * **Dependencies**; * Updated `HTSJDK` to 2.20.3 (#6126); * Updated `Picard` to 2.21.1 (#6205); * Updated `google-cloud-nio` to 0.107.0 (#6042); * Updated `Gradle` to 5.6 (#6106)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:4512,Testability,test,test,4512,"#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (#6140); * `CountFalsePositives` now requires an intervals file (#6120); * `AnalyzeSaturationMutagenesis`: use supplementary alignments to identify large deletions (#6092); * `AnalyzeSaturationMutagenesis`: an insert at the start codon is not in the ORF (#6121); * Added a check for null sequence dictionaries in the dictionary validation code (#6147); * Update SV Spark pipeline example shell scripts saving results to GCS (#6114); * Update public key for installing R in docker (#6116); * Log exceptions during deletion on JVM exit instead of throwing (#6125); * Don't fail the build if we're in a git worktree folder (#6169); * Free a bit of memory fir the test suite by disabling mysql and postgress on travis (#6085); * Delete bogus index files for queryname sorted CRAMs. (#6149); * Cleanup GenomicsDB debugging test output (#6089). * **Documentation**; * Fixed mitochondria mode documentation in `FilterMutectCalls` (#6174). * **Dependencies**; * Updated `HTSJDK` to 2.20.3 (#6126); * Updated `Picard` to 2.21.1 (#6205); * Updated `google-cloud-nio` to 0.107.0 (#6042); * Updated `Gradle` to 5.6 (#6106)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:4670,Testability,test,test,4670,"#6079); * Changed `AS_RankSum` outputs to ""."" for missing values rather than ""nul"" (#6079). * **Funcotator**; * Fixed a bug that caused `Funcotator` to outputs fields in wrong order in some cases when writing a VCF (#6178); * Specifically, `Funcotator` would output functation fields in the wrong order when there was more than 1 site in a VCF data source with the exact same position and alleles and it matched one of the variants being annotated. * **Mitochondrial pipeline** ; * Renamed the output vcf with the name of the sample and supplied a default value for `autosomal_median_coverage` (meaning you'll now get the `NuMT` filter even if you don't provide the actual autosomal coverage) (#6160). * **Miscellaneous Changes**; * Beta support for building/testing on Java 11 (#6119) (#6145); * `UpdateVCFSequenceDictionary` now supports replacing an invalid sequence dictionary in a VCF (#6140); * `CountFalsePositives` now requires an intervals file (#6120); * `AnalyzeSaturationMutagenesis`: use supplementary alignments to identify large deletions (#6092); * `AnalyzeSaturationMutagenesis`: an insert at the start codon is not in the ORF (#6121); * Added a check for null sequence dictionaries in the dictionary validation code (#6147); * Update SV Spark pipeline example shell scripts saving results to GCS (#6114); * Update public key for installing R in docker (#6116); * Log exceptions during deletion on JVM exit instead of throwing (#6125); * Don't fail the build if we're in a git worktree folder (#6169); * Free a bit of memory fir the test suite by disabling mysql and postgress on travis (#6085); * Delete bogus index files for queryname sorted CRAMs. (#6149); * Cleanup GenomicsDB debugging test output (#6089). * **Documentation**; * Fixed mitochondria mode documentation in `FilterMutectCalls` (#6174). * **Dependencies**; * Updated `HTSJDK` to 2.20.3 (#6126); * Updated `Picard` to 2.21.1 (#6205); * Updated `google-cloud-nio` to 0.107.0 (#6042); * Updated `Gradle` to 5.6 (#6106)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0:658,Usability,feedback,feedback,658,"**Download release:** [gatk-4.1.4.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.4.0/gatk-4.1.4.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.4.0 release:**; --------------------------------------. * Major improvements and fixes to `Mutect2`, including more intelligent handling of paired reads during genotyping and better filtering. * Important bug fixes to `HaplotypeCaller`, the joint calling pipeline, and `Funcotator`. * Beta support for building/testing on Java 11 (#6119) (#6145); * *We encourage you to try this out and give us feedback!*. **Full list of changes:**; -------------------------. * **New Tools**; * `AlleleFrequencyQC`: a QC tool that uses `VariantEval` to bin variants in 1000 Genomes by allele frequency. For each bin, we compare the expected allele frequency from 1000 Genomes with the observed allele frequency in the input VCF. This was designed with arrays in mind, as a way to discover potential bugs in our pipeline. #6039). * **Mutect2**; * `Mutect2` genotyping now forces paired reads to support the same haplotype (#5831); * New `FilterAlignmentArtifacts` now realigns a locally-assembled unitig of all variant read pairs (#6143); * Fixed a `Mutect2` bug that overfiltered by one variant (#6101); * Fixed a small gene panel edge case for `CalculateContamination` (#6137); * Fixed a small gene panel edge case in orientation bias filter (#6141); * Unified the NIO and non-NIO M2 WDLs (call-caching will now work on Terra) (#6108); * Updated `Mutect2` pon WDL to WDL 1.0 (#6187); * Removed `Oncotator` from the M2 WDL (`Funcotator` is still there) (#6144); * Fixed an issue in the M2 WDL that could cause the Funcotate task to be ignored by tools such as dxWDL (#6077); * Some miscellaneous code refactoring/improvements (#6184) (#6136) (#6107) (#6159). * **HaplotypeCaller**; * `HaplotypeCaller` now force-calls like `Mutect2`: the `-genotyping-mo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.4.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:89,Availability,down,download,89,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:3191,Availability,error,error,3191,"tations are present, they will be used appropriately and a new `AS_AltDP` annotation giving the total depth across samples for each alternate allele will be added.; * A GATK ""Biggest Practices"" pipeline including the `GnarlyGenotyper` is forthcoming pending some fixes improving on the above caveats. * **FuncotateSegments** (beta tool) (#5941); * A companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * The Somatic CNV pipeline can optionally run this tool for functional annotation. * **HaplotypeCaller**/**Mutect2**; * Fixed a regression in `HaplotypeCaller`/`Mutect2` that caused some variants to be lost at sites with high complexity (#5952); * Fixed a GGA (GENOTYPE_GIVEN_ALLELES) mode bug in `HaplotypeCaller`/`Mutect2` where added alleles' cigars could have soft clips (#6047); * This bug would manifest as a ""Cigar cannot be null"" error; * Fixed a bug where cached indel informativeness values could be incorrectly applied to the wrong sites in `HaplotypeCaller`/`Mutect2` (#5911); * Fixed an edge case in `HaplotypeCaller`/`Mutect2` where dangling end merging creates cycles (#5960); * Added hidden arguments to the assembly engine to track found haplotype counts and kmers used (#6049); * Fixed a bug in `CalculateContamination` when contamination is indistinguishable from zero (#5971); * Fixed a bug where normal p value argument in `FilterMutectCalls` was declared static (#5982). * **CNV Tools**; * Added `FuncotateSegments` as an option to the Somatic CNV WDL (#5967); * Added QC metrics to the Germline CNV workflow (#6017); * Enabled GC-bias correction by default in CNV workflows (#5966); * Added denoised coverage file concatenation output to gCNV postprocessor (#5823) *Note:* The addition of this feature breaks compatibility with gCNV cohort-mode models built with previous releases.; * Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in inp",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:4997,Availability,failure,failure,4997,"Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in input filenames. (#5983). * **GenomicsDBImport**; * Added support for making incremental updates to existing workspaces (#5970); * This can be done using the new `--genomicsdb-update-workspace-path` argument; * Fixed a crash in `GenomicsDBImport` on queries at positions inside deletions (#5899); * Treat AS_QUALapprox and AS_VarDP strings as array of int vectors (#5933). * **Mitochondrial Calling Pipeline**; * Added NIO support and updated to WDL 1.0 (#6074). * **Spark Tools**; * Removed the beta label from many simple Spark tools (#5991); * Bug fix for reading references from GCS on Spark (#6070); * Eliminated an unnecessary sort step in `HaplotypeCallerSpark` (#5909); * Fixed `BaseRecalibratorSpark` failure on a cluster due to system classloader issue (#5979); * Added a WDL for `ReadsPipelineSpark` (#5904); * Added a command-line argument to toggle using NIO on reading for Spark (#6010); * Added advanced arguments to `MarkDuplicatesSpark` to allow non-queryname sorted inputs when specifying multiple input bams and to treat unsorted inputs as queryGroup-sorted (#5974); * Clarified the behavior of `MarkDuplicatesSpark` when given multiple input bams, and improved the sorting behavior if given a mix of queryname-sorted and query-grouped bams (#5901); * Changed `spark.yarn.executor.memoryOverhead` to `spark.executor.memoryOverhead` as promoted by Spark 2.3 (#6032); * Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:6245,Availability,error,error,6245," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7065,Availability,redundant,redundantly,7065," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7242,Availability,error,error,7242," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7295,Availability,error,error,7295," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7485,Availability,error,errors,7485," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:8224,Availability,down,download,8224,"e support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning about GCS test configuration (#5987); * Added a code of conduct (#6036). * **Documentation**; * `FilterVariantTranches` documentation fix and improvement (#5837); * Updated `FilterMutectCalls` usage examples (#5890); * Added `--max-mnp-distance 0` to usage example in `CreateSomaticPanelOfNormals` docs (#5972); * Updated the `MarkDuplicatesSpark` documentation to no longer contain a misleading usage example (#5938); * Added a clarification to the README to warn users to set their Gradle JVM properly in Intellij after setup (#6066); * Added links to download Java 8 to the README (#6025); * Remove non-ascii chars from javadoc (#5936). * **Dependencies**; * Updated HTSJDK to 2.20.1 (#6083); * Updated Picard to 2.20.5 (#6083); * Updated Disq to 0.3.3 (#6083); * Updated Spark to 2.4.3 (#5990); * Updated Gradle to 5.4.1 (#6007); * Updated GenomicsDB to 1.1.0.1 (#5970)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:11,Deployability,release,release,11,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:80,Deployability,release,releases,80,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:267,Deployability,release,release,267,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:480,Deployability,pipeline,pipeline,480,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:531,Deployability,pipeline,pipeline,531,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:746,Deployability,update,update,746,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:983,Deployability,release,releases,983,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:1062,Deployability,release,release,1062,"stitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; * `GnarlyGenotyper` assumes all diploid genotypes; * Annotations:; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:2484,Deployability,pipeline,pipeline,2484,"er highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; * `GnarlyGenotyper` assumes all diploid genotypes; * Annotations:; * To generate all the annotations necessary for VQSR, input variants to the `GnarlyGenotyper` must include the `QUALapprox` and `VarDP` annotations along with the latest `RAW_MQandDP` annotation.; * If allele-specific annotations are present, they will be used appropriately and a new `AS_AltDP` annotation giving the total depth across samples for each alternate allele will be added.; * A GATK ""Biggest Practices"" pipeline including the `GnarlyGenotyper` is forthcoming pending some fixes improving on the above caveats. * **FuncotateSegments** (beta tool) (#5941); * A companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * The Somatic CNV pipeline can optionally run this tool for functional annotation. * **HaplotypeCaller**/**Mutect2**; * Fixed a regression in `HaplotypeCaller`/`Mutect2` that caused some variants to be lost at sites with high complexity (#5952); * Fixed a GGA (GENOTYPE_GIVEN_ALLELES) mode bug in `HaplotypeCaller`/`Mutect2` where added alleles' cigars could have soft clips (#6047); * This bug would manifest as a ""Cigar cannot be null"" error; * Fixed a bug where cached indel informativeness values could be incorrectly applied to the wrong sites in `HaplotypeCaller`/`Mutect2` (#5911); * Fixed an edge case in `HaplotypeCaller`/`Mutect2` where dangling end merging creates cycles (#5960); * Added hidden arguments to the assembly engine to track found haplotype coun",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:2771,Deployability,pipeline,pipeline,2771,"xample in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; * `GnarlyGenotyper` assumes all diploid genotypes; * Annotations:; * To generate all the annotations necessary for VQSR, input variants to the `GnarlyGenotyper` must include the `QUALapprox` and `VarDP` annotations along with the latest `RAW_MQandDP` annotation.; * If allele-specific annotations are present, they will be used appropriately and a new `AS_AltDP` annotation giving the total depth across samples for each alternate allele will be added.; * A GATK ""Biggest Practices"" pipeline including the `GnarlyGenotyper` is forthcoming pending some fixes improving on the above caveats. * **FuncotateSegments** (beta tool) (#5941); * A companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * The Somatic CNV pipeline can optionally run this tool for functional annotation. * **HaplotypeCaller**/**Mutect2**; * Fixed a regression in `HaplotypeCaller`/`Mutect2` that caused some variants to be lost at sites with high complexity (#5952); * Fixed a GGA (GENOTYPE_GIVEN_ALLELES) mode bug in `HaplotypeCaller`/`Mutect2` where added alleles' cigars could have soft clips (#6047); * This bug would manifest as a ""Cigar cannot be null"" error; * Fixed a bug where cached indel informativeness values could be incorrectly applied to the wrong sites in `HaplotypeCaller`/`Mutect2` (#5911); * Fixed an edge case in `HaplotypeCaller`/`Mutect2` where dangling end merging creates cycles (#5960); * Added hidden arguments to the assembly engine to track found haplotype counts and kmers used (#6049); * Fixed a bug in `CalculateContamination` when contamination is indistinguishable from zero (#5971); * Fixed a bug where normal p value argument in `FilterMutectCalls` was declared static (#5982). * **CNV Tools**; * Added `FuncotateS",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:4148,Deployability,release,releases,4148," be lost at sites with high complexity (#5952); * Fixed a GGA (GENOTYPE_GIVEN_ALLELES) mode bug in `HaplotypeCaller`/`Mutect2` where added alleles' cigars could have soft clips (#6047); * This bug would manifest as a ""Cigar cannot be null"" error; * Fixed a bug where cached indel informativeness values could be incorrectly applied to the wrong sites in `HaplotypeCaller`/`Mutect2` (#5911); * Fixed an edge case in `HaplotypeCaller`/`Mutect2` where dangling end merging creates cycles (#5960); * Added hidden arguments to the assembly engine to track found haplotype counts and kmers used (#6049); * Fixed a bug in `CalculateContamination` when contamination is indistinguishable from zero (#5971); * Fixed a bug where normal p value argument in `FilterMutectCalls` was declared static (#5982). * **CNV Tools**; * Added `FuncotateSegments` as an option to the Somatic CNV WDL (#5967); * Added QC metrics to the Germline CNV workflow (#6017); * Enabled GC-bias correction by default in CNV workflows (#5966); * Added denoised coverage file concatenation output to gCNV postprocessor (#5823) *Note:* The addition of this feature breaks compatibility with gCNV cohort-mode models built with previous releases.; * Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in input filenames. (#5983). * **GenomicsDBImport**; * Added support for making incremental updates to existing workspaces (#5970); * This can be done using the new `--genomicsdb-update-workspace-path` argument; * Fixed a crash in `GenomicsDBImport` on queries at positions inside deletions (#5899); * Treat AS_QUALapprox and AS_VarDP strings as array of int vectors (#5933). * **Mitochondrial Calling Pipeline**; * Added NIO support and updated to WDL 1.0 (#6074). * **Spark Tools**; * Removed the beta label from many simple Spark tools (#5991); * Bug fix for reading references from GCS on Spark (#6070); * Eliminated an unnecessary sort step in `HaplotypeCallerSp",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:4376,Deployability,update,updates,4376," engine to track found haplotype counts and kmers used (#6049); * Fixed a bug in `CalculateContamination` when contamination is indistinguishable from zero (#5971); * Fixed a bug where normal p value argument in `FilterMutectCalls` was declared static (#5982). * **CNV Tools**; * Added `FuncotateSegments` as an option to the Somatic CNV WDL (#5967); * Added QC metrics to the Germline CNV workflow (#6017); * Enabled GC-bias correction by default in CNV workflows (#5966); * Added denoised coverage file concatenation output to gCNV postprocessor (#5823) *Note:* The addition of this feature breaks compatibility with gCNV cohort-mode models built with previous releases.; * Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in input filenames. (#5983). * **GenomicsDBImport**; * Added support for making incremental updates to existing workspaces (#5970); * This can be done using the new `--genomicsdb-update-workspace-path` argument; * Fixed a crash in `GenomicsDBImport` on queries at positions inside deletions (#5899); * Treat AS_QUALapprox and AS_VarDP strings as array of int vectors (#5933). * **Mitochondrial Calling Pipeline**; * Added NIO support and updated to WDL 1.0 (#6074). * **Spark Tools**; * Removed the beta label from many simple Spark tools (#5991); * Bug fix for reading references from GCS on Spark (#6070); * Eliminated an unnecessary sort step in `HaplotypeCallerSpark` (#5909); * Fixed `BaseRecalibratorSpark` failure on a cluster due to system classloader issue (#5979); * Added a WDL for `ReadsPipelineSpark` (#5904); * Added a command-line argument to toggle using NIO on reading for Spark (#6010); * Added advanced arguments to `MarkDuplicatesSpark` to allow non-queryname sorted inputs when specifying multiple input bams and to treat unsorted inputs as queryGroup-sorted (#5974); * Clarified the behavior of `MarkDuplicatesSpark` when given multiple input bams, and improved the sorting behavi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:4463,Deployability,update,update-workspace-path,4463," engine to track found haplotype counts and kmers used (#6049); * Fixed a bug in `CalculateContamination` when contamination is indistinguishable from zero (#5971); * Fixed a bug where normal p value argument in `FilterMutectCalls` was declared static (#5982). * **CNV Tools**; * Added `FuncotateSegments` as an option to the Somatic CNV WDL (#5967); * Added QC metrics to the Germline CNV workflow (#6017); * Enabled GC-bias correction by default in CNV workflows (#5966); * Added denoised coverage file concatenation output to gCNV postprocessor (#5823) *Note:* The addition of this feature breaks compatibility with gCNV cohort-mode models built with previous releases.; * Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in input filenames. (#5983). * **GenomicsDBImport**; * Added support for making incremental updates to existing workspaces (#5970); * This can be done using the new `--genomicsdb-update-workspace-path` argument; * Fixed a crash in `GenomicsDBImport` on queries at positions inside deletions (#5899); * Treat AS_QUALapprox and AS_VarDP strings as array of int vectors (#5933). * **Mitochondrial Calling Pipeline**; * Added NIO support and updated to WDL 1.0 (#6074). * **Spark Tools**; * Removed the beta label from many simple Spark tools (#5991); * Bug fix for reading references from GCS on Spark (#6070); * Eliminated an unnecessary sort step in `HaplotypeCallerSpark` (#5909); * Fixed `BaseRecalibratorSpark` failure on a cluster due to system classloader issue (#5979); * Added a WDL for `ReadsPipelineSpark` (#5904); * Added a command-line argument to toggle using NIO on reading for Spark (#6010); * Added advanced arguments to `MarkDuplicatesSpark` to allow non-queryname sorted inputs when specifying multiple input bams and to treat unsorted inputs as queryGroup-sorted (#5974); * Clarified the behavior of `MarkDuplicatesSpark` when given multiple input bams, and improved the sorting behavi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:4722,Deployability,update,updated,4722,"ilterMutectCalls` was declared static (#5982). * **CNV Tools**; * Added `FuncotateSegments` as an option to the Somatic CNV WDL (#5967); * Added QC metrics to the Germline CNV workflow (#6017); * Enabled GC-bias correction by default in CNV workflows (#5966); * Added denoised coverage file concatenation output to gCNV postprocessor (#5823) *Note:* The addition of this feature breaks compatibility with gCNV cohort-mode models built with previous releases.; * Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in input filenames. (#5983). * **GenomicsDBImport**; * Added support for making incremental updates to existing workspaces (#5970); * This can be done using the new `--genomicsdb-update-workspace-path` argument; * Fixed a crash in `GenomicsDBImport` on queries at positions inside deletions (#5899); * Treat AS_QUALapprox and AS_VarDP strings as array of int vectors (#5933). * **Mitochondrial Calling Pipeline**; * Added NIO support and updated to WDL 1.0 (#6074). * **Spark Tools**; * Removed the beta label from many simple Spark tools (#5991); * Bug fix for reading references from GCS on Spark (#6070); * Eliminated an unnecessary sort step in `HaplotypeCallerSpark` (#5909); * Fixed `BaseRecalibratorSpark` failure on a cluster due to system classloader issue (#5979); * Added a WDL for `ReadsPipelineSpark` (#5904); * Added a command-line argument to toggle using NIO on reading for Spark (#6010); * Added advanced arguments to `MarkDuplicatesSpark` to allow non-queryname sorted inputs when specifying multiple input bams and to treat unsorted inputs as queryGroup-sorted (#5974); * Clarified the behavior of `MarkDuplicatesSpark` when given multiple input bams, and improved the sorting behavior if given a mix of queryname-sorted and query-grouped bams (#5901); * Changed `spark.yarn.executor.memoryOverhead` to `spark.executor.memoryOverhead` as promoted by Spark 2.3 (#6032); * Handle newly-added argume",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:5142,Deployability,toggle,toggle,5142,"Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in input filenames. (#5983). * **GenomicsDBImport**; * Added support for making incremental updates to existing workspaces (#5970); * This can be done using the new `--genomicsdb-update-workspace-path` argument; * Fixed a crash in `GenomicsDBImport` on queries at positions inside deletions (#5899); * Treat AS_QUALapprox and AS_VarDP strings as array of int vectors (#5933). * **Mitochondrial Calling Pipeline**; * Added NIO support and updated to WDL 1.0 (#6074). * **Spark Tools**; * Removed the beta label from many simple Spark tools (#5991); * Bug fix for reading references from GCS on Spark (#6070); * Eliminated an unnecessary sort step in `HaplotypeCallerSpark` (#5909); * Fixed `BaseRecalibratorSpark` failure on a cluster due to system classloader issue (#5979); * Added a WDL for `ReadsPipelineSpark` (#5904); * Added a command-line argument to toggle using NIO on reading for Spark (#6010); * Added advanced arguments to `MarkDuplicatesSpark` to allow non-queryname sorted inputs when specifying multiple input bams and to treat unsorted inputs as queryGroup-sorted (#5974); * Clarified the behavior of `MarkDuplicatesSpark` when given multiple input bams, and improved the sorting behavior if given a mix of queryname-sorted and query-grouped bams (#5901); * Changed `spark.yarn.executor.memoryOverhead` to `spark.executor.memoryOverhead` as promoted by Spark 2.3 (#6032); * Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7571,Deployability,install,installed,7571," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7685,Deployability,configurat,configuration,7685,"e support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning about GCS test configuration (#5987); * Added a code of conduct (#6036). * **Documentation**; * `FilterVariantTranches` documentation fix and improvement (#5837); * Updated `FilterMutectCalls` usage examples (#5890); * Added `--max-mnp-distance 0` to usage example in `CreateSomaticPanelOfNormals` docs (#5972); * Updated the `MarkDuplicatesSpark` documentation to no longer contain a misleading usage example (#5938); * Added a clarification to the README to warn users to set their Gradle JVM properly in Intellij after setup (#6066); * Added links to download Java 8 to the README (#6025); * Remove non-ascii chars from javadoc (#5936). * **Dependencies**; * Updated HTSJDK to 2.20.1 (#6083); * Updated Picard to 2.20.5 (#6083); * Updated Disq to 0.3.3 (#6083); * Updated Spark to 2.4.3 (#5990); * Updated Gradle to 5.4.1 (#6007); * Updated GenomicsDB to 1.1.0.1 (#5970)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7248,Integrability,message,message,7248," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7685,Modifiability,config,configuration,7685,"e support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning about GCS test configuration (#5987); * Added a code of conduct (#6036). * **Documentation**; * `FilterVariantTranches` documentation fix and improvement (#5837); * Updated `FilterMutectCalls` usage examples (#5890); * Added `--max-mnp-distance 0` to usage example in `CreateSomaticPanelOfNormals` docs (#5972); * Updated the `MarkDuplicatesSpark` documentation to no longer contain a misleading usage example (#5938); * Added a clarification to the README to warn users to set their Gradle JVM properly in Intellij after setup (#6066); * Added links to download Java 8 to the README (#6025); * Remove non-ascii chars from javadoc (#5936). * **Dependencies**; * Updated HTSJDK to 2.20.1 (#6083); * Updated Picard to 2.20.5 (#6083); * Updated Disq to 0.3.3 (#6083); * Updated Spark to 2.4.3 (#5990); * Updated Gradle to 5.4.1 (#6007); * Updated GenomicsDB to 1.1.0.1 (#5970)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:439,Performance,scalab,scalable,439,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:611,Performance,perform,performs,611,"**Download release:** [gatk-4.1.3.0.zip](https://github.com/broadinstitute/gatk/releases/download/4.1.3.0/gatk-4.1.3.0.zip); **Docker image:** [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). **Highlights of the 4.1.3.0 release:**; --------------------------------------. * `GnarlyGenotyper`, a new beta joint genotyping tool which, along with `ReblockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:1334,Performance,perform,perform,1334,"lockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; * `GnarlyGenotyper` assumes all diploid genotypes; * Annotations:; * To generate all the annotations necessary for VQSR, input variants to the `GnarlyGenotyper` must include the `QUALapprox` and `VarDP` annotations along with the latest `RAW_MQandDP` annotation.; * If allele-specific annotations are present, they will be used appropriately and a new `AS_AltDP` annotation giving the total dep",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:1531,Performance,scalab,scalable,1531,"lockGVCF`, forms part of a forthcoming more scalable version of our joint genotyping pipeline that we call the ""GATK Biggest Practices"" pipeline; * `FuncotateSegments`, a new beta companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * `GenomicsDBImport` now has the ability to incrementally update an existing GenomicsDB workspace; * Several important bug fixes to `HaplotypeCaller` and `Mutect2`. **Compatibility notes:**; --------------------------------------; * `GermlineCNVCaller` models built in cohort mode with previous releases are no longer compatible. Users should rebuild these models with this release before running `GermlineCNVCaller` in case mode. See the **CNV Tools** section below for more details. **Full list of changes:**; -------------------------. * **New Tools**. * **GnarlyGenotyper** (beta tool) (#4947) (#6075); * The `GnarlyGenotyper` is designed to perform joint genotyping on cohorts of at least tens of thousands of samples called with `HaplotypeCaller` and post-processed with `ReblockGVCF` to produce a multi-sample callset in a super highly scalable manner.; * Caveats:; * `GnarlyGenotyper` is intended to be used with GVCFs for which low quality variants have already been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; * `GnarlyGenotyper` assumes all diploid genotypes; * Annotations:; * To generate all the annotations necessary for VQSR, input variants to the `GnarlyGenotyper` must include the `QUALapprox` and `VarDP` annotations along with the latest `RAW_MQandDP` annotation.; * If allele-specific annotations are present, they will be used appropriately and a new `AS_AltDP` annotation giving the total dep",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:2676,Performance,perform,performs,2676,"been removed, derived from post-processing `HaplotypeCaller` GVCFs with `ReblockGVCF`. See the ""Biggest Practices"" usage example in the `ReblockGVCF` docs for details.; * `GnarlyGenotyper` does not subset alternate alleles and can return some highly multi-allelic sites. PLs will not be output for sites with more than 6 alts to save space.; * `GnarlyGenotyper` assumes all diploid genotypes; * Annotations:; * To generate all the annotations necessary for VQSR, input variants to the `GnarlyGenotyper` must include the `QUALapprox` and `VarDP` annotations along with the latest `RAW_MQandDP` annotation.; * If allele-specific annotations are present, they will be used appropriately and a new `AS_AltDP` annotation giving the total depth across samples for each alternate allele will be added.; * A GATK ""Biggest Practices"" pipeline including the `GnarlyGenotyper` is forthcoming pending some fixes improving on the above caveats. * **FuncotateSegments** (beta tool) (#5941); * A companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * The Somatic CNV pipeline can optionally run this tool for functional annotation. * **HaplotypeCaller**/**Mutect2**; * Fixed a regression in `HaplotypeCaller`/`Mutect2` that caused some variants to be lost at sites with high complexity (#5952); * Fixed a GGA (GENOTYPE_GIVEN_ALLELES) mode bug in `HaplotypeCaller`/`Mutect2` where added alleles' cigars could have soft clips (#6047); * This bug would manifest as a ""Cigar cannot be null"" error; * Fixed a bug where cached indel informativeness values could be incorrectly applied to the wrong sites in `HaplotypeCaller`/`Mutect2` (#5911); * Fixed an edge case in `HaplotypeCaller`/`Mutect2` where dangling end merging creates cycles (#5960); * Added hidden arguments to the assembly engine to track found haplotype counts and kmers used (#6049); * Fixed a bug in `CalculateContamination` when contamination is indistinguishable from zero (#5971); * Fixed a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:3218,Performance,cache,cached,3218,"tations are present, they will be used appropriately and a new `AS_AltDP` annotation giving the total depth across samples for each alternate allele will be added.; * A GATK ""Biggest Practices"" pipeline including the `GnarlyGenotyper` is forthcoming pending some fixes improving on the above caveats. * **FuncotateSegments** (beta tool) (#5941); * A companion tool to `Funcotator` that performs functional annotation on a segment file (`.seg`) rather than a VCF; * The Somatic CNV pipeline can optionally run this tool for functional annotation. * **HaplotypeCaller**/**Mutect2**; * Fixed a regression in `HaplotypeCaller`/`Mutect2` that caused some variants to be lost at sites with high complexity (#5952); * Fixed a GGA (GENOTYPE_GIVEN_ALLELES) mode bug in `HaplotypeCaller`/`Mutect2` where added alleles' cigars could have soft clips (#6047); * This bug would manifest as a ""Cigar cannot be null"" error; * Fixed a bug where cached indel informativeness values could be incorrectly applied to the wrong sites in `HaplotypeCaller`/`Mutect2` (#5911); * Fixed an edge case in `HaplotypeCaller`/`Mutect2` where dangling end merging creates cycles (#5960); * Added hidden arguments to the assembly engine to track found haplotype counts and kmers used (#6049); * Fixed a bug in `CalculateContamination` when contamination is indistinguishable from zero (#5971); * Fixed a bug where normal p value argument in `FilterMutectCalls` was declared static (#5982). * **CNV Tools**; * Added `FuncotateSegments` as an option to the Somatic CNV WDL (#5967); * Added QC metrics to the Germline CNV workflow (#6017); * Enabled GC-bias correction by default in CNV workflows (#5966); * Added denoised coverage file concatenation output to gCNV postprocessor (#5823) *Note:* The addition of this feature breaks compatibility with gCNV cohort-mode models built with previous releases.; * Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in inp",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7065,Safety,redund,redundantly,7065," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:6112,Security,validat,validation,6112," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:6724,Security,access,accessible,6724," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7532,Testability,test,test,7532," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:7680,Testability,test,test,7680,"e support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning about GCS test configuration (#5987); * Added a code of conduct (#6036). * **Documentation**; * `FilterVariantTranches` documentation fix and improvement (#5837); * Updated `FilterMutectCalls` usage examples (#5890); * Added `--max-mnp-distance 0` to usage example in `CreateSomaticPanelOfNormals` docs (#5972); * Updated the `MarkDuplicatesSpark` documentation to no longer contain a misleading usage example (#5938); * Added a clarification to the README to warn users to set their Gradle JVM properly in Intellij after setup (#6066); * Added links to download Java 8 to the README (#6025); * Remove non-ascii chars from javadoc (#5936). * **Dependencies**; * Updated HTSJDK to 2.20.1 (#6083); * Updated Picard to 2.20.5 (#6083); * Updated Disq to 0.3.3 (#6083); * Updated Spark to 2.4.3 (#5990); * Updated Gradle to 5.4.1 (#6007); * Updated GenomicsDB to 1.1.0.1 (#5970)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:4804,Usability,simpl,simple,4804,"Changed cr.igv.seg output of ModelSegments to give log2 Segment_Mean. (#5976); * Fixed CNV plotting script to allow spaces in input filenames. (#5983). * **GenomicsDBImport**; * Added support for making incremental updates to existing workspaces (#5970); * This can be done using the new `--genomicsdb-update-workspace-path` argument; * Fixed a crash in `GenomicsDBImport` on queries at positions inside deletions (#5899); * Treat AS_QUALapprox and AS_VarDP strings as array of int vectors (#5933). * **Mitochondrial Calling Pipeline**; * Added NIO support and updated to WDL 1.0 (#6074). * **Spark Tools**; * Removed the beta label from many simple Spark tools (#5991); * Bug fix for reading references from GCS on Spark (#6070); * Eliminated an unnecessary sort step in `HaplotypeCallerSpark` (#5909); * Fixed `BaseRecalibratorSpark` failure on a cluster due to system classloader issue (#5979); * Added a WDL for `ReadsPipelineSpark` (#5904); * Added a command-line argument to toggle using NIO on reading for Spark (#6010); * Added advanced arguments to `MarkDuplicatesSpark` to allow non-queryname sorted inputs when specifying multiple input bams and to treat unsorted inputs as queryGroup-sorted (#5974); * Clarified the behavior of `MarkDuplicatesSpark` when given multiple input bams, and improved the sorting behavior if given a mix of queryname-sorted and query-grouped bams (#5901); * Changed `spark.yarn.executor.memoryOverhead` to `spark.executor.memoryOverhead` as promoted by Spark 2.3 (#6032); * Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0:6502,Usability,simpl,simple,6502," Handle newly-added arguments in `ApplyBQSRUniqueArgumentCollection` (#5949). * **Miscellaneous Changes**; * Added a new `BaseQualityHistogram` variant annotation to generate base quality histograms (#5986); * Added a new `SoftClippedReadFilter` that can filter out reads where the ratio of soft-clipped bases to total bases exceeds some given value (#5995); * Fixed a serious bug in `ValidateVariants` where the tool would silently do no validation in the default case when a DBSNP file was not provided (#5984); * Fixed a ""Record covers a position previously traversed"" error in `ValidateVariants` for GVCFS with multiple contigs (#6028); * The `RMSMappingQuality` annotation now requires the `--allow-old-rms-mapping-quality-annotation-data` argument to run with GVCFs created by older versions of the GATK (#6060); * Added a simple TSV/CSV/XSV writer with cloud write support as an alternative to TableWriter (#5930); * `Funcotator`: added Funcotator stand-alone WDL to supported area (#5999); * Extracted the `GenotypeGVCFs` engine into publicly accessible class/function (#6004); * Refactored `VariantEval` methods to allow subclasses to override (#5998); * `AnalyzeSaturationMutagenesis`: arbitrarily choose 1 read for disjoint pairs, dump rejected reads, and various other improvements (#5926) (#6043); * Normalized some AssemblyRegion args in `HaplotypeCallerSpark` (#5977); * Don't redundantly delete temporary directories in `RSCriptExecutor` (#5894); * Treat all source files as UTF-8 for java, javadoc (#5946); * Updated an out-of-date argument name in an error message for the `CycleCovariate`; * Changed an error about ""duplicate feature inputs"" to be a UserException (#5951); * Got rid of `ExpandingArrayList` in favor of `ArrayList` (#6069); * Disabled Codecov for now on travis due to spurious errors (#6052); * Lowered the Xms value in the test JVM (#6087); * Updated the travis installed R version to 3.2.5, matching our base docker image (#6073); * Fixed an erroneous warning abo",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.3.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:1675,Availability,error,error,1675,"://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:2151,Availability,error,error,2151,"5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:3416,Availability,error,error,3416,"rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:3446,Availability,error,error,3446,"rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4120,Availability,recover,recover,4120," 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:7526,Availability,error,error,7526,"orum posts (#5630); * Updated `Funcotator` documentation with a FAQ section to respond to user comments (#5755). * **CNV Tools**; * Improved memory usage in gCNV (#5781); * Improved memory requirements of `CollectReadCounts` (#5715); * Added some fixes for minor CNV issues (#5699); * Added io_commons.read_csv to address issues with formatting of sample names in gCNV (#5811); * Added gCNV PROBPROG 2018 extended abstract, archived notes on CNV methods, and deleted some legacy documentation (#5732). * **Miscellaneous Changes**; * `SelectVariants` can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * `VariantEval` bug fix: don't require the output file to already exist (#5681); * Fixed the `--pedigree` argument in the `PossibleDeNovo` annotation (#5663); * `GenomicsDBImport`: fixed a core dump when querying overlapping deletions (#5799); * `GatherPileupSummaries`: a new tool that combines the output of `GetPileupSummaries` from disjoint scatter jobs (#5599); * `VariantsToTable`: add splitting for allele-specific annotations and ADs (#5697); * `CalculateGenotypePosteriors`: fix reported bug where no-call genotypes with no reads get genotype posterior probabilities and calls (#5667); * Added a new argument to Spark tools enabling the user to control whether to sort the reads on output (#4874); * `ReadsPipelineSpark`: fixed an ""Interval not within the bounds of a contig"" error (#5645); * `Concordance`: fixed the tool to allow for no variation alleles in the truth data. (#5718); * `ReblockGVCF`: fix sites with zero AD to actually use SITE-level DP value as intended in (#5835); * Change `UpdateVCFSequenceDictionary` to use the specified dictionary uniformly (#5093); * Fixed gatk-nightly Docker builds (https://hub.docker.com/r/broadinstitute/gatk-nightly/) (#5759); * Print the Picard/HTSJDK versions in addition to the GATK version when running with `--version` (#5757); * `IndexFeatureFile`: fixed a crash on VCFs with 0 records (#5795); * `PrintBGZFBlockInformatio",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:28,Deployability,release,release,28,"**Highlights of the 4.1.1.0 release:**; -------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:171,Deployability,update,updates,171,"**Highlights of the 4.1.1.0 release:**; -------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:299,Deployability,update,update,299,"**Highlights of the 4.1.1.0 release:**; -------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:406,Deployability,update,updates,406,"**Highlights of the 4.1.1.0 release:**; -------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:443,Deployability,pipeline,pipeline,443,"**Highlights of the 4.1.1.0 release:**; -------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:490,Deployability,pipeline,pipeline,490,"**Highlights of the 4.1.1.0 release:**; -------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:2775,Deployability,update,updates,2775,"rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4027,Deployability,update,updates,4027," PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Add",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4272,Deployability,pipeline,pipeline,4272," 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4400,Deployability,pipeline,pipeline,4400," 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4733,Deployability,pipeline,pipeline,4733,"of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when alleles are dropped; * Fixes ""F1R2 and F2R2 annotations not updated by GenotypeGvcfs"" (https://github.com/broadinstitute/gatk/issues/5704). * **Funcotator**; * Non-locatable data sources can create funcotations again (#5774); * Fixes a bug where `Funcotator` was not adding funcotations from non-locatable data sources; * Fixed handling of symbollic alleles when determining best transcript for `GencodeFuncotation` creation. (#5834); * `FilterFuncotations`: support for multi-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:5387,Deployability,update,updated,5387,"ed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when alleles are dropped; * Fixes ""F1R2 and F2R2 annotations not updated by GenotypeGvcfs"" (https://github.com/broadinstitute/gatk/issues/5704). * **Funcotator**; * Non-locatable data sources can create funcotations again (#5774); * Fixes a bug where `Funcotator` was not adding funcotations from non-locatable data sources; * Fixed handling of symbollic alleles when determining best transcript for `GencodeFuncotation` creation. (#5834); * `FilterFuncotations`: support for multi-allelic variants (#5588); * `FilterFuncotations`: support for gnomAD for allele frequency in `ClinVarFilter` and `LofFilter`, with a new argument telling it which dataset of gnomAD or ExAC to use (#5691); * Added `#` as a character to be sanitized by `VCFOutputRenderer` (#5817); * Added in Markdown files for Funcotator forum posts (#5630); * Updated `Funcotator` documentation with a FAQ section to respond to user",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:9155,Deployability,update,updates,9155,"e `UpdateVCFSequenceDictionary` to use the specified dictionary uniformly (#5093); * Fixed gatk-nightly Docker builds (https://hub.docker.com/r/broadinstitute/gatk-nightly/) (#5759); * Print the Picard/HTSJDK versions in addition to the GATK version when running with `--version` (#5757); * `IndexFeatureFile`: fixed a crash on VCFs with 0 records (#5795); * `PrintBGZFBlockInformation`: removed the file extension check so that we can accept bams (#5801); * Added a new read filter: `IntervalOverlapReadFilter` (#5656); * Add NIO Path support to `TableReader` and `TableWriter` (#5785); * Replaced `IntervalsSkipList` with `OverlapDetector` (#4154); * Removed some unused arguments in VCF merging code (#5745); * Kebab-case some arguments in `LocusWalker` and `LocusWalkerSpark` (#5770); * Removed an unnecessary IllegalArgumentException in `PairHMM` (#5705); * Removed accidental uses of log4j v1 (#5682); * Improvements to Spark evaluation scripts (#5815); * Extract tests from `PrintReadsIntegrationTest` to share with the Spark version. (#5689). * **Documentation**; * Improved the documentation for the `StrandOddsRatio` annotation (#5703); * Fixed the descriptions of some `HaplotypeCaller` arguments (#5658); * Update `VariantRecalibrator` example code to reflect new tagged argument syntax (#5710); * Corrected javadoc for the `InbreedingCoeff` annotation (#5768); * `CalculateGenotypePosteriors`: minor updates to javadoc and logger type (#5601); * Added and Updated javadoc for `SortSamSpark` and `MarkDuplicatesSpark` (#5672); * Added a link to a ""GitHub basics for researchers"" article at top of the GATK README (#5643); * Updated the main GATK README to remove outdated references to the Intel conda environment (#5753); * Trimmed overly-long tool one-line summaries to shorten --list display width. (#5551). * **Dependencies**; * Updated `HTSJDK` to 2.19.0 (#5812); * Updated `Picard` to 2.19.0 (#5812); * Updated `Disq` to 0.3.0 (#5812); * Updated `google-cloud-nio` to 0.81.0 (#5752)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:2729,Energy Efficiency,reduce,reduces,2729,"rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4235,Energy Efficiency,adapt,adaptive,4235," 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:1935,Modifiability,rewrite,rewrite,1935,"mized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to th",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:2896,Modifiability,inherit,inheritance,2896,"rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4235,Modifiability,adapt,adaptive,4235," 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4508,Modifiability,polymorphi,polymorphic,4508," 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4946,Modifiability,variab,variable,4946,"of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when alleles are dropped; * Fixes ""F1R2 and F2R2 annotations not updated by GenotypeGvcfs"" (https://github.com/broadinstitute/gatk/issues/5704). * **Funcotator**; * Non-locatable data sources can create funcotations again (#5774); * Fixes a bug where `Funcotator` was not adding funcotations from non-locatable data sources; * Fixed handling of symbollic alleles when determining best transcript for `GencodeFuncotation` creation. (#5834); * `FilterFuncotations`: support for multi-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:6531,Modifiability,extend,extended,6531,"ncotations again (#5774); * Fixes a bug where `Funcotator` was not adding funcotations from non-locatable data sources; * Fixed handling of symbollic alleles when determining best transcript for `GencodeFuncotation` creation. (#5834); * `FilterFuncotations`: support for multi-allelic variants (#5588); * `FilterFuncotations`: support for gnomAD for allele frequency in `ClinVarFilter` and `LofFilter`, with a new argument telling it which dataset of gnomAD or ExAC to use (#5691); * Added `#` as a character to be sanitized by `VCFOutputRenderer` (#5817); * Added in Markdown files for Funcotator forum posts (#5630); * Updated `Funcotator` documentation with a FAQ section to respond to user comments (#5755). * **CNV Tools**; * Improved memory usage in gCNV (#5781); * Improved memory requirements of `CollectReadCounts` (#5715); * Added some fixes for minor CNV issues (#5699); * Added io_commons.read_csv to address issues with formatting of sample names in gCNV (#5811); * Added gCNV PROBPROG 2018 extended abstract, archived notes on CNV methods, and deleted some legacy documentation (#5732). * **Miscellaneous Changes**; * `SelectVariants` can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * `VariantEval` bug fix: don't require the output file to already exist (#5681); * Fixed the `--pedigree` argument in the `PossibleDeNovo` annotation (#5663); * `GenomicsDBImport`: fixed a core dump when querying overlapping deletions (#5799); * `GatherPileupSummaries`: a new tool that combines the output of `GetPileupSummaries` from disjoint scatter jobs (#5599); * `VariantsToTable`: add splitting for allele-specific annotations and ADs (#5697); * `CalculateGenotypePosteriors`: fix reported bug where no-call genotypes with no reads get genotype posterior probabilities and calls (#5667); * Added a new argument to Spark tools enabling the user to control whether to sort the reads on output (#4874); * `ReadsPipelineSpark`: fixed an ""Interval not within the bounds of a contig"" er",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:804,Performance,perform,performance,804,"-------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addit",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:1008,Performance,perform,performance,1008,"-------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addit",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:1398,Performance,perform,performance,1398," memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scal",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:2461,Performance,scalab,scalability,2461,"rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:3684,Performance,optimiz,optimized,3684,"une assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a rea",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:5096,Performance,perform,performance,5096,"ed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when alleles are dropped; * Fixes ""F1R2 and F2R2 annotations not updated by GenotypeGvcfs"" (https://github.com/broadinstitute/gatk/issues/5704). * **Funcotator**; * Non-locatable data sources can create funcotations again (#5774); * Fixes a bug where `Funcotator` was not adding funcotations from non-locatable data sources; * Fixed handling of symbollic alleles when determining best transcript for `GencodeFuncotation` creation. (#5834); * `FilterFuncotations`: support for multi-allelic variants (#5588); * `FilterFuncotations`: support for gnomAD for allele frequency in `ClinVarFilter` and `LofFilter`, with a new argument telling it which dataset of gnomAD or ExAC to use (#5691); * Added `#` as a character to be sanitized by `VCFOutputRenderer` (#5817); * Added in Markdown files for Funcotator forum posts (#5630); * Updated `Funcotator` documentation with a FAQ section to respond to user",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4120,Safety,recover,recover,4120," 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:4906,Security,validat,validations,4906,"of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a read filter for unmapped reads and their mates (#5826); * Refactored the MT WDL to make validations easier (#5708); * Updated a variable name in MT WDL to match gatk-workflows version (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when alleles are dropped; * Fixes ""F1R2 and F2R2 annotations not updated by GenotypeGvcfs"" (https://github.com/broadinstitute/gatk/issues/5704). * **Funcotator**; * Non-locatable data sources can create funcotations again (#5774); * Fixes a bug where `Funcotator` was not adding funcotations from non-locatable data sources; * Fixed handling of symbollic alleles when determining best transcript for `GencodeFuncotation` creation. (#5834); * `FilterFuncotations`: support for multi-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:6042,Security,sanitiz,sanitized,6042,"ersion (#5694). * **GenotypeGVCFs**; * Added an option to merge intervals for better `GenotypeGVCFs` performance on `GenomicsDB` exome input (#5741); * Trim per-allele FORMAT annotations and optionally retain raw AS annotations (#5833); * `GenotypeGVCFs` now uses the header info to determine if FORMAT lists need to be subset when alleles are dropped; * Fixes ""F1R2 and F2R2 annotations not updated by GenotypeGvcfs"" (https://github.com/broadinstitute/gatk/issues/5704). * **Funcotator**; * Non-locatable data sources can create funcotations again (#5774); * Fixes a bug where `Funcotator` was not adding funcotations from non-locatable data sources; * Fixed handling of symbollic alleles when determining best transcript for `GencodeFuncotation` creation. (#5834); * `FilterFuncotations`: support for multi-allelic variants (#5588); * `FilterFuncotations`: support for gnomAD for allele frequency in `ClinVarFilter` and `LofFilter`, with a new argument telling it which dataset of gnomAD or ExAC to use (#5691); * Added `#` as a character to be sanitized by `VCFOutputRenderer` (#5817); * Added in Markdown files for Funcotator forum posts (#5630); * Updated `Funcotator` documentation with a FAQ section to respond to user comments (#5755). * **CNV Tools**; * Improved memory usage in gCNV (#5781); * Improved memory requirements of `CollectReadCounts` (#5715); * Added some fixes for minor CNV issues (#5699); * Added io_commons.read_csv to address issues with formatting of sample names in gCNV (#5811); * Added gCNV PROBPROG 2018 extended abstract, archived notes on CNV methods, and deleted some legacy documentation (#5732). * **Miscellaneous Changes**; * `SelectVariants` can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * `VariantEval` bug fix: don't require the output file to already exist (#5681); * Fixed the `--pedigree` argument in the `PossibleDeNovo` annotation (#5663); * `GenomicsDBImport`: fixed a core dump when querying overlapping deletions (#5799); * `GatherP",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:972,Testability,test,tests,972,"-------------------------------------; * A substantial (~33%) speedup to the `HaplotypeCaller` in GVCF mode (`-ERC GVCF`); * Major updates to `Mutect2`, including completely overhauled filtering and smarter handling of overlapping read pairs.; * A tensorflow update for `CNNScoreVariants` that speeds up the tool by roughly ~2X when using the 2D model.; * Important updates to the mitochondrial calling pipeline, and improved memory usage in the CNV pipeline.; * Important bug fixes to `Funcotator`, `VariantEval`, `GenomicsDBImport`, and other tools, as well as to the `--pedigree` argument for annotations. **Docker image:** https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes:; -------------------. * **HaplotypeCaller**; * Greatly improved the performance of the ReferenceConfidenceModel using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addit",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:3105,Testability,log,log,3105,"rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:3763,Testability,test,tests,3763,"une assemby graph before checking for cycles (#5562); * Refactor `Mutect2` inheritance so that it doesn't have inactive arguments (#5758); * Added CRAM support to the `Mutect2` WDL (#5668); * Split MNPs in `Mutect2` PON WDL, fixing a potential bug (#5706); * Handle negative infinity log likelihoods from PairHMM in `Mutect2` (#5736); * Fixed overfiltering in `Mutect2` in GGA alleles mode with no reads (#5743); * Correct some `Mutect2` VCF header lines (#5792); * Handle unmarked duplicates with mate MQ = 0 in `Mutect2` (#5734); * Output sample names in `Mutect2` PON header (#5733); * Avoid error due to finite precision error in `Mutect2` PON creation (#5797); * Update `Mutect2` javadoc to reflect v4.1 changes. (#5769); * Renamed the `OxoGReadCounts` annotation to `OrientationBiasReadCounts` (#5840). * **CNNScoreVariants**; * We now use the latest Intel-optimized tensorflow (#5725); * This speeds up the 2D CNN by roughly 2X in our tests!; * `FilterVariantTranches` is out of beta (#5628); * Fixed `CNNScoreVariants` hanging when the conda environment is not set up (#5819); * We now make sure that the GATK tool Python package is present before executing streaming Python commands.; * Extensive updates to the CNN WDLs (#5251) . * **Mitochondrial Calling Pipeline**; * Added an option to recover all dangling branches, on by default for MT calling (#5693); * Fixes a large number of missed calls; * Use adaptive pruning in the mitochondria pipeline (#5669); * Changed defaults in mitochondria mode in response to `Mutect2` filtering overhaul (#5827); * Allowed the MT pipeline to work on bams with a mix of single and paired-end reads (#5818); * Added a hard filter to M2 for polymorphic NuMTs and low VAF sites (#5842); * Updated the `haplochecker` version to `0.1.2` to fix a bug with flipping the major and minor hg headers in its output (#5760); * Added the rest of the mitochondria joint-calling pipeline (#5673); * Merging and genotyping ""somatic"" GVCFs from `Mutect2`; * Added a rea",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:8712,Testability,test,tests,8712,"67); * Added a new argument to Spark tools enabling the user to control whether to sort the reads on output (#4874); * `ReadsPipelineSpark`: fixed an ""Interval not within the bounds of a contig"" error (#5645); * `Concordance`: fixed the tool to allow for no variation alleles in the truth data. (#5718); * `ReblockGVCF`: fix sites with zero AD to actually use SITE-level DP value as intended in (#5835); * Change `UpdateVCFSequenceDictionary` to use the specified dictionary uniformly (#5093); * Fixed gatk-nightly Docker builds (https://hub.docker.com/r/broadinstitute/gatk-nightly/) (#5759); * Print the Picard/HTSJDK versions in addition to the GATK version when running with `--version` (#5757); * `IndexFeatureFile`: fixed a crash on VCFs with 0 records (#5795); * `PrintBGZFBlockInformation`: removed the file extension check so that we can accept bams (#5801); * Added a new read filter: `IntervalOverlapReadFilter` (#5656); * Add NIO Path support to `TableReader` and `TableWriter` (#5785); * Replaced `IntervalsSkipList` with `OverlapDetector` (#4154); * Removed some unused arguments in VCF merging code (#5745); * Kebab-case some arguments in `LocusWalker` and `LocusWalkerSpark` (#5770); * Removed an unnecessary IllegalArgumentException in `PairHMM` (#5705); * Removed accidental uses of log4j v1 (#5682); * Improvements to Spark evaluation scripts (#5815); * Extract tests from `PrintReadsIntegrationTest` to share with the Spark version. (#5689). * **Documentation**; * Improved the documentation for the `StrandOddsRatio` annotation (#5703); * Fixed the descriptions of some `HaplotypeCaller` arguments (#5658); * Update `VariantRecalibrator` example code to reflect new tagged argument syntax (#5710); * Corrected javadoc for the `InbreedingCoeff` annotation (#5768); * `CalculateGenotypePosteriors`: minor updates to javadoc and logger type (#5601); * Added and Updated javadoc for `SortSamSpark` and `MarkDuplicatesSpark` (#5672); * Added a link to a ""GitHub basics for researchers""",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:9178,Testability,log,logger,9178,"e `UpdateVCFSequenceDictionary` to use the specified dictionary uniformly (#5093); * Fixed gatk-nightly Docker builds (https://hub.docker.com/r/broadinstitute/gatk-nightly/) (#5759); * Print the Picard/HTSJDK versions in addition to the GATK version when running with `--version` (#5757); * `IndexFeatureFile`: fixed a crash on VCFs with 0 records (#5795); * `PrintBGZFBlockInformation`: removed the file extension check so that we can accept bams (#5801); * Added a new read filter: `IntervalOverlapReadFilter` (#5656); * Add NIO Path support to `TableReader` and `TableWriter` (#5785); * Replaced `IntervalsSkipList` with `OverlapDetector` (#4154); * Removed some unused arguments in VCF merging code (#5745); * Kebab-case some arguments in `LocusWalker` and `LocusWalkerSpark` (#5770); * Removed an unnecessary IllegalArgumentException in `PairHMM` (#5705); * Removed accidental uses of log4j v1 (#5682); * Improvements to Spark evaluation scripts (#5815); * Extract tests from `PrintReadsIntegrationTest` to share with the Spark version. (#5689). * **Documentation**; * Improved the documentation for the `StrandOddsRatio` annotation (#5703); * Fixed the descriptions of some `HaplotypeCaller` arguments (#5658); * Update `VariantRecalibrator` example code to reflect new tagged argument syntax (#5710); * Corrected javadoc for the `InbreedingCoeff` annotation (#5768); * `CalculateGenotypePosteriors`: minor updates to javadoc and logger type (#5601); * Added and Updated javadoc for `SortSamSpark` and `MarkDuplicatesSpark` (#5672); * Added a link to a ""GitHub basics for researchers"" article at top of the GATK README (#5643); * Updated the main GATK README to remove outdated references to the Intel conda environment (#5753); * Trimmed overly-long tool one-line summaries to shorten --list display width. (#5551). * **Dependencies**; * Updated `HTSJDK` to 2.19.0 (#5812); * Updated `Picard` to 2.19.0 (#5812); * Updated `Disq` to 0.3.0 (#5812); * Updated `google-cloud-nio` to 0.81.0 (#5752)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0:1810,Usability,learn,learns,1810,"l using dynamic programming and caching (#5607); * This speeds up whole-genome GVCF mode calling (`-ERC GVCF`) by ~33% in our tests!; * Optimized some additional performance hotspots in the ReferenceConfidenceModel (#5616) (#5469) (#5652); * Can now write VCF outputs to Google Cloud Storage (GCS) (#5378); * Don't output variants with no ALT allele if the * (spanning deletion) allele gets dropped (#5844); * Added a `--force-active` argument that marks all regions as active. Useful for debugging/diagnostics. (#5635); * `HaplotypeCallerSpark`: made performance improvements to allow the tool to run on WGS in strict mode (#5721); * Fixed rare infinite recursion bug in `KBestHaplotypeFinder` (also affects `Mutect2`)(#5786). * **Mutect2**; * Overhaul of `FilterMutectCalls`, which now applies a single threshold to an overall error probability (#5688) ; * `FilterMutectCalls` automatically determines the optimal threshold. ; * The new somatic clustering model learns tumors' allele fraction spectra and overall SNV and indel mutation rates in order to improve filtering.; * Includes a rewrite of `Mutect2` documentation -- better organization and now includes command line examples in addition to math.; * `Mutect2` now modifies base and indel qualities of overlapping paired reads to account for PCR error rather than discarding reads (#5794) ; * This especially improves indel sensitivity.; * Optimized `Mutect2` read orientation filtering by collecting F1R2 counts from within Mutect2 itself, greatly reducing wall-clock and CPU time (#5840); * New `Mutect2` panel of normals workflow using `GenomicsDB` for scalability (#5675) ; * Panel of normals removes germline variants in order to contain only technical artifacts, and contains information about artifact prevalence ; * Rewrote `Mutect2` active region likelihood as special case of full somatic likelihoods model, which reduces runtime by 5% (#5814); * `Funcotator` updates in `Mutect2` WDL (#5742) (#5735); * Prune assemby graph before ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.1.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:2715,Availability,error,error,2715,"w genotypes and outputs spanning deletions; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Important fix to the reference confidence calculation upstream of indels; * New `HaplotypeCaller` priors for variants sites and homRef blocks; * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--num-reference-samples-if-no-call` argument to control whether to infer (and with what effective strength) that only reference alleles were observed at sites not seen in any panel. * **Major Mutect2 Improvements**; * `Mutect2` is now out of beta; * Support for multi-sample calling; * Lots of support for high-depth calling such as cfDNA, UMIs, mitochondria, including a new active region likelihood, probabilistic assembly graph pruning that adjusts to the local depth, a new mitochondria mode, and new filters for blood biopsy and mitochondria; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Added a genotype given alleles (GGA) mode; * New STR indel error model that improves sensitivity and precision in STR (short-tandem repeat) contexts; * Many new/improved filters to reduce false positives (eg., `FilterAlignmentArtifacts`) ; * Mutect2 now automatically recognizes and removes end repair artifacts in regions with inverted tandem repeats. This is extremely important for some FFPE samples.; * New probabilistic orientation bias tool; * Got rid of many questionable indels showing up in bamout of Mutect2 and the HaplotypeCaller; * Big improvements to CalculateContamination, especially when tumor has lots of CNVs; * NIO support in Mutect2 WDL; * Significant speed improvements; * Improved allele fraction estimation; * Initial GVCF output support. * **Mitochondrial Calling** ; * Added `--mitochondria-mode` to `Mutect2` and `FilterMutectCalls`. This ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:2951,Availability,repair,repair,2951,"ency distribution underlying the genotype priors; * Added new `--num-reference-samples-if-no-call` argument to control whether to infer (and with what effective strength) that only reference alleles were observed at sites not seen in any panel. * **Major Mutect2 Improvements**; * `Mutect2` is now out of beta; * Support for multi-sample calling; * Lots of support for high-depth calling such as cfDNA, UMIs, mitochondria, including a new active region likelihood, probabilistic assembly graph pruning that adjusts to the local depth, a new mitochondria mode, and new filters for blood biopsy and mitochondria; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Added a genotype given alleles (GGA) mode; * New STR indel error model that improves sensitivity and precision in STR (short-tandem repeat) contexts; * Many new/improved filters to reduce false positives (eg., `FilterAlignmentArtifacts`) ; * Mutect2 now automatically recognizes and removes end repair artifacts in regions with inverted tandem repeats. This is extremely important for some FFPE samples.; * New probabilistic orientation bias tool; * Got rid of many questionable indels showing up in bamout of Mutect2 and the HaplotypeCaller; * Big improvements to CalculateContamination, especially when tumor has lots of CNVs; * NIO support in Mutect2 WDL; * Significant speed improvements; * Improved allele fraction estimation; * Initial GVCF output support. * **Mitochondrial Calling** ; * Added `--mitochondria-mode` to `Mutect2` and `FilterMutectCalls`. This increases sensitivity and only applies filters that are optimized for mitochondria. . * **New allele frequency / qual score model**; * Is now the default in `HaplotypeCaller` and `GenotypeGVCFs`; * Optimized for greater speed, should resolve many `GenotypeGVCFs` memory issues; * Rare numerical finite precision issues in the allele-specific qual have been resolved. * **Major Improvements to the CNV (Copy Number ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:5729,Availability,down,download,5729,"n of new tools (`PostprocessGermlineCNVCalls`, `FilterIntervals`, and `CollectReadCounts`, which replaces `CollectFragmentCounts`), as well as improvements to existing tools (notably, `AnnotateIntervals`).; * Improved support for various formats, namely VCF output in the gCNV pipeline, IGV-compatible .seg output in the `ModelSegments` somatic CNV pipeline, and CRAM support for all CNV WDLs.; * Developed tools and WDLs for tagging and filtering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional annotation tools.; * Some new features include:; * MAF output support; * NIO support for datasources; * gnomAD support; * dbsnp support; * Support for Mitochondrial amino acid sequence/protein change strings; * 5'/3' flank support; * Major performance improvements due to added caching; * Added ALL mode for transcript selection (`--transcript-selection-mode ALL`) which will output full annotation fields for all transcripts; * Created a new `FuncotatorDataSourceDownloader` tool to download data sources; * Added an experimental `FilterFuncotations` tool. * **MarkDuplicatesSpark is now a Validated, Scalable Replacement for MarkDuplicates**; * MarkDuplicatesSpark is now out of beta; * Rewritten version of the tool matches Picard `MarkDuplicates` output and has greatly improved performance and scalability; * Supports multiple BAM inputs; * Indexes BAM outputs on-the-fly in parallel on a cluster. * **Additional Tools Ported from GATK3**; * Ported `VariantAnnotator`; * Ported `VariantEval`; * Ported `FastaAlternateReferenceMaker` and `FastaReferenceMaker`; * Ported `LeftAlignAndTrimVariants`; * Restored `GenotypeGVCFs` `--include-non-variant-sites` argument. * **Major Improvements to the SV (Structural Variation) Tools**; * Improvements to collection and calling of events ba",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:14758,Availability,failure,failures,14758,"or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input spanning deletions (#5397); * Define GenomicsDB ""partitions"" over the span of the input intervals in order to dramatically improve exome performance (#5540). * Miscellaneous Changes; * Added liftover wdls and jsons for gnomAD 2.1 (#5604); * Added script to create Hg38 to B37 liftover chain (#5579); * Allow variant walkers to configure their caching behavior (#3480); * Bug fix for using a `ReservoirDownsampler` with a `ReadsDownsamplingIterator` (#5594); * Started migration to a new URI abstraction (#5526); * Fixed inclusion of default read filters in GATK documentation (#5576); * Put the actual date/time in the generated GATK documentation (#5567); * Pair-HMM alignment algorithm description fix (#5528); * Make ReadFilter and Annotation packages configurable (#5573); * Fix to make `gatk --version` print the version instead of throwing an exception (#5537); * Added warning message reminding user to add the allele specific annotation group when needed (#3042); * Fix for intermittent `LeftAlignAndTrimVariants` test failures (#5519); * Restored link in `VariantFiltration` docs to point to update online JEXL doc. (#5525); * Moved `BucketUtils.deleteOnExit()` and `deleteRecursively()` to `IOUtils` (#5332); * Source the tab completion script in the GATK docker image (#5552); * Added GATK jar to CLASSPATH in docker image (#3866); * Updated travis github badge link (#5617); * Removed offline CRAN repository from build (#5593). * Dependencies; * Updated htsjdk to version 2.18.2 (#5585); * Updated picard to version 2.18.25 (#5597)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:42,Deployability,release,release,42,"It's been a year since the GATK `4.0.0.0` release in January 2018, and we decided that it was time to package up the past year's worth of GATK improvements into a new major release, which we're calling version `4.1.0.0`!. To commemorate this milestone, we'll be publishing a series of in-depth technical articles and blog posts covering the major new features in version `4.1.0.0` on the [official GATK blog](https://software.broadinstitute.org/gatk/blog). Below we've compiled the highlights of the new features added between versions `4.0.0.0` and `4.1.0.0`. If you're interested in seeing *only* the changes between the last release (`4.0.12.0`) and this release (`4.1.0.0`), click [here](#previous-version-diff) instead. Official docker image is here: [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). ## Major changes between versions 4.0.0.0 and 4.1.0.0 (January 2018 to January 2019):; ------. * **Next-Gen VQSR Replacement For Single-Sample**; * New suite of tools `CNNScoreVariants`, `CNNVariantTrain`, `CNNVariantWriteTensors`, and `FilterVariantTranches`; * `CNNScoreVariants` is now out of beta and ready for production use; * Performs variant training and scoring using a convolutional neural network. ; * Single-sample only; * Produces better results than the legacy `VariantRecalibrator` (VQSR) and comparable or better results to third-party tools like `DeepVariant`; * Sophisticated 2D model that uses the reads. * **Major HaplotypeCaller Improvements**; * Now genotypes and outputs spanning deletions; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Important fix to the reference confidence calculation upstream of indels; * New `HaplotypeCaller` priors for variants sites and homRef blocks; * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:173,Deployability,release,release,173,"It's been a year since the GATK `4.0.0.0` release in January 2018, and we decided that it was time to package up the past year's worth of GATK improvements into a new major release, which we're calling version `4.1.0.0`!. To commemorate this milestone, we'll be publishing a series of in-depth technical articles and blog posts covering the major new features in version `4.1.0.0` on the [official GATK blog](https://software.broadinstitute.org/gatk/blog). Below we've compiled the highlights of the new features added between versions `4.0.0.0` and `4.1.0.0`. If you're interested in seeing *only* the changes between the last release (`4.0.12.0`) and this release (`4.1.0.0`), click [here](#previous-version-diff) instead. Official docker image is here: [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). ## Major changes between versions 4.0.0.0 and 4.1.0.0 (January 2018 to January 2019):; ------. * **Next-Gen VQSR Replacement For Single-Sample**; * New suite of tools `CNNScoreVariants`, `CNNVariantTrain`, `CNNVariantWriteTensors`, and `FilterVariantTranches`; * `CNNScoreVariants` is now out of beta and ready for production use; * Performs variant training and scoring using a convolutional neural network. ; * Single-sample only; * Produces better results than the legacy `VariantRecalibrator` (VQSR) and comparable or better results to third-party tools like `DeepVariant`; * Sophisticated 2D model that uses the reads. * **Major HaplotypeCaller Improvements**; * Now genotypes and outputs spanning deletions; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Important fix to the reference confidence calculation upstream of indels; * New `HaplotypeCaller` priors for variants sites and homRef blocks; * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:628,Deployability,release,release,628,"It's been a year since the GATK `4.0.0.0` release in January 2018, and we decided that it was time to package up the past year's worth of GATK improvements into a new major release, which we're calling version `4.1.0.0`!. To commemorate this milestone, we'll be publishing a series of in-depth technical articles and blog posts covering the major new features in version `4.1.0.0` on the [official GATK blog](https://software.broadinstitute.org/gatk/blog). Below we've compiled the highlights of the new features added between versions `4.0.0.0` and `4.1.0.0`. If you're interested in seeing *only* the changes between the last release (`4.0.12.0`) and this release (`4.1.0.0`), click [here](#previous-version-diff) instead. Official docker image is here: [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). ## Major changes between versions 4.0.0.0 and 4.1.0.0 (January 2018 to January 2019):; ------. * **Next-Gen VQSR Replacement For Single-Sample**; * New suite of tools `CNNScoreVariants`, `CNNVariantTrain`, `CNNVariantWriteTensors`, and `FilterVariantTranches`; * `CNNScoreVariants` is now out of beta and ready for production use; * Performs variant training and scoring using a convolutional neural network. ; * Single-sample only; * Produces better results than the legacy `VariantRecalibrator` (VQSR) and comparable or better results to third-party tools like `DeepVariant`; * Sophisticated 2D model that uses the reads. * **Major HaplotypeCaller Improvements**; * Now genotypes and outputs spanning deletions; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Important fix to the reference confidence calculation upstream of indels; * New `HaplotypeCaller` priors for variants sites and homRef blocks; * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:658,Deployability,release,release,658,"It's been a year since the GATK `4.0.0.0` release in January 2018, and we decided that it was time to package up the past year's worth of GATK improvements into a new major release, which we're calling version `4.1.0.0`!. To commemorate this milestone, we'll be publishing a series of in-depth technical articles and blog posts covering the major new features in version `4.1.0.0` on the [official GATK blog](https://software.broadinstitute.org/gatk/blog). Below we've compiled the highlights of the new features added between versions `4.0.0.0` and `4.1.0.0`. If you're interested in seeing *only* the changes between the last release (`4.0.12.0`) and this release (`4.1.0.0`), click [here](#previous-version-diff) instead. Official docker image is here: [https://hub.docker.com/r/broadinstitute/gatk/](https://hub.docker.com/r/broadinstitute/gatk/). ## Major changes between versions 4.0.0.0 and 4.1.0.0 (January 2018 to January 2019):; ------. * **Next-Gen VQSR Replacement For Single-Sample**; * New suite of tools `CNNScoreVariants`, `CNNVariantTrain`, `CNNVariantWriteTensors`, and `FilterVariantTranches`; * `CNNScoreVariants` is now out of beta and ready for production use; * Performs variant training and scoring using a convolutional neural network. ; * Single-sample only; * Produces better results than the legacy `VariantRecalibrator` (VQSR) and comparable or better results to third-party tools like `DeepVariant`; * Sophisticated 2D model that uses the reads. * **Major HaplotypeCaller Improvements**; * Now genotypes and outputs spanning deletions; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Important fix to the reference confidence calculation upstream of indels; * New `HaplotypeCaller` priors for variants sites and homRef blocks; * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:4407,Deployability,pipeline,pipeline,4407,", especially when tumor has lots of CNVs; * NIO support in Mutect2 WDL; * Significant speed improvements; * Improved allele fraction estimation; * Initial GVCF output support. * **Mitochondrial Calling** ; * Added `--mitochondria-mode` to `Mutect2` and `FilterMutectCalls`. This increases sensitivity and only applies filters that are optimized for mitochondria. . * **New allele frequency / qual score model**; * Is now the default in `HaplotypeCaller` and `GenotypeGVCFs`; * Optimized for greater speed, should resolve many `GenotypeGVCFs` memory issues; * Rare numerical finite precision issues in the allele-specific qual have been resolved. * **Major Improvements to the CNV (Copy Number Variation) tools**; * The CNV tools are now out of beta. ; * This includes the tools: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`; * Completed the `GermlineCNVCaller` (gCNV) pipeline and made various performance/runtime improvements to both the methods and WDLs.; * Major changes include the addition of new tools (`PostprocessGermlineCNVCalls`, `FilterIntervals`, and `CollectReadCounts`, which replaces `CollectFragmentCounts`), as well as improvements to existing tools (notably, `AnnotateIntervals`).; * Improved support for various formats, namely VCF output in the gCNV pipeline, IGV-compatible .seg output in the `ModelSegments` somatic CNV pipeline, and CRAM support for all CNV WDLs.; * Developed tools and WDLs for tagging and filtering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:4809,Deployability,pipeline,pipeline,4809,"emory issues; * Rare numerical finite precision issues in the allele-specific qual have been resolved. * **Major Improvements to the CNV (Copy Number Variation) tools**; * The CNV tools are now out of beta. ; * This includes the tools: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`; * Completed the `GermlineCNVCaller` (gCNV) pipeline and made various performance/runtime improvements to both the methods and WDLs.; * Major changes include the addition of new tools (`PostprocessGermlineCNVCalls`, `FilterIntervals`, and `CollectReadCounts`, which replaces `CollectFragmentCounts`), as well as improvements to existing tools (notably, `AnnotateIntervals`).; * Improved support for various formats, namely VCF output in the gCNV pipeline, IGV-compatible .seg output in the `ModelSegments` somatic CNV pipeline, and CRAM support for all CNV WDLs.; * Developed tools and WDLs for tagging and filtering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional annotation tools.; * Some new features include:; * MAF output support; * NIO support for datasources; * gnomAD support; * dbsnp support; * Support for Mitochondrial amino acid sequence/protein change strings; * 5'/3' flank support; * Major performance improvements due to added caching; * Added ALL mode for transcript selection (`--transcript-selection-mode ALL`) which will output full annotation fields for all transcripts; * Created a new `FuncotatorDataSourceDownloader` tool to download data sources; * Added an experimental `FilterFun",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:4881,Deployability,pipeline,pipeline,4881,"esolved. * **Major Improvements to the CNV (Copy Number Variation) tools**; * The CNV tools are now out of beta. ; * This includes the tools: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`; * Completed the `GermlineCNVCaller` (gCNV) pipeline and made various performance/runtime improvements to both the methods and WDLs.; * Major changes include the addition of new tools (`PostprocessGermlineCNVCalls`, `FilterIntervals`, and `CollectReadCounts`, which replaces `CollectFragmentCounts`), as well as improvements to existing tools (notably, `AnnotateIntervals`).; * Improved support for various formats, namely VCF output in the gCNV pipeline, IGV-compatible .seg output in the `ModelSegments` somatic CNV pipeline, and CRAM support for all CNV WDLs.; * Developed tools and WDLs for tagging and filtering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional annotation tools.; * Some new features include:; * MAF output support; * NIO support for datasources; * gnomAD support; * dbsnp support; * Support for Mitochondrial amino acid sequence/protein change strings; * 5'/3' flank support; * Major performance improvements due to added caching; * Added ALL mode for transcript selection (`--transcript-selection-mode ALL`) which will output full annotation fields for all transcripts; * Created a new `FuncotatorDataSourceDownloader` tool to download data sources; * Added an experimental `FilterFuncotations` tool. * **MarkDuplicatesSpark is now a Validated, Scalable Replacement for MarkDupl",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:5034,Deployability,pipeline,pipeline,5034,"of beta. ; * This includes the tools: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`; * Completed the `GermlineCNVCaller` (gCNV) pipeline and made various performance/runtime improvements to both the methods and WDLs.; * Major changes include the addition of new tools (`PostprocessGermlineCNVCalls`, `FilterIntervals`, and `CollectReadCounts`, which replaces `CollectFragmentCounts`), as well as improvements to existing tools (notably, `AnnotateIntervals`).; * Improved support for various formats, namely VCF output in the gCNV pipeline, IGV-compatible .seg output in the `ModelSegments` somatic CNV pipeline, and CRAM support for all CNV WDLs.; * Developed tools and WDLs for tagging and filtering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional annotation tools.; * Some new features include:; * MAF output support; * NIO support for datasources; * gnomAD support; * dbsnp support; * Support for Mitochondrial amino acid sequence/protein change strings; * 5'/3' flank support; * Major performance improvements due to added caching; * Added ALL mode for transcript selection (`--transcript-selection-mode ALL`) which will output full annotation fields for all transcripts; * Created a new `FuncotatorDataSourceDownloader` tool to download data sources; * Added an experimental `FilterFuncotations` tool. * **MarkDuplicatesSpark is now a Validated, Scalable Replacement for MarkDuplicates**; * MarkDuplicatesSpark is now out of beta; * Rewritten version of the tool matches Picard `Mark",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:7942,Deployability,configurat,configuration,7942,"accurate reporting of small complex SVs.; * A machine learning (xgBoost) based classifier for SV evidence improves runtime and increases accuracy by determining which regions should be fed into the local assembly workflow. * **Spark Improvements**; * New [Disq](https://github.com/disq-bio/disq) Spark library allows faster and more accurate loading of formats like BAM and VCF; * `HaplotypeCallerSpark` now has a ""strict mode"" that closely matches the regular `HaplotypeCaller`; * Created `RevertSamSpark`, a parallelized Spark version of Picard's `RevertSam` tool; * Migrated most Spark tools that take a reference and/or VCF to use Spark's intrinsic file copying mechanism instead of broadcast to distribute the reference and VCFs to worker nodes -- a big performance win!. * **GenomicsDB Improvements**; * Allele-specific annotation support; * Multi-interval support (with some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:8990,Deployability,integrat,integration,8990,"some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google Cloud Storage) output (-O) support to more tools; * Improved Python integration (eliminated timeouts and reliance on prompt synchronization) means fewer glitches during runs of ML-based tools; * A significantly (~33%) smaller GATK docker image; * Changed argument tagging syntax from ""--arg tag:value"" to ""--arg:tag value""; * Affects command-line interface for `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. ## <a id=""previous-version-diff"">Changes between versions 4.0.12.0 and 4.1.0.0 *only*:</a>; ------. * Many tools are now out of beta and ready for production use!; * `CNNScoreVariants` is out of beta (#5548); * `Funcotator` and `FuncotatorDataSourceDownloader` are out of beta (#5621); * `MarkDuplicatesSpark` is out of beta (#5603); * CNV tools are out of beta (#5596). This includes: `AnnotateIntervals`, `CallCopyRatioSegments`, `",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:11401,Deployability,pipeline,pipeline,11401,"sesInReference`: simple new tool to count bases in a reference file (#5549); * `PrintBGZFBlockInformation`: a tool to dump information about blocks in a BGZF file (#4239). * `Mutect2`; * Mutect2 now works with multiple tumor and normal samples! (#5560); * First iteration of a reference confidence GVCF-like output for Mutect2 to enable mitochondrial joint calling (#5312); * Changed default blocking and NON-REF LOD params for Mutect2 GVCF mode (#5615); * Changed defaults for mitochondria mode now that we have adaptive pruning (#5544); * Fixed an edge case bug when Mutect2 sees a variant with population AF = 1 (#5535); * Fixed an edge case of zero-depth in `FilterMutectCalls` germline filter (#5578); * Fixed an edge case for the Mutect2 germline resource (#5563); * Tweaked the Mutect2 germline filter (#5595); * Put new orientation bias model in Mutect2 NIO wdl (#5580); * Improve proposed tumor in normal docs to account for new Mutect2 options (#5555). * Added a copy of the mitochondria best practices pipeline (#5566) (#5612). * `HaplotypeCaller`; * New allele frequency / qual score model is now the default in HaplotypeCaller and GenotypeGVCFs (#5484); * Simplified and sped `KBestHaplotypeFinder` by replacing recursion with Dijkstra's algorithm (#5462) (#5554); * Forward input BAM @PG header lines to `-bamout` output BAM (#3065); * Small performance improvement in GVCF mode (#5470). * `CNV Tools`; * Out of beta, as mentioned above! (#5596); * Added per-sample denoised coverage output to gCNV (#5584); * `ModelSegments`: Added separate allele-count thresholds for the normal and tumor (#5556); * `ModelSegments`: Added `MinibatchSliceSampler` and replaced naive subsampling (#5575); * Restored array output in gCNV WDLs for efficient postprocessing. (#5490). * Changed tagged argument syntax from `--argument tag:value` to `--argument:tag value` (#5526); * For example, `--resource known,known=true,prior=10.0:myFile` becomes `--resource:known,known=true,prior=10.0 myFile`; * Thi",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:12565,Deployability,release,release,12565,"65); * Small performance improvement in GVCF mode (#5470). * `CNV Tools`; * Out of beta, as mentioned above! (#5596); * Added per-sample denoised coverage output to gCNV (#5584); * `ModelSegments`: Added separate allele-count thresholds for the normal and tumor (#5556); * `ModelSegments`: Added `MinibatchSliceSampler` and replaced naive subsampling (#5575); * Restored array output in gCNV WDLs for efficient postprocessing. (#5490). * Changed tagged argument syntax from `--argument tag:value` to `--argument:tag value` (#5526); * For example, `--resource known,known=true,prior=10.0:myFile` becomes `--resource:known,known=true,prior=10.0 myFile`; * This change affects `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. * `Funcotator`; * Out of beta, as mentioned above! (#5621); * New datasource release that fixes many issues and adds `gnomAD` support (#5614); * VCF Data Sources now preserve the FILTER field (#5598); * Funcotator now gets the NCBI build version from the datasource config file (#5522); * Funcotator now ignores transcript version numbers when matching on transcript ID (#5557); * Funcotator now uses the GATK-wide version number (#5520); * Updated Funcotator tool documentation (#5620). * `MarkDuplicatesSpark`; * Out of beta, as mentioned above! (#5603); * Added the ability for MarkDuplicatesSpark to accept multiple bam inputs (#5430); * Fixed MarkDuplicateSpark mutex argument references (#5538). * Spark tools; * Support for distributed BAI index creation, and option for enabling or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:14832,Deployability,update,update,14832,"or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input spanning deletions (#5397); * Define GenomicsDB ""partitions"" over the span of the input intervals in order to dramatically improve exome performance (#5540). * Miscellaneous Changes; * Added liftover wdls and jsons for gnomAD 2.1 (#5604); * Added script to create Hg38 to B37 liftover chain (#5579); * Allow variant walkers to configure their caching behavior (#3480); * Bug fix for using a `ReservoirDownsampler` with a `ReadsDownsamplingIterator` (#5594); * Started migration to a new URI abstraction (#5526); * Fixed inclusion of default read filters in GATK documentation (#5576); * Put the actual date/time in the generated GATK documentation (#5567); * Pair-HMM alignment algorithm description fix (#5528); * Make ReadFilter and Annotation packages configurable (#5573); * Fix to make `gatk --version` print the version instead of throwing an exception (#5537); * Added warning message reminding user to add the allele specific annotation group when needed (#3042); * Fix for intermittent `LeftAlignAndTrimVariants` test failures (#5519); * Restored link in `VariantFiltration` docs to point to update online JEXL doc. (#5525); * Moved `BucketUtils.deleteOnExit()` and `deleteRecursively()` to `IOUtils` (#5332); * Source the tab completion script in the GATK docker image (#5552); * Added GATK jar to CLASSPATH in docker image (#3866); * Updated travis github badge link (#5617); * Removed offline CRAN repository from build (#5593). * Dependencies; * Updated htsjdk to version 2.18.2 (#5585); * Updated picard to version 2.18.25 (#5597)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:2837,Energy Efficiency,reduce,reduce,2837,"w genotypes and outputs spanning deletions; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Important fix to the reference confidence calculation upstream of indels; * New `HaplotypeCaller` priors for variants sites and homRef blocks; * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--num-reference-samples-if-no-call` argument to control whether to infer (and with what effective strength) that only reference alleles were observed at sites not seen in any panel. * **Major Mutect2 Improvements**; * `Mutect2` is now out of beta; * Support for multi-sample calling; * Lots of support for high-depth calling such as cfDNA, UMIs, mitochondria, including a new active region likelihood, probabilistic assembly graph pruning that adjusts to the local depth, a new mitochondria mode, and new filters for blood biopsy and mitochondria; * Now outputs VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Added a genotype given alleles (GGA) mode; * New STR indel error model that improves sensitivity and precision in STR (short-tandem repeat) contexts; * Many new/improved filters to reduce false positives (eg., `FilterAlignmentArtifacts`) ; * Mutect2 now automatically recognizes and removes end repair artifacts in regions with inverted tandem repeats. This is extremely important for some FFPE samples.; * New probabilistic orientation bias tool; * Got rid of many questionable indels showing up in bamout of Mutect2 and the HaplotypeCaller; * Big improvements to CalculateContamination, especially when tumor has lots of CNVs; * NIO support in Mutect2 WDL; * Significant speed improvements; * Improved allele fraction estimation; * Initial GVCF output support. * **Mitochondrial Calling** ; * Added `--mitochondria-mode` to `Mutect2` and `FilterMutectCalls`. This ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:10901,Energy Efficiency,adapt,adaptive,10901,"lineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`. * New tools:; * Added ports of `FastaAlternateReferenceMaker` and `FastaReferenceMaker` from GATK3 (#5549); * `RevertSamSpark`: a parallelized, Spark-based implementation of `RevertSam` from Picard (#5395); * `CompareIntervalLists`: simple new tool to compare interval lists (#3702); * `CountBasesInReference`: simple new tool to count bases in a reference file (#5549); * `PrintBGZFBlockInformation`: a tool to dump information about blocks in a BGZF file (#4239). * `Mutect2`; * Mutect2 now works with multiple tumor and normal samples! (#5560); * First iteration of a reference confidence GVCF-like output for Mutect2 to enable mitochondrial joint calling (#5312); * Changed default blocking and NON-REF LOD params for Mutect2 GVCF mode (#5615); * Changed defaults for mitochondria mode now that we have adaptive pruning (#5544); * Fixed an edge case bug when Mutect2 sees a variant with population AF = 1 (#5535); * Fixed an edge case of zero-depth in `FilterMutectCalls` germline filter (#5578); * Fixed an edge case for the Mutect2 germline resource (#5563); * Tweaked the Mutect2 germline filter (#5595); * Put new orientation bias model in Mutect2 NIO wdl (#5580); * Improve proposed tumor in normal docs to account for new Mutect2 options (#5555). * Added a copy of the mitochondria best practices pipeline (#5566) (#5612). * `HaplotypeCaller`; * New allele frequency / qual score model is now the default in HaplotypeCaller and GenotypeGVCFs (#5484); * Simplified and sped `KBestHaplotypeFinder` by replacing recursion with Dijkstra's algorithm (#5462) (#5554); * Forward input BAM @PG header lines to `-bamout` output BAM (#3065); * Small performance improvement in GVCF mode (#5470). * `CNV Tools`; * Out of beta, as mentioned above! (#5596); * Added per-sample denoised coverage output to gCNV (#5584); * `ModelSegments`: Added separate allele-coun",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:12132,Energy Efficiency,efficient,efficient,12132,"ariant with population AF = 1 (#5535); * Fixed an edge case of zero-depth in `FilterMutectCalls` germline filter (#5578); * Fixed an edge case for the Mutect2 germline resource (#5563); * Tweaked the Mutect2 germline filter (#5595); * Put new orientation bias model in Mutect2 NIO wdl (#5580); * Improve proposed tumor in normal docs to account for new Mutect2 options (#5555). * Added a copy of the mitochondria best practices pipeline (#5566) (#5612). * `HaplotypeCaller`; * New allele frequency / qual score model is now the default in HaplotypeCaller and GenotypeGVCFs (#5484); * Simplified and sped `KBestHaplotypeFinder` by replacing recursion with Dijkstra's algorithm (#5462) (#5554); * Forward input BAM @PG header lines to `-bamout` output BAM (#3065); * Small performance improvement in GVCF mode (#5470). * `CNV Tools`; * Out of beta, as mentioned above! (#5596); * Added per-sample denoised coverage output to gCNV (#5584); * `ModelSegments`: Added separate allele-count thresholds for the normal and tumor (#5556); * `ModelSegments`: Added `MinibatchSliceSampler` and replaced naive subsampling (#5575); * Restored array output in gCNV WDLs for efficient postprocessing. (#5490). * Changed tagged argument syntax from `--argument tag:value` to `--argument:tag value` (#5526); * For example, `--resource known,known=true,prior=10.0:myFile` becomes `--resource:known,known=true,prior=10.0 myFile`; * This change affects `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. * `Funcotator`; * Out of beta, as mentioned above! (#5621); * New datasource release that fixes many issues and adds `gnomAD` support (#5614); * VCF Data Sources now preserve the FILTER field (#5598); * Funcotator now gets the NCBI build version from the datasource config file (#5522); * Funcotator now ignores transcript version numbers when matching on transcript ID (#5557); * Funcotator now uses the GATK-wide version number (#5520); * Updated Funcotator tool documentation (#5620",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:8990,Integrability,integrat,integration,8990,"some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google Cloud Storage) output (-O) support to more tools; * Improved Python integration (eliminated timeouts and reliance on prompt synchronization) means fewer glitches during runs of ML-based tools; * A significantly (~33%) smaller GATK docker image; * Changed argument tagging syntax from ""--arg tag:value"" to ""--arg:tag value""; * Affects command-line interface for `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. ## <a id=""previous-version-diff"">Changes between versions 4.0.12.0 and 4.1.0.0 *only*:</a>; ------. * Many tools are now out of beta and ready for production use!; * `CNNScoreVariants` is out of beta (#5548); * `Funcotator` and `FuncotatorDataSourceDownloader` are out of beta (#5621); * `MarkDuplicatesSpark` is out of beta (#5603); * CNV tools are out of beta (#5596). This includes: `AnnotateIntervals`, `CallCopyRatioSegments`, `",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:9046,Integrability,synchroniz,synchronization,9046,"some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google Cloud Storage) output (-O) support to more tools; * Improved Python integration (eliminated timeouts and reliance on prompt synchronization) means fewer glitches during runs of ML-based tools; * A significantly (~33%) smaller GATK docker image; * Changed argument tagging syntax from ""--arg tag:value"" to ""--arg:tag value""; * Affects command-line interface for `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. ## <a id=""previous-version-diff"">Changes between versions 4.0.12.0 and 4.1.0.0 *only*:</a>; ------. * Many tools are now out of beta and ready for production use!; * `CNNScoreVariants` is out of beta (#5548); * `Funcotator` and `FuncotatorDataSourceDownloader` are out of beta (#5621); * `MarkDuplicatesSpark` is out of beta (#5603); * CNV tools are out of beta (#5596). This includes: `AnnotateIntervals`, `CallCopyRatioSegments`, `",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:9269,Integrability,interface,interface,9269,"some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google Cloud Storage) output (-O) support to more tools; * Improved Python integration (eliminated timeouts and reliance on prompt synchronization) means fewer glitches during runs of ML-based tools; * A significantly (~33%) smaller GATK docker image; * Changed argument tagging syntax from ""--arg tag:value"" to ""--arg:tag value""; * Affects command-line interface for `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. ## <a id=""previous-version-diff"">Changes between versions 4.0.12.0 and 4.1.0.0 *only*:</a>; ------. * Many tools are now out of beta and ready for production use!; * `CNNScoreVariants` is out of beta (#5548); * `Funcotator` and `FuncotatorDataSourceDownloader` are out of beta (#5621); * `MarkDuplicatesSpark` is out of beta (#5603); * CNV tools are out of beta (#5596). This includes: `AnnotateIntervals`, `CallCopyRatioSegments`, `",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:14615,Integrability,message,message,14615,"or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input spanning deletions (#5397); * Define GenomicsDB ""partitions"" over the span of the input intervals in order to dramatically improve exome performance (#5540). * Miscellaneous Changes; * Added liftover wdls and jsons for gnomAD 2.1 (#5604); * Added script to create Hg38 to B37 liftover chain (#5579); * Allow variant walkers to configure their caching behavior (#3480); * Bug fix for using a `ReservoirDownsampler` with a `ReadsDownsamplingIterator` (#5594); * Started migration to a new URI abstraction (#5526); * Fixed inclusion of default read filters in GATK documentation (#5576); * Put the actual date/time in the generated GATK documentation (#5567); * Pair-HMM alignment algorithm description fix (#5528); * Make ReadFilter and Annotation packages configurable (#5573); * Fix to make `gatk --version` print the version instead of throwing an exception (#5537); * Added warning message reminding user to add the allele specific annotation group when needed (#3042); * Fix for intermittent `LeftAlignAndTrimVariants` test failures (#5519); * Restored link in `VariantFiltration` docs to point to update online JEXL doc. (#5525); * Moved `BucketUtils.deleteOnExit()` and `deleteRecursively()` to `IOUtils` (#5332); * Source the tab completion script in the GATK docker image (#5552); * Added GATK jar to CLASSPATH in docker image (#3866); * Updated travis github badge link (#5617); * Removed offline CRAN repository from build (#5593). * Dependencies; * Updated htsjdk to version 2.18.2 (#5585); * Updated picard to version 2.18.25 (#5597)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:7942,Modifiability,config,configuration,7942,"accurate reporting of small complex SVs.; * A machine learning (xgBoost) based classifier for SV evidence improves runtime and increases accuracy by determining which regions should be fed into the local assembly workflow. * **Spark Improvements**; * New [Disq](https://github.com/disq-bio/disq) Spark library allows faster and more accurate loading of formats like BAM and VCF; * `HaplotypeCallerSpark` now has a ""strict mode"" that closely matches the regular `HaplotypeCaller`; * Created `RevertSamSpark`, a parallelized Spark version of Picard's `RevertSam` tool; * Migrated most Spark tools that take a reference and/or VCF to use Spark's intrinsic file copying mechanism instead of broadcast to distribute the reference and VCFs to worker nodes -- a big performance win!. * **GenomicsDB Improvements**; * Allele-specific annotation support; * Multi-interval support (with some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:10901,Modifiability,adapt,adaptive,10901,"lineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`. * New tools:; * Added ports of `FastaAlternateReferenceMaker` and `FastaReferenceMaker` from GATK3 (#5549); * `RevertSamSpark`: a parallelized, Spark-based implementation of `RevertSam` from Picard (#5395); * `CompareIntervalLists`: simple new tool to compare interval lists (#3702); * `CountBasesInReference`: simple new tool to count bases in a reference file (#5549); * `PrintBGZFBlockInformation`: a tool to dump information about blocks in a BGZF file (#4239). * `Mutect2`; * Mutect2 now works with multiple tumor and normal samples! (#5560); * First iteration of a reference confidence GVCF-like output for Mutect2 to enable mitochondrial joint calling (#5312); * Changed default blocking and NON-REF LOD params for Mutect2 GVCF mode (#5615); * Changed defaults for mitochondria mode now that we have adaptive pruning (#5544); * Fixed an edge case bug when Mutect2 sees a variant with population AF = 1 (#5535); * Fixed an edge case of zero-depth in `FilterMutectCalls` germline filter (#5578); * Fixed an edge case for the Mutect2 germline resource (#5563); * Tweaked the Mutect2 germline filter (#5595); * Put new orientation bias model in Mutect2 NIO wdl (#5580); * Improve proposed tumor in normal docs to account for new Mutect2 options (#5555). * Added a copy of the mitochondria best practices pipeline (#5566) (#5612). * `HaplotypeCaller`; * New allele frequency / qual score model is now the default in HaplotypeCaller and GenotypeGVCFs (#5484); * Simplified and sped `KBestHaplotypeFinder` by replacing recursion with Dijkstra's algorithm (#5462) (#5554); * Forward input BAM @PG header lines to `-bamout` output BAM (#3065); * Small performance improvement in GVCF mode (#5470). * `CNV Tools`; * Out of beta, as mentioned above! (#5596); * Added per-sample denoised coverage output to gCNV (#5584); * `ModelSegments`: Added separate allele-coun",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:12754,Modifiability,config,config,12754,"65); * Small performance improvement in GVCF mode (#5470). * `CNV Tools`; * Out of beta, as mentioned above! (#5596); * Added per-sample denoised coverage output to gCNV (#5584); * `ModelSegments`: Added separate allele-count thresholds for the normal and tumor (#5556); * `ModelSegments`: Added `MinibatchSliceSampler` and replaced naive subsampling (#5575); * Restored array output in gCNV WDLs for efficient postprocessing. (#5490). * Changed tagged argument syntax from `--argument tag:value` to `--argument:tag value` (#5526); * For example, `--resource known,known=true,prior=10.0:myFile` becomes `--resource:known,known=true,prior=10.0 myFile`; * This change affects `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. * `Funcotator`; * Out of beta, as mentioned above! (#5621); * New datasource release that fixes many issues and adds `gnomAD` support (#5614); * VCF Data Sources now preserve the FILTER field (#5598); * Funcotator now gets the NCBI build version from the datasource config file (#5522); * Funcotator now ignores transcript version numbers when matching on transcript ID (#5557); * Funcotator now uses the GATK-wide version number (#5520); * Updated Funcotator tool documentation (#5620). * `MarkDuplicatesSpark`; * Out of beta, as mentioned above! (#5603); * Added the ability for MarkDuplicatesSpark to accept multiple bam inputs (#5430); * Fixed MarkDuplicateSpark mutex argument references (#5538). * Spark tools; * Support for distributed BAI index creation, and option for enabling or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:14058,Modifiability,config,configure,14058,"or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input spanning deletions (#5397); * Define GenomicsDB ""partitions"" over the span of the input intervals in order to dramatically improve exome performance (#5540). * Miscellaneous Changes; * Added liftover wdls and jsons for gnomAD 2.1 (#5604); * Added script to create Hg38 to B37 liftover chain (#5579); * Allow variant walkers to configure their caching behavior (#3480); * Bug fix for using a `ReservoirDownsampler` with a `ReadsDownsamplingIterator` (#5594); * Started migration to a new URI abstraction (#5526); * Fixed inclusion of default read filters in GATK documentation (#5576); * Put the actual date/time in the generated GATK documentation (#5567); * Pair-HMM alignment algorithm description fix (#5528); * Make ReadFilter and Annotation packages configurable (#5573); * Fix to make `gatk --version` print the version instead of throwing an exception (#5537); * Added warning message reminding user to add the allele specific annotation group when needed (#3042); * Fix for intermittent `LeftAlignAndTrimVariants` test failures (#5519); * Restored link in `VariantFiltration` docs to point to update online JEXL doc. (#5525); * Moved `BucketUtils.deleteOnExit()` and `deleteRecursively()` to `IOUtils` (#5332); * Source the tab completion script in the GATK docker image (#5552); * Added GATK jar to CLASSPATH in docker image (#3866); * Updated travis github badge link (#5617); * Removed offline CRAN repository from build (#5593). * Dependencies; * Updated htsjdk to version 2.18.2 (#5585); * Updated picard to version 2.18.25 (#5597)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:14486,Modifiability,config,configurable,14486,"or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input spanning deletions (#5397); * Define GenomicsDB ""partitions"" over the span of the input intervals in order to dramatically improve exome performance (#5540). * Miscellaneous Changes; * Added liftover wdls and jsons for gnomAD 2.1 (#5604); * Added script to create Hg38 to B37 liftover chain (#5579); * Allow variant walkers to configure their caching behavior (#3480); * Bug fix for using a `ReservoirDownsampler` with a `ReadsDownsamplingIterator` (#5594); * Started migration to a new URI abstraction (#5526); * Fixed inclusion of default read filters in GATK documentation (#5576); * Put the actual date/time in the generated GATK documentation (#5567); * Pair-HMM alignment algorithm description fix (#5528); * Make ReadFilter and Annotation packages configurable (#5573); * Fix to make `gatk --version` print the version instead of throwing an exception (#5537); * Added warning message reminding user to add the allele specific annotation group when needed (#3042); * Fix for intermittent `LeftAlignAndTrimVariants` test failures (#5519); * Restored link in `VariantFiltration` docs to point to update online JEXL doc. (#5525); * Moved `BucketUtils.deleteOnExit()` and `deleteRecursively()` to `IOUtils` (#5332); * Source the tab completion script in the GATK docker image (#5552); * Added GATK jar to CLASSPATH in docker image (#3866); * Updated travis github badge link (#5617); * Removed offline CRAN repository from build (#5593). * Dependencies; * Updated htsjdk to version 2.18.2 (#5585); * Updated picard to version 2.18.25 (#5597)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:3578,Performance,optimiz,optimized,3578," VCF spec-compliant phased variants; * Can emit MNPs via a new `--max-mnp-distance` argument; * Added a genotype given alleles (GGA) mode; * New STR indel error model that improves sensitivity and precision in STR (short-tandem repeat) contexts; * Many new/improved filters to reduce false positives (eg., `FilterAlignmentArtifacts`) ; * Mutect2 now automatically recognizes and removes end repair artifacts in regions with inverted tandem repeats. This is extremely important for some FFPE samples.; * New probabilistic orientation bias tool; * Got rid of many questionable indels showing up in bamout of Mutect2 and the HaplotypeCaller; * Big improvements to CalculateContamination, especially when tumor has lots of CNVs; * NIO support in Mutect2 WDL; * Significant speed improvements; * Improved allele fraction estimation; * Initial GVCF output support. * **Mitochondrial Calling** ; * Added `--mitochondria-mode` to `Mutect2` and `FilterMutectCalls`. This increases sensitivity and only applies filters that are optimized for mitochondria. . * **New allele frequency / qual score model**; * Is now the default in `HaplotypeCaller` and `GenotypeGVCFs`; * Optimized for greater speed, should resolve many `GenotypeGVCFs` memory issues; * Rare numerical finite precision issues in the allele-specific qual have been resolved. * **Major Improvements to the CNV (Copy Number Variation) tools**; * The CNV tools are now out of beta. ; * This includes the tools: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`; * Completed the `GermlineCNVCaller` (gCNV) pipeline and made various performance/runtime improvements to both the methods and WDLs.; * Major changes include the addition of new tools (`PostprocessG",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:4433,Performance,perform,performance,4433,", especially when tumor has lots of CNVs; * NIO support in Mutect2 WDL; * Significant speed improvements; * Improved allele fraction estimation; * Initial GVCF output support. * **Mitochondrial Calling** ; * Added `--mitochondria-mode` to `Mutect2` and `FilterMutectCalls`. This increases sensitivity and only applies filters that are optimized for mitochondria. . * **New allele frequency / qual score model**; * Is now the default in `HaplotypeCaller` and `GenotypeGVCFs`; * Optimized for greater speed, should resolve many `GenotypeGVCFs` memory issues; * Rare numerical finite precision issues in the allele-specific qual have been resolved. * **Major Improvements to the CNV (Copy Number Variation) tools**; * The CNV tools are now out of beta. ; * This includes the tools: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`; * Completed the `GermlineCNVCaller` (gCNV) pipeline and made various performance/runtime improvements to both the methods and WDLs.; * Major changes include the addition of new tools (`PostprocessGermlineCNVCalls`, `FilterIntervals`, and `CollectReadCounts`, which replaces `CollectFragmentCounts`), as well as improvements to existing tools (notably, `AnnotateIntervals`).; * Improved support for various formats, namely VCF output in the gCNV pipeline, IGV-compatible .seg output in the `ModelSegments` somatic CNV pipeline, and CRAM support for all CNV WDLs.; * Developed tools and WDLs for tagging and filtering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:5485,Performance,perform,performance,5485,"n of new tools (`PostprocessGermlineCNVCalls`, `FilterIntervals`, and `CollectReadCounts`, which replaces `CollectFragmentCounts`), as well as improvements to existing tools (notably, `AnnotateIntervals`).; * Improved support for various formats, namely VCF output in the gCNV pipeline, IGV-compatible .seg output in the `ModelSegments` somatic CNV pipeline, and CRAM support for all CNV WDLs.; * Developed tools and WDLs for tagging and filtering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional annotation tools.; * Some new features include:; * MAF output support; * NIO support for datasources; * gnomAD support; * dbsnp support; * Support for Mitochondrial amino acid sequence/protein change strings; * 5'/3' flank support; * Major performance improvements due to added caching; * Added ALL mode for transcript selection (`--transcript-selection-mode ALL`) which will output full annotation fields for all transcripts; * Created a new `FuncotatorDataSourceDownloader` tool to download data sources; * Added an experimental `FilterFuncotations` tool. * **MarkDuplicatesSpark is now a Validated, Scalable Replacement for MarkDuplicates**; * MarkDuplicatesSpark is now out of beta; * Rewritten version of the tool matches Picard `MarkDuplicates` output and has greatly improved performance and scalability; * Supports multiple BAM inputs; * Indexes BAM outputs on-the-fly in parallel on a cluster. * **Additional Tools Ported from GATK3**; * Ported `VariantAnnotator`; * Ported `VariantEval`; * Ported `FastaAlternateReferenceMaker` and `FastaReferenceMaker`; * Ported `LeftAlignAndTrimVariants`; * Restored `GenotypeGVCFs` `--include-non-variant-sites` argument. * **Major Improvements to the SV (Structural Variation) Tools**; * Improvements to collection and calling of events ba",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:6028,Performance,perform,performance,6028,"ering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional annotation tools.; * Some new features include:; * MAF output support; * NIO support for datasources; * gnomAD support; * dbsnp support; * Support for Mitochondrial amino acid sequence/protein change strings; * 5'/3' flank support; * Major performance improvements due to added caching; * Added ALL mode for transcript selection (`--transcript-selection-mode ALL`) which will output full annotation fields for all transcripts; * Created a new `FuncotatorDataSourceDownloader` tool to download data sources; * Added an experimental `FilterFuncotations` tool. * **MarkDuplicatesSpark is now a Validated, Scalable Replacement for MarkDuplicates**; * MarkDuplicatesSpark is now out of beta; * Rewritten version of the tool matches Picard `MarkDuplicates` output and has greatly improved performance and scalability; * Supports multiple BAM inputs; * Indexes BAM outputs on-the-fly in parallel on a cluster. * **Additional Tools Ported from GATK3**; * Ported `VariantAnnotator`; * Ported `VariantEval`; * Ported `FastaAlternateReferenceMaker` and `FastaReferenceMaker`; * Ported `LeftAlignAndTrimVariants`; * Restored `GenotypeGVCFs` `--include-non-variant-sites` argument. * **Major Improvements to the SV (Structural Variation) Tools**; * Improvements to collection and calling of events based on discordant read pair evidence.; * A new scaffolding algorithm greatly improves the contiguity of local assemblies, increasing sensitivity.; * Regions of excessive sequencing depth are excluded from evidence collection and assembly, improving runtime performance.; * A major overhaul of our algorithm for calling events based on local assemblies improves accuracy and allows for the accurate reporting of small complex SVs.; * A machine ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:6044,Performance,scalab,scalability,6044,"ering of germline events in the `ModelSegments` somatic CNV pipeline. * **Funcotator Official Release**; * Funcotator is now out of beta; * Huge number of bug fixes and accuracy improvements. Output for several fields is now more correct than other well-known functional annotation tools.; * Some new features include:; * MAF output support; * NIO support for datasources; * gnomAD support; * dbsnp support; * Support for Mitochondrial amino acid sequence/protein change strings; * 5'/3' flank support; * Major performance improvements due to added caching; * Added ALL mode for transcript selection (`--transcript-selection-mode ALL`) which will output full annotation fields for all transcripts; * Created a new `FuncotatorDataSourceDownloader` tool to download data sources; * Added an experimental `FilterFuncotations` tool. * **MarkDuplicatesSpark is now a Validated, Scalable Replacement for MarkDuplicates**; * MarkDuplicatesSpark is now out of beta; * Rewritten version of the tool matches Picard `MarkDuplicates` output and has greatly improved performance and scalability; * Supports multiple BAM inputs; * Indexes BAM outputs on-the-fly in parallel on a cluster. * **Additional Tools Ported from GATK3**; * Ported `VariantAnnotator`; * Ported `VariantEval`; * Ported `FastaAlternateReferenceMaker` and `FastaReferenceMaker`; * Ported `LeftAlignAndTrimVariants`; * Restored `GenotypeGVCFs` `--include-non-variant-sites` argument. * **Major Improvements to the SV (Structural Variation) Tools**; * Improvements to collection and calling of events based on discordant read pair evidence.; * A new scaffolding algorithm greatly improves the contiguity of local assemblies, increasing sensitivity.; * Regions of excessive sequencing depth are excluded from evidence collection and assembly, improving runtime performance.; * A major overhaul of our algorithm for calling events based on local assemblies improves accuracy and allows for the accurate reporting of small complex SVs.; * A machine ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:6789,Performance,perform,performance,6789,"ata sources; * Added an experimental `FilterFuncotations` tool. * **MarkDuplicatesSpark is now a Validated, Scalable Replacement for MarkDuplicates**; * MarkDuplicatesSpark is now out of beta; * Rewritten version of the tool matches Picard `MarkDuplicates` output and has greatly improved performance and scalability; * Supports multiple BAM inputs; * Indexes BAM outputs on-the-fly in parallel on a cluster. * **Additional Tools Ported from GATK3**; * Ported `VariantAnnotator`; * Ported `VariantEval`; * Ported `FastaAlternateReferenceMaker` and `FastaReferenceMaker`; * Ported `LeftAlignAndTrimVariants`; * Restored `GenotypeGVCFs` `--include-non-variant-sites` argument. * **Major Improvements to the SV (Structural Variation) Tools**; * Improvements to collection and calling of events based on discordant read pair evidence.; * A new scaffolding algorithm greatly improves the contiguity of local assemblies, increasing sensitivity.; * Regions of excessive sequencing depth are excluded from evidence collection and assembly, improving runtime performance.; * A major overhaul of our algorithm for calling events based on local assemblies improves accuracy and allows for the accurate reporting of small complex SVs.; * A machine learning (xgBoost) based classifier for SV evidence improves runtime and increases accuracy by determining which regions should be fed into the local assembly workflow. * **Spark Improvements**; * New [Disq](https://github.com/disq-bio/disq) Spark library allows faster and more accurate loading of formats like BAM and VCF; * `HaplotypeCallerSpark` now has a ""strict mode"" that closely matches the regular `HaplotypeCaller`; * Created `RevertSamSpark`, a parallelized Spark version of Picard's `RevertSam` tool; * Migrated most Spark tools that take a reference and/or VCF to use Spark's intrinsic file copying mechanism instead of broadcast to distribute the reference and VCFs to worker nodes -- a big performance win!. * **GenomicsDB Improvements**; * Allele-s",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:7263,Performance,load,loading,7263,"(Structural Variation) Tools**; * Improvements to collection and calling of events based on discordant read pair evidence.; * A new scaffolding algorithm greatly improves the contiguity of local assemblies, increasing sensitivity.; * Regions of excessive sequencing depth are excluded from evidence collection and assembly, improving runtime performance.; * A major overhaul of our algorithm for calling events based on local assemblies improves accuracy and allows for the accurate reporting of small complex SVs.; * A machine learning (xgBoost) based classifier for SV evidence improves runtime and increases accuracy by determining which regions should be fed into the local assembly workflow. * **Spark Improvements**; * New [Disq](https://github.com/disq-bio/disq) Spark library allows faster and more accurate loading of formats like BAM and VCF; * `HaplotypeCallerSpark` now has a ""strict mode"" that closely matches the regular `HaplotypeCaller`; * Created `RevertSamSpark`, a parallelized Spark version of Picard's `RevertSam` tool; * Migrated most Spark tools that take a reference and/or VCF to use Spark's intrinsic file copying mechanism instead of broadcast to distribute the reference and VCFs to worker nodes -- a big performance win!. * **GenomicsDB Improvements**; * Allele-specific annotation support; * Multi-interval support (with some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVC",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:7680,Performance,perform,performance,7680,"(Structural Variation) Tools**; * Improvements to collection and calling of events based on discordant read pair evidence.; * A new scaffolding algorithm greatly improves the contiguity of local assemblies, increasing sensitivity.; * Regions of excessive sequencing depth are excluded from evidence collection and assembly, improving runtime performance.; * A major overhaul of our algorithm for calling events based on local assemblies improves accuracy and allows for the accurate reporting of small complex SVs.; * A machine learning (xgBoost) based classifier for SV evidence improves runtime and increases accuracy by determining which regions should be fed into the local assembly workflow. * **Spark Improvements**; * New [Disq](https://github.com/disq-bio/disq) Spark library allows faster and more accurate loading of formats like BAM and VCF; * `HaplotypeCallerSpark` now has a ""strict mode"" that closely matches the regular `HaplotypeCaller`; * Created `RevertSamSpark`, a parallelized Spark version of Picard's `RevertSam` tool; * Migrated most Spark tools that take a reference and/or VCF to use Spark's intrinsic file copying mechanism instead of broadcast to distribute the reference and VCFs to worker nodes -- a big performance win!. * **GenomicsDB Improvements**; * Allele-specific annotation support; * Multi-interval support (with some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVC",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:7803,Performance,perform,performance,7803,"accurate reporting of small complex SVs.; * A machine learning (xgBoost) based classifier for SV evidence improves runtime and increases accuracy by determining which regions should be fed into the local assembly workflow. * **Spark Improvements**; * New [Disq](https://github.com/disq-bio/disq) Spark library allows faster and more accurate loading of formats like BAM and VCF; * `HaplotypeCallerSpark` now has a ""strict mode"" that closely matches the regular `HaplotypeCaller`; * Created `RevertSamSpark`, a parallelized Spark version of Picard's `RevertSam` tool; * Migrated most Spark tools that take a reference and/or VCF to use Spark's intrinsic file copying mechanism instead of broadcast to distribute the reference and VCFs to worker nodes -- a big performance win!. * **GenomicsDB Improvements**; * Allele-specific annotation support; * Multi-interval support (with some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:11744,Performance,perform,performance,11744,"tumor and normal samples! (#5560); * First iteration of a reference confidence GVCF-like output for Mutect2 to enable mitochondrial joint calling (#5312); * Changed default blocking and NON-REF LOD params for Mutect2 GVCF mode (#5615); * Changed defaults for mitochondria mode now that we have adaptive pruning (#5544); * Fixed an edge case bug when Mutect2 sees a variant with population AF = 1 (#5535); * Fixed an edge case of zero-depth in `FilterMutectCalls` germline filter (#5578); * Fixed an edge case for the Mutect2 germline resource (#5563); * Tweaked the Mutect2 germline filter (#5595); * Put new orientation bias model in Mutect2 NIO wdl (#5580); * Improve proposed tumor in normal docs to account for new Mutect2 options (#5555). * Added a copy of the mitochondria best practices pipeline (#5566) (#5612). * `HaplotypeCaller`; * New allele frequency / qual score model is now the default in HaplotypeCaller and GenotypeGVCFs (#5484); * Simplified and sped `KBestHaplotypeFinder` by replacing recursion with Dijkstra's algorithm (#5462) (#5554); * Forward input BAM @PG header lines to `-bamout` output BAM (#3065); * Small performance improvement in GVCF mode (#5470). * `CNV Tools`; * Out of beta, as mentioned above! (#5596); * Added per-sample denoised coverage output to gCNV (#5584); * `ModelSegments`: Added separate allele-count thresholds for the normal and tumor (#5556); * `ModelSegments`: Added `MinibatchSliceSampler` and replaced naive subsampling (#5575); * Restored array output in gCNV WDLs for efficient postprocessing. (#5490). * Changed tagged argument syntax from `--argument tag:value` to `--argument:tag value` (#5526); * For example, `--resource known,known=true,prior=10.0:myFile` becomes `--resource:known,known=true,prior=10.0 myFile`; * This change affects `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. * `Funcotator`; * Out of beta, as mentioned above! (#5621); * New datasource release that fixes many issues and adds `gn",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:13868,Performance,perform,performance,13868,"22); * Funcotator now ignores transcript version numbers when matching on transcript ID (#5557); * Funcotator now uses the GATK-wide version number (#5520); * Updated Funcotator tool documentation (#5620). * `MarkDuplicatesSpark`; * Out of beta, as mentioned above! (#5603); * Added the ability for MarkDuplicatesSpark to accept multiple bam inputs (#5430); * Fixed MarkDuplicateSpark mutex argument references (#5538). * Spark tools; * Support for distributed BAI index creation, and option for enabling or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input spanning deletions (#5397); * Define GenomicsDB ""partitions"" over the span of the input intervals in order to dramatically improve exome performance (#5540). * Miscellaneous Changes; * Added liftover wdls and jsons for gnomAD 2.1 (#5604); * Added script to create Hg38 to B37 liftover chain (#5579); * Allow variant walkers to configure their caching behavior (#3480); * Bug fix for using a `ReservoirDownsampler` with a `ReadsDownsamplingIterator` (#5594); * Started migration to a new URI abstraction (#5526); * Fixed inclusion of default read filters in GATK documentation (#5576); * Put the actual date/time in the generated GATK documentation (#5567); * Pair-HMM alignment algorithm description fix (#5528); * Make ReadFilter and Annotation packages configurable (#5573); * Fix to make `gatk --version` print the version instead of throwing an exception (#5537); * Added warning message reminding user to add the allele specific annotation group when needed (#3042); * Fix for intermittent `LeftAlignAndTrimVariants` test failures (#55",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:9014,Safety,timeout,timeouts,9014,"some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to be specified; * Allow for hdfs and gcs URI's to be passed to GenomicsDB; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb`. * **""Goodies"" Worth Mentioning**; * Added fasta.gz support to the `-R/--reference` argument in walker tools; * `SelectVariants` can now drop specific annotation fields from the output vcf; * `CalculateGenotypePosteriors` now supports indels; * New tool `ReblockGVCF` to merge reference blocks in single-sample GVCFs for smaller filesizes; * Improved MQ calculation accuracy, especially at sites with many uninformative reads; concomitant with new annotation tag and format; * The `-L` argument now supports GCS (Google Cloud Storage) for interval list files / bed / vcf files in walker tools; * Added support for ""Requester Pays"" GCS (Google Cloud Storage) buckets via new `--gcs-project-for-requester-pays` argument; * Added GCS (Google Cloud Storage) output (-O) support to more tools; * Improved Python integration (eliminated timeouts and reliance on prompt synchronization) means fewer glitches during runs of ML-based tools; * A significantly (~33%) smaller GATK docker image; * Changed argument tagging syntax from ""--arg tag:value"" to ""--arg:tag value""; * Affects command-line interface for `VariantRecalibrator`, `VariantEval`, `VariantFiltration`, and `VariantAnnotator`. ## <a id=""previous-version-diff"">Changes between versions 4.0.12.0 and 4.1.0.0 *only*:</a>; ------. * Many tools are now out of beta and ready for production use!; * `CNNScoreVariants` is out of beta (#5548); * `Funcotator` and `FuncotatorDataSourceDownloader` are out of beta (#5621); * `MarkDuplicatesSpark` is out of beta (#5603); * CNV tools are out of beta (#5596). This includes: `AnnotateIntervals`, `CallCopyRatioSegments`, `",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:14753,Testability,test,test,14753,"or disabling writing BAI and SBI files on Spark (#5485); * Get `HaplotypeCallerSpark` ""strict mode"" running on an exome (#5475); * Added an option for enabling or disabling writing tabix indexes for bgzipped VCF files from Spark (#5574); * Fixed overflow bug in `GatkSparkTool.getRecommendedNumReducers()` (#5586). * `GenomicsDB`; * Migrated from `com.intel.genomicsdb` to `org.genomicsdb` (#5587) (#5608); * GenomicsDB now matches CombineGVCFs with input spanning deletions (#5397); * Define GenomicsDB ""partitions"" over the span of the input intervals in order to dramatically improve exome performance (#5540). * Miscellaneous Changes; * Added liftover wdls and jsons for gnomAD 2.1 (#5604); * Added script to create Hg38 to B37 liftover chain (#5579); * Allow variant walkers to configure their caching behavior (#3480); * Bug fix for using a `ReservoirDownsampler` with a `ReadsDownsamplingIterator` (#5594); * Started migration to a new URI abstraction (#5526); * Fixed inclusion of default read filters in GATK documentation (#5576); * Put the actual date/time in the generated GATK documentation (#5567); * Pair-HMM alignment algorithm description fix (#5528); * Make ReadFilter and Annotation packages configurable (#5573); * Fix to make `gatk --version` print the version instead of throwing an exception (#5537); * Added warning message reminding user to add the allele specific annotation group when needed (#3042); * Fix for intermittent `LeftAlignAndTrimVariants` test failures (#5519); * Restored link in `VariantFiltration` docs to point to update online JEXL doc. (#5525); * Moved `BucketUtils.deleteOnExit()` and `deleteRecursively()` to `IOUtils` (#5332); * Source the tab completion script in the GATK docker image (#5552); * Added GATK jar to CLASSPATH in docker image (#3866); * Updated travis github badge link (#5617); * Removed offline CRAN repository from build (#5593). * Dependencies; * Updated htsjdk to version 2.18.2 (#5585); * Updated picard to version 2.18.25 (#5597)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:6975,Usability,learn,learning,6975,"ity; * Supports multiple BAM inputs; * Indexes BAM outputs on-the-fly in parallel on a cluster. * **Additional Tools Ported from GATK3**; * Ported `VariantAnnotator`; * Ported `VariantEval`; * Ported `FastaAlternateReferenceMaker` and `FastaReferenceMaker`; * Ported `LeftAlignAndTrimVariants`; * Restored `GenotypeGVCFs` `--include-non-variant-sites` argument. * **Major Improvements to the SV (Structural Variation) Tools**; * Improvements to collection and calling of events based on discordant read pair evidence.; * A new scaffolding algorithm greatly improves the contiguity of local assemblies, increasing sensitivity.; * Regions of excessive sequencing depth are excluded from evidence collection and assembly, improving runtime performance.; * A major overhaul of our algorithm for calling events based on local assemblies improves accuracy and allows for the accurate reporting of small complex SVs.; * A machine learning (xgBoost) based classifier for SV evidence improves runtime and increases accuracy by determining which regions should be fed into the local assembly workflow. * **Spark Improvements**; * New [Disq](https://github.com/disq-bio/disq) Spark library allows faster and more accurate loading of formats like BAM and VCF; * `HaplotypeCallerSpark` now has a ""strict mode"" that closely matches the regular `HaplotypeCaller`; * Created `RevertSamSpark`, a parallelized Spark version of Picard's `RevertSam` tool; * Migrated most Spark tools that take a reference and/or VCF to use Spark's intrinsic file copying mechanism instead of broadcast to distribute the reference and VCFs to worker nodes -- a big performance win!. * **GenomicsDB Improvements**; * Allele-specific annotation support; * Multi-interval support (with some performance caveats); * Support for sites-only queries; * Support for returning the GT field in queries; * New protobuf-based API to allow configuration without editing JSON files; * Added in machinery to allow per-annotation combine operations to b",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:10327,Usability,simpl,simple,10327,"antFiltration`, and `VariantAnnotator`. ## <a id=""previous-version-diff"">Changes between versions 4.0.12.0 and 4.1.0.0 *only*:</a>; ------. * Many tools are now out of beta and ready for production use!; * `CNNScoreVariants` is out of beta (#5548); * `Funcotator` and `FuncotatorDataSourceDownloader` are out of beta (#5621); * `MarkDuplicatesSpark` is out of beta (#5603); * CNV tools are out of beta (#5596). This includes: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`. * New tools:; * Added ports of `FastaAlternateReferenceMaker` and `FastaReferenceMaker` from GATK3 (#5549); * `RevertSamSpark`: a parallelized, Spark-based implementation of `RevertSam` from Picard (#5395); * `CompareIntervalLists`: simple new tool to compare interval lists (#3702); * `CountBasesInReference`: simple new tool to count bases in a reference file (#5549); * `PrintBGZFBlockInformation`: a tool to dump information about blocks in a BGZF file (#4239). * `Mutect2`; * Mutect2 now works with multiple tumor and normal samples! (#5560); * First iteration of a reference confidence GVCF-like output for Mutect2 to enable mitochondrial joint calling (#5312); * Changed default blocking and NON-REF LOD params for Mutect2 GVCF mode (#5615); * Changed defaults for mitochondria mode now that we have adaptive pruning (#5544); * Fixed an edge case bug when Mutect2 sees a variant with population AF = 1 (#5535); * Fixed an edge case of zero-depth in `FilterMutectCalls` germline filter (#5578); * Fixed an edge case for the Mutect2 germline resource (#5563); * Tweaked the Mutect2 germline filter (#5595); * Put new orientation bias model in Mutect2 NIO wdl (#5580); * Improve proposed tumor in normal docs to account for new ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0:10405,Usability,simpl,simple,10405,"antFiltration`, and `VariantAnnotator`. ## <a id=""previous-version-diff"">Changes between versions 4.0.12.0 and 4.1.0.0 *only*:</a>; ------. * Many tools are now out of beta and ready for production use!; * `CNNScoreVariants` is out of beta (#5548); * `Funcotator` and `FuncotatorDataSourceDownloader` are out of beta (#5621); * `MarkDuplicatesSpark` is out of beta (#5603); * CNV tools are out of beta (#5596). This includes: `AnnotateIntervals`, `CallCopyRatioSegments`, `CollectAllelicCounts`, `CollectReadCounts`, `CreateReadCountPanelOfNormals`, `DenoiseReadCounts`, `DetermineGermlineContigPloidy`, `FilterIntervals`, `GermlineCNVCaller`, `ModelSegments`, `PostprocessGermlineCNVCalls`, `PreprocessIntervals`, `PlotDenoisedCopyRatios`, and `PlotModeledSegments`. * New tools:; * Added ports of `FastaAlternateReferenceMaker` and `FastaReferenceMaker` from GATK3 (#5549); * `RevertSamSpark`: a parallelized, Spark-based implementation of `RevertSam` from Picard (#5395); * `CompareIntervalLists`: simple new tool to compare interval lists (#3702); * `CountBasesInReference`: simple new tool to count bases in a reference file (#5549); * `PrintBGZFBlockInformation`: a tool to dump information about blocks in a BGZF file (#4239). * `Mutect2`; * Mutect2 now works with multiple tumor and normal samples! (#5560); * First iteration of a reference confidence GVCF-like output for Mutect2 to enable mitochondrial joint calling (#5312); * Changed default blocking and NON-REF LOD params for Mutect2 GVCF mode (#5615); * Changed defaults for mitochondria mode now that we have adaptive pruning (#5544); * Fixed an edge case bug when Mutect2 sees a variant with population AF = 1 (#5535); * Fixed an edge case of zero-depth in `FilterMutectCalls` germline filter (#5578); * Fixed an edge case for the Mutect2 germline resource (#5563); * Tweaked the Mutect2 germline filter (#5595); * Put new orientation bias model in Mutect2 NIO wdl (#5580); * Improve proposed tumor in normal docs to account for new ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.1.0.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:362,Availability,down,downloaded,362,"This is a small release that improves the calculation of the `MQ` (mapping quality) annotation, which provides an estimate of the overall mapping quality of reads supporting a variant call. It also introduces a number of experimental improvements to the CNV workflows, as well as a bug fix to `LocusWalkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Charact",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:1306,Availability,error,error,1306,"lkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Characterization of Brain Metastases Reveals Branched Evolution and Potential Therapeutic Targets* (2015) Cancer Discovery PMID:26410082; * Changes to GATK tools to support the above:; * `SimpleGermlineTagger` now uses reciprocal overlap to in addition to breakpoint matching when determining a possible germ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:16,Deployability,release,release,16,"This is a small release that improves the calculation of the `MQ` (mapping quality) annotation, which provides an estimate of the overall mapping quality of reads supporting a variant call. It also introduces a number of experimental improvements to the CNV workflows, as well as a bug fix to `LocusWalkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Charact",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:347,Deployability,release,release,347,"This is a small release that improves the calculation of the `MQ` (mapping quality) annotation, which provides an estimate of the overall mapping quality of reads supporting a variant call. It also introduces a number of experimental improvements to the CNV workflows, as well as a bug fix to `LocusWalkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Charact",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:454,Deployability,release,release,454,"This is a small release that improves the calculation of the `MQ` (mapping quality) annotation, which provides an estimate of the overall mapping quality of reads supporting a variant call. It also introduces a number of experimental improvements to the CNV workflows, as well as a bug fix to `LocusWalkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Charact",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:732,Deployability,pipeline,pipeline,732,"This is a small release that improves the calculation of the `MQ` (mapping quality) annotation, which provides an estimate of the overall mapping quality of reads supporting a variant call. It also introduces a number of experimental improvements to the CNV workflows, as well as a bug fix to `LocusWalkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Charact",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:768,Deployability,update,update,768,"This is a small release that improves the calculation of the `MQ` (mapping quality) annotation, which provides an estimate of the overall mapping quality of reads supporting a variant call. It also introduces a number of experimental improvements to the CNV workflows, as well as a bug fix to `LocusWalkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Charact",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:2809,Energy Efficiency,consumption,consumption,2809,"As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Characterization of Brain Metastases Reveals Branched Evolution and Potential Therapeutic Targets* (2015) Cancer Discovery PMID:26410082; * Changes to GATK tools to support the above:; * `SimpleGermlineTagger` now uses reciprocal overlap to in addition to breakpoint matching when determining a possible germline event. This greatly improved results in areas near centromeres.; * Added tool `MergeAnnotatedRegionsByAnnotation`. This simple tool will merge genomic regions (specified in a tsv) when given annotations (columns) contain exact values in neighboring segments and the segments are within a specified maximum genomic distance. ; * New scripts `multi_combine_tracks.wdl` and `aggregate_combine_tracks.wdl` which run `combine_tracks.wdl` on multiple pairs and combine the results into one seg file for easy consumption by IGV. * `LocusWalkerSpark`: fix issue where intervals with no reads were being dropped (#5222); * This fixes the bug reported in https://github.com/broadinstitute/gatk/issues/3823. * Added `SparkTestUtils.roundTripThroughJavaSerialization()` method for better serialization testing on Spark (#5257). * Build system: set the same compiler flags for all gradle JavaCompile tasks (#5256)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:1125,Performance,perform,perform,1125,"eads supporting a variant call. It also introduces a number of experimental improvements to the CNV workflows, as well as a bug fix to `LocusWalkerSpark`. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * Improve MQ calculation accuracy (#4969); * Change raw MQ to a tuple of (sumSquaredMQs, totalDepth) for better accuracy where there are lots of uninformative reads or called single-sample variants with homRef genotypes. ; * Note that incorporating this change into a pipeline will require a concomitant update to this version for GenomicsDBImport and GenotypeGVCFs. * Updated `SimpleGermlineTagger` and somatic CNV experimental post-processing workflow with several experimental changes that improve precision results, and expand possible evaluations, of GATK CNV (#5252); * New script `combine_tracks.wdl` for post-processing somatic CNV calls. This wdl will perform two operations:; * Increases precision by removing:; * germline segments. As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Characterization of Brain Metastases Reveals Branched Evolution and Potential Therapeutic Targets* (2015) Cancer Discovery PMID:26410082; * Changes to GATK tools to",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:3097,Testability,test,testing,3097,"As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Characterization of Brain Metastases Reveals Branched Evolution and Potential Therapeutic Targets* (2015) Cancer Discovery PMID:26410082; * Changes to GATK tools to support the above:; * `SimpleGermlineTagger` now uses reciprocal overlap to in addition to breakpoint matching when determining a possible germline event. This greatly improved results in areas near centromeres.; * Added tool `MergeAnnotatedRegionsByAnnotation`. This simple tool will merge genomic regions (specified in a tsv) when given annotations (columns) contain exact values in neighboring segments and the segments are within a specified maximum genomic distance. ; * New scripts `multi_combine_tracks.wdl` and `aggregate_combine_tracks.wdl` which run `combine_tracks.wdl` on multiple pairs and combine the results into one seg file for easy consumption by IGV. * `LocusWalkerSpark`: fix issue where intervals with no reads were being dropped (#5222); * This fixes the bug reported in https://github.com/broadinstitute/gatk/issues/3823. * Added `SparkTestUtils.roundTripThroughJavaSerialization()` method for better serialization testing on Spark (#5257). * Build system: set the same compiler flags for all gradle JavaCompile tasks (#5256)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1:2427,Usability,simpl,simple,2427,"As a result, the WDL requires the matched normal segments.; * Areas of common germline activity or error from other cancer studies.; * Converts the tumor model seg file to the same format as AllelicCapSeg, which can be read by ABSOLUTE. This is currently done inline in the WDL. ; * This is not a trivial conversion, since each segment must be called whether it is balanced or not (MAF =? 0.5). The current algorithm relies on hard filtering and may need updating pending evaluation.; * For more information about AllelicCapSeg and ABSOLUTE, see: ; * Carter et al. *Absolute quantification of somatic DNA alterations in human cancer*, Nat Biotechnol. 2012 May; 30(5): 413–421 ; * https://software.broadinstitute.org/cancer/cga/absolute ; * Brastianos, P.K., Carter S.L., et al. *Genomic Characterization of Brain Metastases Reveals Branched Evolution and Potential Therapeutic Targets* (2015) Cancer Discovery PMID:26410082; * Changes to GATK tools to support the above:; * `SimpleGermlineTagger` now uses reciprocal overlap to in addition to breakpoint matching when determining a possible germline event. This greatly improved results in areas near centromeres.; * Added tool `MergeAnnotatedRegionsByAnnotation`. This simple tool will merge genomic regions (specified in a tsv) when given annotations (columns) contain exact values in neighboring segments and the segments are within a specified maximum genomic distance. ; * New scripts `multi_combine_tracks.wdl` and `aggregate_combine_tracks.wdl` which run `combine_tracks.wdl` on multiple pairs and combine the results into one seg file for easy consumption by IGV. * `LocusWalkerSpark`: fix issue where intervals with no reads were being dropped (#5222); * This fixes the bug reported in https://github.com/broadinstitute/gatk/issues/3823. * Added `SparkTestUtils.roundTripThroughJavaSerialization()` method for better serialization testing on Spark (#5257). * Build system: set the same compiler flags for all gradle JavaCompile tasks (#5256)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.10.1
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:225,Availability,down,downloaded,225,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:1451,Availability,redundant,redundant,1451,"5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. * `SV Tools`:; * Various improvements (#4996); * output a single VCF for new interpretation tool; * bring MAX_ALIGN_LENGTH and MAPPING_QUALITIES annotations from CPX variants to re-interpreted simple variants; * add new CLI argument and filter assembly based variants based on annotation MAPPING_QUALITIES, MAX_ALIGN_LENGTH; * filter out variants of size < 50; * Bug fix for the extreme edge case where after alignments de-overlapping,",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:1978,Availability,error,errors,1978,"itives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. * `SV Tools`:; * Various improvements (#4996); * output a single VCF for new interpretation tool; * bring MAX_ALIGN_LENGTH and MAPPING_QUALITIES annotations from CPX variants to re-interpreted simple variants; * add new CLI argument and filter assembly based variants based on annotation MAPPING_QUALITIES, MAX_ALIGN_LENGTH; * filter out variants of size < 50; * Bug fix for the extreme edge case where after alignments de-overlapping, an alignment block is only 1 base long (#4962); * Turn back on checking variant info fields against header in SV vcf writing (turned off temporarily long time ago but slipped attention after implementation stablized) (#5084)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:5,Deployability,release,release,5,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:210,Deployability,release,release,210,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:317,Deployability,release,release,317,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:769,Deployability,pipeline,pipeline,769,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:644,Energy Efficiency,reduce,reduces,644,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:962,Modifiability,inherit,inherits,962,"ct2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. * `SV Tools`:; * Various improvements (#4996); * outpu",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:78,Performance,perform,performance,78,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:387,Safety,detect,detection,387,"This release features some significant changes to `Mutect2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:1451,Safety,redund,redundant,1451,"5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. * `SV Tools`:; * Various improvements (#4996); * output a single VCF for new interpretation tool; * bring MAX_ALIGN_LENGTH and MAPPING_QUALITIES annotations from CPX variants to re-interpreted simple variants; * add new CLI argument and filter assembly based variants based on annotation MAPPING_QUALITIES, MAX_ALIGN_LENGTH; * filter out variants of size < 50; * Bug fix for the extreme edge case where after alignments de-overlapping,",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:1283,Security,validat,validation,1283,"ct2` that improve both performance and correctness, as well as a bug fix to `GenomicsDBImport` for large interval lists. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Handle overlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. * `SV Tools`:; * Various improvements (#4996); * outpu",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:1386,Security,validat,validation,1386,"erlapping mates in M2 active region detection, causing fewer false active regions (#5078); * Makes Mutect2 ~25% faster in many cases with no loss of accuracy!; * Filter M2 calls that are near other filtered calls on the same haplotype (#5092); * A very effective new filter that significantly reduces false positives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. * `SV Tools`:; * Various improvements (#4996); * output a single VCF for new interpretation tool; * bring MAX_ALIGN_LENGTH and MAPPING_QUALITIES annotations from CPX variants to re-interpreted simple variants; * add new CLI argument and filter assembly based variants based on annotation MAPPING_QUALITIES, MAX_ALIGN_LENGTH; * filter out variants of s",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0:2194,Usability,simpl,simple,2194,"itives; * New Orientation Bias Filter (#4895); * New, improved orientation bias model, without which the M2 pipeline is not viable for NovaSeq data.; * Changed the default AF slightly for M2 tumor-only mode (just a small tweak) (#5067); * Optimize some Mutect-related tools (#5073); * Everything that inherits from `AbstractConcordanceWalker` (this includes the `Concordance` tool and `MergeMutect2CallsWithMC3`) is now much faster on the cloud; * Fixed edge case for M2 palindrome transformer (#5080); * Fixed an edge case involving reads assigned huge fragment lengths; * Allowing counts for supporting alt reads in the validation normal. (#5062); * Added useful information suggesting possible normal artifacts in somatic validation tool.; * M2 wdl doesn't emit unfiltered vcf, which is redundant (#5076). * `GenomicsDBImport`; * Fix for issue where we could run out of file handles when working with large interval lists (#5105); * Display warning when using large interval lists with `GenomicsDBImport` (#5102). * Updated `MarkDuplicatesSpark` tie-breaking rules to reflect changes in picard (#5011). * Added the ability for `CompareDuplicatesSpark` to output mismatching reads (#4894). * Updated our `google-cloud-java` fork to 0.20.5-alpha-GCS-RETRY-FIX (#5099); * We now retry on 502 and UnknownHostException errors when using NIO. * `SV Tools`:; * Various improvements (#4996); * output a single VCF for new interpretation tool; * bring MAX_ALIGN_LENGTH and MAPPING_QUALITIES annotations from CPX variants to re-interpreted simple variants; * add new CLI argument and filter assembly based variants based on annotation MAPPING_QUALITIES, MAX_ALIGN_LENGTH; * filter out variants of size < 50; * Bug fix for the extreme edge case where after alignments de-overlapping, an alignment block is only 1 base long (#4962); * Turn back on checking variant info fields against header in SV vcf writing (turned off temporarily long time ago but slipped attention after implementation stablized) (#5084)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.8.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:603,Availability,down,downloaded,603,"Highlights of this release include the ability to emit MNPs in `Mutect2` and `HaplotypeCaller` via a new `--max-mnp-distance` argument, much better active region detection for low allele fractions in `Mutect2`, new priors for variants sites and homRef blocks in `HaplotypeCaller`, a new tool `FilterAlignmentArtifacts` to filter false positive alignment artifacts in the `Mutect2` pipeline, performance improvements to `CNNScoreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjust",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:1915,Availability,error,errors,1915,"utect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * New `HaplotypeCaller` priors for variants sites and homRef blocks (#4793); * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--num-reference-samples-if-no-call` argument to control whether to infer (and with what effective strength) that only reference alleles were observed at sites not seen in any panel; * As a side effect of this change, `CalculateGenotypePosteriors` now supports indels.; * GCS/NIO output support for the `-bamout` argument (#4721). * `-new-qual` in `HaplotypeCaller`/`Mutect2`/`GenotypeGVCFs` no longer counts spanning deletions as support for variant qual (#4801). * `CNNScoreVariants`; * Performance improvements ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:5805,Availability,robust,robust,5805," and other optimizations (#4740); * Various fixes (#4783) (#4817) (#4770); * Sanitize special characters when outputting VCF so that VCF validation passes; * Ordering specified in the header did not match the variants and hg19/b37 - VCF datasources were being inconsistently processed, inducing a lot of missed annotations.; * Added Funcotator tests for Clinvar and Gencode v28 in hg38, and mixed chr/no-chr GENCODE.; * Eased restrictions so that Gencode v28 would be recognized as a valid gtf. Future versions of Gencode will not fail just based on the version number and warning will be emitted instead.; * Refining handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:6494,Availability,error,error,6494,"g handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:6646,Availability,error,error,6646,"ed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); *",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:7513,Availability,error,error,7513,"a sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCond",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:19,Deployability,release,release,19,"Highlights of this release include the ability to emit MNPs in `Mutect2` and `HaplotypeCaller` via a new `--max-mnp-distance` argument, much better active region detection for low allele fractions in `Mutect2`, new priors for variants sites and homRef blocks in `HaplotypeCaller`, a new tool `FilterAlignmentArtifacts` to filter false positive alignment artifacts in the `Mutect2` pipeline, performance improvements to `CNNScoreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjust",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:381,Deployability,pipeline,pipeline,381,"Highlights of this release include the ability to emit MNPs in `Mutect2` and `HaplotypeCaller` via a new `--max-mnp-distance` argument, much better active region detection for low allele fractions in `Mutect2`, new priors for variants sites and homRef blocks in `HaplotypeCaller`, a new tool `FilterAlignmentArtifacts` to filter false positive alignment artifacts in the `Mutect2` pipeline, performance improvements to `CNNScoreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjust",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:588,Deployability,release,release,588,"Highlights of this release include the ability to emit MNPs in `Mutect2` and `HaplotypeCaller` via a new `--max-mnp-distance` argument, much better active region detection for low allele fractions in `Mutect2`, new priors for variants sites and homRef blocks in `HaplotypeCaller`, a new tool `FilterAlignmentArtifacts` to filter false positive alignment artifacts in the `Mutect2` pipeline, performance improvements to `CNNScoreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjust",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:695,Deployability,release,release,695,"Highlights of this release include the ability to emit MNPs in `Mutect2` and `HaplotypeCaller` via a new `--max-mnp-distance` argument, much better active region detection for low allele fractions in `Mutect2`, new priors for variants sites and homRef blocks in `HaplotypeCaller`, a new tool `FilterAlignmentArtifacts` to filter false positive alignment artifacts in the `Mutect2` pipeline, performance improvements to `CNNScoreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjust",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:7428,Deployability,pipeline,pipeline,7428,"a sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCond",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:8407,Deployability,update,update,8407,"-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCondaEnv`) to create or update a local (non-Intel) conda environment. This is a shortcut for use during development when you're iteratively changing/testing Python code and want to update the conda env. * Added a new WEX test bam to `src/test/resources/large`, with a companion target interval list (#4756). * Add slightly modified version of GATK3 github issue template (#4796). * Updated htsjdk to 2.15.1 (#4830)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:8564,Deployability,update,update,8564,"-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCondaEnv`) to create or update a local (non-Intel) conda environment. This is a shortcut for use during development when you're iteratively changing/testing Python code and want to update the conda env. * Added a new WEX test bam to `src/test/resources/large`, with a companion target interval list (#4756). * Add slightly modified version of GATK3 github issue template (#4796). * Updated htsjdk to 2.15.1 (#4830)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:3490,Energy Efficiency,schedul,schedule,3490,"l` argument to control whether to infer (and with what effective strength) that only reference alleles were observed at sites not seen in any panel; * As a side effect of this change, `CalculateGenotypePosteriors` now supports indels.; * GCS/NIO output support for the `-bamout` argument (#4721). * `-new-qual` in `HaplotypeCaller`/`Mutect2`/`GenotypeGVCFs` no longer counts spanning deletions as support for variant qual (#4801). * `CNNScoreVariants`; * Performance improvements to the prep of the input tensors in the 2D model (#4735); * Bug fix to prevent a crash on the ends of the mitochondrial contig (#4751). * `GATK Engine`; * Added a new traversal type `TwoPassVariantWalker` that does two passes over its input variants (#4744); * Enable the `-L` argument to read feature files (such as `.bed` or `.vcf` files) from non-local Paths, including GCS buckets (#4854); * Added `--sites-only-vcf-output` argument to the GATK engine to suppress genotype fields when writing VCFs (#4764); * Tools that use annotations now use the barclay annotation plugin (#4674); * Added new `ReadQueryNameComparator` (#4731); * Automatically schedule temporary resource files for delete on exit (#4616). * `Spark tools`; * Added support for `g.vcf.gz` files in Spark. #4274 (#4463); * Spark tools can now write SAM files #4295. (#4471); * Added a `--output-shard-tmp-dir` argument to specify the parts directory for un-sharded BAM writing (#4666). * `MarkDuplicatesSpark`; * Fixed `MarkDuplicatesSpark` so it handles supplementary reads with unmapped mates properly (#4785); * Added a distinction between PCR orientation and Optical Duplicates orientation in `MarkDuplicatesSpark` (#4752); * Fixed serialization crash in `MarkDuplicatesSpark` (#4778); * Fixed queryname partitioning bug where asking for queryname sort would result in reads with the same name being split between partitions (#4765); * Changed `MarkDuplicatesSpark` to sort non-queryname sorted bams before processing to ensure marking is consist",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:3411,Modifiability,plugin,plugin,3411,"l` argument to control whether to infer (and with what effective strength) that only reference alleles were observed at sites not seen in any panel; * As a side effect of this change, `CalculateGenotypePosteriors` now supports indels.; * GCS/NIO output support for the `-bamout` argument (#4721). * `-new-qual` in `HaplotypeCaller`/`Mutect2`/`GenotypeGVCFs` no longer counts spanning deletions as support for variant qual (#4801). * `CNNScoreVariants`; * Performance improvements to the prep of the input tensors in the 2D model (#4735); * Bug fix to prevent a crash on the ends of the mitochondrial contig (#4751). * `GATK Engine`; * Added a new traversal type `TwoPassVariantWalker` that does two passes over its input variants (#4744); * Enable the `-L` argument to read feature files (such as `.bed` or `.vcf` files) from non-local Paths, including GCS buckets (#4854); * Added `--sites-only-vcf-output` argument to the GATK engine to suppress genotype fields when writing VCFs (#4764); * Tools that use annotations now use the barclay annotation plugin (#4674); * Added new `ReadQueryNameComparator` (#4731); * Automatically schedule temporary resource files for delete on exit (#4616). * `Spark tools`; * Added support for `g.vcf.gz` files in Spark. #4274 (#4463); * Spark tools can now write SAM files #4295. (#4471); * Added a `--output-shard-tmp-dir` argument to specify the parts directory for un-sharded BAM writing (#4666). * `MarkDuplicatesSpark`; * Fixed `MarkDuplicatesSpark` so it handles supplementary reads with unmapped mates properly (#4785); * Added a distinction between PCR orientation and Optical Duplicates orientation in `MarkDuplicatesSpark` (#4752); * Fixed serialization crash in `MarkDuplicatesSpark` (#4778); * Fixed queryname partitioning bug where asking for queryname sort would result in reads with the same name being split between partitions (#4765); * Changed `MarkDuplicatesSpark` to sort non-queryname sorted bams before processing to ensure marking is consist",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:6556,Modifiability,config,config,6556,"statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVa",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:391,Performance,perform,performance,391,"Highlights of this release include the ability to emit MNPs in `Mutect2` and `HaplotypeCaller` via a new `--max-mnp-distance` argument, much better active region detection for low allele fractions in `Mutect2`, new priors for variants sites and homRef blocks in `HaplotypeCaller`, a new tool `FilterAlignmentArtifacts` to filter false positive alignment artifacts in the `Mutect2` pipeline, performance improvements to `CNNScoreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjust",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:4753,Performance,perform,performance,4753," Added a distinction between PCR orientation and Optical Duplicates orientation in `MarkDuplicatesSpark` (#4752); * Fixed serialization crash in `MarkDuplicatesSpark` (#4778); * Fixed queryname partitioning bug where asking for queryname sort would result in reads with the same name being split between partitions (#4765); * Changed `MarkDuplicatesSpark` to sort non-queryname sorted bams before processing to ensure marking is consistent across shards (#4732); * Renamed some `MarkDuplicatesSpark` arguments to follow the ""kabob-style"" convention (#4715); * `MarkDuplicatesSpark` now uses the Picard `OpticalDuplicatesFinder` directly (#4750); * `MarkDuplicatesSpark` now uses Picard metrics code directly (#4779). * `BwaSpark`: disable sequence dictionary validation when aligning reads #4131 (#4308). * `Funcotator`; * Major performance improvements due to added caching and other optimizations (#4740); * Various fixes (#4783) (#4817) (#4770); * Sanitize special characters when outputting VCF so that VCF validation passes; * Ordering specified in the header did not match the variants and hg19/b37 - VCF datasources were being inconsistently processed, inducing a lot of missed annotations.; * Added Funcotator tests for Clinvar and Gencode v28 in hg38, and mixed chr/no-chr GENCODE.; * Eased restrictions so that Gencode v28 would be recognized as a valid gtf. Future versions of Gencode will not fail just based on the version number and warning will be emitted instead.; * Refining handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed th",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:4809,Performance,optimiz,optimizations,4809," Added a distinction between PCR orientation and Optical Duplicates orientation in `MarkDuplicatesSpark` (#4752); * Fixed serialization crash in `MarkDuplicatesSpark` (#4778); * Fixed queryname partitioning bug where asking for queryname sort would result in reads with the same name being split between partitions (#4765); * Changed `MarkDuplicatesSpark` to sort non-queryname sorted bams before processing to ensure marking is consistent across shards (#4732); * Renamed some `MarkDuplicatesSpark` arguments to follow the ""kabob-style"" convention (#4715); * `MarkDuplicatesSpark` now uses the Picard `OpticalDuplicatesFinder` directly (#4750); * `MarkDuplicatesSpark` now uses Picard metrics code directly (#4779). * `BwaSpark`: disable sequence dictionary validation when aligning reads #4131 (#4308). * `Funcotator`; * Major performance improvements due to added caching and other optimizations (#4740); * Various fixes (#4783) (#4817) (#4770); * Sanitize special characters when outputting VCF so that VCF validation passes; * Ordering specified in the header did not match the variants and hg19/b37 - VCF datasources were being inconsistently processed, inducing a lot of missed annotations.; * Added Funcotator tests for Clinvar and Gencode v28 in hg38, and mixed chr/no-chr GENCODE.; * Eased restrictions so that Gencode v28 would be recognized as a valid gtf. Future versions of Gencode will not fail just based on the version number and warning will be emitted instead.; * Refining handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed th",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:162,Safety,detect,detection,162,"Highlights of this release include the ability to emit MNPs in `Mutect2` and `HaplotypeCaller` via a new `--max-mnp-distance` argument, much better active region detection for low allele fractions in `Mutect2`, new priors for variants sites and homRef blocks in `HaplotypeCaller`, a new tool `FilterAlignmentArtifacts` to filter false positive alignment artifacts in the `Mutect2` pipeline, performance improvements to `CNNScoreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjust",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:6359,Safety,detect,detection,6359,"g handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:6454,Safety,detect,detected,6454,"g handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:6941,Safety,avoid,avoid,6941,"ed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); *",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:1472,Security,validat,validation,1472,"coreVariants` and `Funcotator`, and a new `--sites-only-vcf-output` GATK engine argument to suppress genotypes when writing VCFs. As usual, a docker image for this release can be downloaded from https://hub.docker.com/r/broadinstitute/gatk/. Full list of changes in this release:. * `Mutect2`; * Made `Mutect2` active region determination much better for low allele fractions (#4832); * In particular, this makes `Mutect2` vastly better for mitochondrial and cfDNA calling; * `Mutect2` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * Tweaked `Mutect2` read position filter to handle non-biological (eg FFPE) insertions better (#4851); * Fixed `Mutect2` bug where triallelic normal artifacts were sometimes hidden from filtering engine (#4809); * `Mutect2` STR filter now also looks at insertions (#4845); * This lowers the indel false positive rate dramatically.; * `Mutect2 WDL`: ; * now outputs MAF segmentation (#4837); * now runs `FilterAlignmentArtifacts` (#4848); * now uses lenient validation in `SortSam` (#4844). * Added new tool `FilterAlignmentArtifacts` (#4698); * Filters false positive alignment artifacts (that is, apparent variants due to reads being mapped to the wrong genomic locus) from a VCF callset by checking variant-supporting reads and their mates.; * By considering the realignment of the read and its mate, it saves a lot of variants, especially in low-complexity regions, from being filtered as mapping errors. * `HaplotypeCaller`; * `HaplotypeCaller` can now emit MNPs according to adjustable distance threshold specified via `--max-mnp-distance` (#4650); * New `HaplotypeCaller` priors for variants sites and homRef blocks (#4793); * Added new `--population-callset` argument allowing an external panel of variants to be specified to inform the frequency distribution underlying the genotype priors; * Added new `--num-reference-samples-if-no-call` argument to control whether to infer (and with what effective ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:4683,Security,validat,validation,4683," * Added a `--output-shard-tmp-dir` argument to specify the parts directory for un-sharded BAM writing (#4666). * `MarkDuplicatesSpark`; * Fixed `MarkDuplicatesSpark` so it handles supplementary reads with unmapped mates properly (#4785); * Added a distinction between PCR orientation and Optical Duplicates orientation in `MarkDuplicatesSpark` (#4752); * Fixed serialization crash in `MarkDuplicatesSpark` (#4778); * Fixed queryname partitioning bug where asking for queryname sort would result in reads with the same name being split between partitions (#4765); * Changed `MarkDuplicatesSpark` to sort non-queryname sorted bams before processing to ensure marking is consistent across shards (#4732); * Renamed some `MarkDuplicatesSpark` arguments to follow the ""kabob-style"" convention (#4715); * `MarkDuplicatesSpark` now uses the Picard `OpticalDuplicatesFinder` directly (#4750); * `MarkDuplicatesSpark` now uses Picard metrics code directly (#4779). * `BwaSpark`: disable sequence dictionary validation when aligning reads #4131 (#4308). * `Funcotator`; * Major performance improvements due to added caching and other optimizations (#4740); * Various fixes (#4783) (#4817) (#4770); * Sanitize special characters when outputting VCF so that VCF validation passes; * Ordering specified in the header did not match the variants and hg19/b37 - VCF datasources were being inconsistently processed, inducing a lot of missed annotations.; * Added Funcotator tests for Clinvar and Gencode v28 in hg38, and mixed chr/no-chr GENCODE.; * Eased restrictions so that Gencode v28 would be recognized as a valid gtf. Future versions of Gencode will not fail just based on the version number and warning will be emitted instead.; * Refining handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regres",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:4935,Security,validat,validation,4935," Added a distinction between PCR orientation and Optical Duplicates orientation in `MarkDuplicatesSpark` (#4752); * Fixed serialization crash in `MarkDuplicatesSpark` (#4778); * Fixed queryname partitioning bug where asking for queryname sort would result in reads with the same name being split between partitions (#4765); * Changed `MarkDuplicatesSpark` to sort non-queryname sorted bams before processing to ensure marking is consistent across shards (#4732); * Renamed some `MarkDuplicatesSpark` arguments to follow the ""kabob-style"" convention (#4715); * `MarkDuplicatesSpark` now uses the Picard `OpticalDuplicatesFinder` directly (#4750); * `MarkDuplicatesSpark` now uses Picard metrics code directly (#4779). * `BwaSpark`: disable sequence dictionary validation when aligning reads #4131 (#4308). * `Funcotator`; * Major performance improvements due to added caching and other optimizations (#4740); * Various fixes (#4783) (#4817) (#4770); * Sanitize special characters when outputting VCF so that VCF validation passes; * Ordering specified in the header did not match the variants and hg19/b37 - VCF datasources were being inconsistently processed, inducing a lot of missed annotations.; * Added Funcotator tests for Clinvar and Gencode v28 in hg38, and mixed chr/no-chr GENCODE.; * Eased restrictions so that Gencode v28 would be recognized as a valid gtf. Future versions of Gencode will not fail just based on the version number and warning will be emitted instead.; * Refining handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed th",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:5142,Testability,test,tests,5142,"would result in reads with the same name being split between partitions (#4765); * Changed `MarkDuplicatesSpark` to sort non-queryname sorted bams before processing to ensure marking is consistent across shards (#4732); * Renamed some `MarkDuplicatesSpark` arguments to follow the ""kabob-style"" convention (#4715); * `MarkDuplicatesSpark` now uses the Picard `OpticalDuplicatesFinder` directly (#4750); * `MarkDuplicatesSpark` now uses Picard metrics code directly (#4779). * `BwaSpark`: disable sequence dictionary validation when aligning reads #4131 (#4308). * `Funcotator`; * Major performance improvements due to added caching and other optimizations (#4740); * Various fixes (#4783) (#4817) (#4770); * Sanitize special characters when outputting VCF so that VCF validation passes; * Ordering specified in the header did not match the variants and hg19/b37 - VCF datasources were being inconsistently processed, inducing a lot of missed annotations.; * Added Funcotator tests for Clinvar and Gencode v28 in hg38, and mixed chr/no-chr GENCODE.; * Eased restrictions so that Gencode v28 would be recognized as a valid gtf. Future versions of Gencode will not fail just based on the version number and warning will be emitted instead.; * Refining handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing ind",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:5661,Testability,test,tests,5661,"dation when aligning reads #4131 (#4308). * `Funcotator`; * Major performance improvements due to added caching and other optimizations (#4740); * Various fixes (#4783) (#4817) (#4770); * Sanitize special characters when outputting VCF so that VCF validation passes; * Ordering specified in the header did not match the variants and hg19/b37 - VCF datasources were being inconsistently processed, inducing a lot of missed annotations.; * Added Funcotator tests for Clinvar and Gencode v28 in hg38, and mixed chr/no-chr GENCODE.; * Eased restrictions so that Gencode v28 would be recognized as a valid gtf. Future versions of Gencode will not fail just based on the version number and warning will be emitted instead.; * Refining handling of transcripts with missing sequence info.; * Refactored UTR VariantClassification handling.; * Added warning statement when a transcript in the UTR has no sequence info (now is the same behavior as in protein coding regions).; * Added tests to prevent regression on data source date comparison bug.; * Fixed DNA Repair Genes getter script.; * Fixed an issue in COSMIC to make it robust to bad COSMIC data.; * Gencode no longer crashes when given an indel that starts just before an exon.; * Fixed the SimpleKeyXsvFuncotationFactory to allow any characters to work as delimiters (including characters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (a",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:7008,Testability,log,logging,7008,"ters used in regular expressions, such as pipes).; * Modified several methods to allow for negative start positions in preparation for allowing indels that start outside exons.; * Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (fixes issue #4712).; * Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) f",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:8532,Testability,test,testing,8532,"-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCondaEnv`) to create or update a local (non-Intel) conda environment. This is a shortcut for use during development when you're iteratively changing/testing Python code and want to update the conda env. * Added a new WEX test bam to `src/test/resources/large`, with a companion target interval list (#4756). * Add slightly modified version of GATK3 github issue template (#4796). * Updated htsjdk to 2.15.1 (#4830)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:8604,Testability,test,test,8604,"-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCondaEnv`) to create or update a local (non-Intel) conda environment. This is a shortcut for use during development when you're iteratively changing/testing Python code and want to update the conda env. * Added a new WEX test bam to `src/test/resources/large`, with a companion target interval list (#4756). * Add slightly modified version of GATK3 github issue template (#4796). * Updated htsjdk to 2.15.1 (#4830)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:8621,Testability,test,test,8621,"-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCondaEnv`) to create or update a local (non-Intel) conda environment. This is a shortcut for use during development when you're iteratively changing/testing Python code and want to update the conda env. * Added a new WEX test bam to `src/test/resources/large`, with a companion target interval list (#4756). * Add slightly modified version of GATK3 github issue template (#4796). * Updated htsjdk to 2.15.1 (#4830)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0:7386,Usability,simpl,simple,7386,"a sources that would prevent newer data source versions from being detected as compatible (date comparison error).; * Gencode data sources now have names preserved from config files. (#4823). * `GCNV` kernel tunings (#4720); * Fixed a minor issue in sampling error estimation that could lead to NaN (as a result of division by zero); * Introduced separate internal and external admixing rates; * Introduced two-stage inference for cohort denoising and calling; * Capped phred-scaled qualities to maximum values permitted by machine precision in order to avoid NaNs and overflows.; * Took a first step toward tracking and logging parameters during inference, starting with the ELBO history. * Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows. (#4758). * `SV tools`; * Tweak BWA to allow ""gappier"" alignments in local assemblies (#4708); * Added a new experimental tool named `CpxVariantReInterprepterSpark` to extract barebone-annotated simple variants from an GATK-SV discovery pipeline produced VCF containing complex variants (#4602); * Fix ""UnhandledCaseSeen"" error in `StructuralVariationDiscoveryPipelineSpark` (#4677). * Added new `SingleSequenceReferenceAligner` class to align against an on-the-fly single contig reference using Bwa-Mem (#4780). * Updates to the conda environment for Python-based tools (#4749); * Fix #4741, where newer versions of conda appear to treat relative references in the environment yml as being relative to the yml file instead of relative to the cwd (based on observation).; * Add a second conda yml file (`gatkcondaenv.intel.yml`) for environments that use Intel hardware acceleration and the Intel Tensorflow package (based on #4735).; * Added a gradle task (`condaEnvironmentDefinition`) to generate the conda yml files from a single template to ensure that all the environment definitions remain in sync. This task also generates the Python package archive.; * Added a gradle task (`localDevCond",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.0.5.0
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:144,Availability,repair,repair,144,"This release brings a critical bug fix to the `GenomicsDBImport` tool related to sample ordering, plus a new tool `FixCallSetSampleOrdering` to repair vcfs generated using the pre-`4.beta.6` version of the tool. See the description of the bug in #3682 to determine whether you are affected. Do *not* run `FixCallSetSampleOrdering` unless you are sure that you are affected by the bug in #3682. Other highlights include upgrading to the latest version of the Picard tools, and adding engine support for reading Gencode GTF files. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing re",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:972,Availability,repair,repair,972,"This release brings a critical bug fix to the `GenomicsDBImport` tool related to sample ordering, plus a new tool `FixCallSetSampleOrdering` to repair vcfs generated using the pre-`4.beta.6` version of the tool. See the description of the bug in #3682 to determine whether you are affected. Do *not* run `FixCallSetSampleOrdering` unless you are sure that you are affected by the bug in #3682. Other highlights include upgrading to the latest version of the Picard tools, and adding engine support for reading Gencode GTF files. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing re",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5341,Availability,error,error,5341,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5,Deployability,release,release,5,"This release brings a critical bug fix to the `GenomicsDBImport` tool related to sample ordering, plus a new tool `FixCallSetSampleOrdering` to repair vcfs generated using the pre-`4.beta.6` version of the tool. See the description of the bug in #3682 to determine whether you are affected. Do *not* run `FixCallSetSampleOrdering` unless you are sure that you are affected by the bug in #3682. Other highlights include upgrading to the latest version of the Picard tools, and adding engine support for reading Gencode GTF files. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing re",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:553,Deployability,release,release,553,"This release brings a critical bug fix to the `GenomicsDBImport` tool related to sample ordering, plus a new tool `FixCallSetSampleOrdering` to repair vcfs generated using the pre-`4.beta.6` version of the tool. See the description of the bug in #3682 to determine whether you are affected. Do *not* run `FixCallSetSampleOrdering` unless you are sure that you are affected by the bug in #3682. Other highlights include upgrading to the latest version of the Picard tools, and adding engine support for reading Gencode GTF files. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing re",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:783,Deployability,release,release,783,"This release brings a critical bug fix to the `GenomicsDBImport` tool related to sample ordering, plus a new tool `FixCallSetSampleOrdering` to repair vcfs generated using the pre-`4.beta.6` version of the tool. See the description of the bug in #3682 to determine whether you are affected. Do *not* run `FixCallSetSampleOrdering` unless you are sure that you are affected by the bug in #3682. Other highlights include upgrading to the latest version of the Picard tools, and adding engine support for reading Gencode GTF files. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing re",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:859,Deployability,release,release,859,"This release brings a critical bug fix to the `GenomicsDBImport` tool related to sample ordering, plus a new tool `FixCallSetSampleOrdering` to repair vcfs generated using the pre-`4.beta.6` version of the tool. See the description of the bug in #3682 to determine whether you are affected. Do *not* run `FixCallSetSampleOrdering` unless you are sure that you are affected by the bug in #3682. Other highlights include upgrading to the latest version of the Picard tools, and adding engine support for reading Gencode GTF files. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing re",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:1529,Deployability,pipeline,pipeline,1529,"be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing required FASTA reference input that was needed before (for its dict) for sorting variants in output VCF, now using header in input SAM/BAM (#3673); * re-enable snappy use in htsjdk (#3635); * fix 3612 (#3613); * pass read metadata to all code that needs to translate contig ids using read metadata (#3671); * quick fix for broken read (mapped to no ref bases) (#3662); * Fix log4j logging by removing extra copy from the classpath.#2622 (#3652); * add suggestion to regularly update gcloud to README (#3663); * Automatically distribute the BWA-MEM index image file to",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:1861,Deployability,integrat,integration,1861,"of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing required FASTA reference input that was needed before (for its dict) for sorting variants in output VCF, now using header in input SAM/BAM (#3673); * re-enable snappy use in htsjdk (#3635); * fix 3612 (#3613); * pass read metadata to all code that needs to translate contig ids using read metadata (#3671); * quick fix for broken read (mapped to no ref bases) (#3662); * Fix log4j logging by removing extra copy from the classpath.#2622 (#3652); * add suggestion to regularly update gcloud to README (#3663); * Automatically distribute the BWA-MEM index image file to executors for BwaSpark (#3643); * Have PSFilter strip mate number from read names (#3640); * Added the tool PreprocessIntervals that bins the intervals given by the user to be used for coverage collection. (#3597); * Cpx SV PR serisers, part-4 (#3464); * fixed bug in whic",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:2475,Deployability,update,update,2475,"ools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing required FASTA reference input that was needed before (for its dict) for sorting variants in output VCF, now using header in input SAM/BAM (#3673); * re-enable snappy use in htsjdk (#3635); * fix 3612 (#3613); * pass read metadata to all code that needs to translate contig ids using read metadata (#3671); * quick fix for broken read (mapped to no ref bases) (#3662); * Fix log4j logging by removing extra copy from the classpath.#2622 (#3652); * add suggestion to regularly update gcloud to README (#3663); * Automatically distribute the BWA-MEM index image file to executors for BwaSpark (#3643); * Have PSFilter strip mate number from read names (#3640); * Added the tool PreprocessIntervals that bins the intervals given by the user to be used for coverage collection. (#3597); * Cpx SV PR serisers, part-4 (#3464); * fixed bug in which F1R2 and F2R1 annotation kept discarded alleles (#3636); * imprecise deletion calling (#3628); * Significant improvements to CalculateContamination (#3638); * Adds supplementary alignment info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in intervals file (#3629); * Created a VariantAnnotationArgumentCollection to reduce code duplication and added a StandardM2Annotation group (#3621); * Docs for turning assembled haplotypes into variant alleles (#3577); * Simplify spark_eval scripts and improve documentation. (#3580); * Renames StructuralVariantContext to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comp",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:3960,Deployability,update,update,3960," info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in intervals file (#3629); * Created a VariantAnnotationArgumentCollection to reduce code duplication and added a StandardM2Annotation group (#3621); * Docs for turning assembled haplotypes into variant alleles (#3577); * Simplify spark_eval scripts and improve documentation. (#3580); * Renames StructuralVariantContext to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add g",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4146,Deployability,update,update,4146," info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in intervals file (#3629); * Created a VariantAnnotationArgumentCollection to reduce code duplication and added a StandardM2Annotation group (#3621); * Docs for turning assembled haplotypes into variant alleles (#3577); * Simplify spark_eval scripts and improve documentation. (#3580); * Renames StructuralVariantContext to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add g",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4723,Deployability,update,updates,4723,nt comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessi,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:3255,Energy Efficiency,reduce,reduce,3255,"g header in input SAM/BAM (#3673); * re-enable snappy use in htsjdk (#3635); * fix 3612 (#3613); * pass read metadata to all code that needs to translate contig ids using read metadata (#3671); * quick fix for broken read (mapped to no ref bases) (#3662); * Fix log4j logging by removing extra copy from the classpath.#2622 (#3652); * add suggestion to regularly update gcloud to README (#3663); * Automatically distribute the BWA-MEM index image file to executors for BwaSpark (#3643); * Have PSFilter strip mate number from read names (#3640); * Added the tool PreprocessIntervals that bins the intervals given by the user to be used for coverage collection. (#3597); * Cpx SV PR serisers, part-4 (#3464); * fixed bug in which F1R2 and F2R1 annotation kept discarded alleles (#3636); * imprecise deletion calling (#3628); * Significant improvements to CalculateContamination (#3638); * Adds supplementary alignment info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in intervals file (#3629); * Created a VariantAnnotationArgumentCollection to reduce code duplication and added a StandardM2Annotation group (#3621); * Docs for turning assembled haplotypes into variant alleles (#3577); * Simplify spark_eval scripts and improve documentation. (#3580); * Renames StructuralVariantContext to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file c",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:729,Integrability,depend,dependency,729,"This release brings a critical bug fix to the `GenomicsDBImport` tool related to sample ordering, plus a new tool `FixCallSetSampleOrdering` to repair vcfs generated using the pre-`4.beta.6` version of the tool. See the description of the bug in #3682 to determine whether you are affected. Do *not* run `FixCallSetSampleOrdering` unless you are sure that you are affected by the bug in #3682. Other highlights include upgrading to the latest version of the Picard tools, and adding engine support for reading Gencode GTF files. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. Note: Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Full list of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing re",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:1861,Integrability,integrat,integration,1861,"of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing required FASTA reference input that was needed before (for its dict) for sorting variants in output VCF, now using header in input SAM/BAM (#3673); * re-enable snappy use in htsjdk (#3635); * fix 3612 (#3613); * pass read metadata to all code that needs to translate contig ids using read metadata (#3671); * quick fix for broken read (mapped to no ref bases) (#3662); * Fix log4j logging by removing extra copy from the classpath.#2622 (#3652); * add suggestion to regularly update gcloud to README (#3663); * Automatically distribute the BWA-MEM index image file to executors for BwaSpark (#3643); * Have PSFilter strip mate number from read names (#3640); * Added the tool PreprocessIntervals that bins the intervals given by the user to be used for coverage collection. (#3597); * Cpx SV PR serisers, part-4 (#3464); * fixed bug in whic",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5856,Integrability,message,message,5856,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4572,Modifiability,plugin,plugin,4572,nt comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessi,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5070,Modifiability,extend,extend,5070,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4014,Performance,optimiz,optimized,4014," info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in intervals file (#3629); * Created a VariantAnnotationArgumentCollection to reduce code duplication and added a StandardM2Annotation group (#3621); * Docs for turning assembled haplotypes into variant alleles (#3577); * Simplify spark_eval scripts and improve documentation. (#3580); * Renames StructuralVariantContext to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add g",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5296,Safety,avoid,avoid,5296,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:1873,Testability,test,tests,1873,"of changes for this release:. * Fixed sample name reordering bug in GenomicsDBImport (#3667); * New tool FixCallSetSampleOrdering to repair vcfs affected by #3682 (#3675); * Integrate latest Picard tools via Picard jar. (#3620); * Adding in codec to read from Gencode GTF files. Fixes #3277 (#3410); * Upgrade to HTSJDK version 2.12.0 (#3634); * Upgrade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing required FASTA reference input that was needed before (for its dict) for sorting variants in output VCF, now using header in input SAM/BAM (#3673); * re-enable snappy use in htsjdk (#3635); * fix 3612 (#3613); * pass read metadata to all code that needs to translate contig ids using read metadata (#3671); * quick fix for broken read (mapped to no ref bases) (#3662); * Fix log4j logging by removing extra copy from the classpath.#2622 (#3652); * add suggestion to regularly update gcloud to README (#3663); * Automatically distribute the BWA-MEM index image file to executors for BwaSpark (#3643); * Have PSFilter strip mate number from read names (#3640); * Added the tool PreprocessIntervals that bins the intervals given by the user to be used for coverage collection. (#3597); * Cpx SV PR serisers, part-4 (#3464); * fixed bug in whic",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:2380,Testability,log,logging,2380,"rade to GKL version 0.7 (#3615); * Upgrade to GenomicsDB version 0.7.0 (#3575); * Upgrade Mockito from 1.10.19 -> 2.10.0. (#3581); * Add GVCF support to VariantsSparkSink (#3450); * Fix writing variants to GCS buckets (#3485); * Support unmapped reads in Spark. (#3369); * Correct gVCF header lines (#3472); * Dump more evidence info for SV pipeline debugging (#3691); * Add omitFromCommandLine=true for example tools (#3696); * Change gatkDoc and gatkTabComplete build tasks to include Picard. (#3683); * Adding data.table R package. (#3693); * Added a missing newline in ParamUtils method. (#3685); * Fix minor HTML issues in ReadFilter documentation (#3654); * Add CRAM integration tests for HaplotypeCaller. (#3681); * Fix SamAssertionUtils SortSam call. (#3665); * Add ExtremeReadsTest (#3070); * removing required FASTA reference input that was needed before (for its dict) for sorting variants in output VCF, now using header in input SAM/BAM (#3673); * re-enable snappy use in htsjdk (#3635); * fix 3612 (#3613); * pass read metadata to all code that needs to translate contig ids using read metadata (#3671); * quick fix for broken read (mapped to no ref bases) (#3662); * Fix log4j logging by removing extra copy from the classpath.#2622 (#3652); * add suggestion to regularly update gcloud to README (#3663); * Automatically distribute the BWA-MEM index image file to executors for BwaSpark (#3643); * Have PSFilter strip mate number from read names (#3640); * Added the tool PreprocessIntervals that bins the intervals given by the user to be used for coverage collection. (#3597); * Cpx SV PR serisers, part-4 (#3464); * fixed bug in which F1R2 and F2R1 annotation kept discarded alleles (#3636); * imprecise deletion calling (#3628); * Significant improvements to CalculateContamination (#3638); * Adds supplementary alignment info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in interval",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:3802,Testability,log,logger,3802,"64); * fixed bug in which F1R2 and F2R1 annotation kept discarded alleles (#3636); * imprecise deletion calling (#3628); * Significant improvements to CalculateContamination (#3638); * Adds supplementary alignment info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in intervals file (#3629); * Created a VariantAnnotationArgumentCollection to reduce code duplication and added a StandardM2Annotation group (#3621); * Docs for turning assembled haplotypes into variant alleles (#3577); * Simplify spark_eval scripts and improve documentation. (#3580); * Renames StructuralVariantContext to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termin",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4515,Testability,test,tests,4515,to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatur,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4534,Testability,mock,mock,4534,to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatur,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4579,Testability,test,tests,4579,nt comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessi,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:4707,Testability,test,test,4707,nt comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessi,MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5441,Testability,test,tests,5441,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5480,Testability,test,test,5480,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5687,Testability,test,test,5687,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:5764,Testability,test,tests,5764,"ecords based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add gathering of imprecise evidence links and extend evidence intervals to make links coherent in most cases (#3469); * Refactor PrimaryAlignmentReadFilter to PrimaryLineReadFilter (#3195); * Update ReadFilters documentation (#3128); * Changes in BwaMemIntegrationTest to avoid a 3-4 minutes runtime. (#3563); * Make error informative for non-diploid family likelihoods #3320 (#3329); * TableFeature javadoc and more tests (#3175); * Re-enable ancient BED test in IndexFeatureFile. (#3507); * add external evidence stream for CNVs (#3542); * clip M2 alleles before emitting in case some alleles were dropped (#3509); * Docs for M2 filtering (#3560); * Fix static test blocks and @BeforeSuite usages to prevent excessive code execution when tests aren't included in a suite. (#3551); * hide prototyping tools in sv package from help message (but still runnable if knowing their existence) (#3556); * Add support for running tools with omitFromCommandLine=true (#3486); * Adds utility methods to ReadUtils and CigarUtils. (#3531); * Cpx SV PR serisers, part-3 (#3457)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.6:3914,Usability,clear,clear,3914," info into fastq output, also additional… (#3630); * Adding tool to annotate with pair orientation info (#3614); * add elapsed time to assembly info in intervals file (#3629); * Created a VariantAnnotationArgumentCollection to reduce code duplication and added a StandardM2Annotation group (#3621); * Docs for turning assembled haplotypes into variant alleles (#3577); * Simplify spark_eval scripts and improve documentation. (#3580); * Renames StructuralVariantContext to SVContext. (#3617); * Added KernelSegmenter. (#3590); * Fix bug in for allele order independant comparison (#3616); * Docs for local assembly (#3363); * Added a method to VariantContextUtils which supports allele alt allele order independant comparison of variant contexts. (#3598); * Fixed incorrect logger in CollectAllelicCounts and RecalibrationReport. (#3606); * updating to newer htsjdk snapshot (#3588); * clear diffuse high frequency kmers (#3604); * update SmithWatermanAligner in preparation for native optimized aligner (#3600); * added spark tool for extracting original SAM records based on a file containning read names (#3589); * update README with correct path to install_R_packages.R #3601 (#3602); * HostAlignmentReadFilter and PSScorer use only identity scores and exp… (#3537); * Fixed alt-allele count in AllelicCountCollector and changed unspecified alleles in AllelicCount to N. (#3550); * Fix bad version check in manage_sv_pipeline.sh (#3595); * Use a handmade TestReferenceMultiSource in tests instead of a mock. (#3586); * Repackage ReadFilter plugin tests (#3525); * BamOut in M2 WDL and unsupported version with NIO for SpecOps Team (#3582); * Changed the path for posting the test reports; * updates sv manager and cluster creation scripts to utilize dataproc cluster timed self-termination feature (#3579); * Implemented watershed algorithm for finding local minima in 1D data based on topological persistence. (#3515); * Reduce number of output partitions in PathSeqPipelineSpark (#3545); * add g",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.6
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3066,Availability,down,down,3066,"provements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter sh",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3711,Availability,mask,masking,3711,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:4056,Availability,error,error,4056,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:4385,Availability,error,errorIfMissingData,4385,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:19,Deployability,release,release,19,"Highlights of this release include fixes to the GATK4 `HaplotypeCaller` to bring it closer to the output of the GATK3 `HaplotypeCaller` (although many of these fixes still need to be applied to `HaplotypeCallerSpark`), fixes for longstanding indexing and CRAM-related bugs in htsjdk, bash tab completion support for GATK commands, and many improvements to `Mutect2` and the SV tools. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:408,Deployability,release,release,408,"Highlights of this release include fixes to the GATK4 `HaplotypeCaller` to bring it closer to the output of the GATK3 `HaplotypeCaller` (although many of these fixes still need to be applied to `HaplotypeCallerSpark`), fixes for longstanding indexing and CRAM-related bugs in htsjdk, bash tab completion support for GATK commands, and many improvements to `Mutect2` and the SV tools. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:640,Deployability,release,release,640,"Highlights of this release include fixes to the GATK4 `HaplotypeCaller` to bring it closer to the output of the GATK3 `HaplotypeCaller` (although many of these fixes still need to be applied to `HaplotypeCallerSpark`), fixes for longstanding indexing and CRAM-related bugs in htsjdk, bash tab completion support for GATK commands, and many improvements to `Mutect2` and the SV tools. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:702,Deployability,release,release,702,"Highlights of this release include fixes to the GATK4 `HaplotypeCaller` to bring it closer to the output of the GATK3 `HaplotypeCaller` (although many of these fixes still need to be applied to `HaplotypeCallerSpark`), fixes for longstanding indexing and CRAM-related bugs in htsjdk, bash tab completion support for GATK commands, and many improvements to `Mutect2` and the SV tools. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:755,Deployability,update,updates,755,"Highlights of this release include fixes to the GATK4 `HaplotypeCaller` to bring it closer to the output of the GATK3 `HaplotypeCaller` (although many of these fixes still need to be applied to `HaplotypeCallerSpark`), fixes for longstanding indexing and CRAM-related bugs in htsjdk, bash tab completion support for GATK commands, and many improvements to `Mutect2` and the SV tools. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:1973,Deployability,pipeline,pipeline,1973,"additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:2765,Deployability,pipeline,pipeline,2765,"provements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter sh",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3002,Deployability,install,installing,3002,"provements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter sh",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:906,Energy Efficiency,reduce,reduce,906,"include fixes to the GATK4 `HaplotypeCaller` to bring it closer to the output of the GATK3 `HaplotypeCaller` (although many of these fixes still need to be applied to `HaplotypeCallerSpark`), fixes for longstanding indexing and CRAM-related bugs in htsjdk, bash tab completion support for GATK commands, and many improvements to `Mutect2` and the SV tools. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3676,Energy Efficiency,adapt,adapter,3676,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:586,Integrability,depend,dependency,586,"Highlights of this release include fixes to the GATK4 `HaplotypeCaller` to bring it closer to the output of the GATK3 `HaplotypeCaller` (although many of these fixes still need to be applied to `HaplotypeCallerSpark`), fixes for longstanding indexing and CRAM-related bugs in htsjdk, bash tab completion support for GATK commands, and many improvements to `Mutect2` and the SV tools. A docker image for this release can be found in the `broadinstitute/gatk` repository on dockerhub. Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:1659,Integrability,depend,dependency,1659," cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case wher",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3676,Integrability,adapter,adapter,3676,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3676,Modifiability,adapt,adapter,3676,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:1604,Performance,perform,performance,1604,"nt dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453);",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:2118,Performance,optimiz,optimization,2118,"additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:2952,Performance,cache,cache,2952,"provements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter sh",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:1449,Safety,detect,detection,1449,"Within the image, cd into `/gatk` then run `gatk-launch` commands as usual. *Note:* Due to our current dependency on a snapshot of `google-cloud-java`, this release cannot be published to maven central. Changes in this release:. * `HaplotypeCaller`: a number of important updates and fixes to bring it closer to GATK 3.x's output (most of these fixes apply only to `HaplotypeCaller`, not `HaplotypeCallerSpark`) (#3519); * reduce memory usage of the `AssemblyRegion` traversal by an order of magnitude; * create empty pileup objects for uncovered loci internally (fixes occasional gaps between GVCF blocks as well as some calling artifacts); * when determining active regions, only consider loci within the user's intervals; * port some additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option f",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:2465,Security,access,accessible,2465,"additional changes to the GATK 3.x `HaplotypeCaller` to GATK4; * fix bug with handling of the `MQ` annotation; * Added bash tab completion support for GATK commands (#3424); * Updated to `Intel GKL` 0.5.8, which fixes bug in AVX detection, which was behaving incorrectly on some AMD systems (#3513); * Upgrade `htsjdk` to 2.11.0-4-g958dc6e-SNAPSHOT to pick up an important VCF header performance fix. (#3504); * Updated `google-cloud-nio` dependency to 0.20.4-alpha-20170727.190814-1:shaded (#3373); * Fix tabix indexing bugs in htsjdk, and reenable the `IndexFeatureFile` tool (#3425); * Fix longstanding issue with CRAM MD5 slice calculation in htsjdk (#3430); * Started publishing nightly builds; * Performance improvements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:2836,Testability,test,test,2836,"provements to allow MD+BQSR+HC Spark pipeline to scale to a full genome (#3106); * Eliminate expensive `toString()` call in `GenotypeGVCFs` (#3478); * `ValidateVariants` gvcf memory optimization (#3445); * Simplified `Mutect2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter sh",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3163,Testability,test,tests,3163,"2` annotations (#3351); * Fix MuTect2 INFO field types in the VCF header (#3422); * SV tools: fixed possibility of a negative fragment length that shouldn't have happened (#3463); * Added command line argument for IntervalMerging based on GATK3 (#3254); * Added 'nio_max_retries' option as a command line accessible option for GATK tools (#3328); * Fix aligned PathSeq input getting filtered by WellformedReadFilter (#3453); * Patch the `ReferenceBases` annotation to handle the case where no reference is present (#3299); * Honor index/MD5 creation for HaplotypeCaller/Mutect2 bamouts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots ",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3539,Testability,test,tests,3539,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:4652,Testability,log,logger,4652,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
https://github.com/broadinstitute/gatk/releases/tag/4.beta.4:3697,Usability,simpl,simple,3697,"ts. (#3374); * Fix SV pipeline default init script handling (#3467); * SV tools: improve the test bam (#3455); * SV tools: improved filtering for smallish indels (#3376); * Extends BwaMemImageSingleton into a cache, BwaMemImageCache, that can… (#3359); * Try installing R packages from multiple CRAN repos in case some are down (#3451); * Run Oncotator (optional) in the CNV case WDL. (#3408); * Add option to run Spark tests only (#3377); * Added a .dockerignore file (#3418); * Code cleanup in the sv discovery package (#3361) and fixes #3224; * Implement PathSeq taxon hit scoring in Spark (#3406); * Add option to skip pre-Bwa repartitioning in PSFilter (#3405); * Update the GQ after PLs get subset (#3409); * Removed the explicit System.exit(0) from Main (#3400); * build_docker.sh can run tests again #3191 #3160 (#3323); * Minor doc fixes #3173 (#3332); * Use ReadClipper in BaseQualityClipReadTransformer (#3388); * PathSeq adapter trimming and simple repeat masking (#3354); * Add scripts to manage SV spark jobs and copy result (#3370); * Output empty VQSLOD tranches in scatterTranches mode if no variant has VQSLOD high enough for requested threshold (#3397); * Option to filter short pathogen reference contigs (#3355); * Rewrote hapmap autoval wdl (#3379); * fixed contamination calculation, added error bars to output (#3385); * wrote wdl for Mutect panel of normals (#3386); * Turn off tranches plots if no output Rscript is specified (for annotation plots) (#3383); * `Mutect2` wdls output the contamination (#3375); * Increased maximum copy-ratio variance slice-sampling bound. (#3378); * Replace --allowMissingData with --errorIfMissingData (gives opposite default behavior as previously) and print NA for null object in VariantsToTable (#3190); * docs for proposed tumor-in-normal tool (#3264); * Fixed the git version for the output jar on docker automatic builds (#3496); * Use correct logger class in MathUtils (#3479); * Make ShardBoundaryShard implement Serializable (#3245)",MatchSource.RELEASES,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/releases/tag/4.beta.4
